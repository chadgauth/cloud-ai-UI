{"version":3,"file":"packages_memory-inspector_lib_browser_memory-inspector-frontend-module_js-packages_workspace_-2ca0d4.js","mappings":"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AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2IAA2I,QAAQ,MAAM,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,MAAM,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,WAAW,UAAU,UAAU,YAAY,OAAO,KAAK,YAAY,WAAW,MAAM,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,WAAW,YAAY,OAAO,KAAK,UAAU,MAAM,MAAM,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,WAAW,MAAM,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,WAAW,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,WAAW,MAAM,MAAM,YAAY,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,WAAW,YAAY,WAAW,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,MAAM,UAAU,MAAM,KAAK,UAAU,UAAU,UAAU,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,aAAa,OAAO,MAAM,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,WAAW,MAAM,KAAK,YAAY,aAAa,aAAa,WAAW,MAAM,MAAM,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,YAAY,WAAW,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,OAAO,KAAK,UAAU,UAAU,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,OAAO,KAAK,UAAU,YA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","sources":["webpack:///../../packages/core/shared/lodash.debounce/index.js?","webpack:///../../packages/memory-inspector/src/browser/diff-widget/memory-diff-options-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/diff-widget/memory-diff-select-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/diff-widget/memory-diff-table-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/diff-widget/memory-diff-widget-types.ts?","webpack:///../../packages/memory-inspector/src/browser/editable-widget/memory-editable-table-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/memory-inspector-frontend-contribution.ts?","webpack:///../../packages/memory-inspector/src/browser/memory-inspector-frontend-module.ts?","webpack:///../../packages/memory-inspector/src/browser/memory-provider/cdt-gdb-memory-provider.ts?","webpack:///../../packages/memory-inspector/src/browser/memory-provider/memory-provider-service.ts?","webpack:///../../packages/memory-inspector/src/browser/memory-provider/memory-provider.ts?","webpack:///../../packages/memory-inspector/src/browser/memory-widget/memory-options-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/memory-widget/memory-table-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/memory-widget/memory-widget.ts?","webpack:///../../packages/memory-inspector/src/browser/register-widget/register-filter-service.ts?","webpack:///../../packages/memory-inspector/src/browser/register-widget/register-options-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/register-widget/register-table-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/register-widget/register-widget-types.ts?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-commands.ts?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-hover-renderer.ts?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-recents.ts?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-widget-components.tsx?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-widget-manager.ts?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-widget-utils.tsx?","webpack:///../../packages/memory-inspector/src/browser/utils/memory-widget-variable-utils.ts?","webpack:///../../packages/memory-inspector/src/browser/utils/multi-select-bar.tsx?","webpack:///../../packages/memory-inspector/src/browser/wrapper-widgets/memory-dock-panel.ts?","webpack:///../../packages/memory-inspector/src/browser/wrapper-widgets/memory-dockpanel-placeholder-widget.tsx?","webpack:///../../packages/memory-inspector/src/browser/wrapper-widgets/memory-layout-widget.tsx?","webpack:///../../packages/memory-inspector/src/common/util.ts?","webpack:///../../packages/workspace/src/browser/index.ts?","webpack:///../../packages/memory-inspector/src/browser/register-widget/register-widget.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../../packages/memory-inspector/src/browser/style/index.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../../packages/memory-inspector/src/browser/utils/multi-select-bar.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../../packages/memory-inspector/src/browser/register-widget/register-widget.css?","webpack:///../../packages/memory-inspector/src/browser/style/index.css?","webpack:///../../packages/memory-inspector/src/browser/utils/multi-select-bar.css?"],"sourcesContent":["module.exports = require('lodash.debounce');\n\n;(globalThis['theia'] = globalThis['theia'] || {})['@theia/core/shared/lodash.debounce'] = this;\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Key, KeyCode } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { ThemeType } from '@theia/core/lib/common/theme';\nimport { LENGTH_FIELD_ID, LOCATION_OFFSET_FIELD_ID, MemoryOptionsWidget } from '../memory-widget/memory-options-widget';\nimport { MWInput } from '../utils/memory-widget-components';\nimport { Interfaces, MemoryDiffWidgetData, Utils } from '../utils/memory-widget-utils';\nimport { DiffLabels } from './memory-diff-widget-types';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport interface DiffMemoryOptions extends Interfaces.MemoryOptions {\n    beforeOffset: number;\n    afterOffset: number;\n}\n\n@injectable()\nexport class MemoryDiffOptionsWidget extends MemoryOptionsWidget {\n    @inject(MemoryDiffWidgetData) protected override memoryWidgetOptions: MemoryDiffWidgetData;\n\n    protected themeType: ThemeType;\n\n    override get options(): DiffMemoryOptions {\n        return this.storeState();\n    }\n\n    updateDiffData(newDiffData: Partial<MemoryDiffWidgetData>): void {\n        this.memoryWidgetOptions = { ...this.memoryWidgetOptions, ...newDiffData };\n        this.init();\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        this.addClass(MemoryOptionsWidget.ID);\n        this.addClass('diff-options-widget');\n        const { identifier, beforeBytes, afterBytes } = this.memoryWidgetOptions;\n\n        this.id = `${MemoryDiffOptionsWidget.ID}-${identifier}`;\n        this.title.label = nls.localize('theia/memory-inspector/diff/label', 'Diff: {0}', identifier);\n        this.title.caption = this.title.label;\n        this.title.iconClass = this.iconClass;\n        this.title.closable = true;\n\n        this.toDispose.push(this.onOptionsChanged(() => this.update()));\n\n        beforeBytes.label = DiffLabels.Before;\n        afterBytes.label = DiffLabels.After;\n\n        this.columnsDisplayed = {\n            beforeAddress: {\n                label: nls.localizeByDefault('Address'),\n                doRender: true\n            },\n            beforeData: {\n                label: this.memoryWidgetOptions.titles[0],\n                doRender: true\n            },\n            afterAddress: {\n                label: nls.localizeByDefault('Address'),\n                doRender: true\n            },\n            afterData: {\n                label: this.memoryWidgetOptions.titles[1],\n                doRender: true\n            },\n            variables: {\n                label: nls.localizeByDefault('Variables'),\n                doRender: false\n            },\n            ascii: {\n                label: nls.localize('theia/memory-inspector/ascii', 'ASCII'),\n                doRender: false\n            },\n        };\n\n        this.update();\n    }\n\n    protected override acceptFocus(): void {\n        const settingsCog = this.node.querySelector('.toggle-settings-click-zone') as HTMLDivElement;\n        settingsCog?.focus();\n    }\n\n    protected override renderMemoryLocationGroup(): React.ReactNode {\n        const { titles: [beforeTitle, afterTitle] } = this.memoryWidgetOptions;\n        return (\n            <div className='t-mv-group view-group'>\n                <MWInput\n                    id={LOCATION_OFFSET_FIELD_ID}\n                    label={nls.localize('theia/memory-inspector/diff-widget/offset-label', '{0} Offset', beforeTitle)}\n                    title={nls.localize('theia/memory-inspector/diff-widget/offset-title', 'Bytes to offset the memory from {0}', beforeTitle)}\n                    defaultValue='0'\n                    passRef={this.assignOffsetRef}\n                    onChange={Utils.validateNumericalInputs}\n                    onKeyDown={this.doRefresh}\n                />\n                <MWInput\n                    id={LENGTH_FIELD_ID}\n                    label={nls.localize('theia/memory-inspector/diff-widget/offset-label', '{0} Offset', afterTitle)}\n                    title={nls.localize('theia/memory-inspector/diff-widget/offset-title', 'Bytes to offset the memory from {0}', afterTitle)}\n                    defaultValue='0'\n                    passRef={this.assignReadLengthRef}\n                    onChange={Utils.validateNumericalInputs}\n                    onKeyDown={this.doRefresh}\n                />\n                <button\n                    type='button'\n                    className='theia-button main view-group-go-button'\n                    title={nls.localizeByDefault('Go')}\n                    onClick={this.doRefresh}\n                >\n                    {nls.localizeByDefault('Go')}\n                </button>\n            </div>\n        );\n    }\n\n    protected override getObligatoryColumnIds(): string[] {\n        return ['beforeAddress', 'beforeData', 'afterAddress', 'afterData'];\n    }\n\n    protected override doRefresh = (event: React.KeyboardEvent<HTMLInputElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        if ('key' in event && KeyCode.createKeyCode(event.nativeEvent).key?.keyCode !== Key.ENTER.keyCode) {\n            return;\n        }\n        this.fireDidChangeOptions();\n    };\n\n    override storeState(): DiffMemoryOptions {\n        return {\n            ...super.storeState(),\n            // prefix a 0. It'll do nothing if it's a number, but if it's an empty string or garbage, it'll make parseInt return 0.\n            beforeOffset: parseInt(`0${this.offsetField?.value ?? 0}`),\n            afterOffset: parseInt(`0${this.readLengthField?.value ?? 0}`),\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Key, KeyCode, Message, ReactWidget } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport * as Long from 'long';\nimport { MemoryWidget } from '../memory-widget/memory-widget';\nimport { RegisterWidget } from '../register-widget/register-widget-types';\nimport { MWSelect } from '../utils/memory-widget-components';\nimport { MemoryWidgetManager } from '../utils/memory-widget-manager';\nimport { Interfaces } from '../utils/memory-widget-utils';\nimport { VariableRange } from '../utils/memory-widget-variable-utils';\nimport { MemoryDiffWidget } from './memory-diff-table-widget';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport interface DiffMemory {\n    beforeAddress: Long;\n    beforeBytes: Interfaces.LabeledUint8Array;\n    beforeVariables: VariableRange[];\n    afterAddress: Long;\n    afterBytes: Interfaces.LabeledUint8Array;\n    afterVariables: VariableRange[];\n}\n\n@injectable()\nexport class MemoryDiffSelectWidget extends ReactWidget {\n    static DIFF_SELECT_CLASS = 'memory-diff-select';\n\n    protected beforeWidgetLabel = '';\n    protected afterWidgetLabel = '';\n\n    protected labelToWidgetMap = new Map<string, MemoryWidget>();\n\n    @inject(MemoryWidgetManager) protected readonly memoryWidgetManager: MemoryWidgetManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.addClass(MemoryDiffSelectWidget.DIFF_SELECT_CLASS);\n        this.id = MemoryDiffSelectWidget.DIFF_SELECT_CLASS;\n        this.updateWidgetMap();\n        this.update();\n        this.toDispose.push(this.memoryWidgetManager.onChanged(() => this.updateWidgetMap()));\n        this.scrollOptions = { ...this.scrollOptions, suppressScrollX: false };\n        this.hide();\n    }\n\n    override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.node.querySelector('select')?.focus();\n    }\n\n    protected assignBaseValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n        this.beforeWidgetLabel = e.target.value;\n        this.update();\n    };\n\n    protected assignLaterValue = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n        this.afterWidgetLabel = e.target.value;\n        this.update();\n    };\n\n    render(): React.ReactNode {\n        const optionLabels = [...this.labelToWidgetMap.keys()];\n        const currentBase = this.getBeforeLabel(optionLabels);\n        const currentChanged = this.getAfterLabel(optionLabels, currentBase);\n        return optionLabels.length > 1 && (\n            <div className='memory-diff-select-wrapper'>\n                <div className='diff-select-input-wrapper'>\n                    <div className='t-mv-diff-select-widget-options-wrapper'>\n                        <MWSelect\n                            id='diff-selector-before'\n                            label='compare'\n                            value={currentBase}\n                            options={optionLabels}\n                            onChange={this.assignBaseValue}\n                        />\n                    </div>\n                    <div className='t-mv-diff-select-widget-options-wrapper'>\n                        <MWSelect\n                            id='diff-selector-after'\n                            label='with'\n                            value={currentChanged}\n                            options={optionLabels.filter(label => label !== currentBase)}\n                            onChange={this.assignLaterValue}\n                            onKeyDown={this.diffIfEnter}\n                        />\n                    </div>\n                </div>\n                <button\n                    type='button'\n                    className='theia-button main memory-diff-select-go'\n                    title={nls.localizeByDefault('Go')}\n                    onClick={this.diff}\n                >\n                    {nls.localizeByDefault('Go')}\n                </button>\n            </div>\n        );\n    }\n\n    protected diffIfEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        if (KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.ENTER.keyCode) {\n            this.doDiff();\n        }\n    };\n\n    protected updateWidgetMap(): void {\n        const widgets = this.memoryWidgetManager.availableWidgets.filter(widget => !MemoryDiffWidget.is(widget) && !RegisterWidget.is(widget));\n        this.labelToWidgetMap = new Map<string, MemoryWidget>(widgets.map((widget): [string, MemoryWidget] => [widget.title.label, widget]));\n        this.update();\n    }\n\n    protected getBeforeLabel(optionLabels: string[] = [...this.labelToWidgetMap.keys()]): string {\n        return this.labelToWidgetMap.has(this.beforeWidgetLabel) && this.beforeWidgetLabel || optionLabels[0];\n    }\n\n    protected getAfterLabel(optionLabels: string[], beforeWidgetLabel: string = this.getBeforeLabel(optionLabels)): string {\n        return (this.afterWidgetLabel && this.afterWidgetLabel !== beforeWidgetLabel\n            ? this.afterWidgetLabel\n            : optionLabels.find(label => label !== beforeWidgetLabel)) ?? '';\n    }\n\n    protected diff = (): void => this.doDiff();\n\n    protected doDiff(): void {\n        const labels = [...this.labelToWidgetMap.keys()];\n        const baseLabel = this.getBeforeLabel(labels);\n        const changedLabel = this.getAfterLabel(labels, baseLabel);\n        const baseWidget = this.labelToWidgetMap.get(baseLabel);\n        const changedWidget = this.labelToWidgetMap.get(changedLabel);\n        if (baseWidget && changedWidget) {\n            const memoryAndAddresses = this.getMemoryArrays(baseWidget, changedWidget);\n            this.memoryWidgetManager.doDiff({ ...memoryAndAddresses, titles: [baseLabel, changedLabel] });\n        }\n    }\n\n    protected getMemoryArrays(beforeWidget: MemoryWidget, afterWidget: MemoryWidget): DiffMemory {\n        const { memory: beforeMemory } = beforeWidget.optionsWidget;\n        const { memory: afterMemory } = afterWidget.optionsWidget;\n        return {\n            beforeBytes: beforeMemory.bytes,\n            afterBytes: afterMemory.bytes,\n            beforeAddress: beforeMemory.address,\n            afterAddress: afterMemory.address,\n            beforeVariables: beforeMemory.variables,\n            afterVariables: afterMemory.variables,\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport * as Long from 'long';\nimport { MemoryTable, MemoryTableWidget } from '../memory-widget/memory-table-widget';\nimport { MemoryWidget } from '../memory-widget/memory-widget';\nimport { EasilyMappedObject } from '../utils/memory-hover-renderer';\nimport { Interfaces, MemoryDiffWidgetData } from '../utils/memory-widget-utils';\nimport { VariableDecoration, VariableFinder } from '../utils/memory-widget-variable-utils';\nimport { DiffMemoryOptions, MemoryDiffOptionsWidget } from './memory-diff-options-widget';\nimport { DiffExtraColumnOptions, DiffLabels, DiffRowOptions, RowData } from './memory-diff-widget-types';\n\nexport type MemoryDiffWidget = MemoryWidget<MemoryDiffOptionsWidget, MemoryDiffTableWidget>;\nexport namespace MemoryDiffWidget {\n    export const ID = 'memory.diff.view';\n    export const is = (widget: MemoryWidget): boolean => widget.optionsWidget instanceof MemoryDiffOptionsWidget;\n}\n\ninterface DummyCounts {\n    leading: number;\n    trailing: number;\n}\n\ninterface OffsetData {\n    before: DummyCounts;\n    after: DummyCounts;\n}\n\n@injectable()\nexport class MemoryDiffTableWidget extends MemoryTableWidget {\n    @inject(MemoryDiffWidgetData) protected diffData: MemoryDiffWidgetData;\n    @inject(MemoryDiffOptionsWidget) override readonly optionsWidget: MemoryDiffOptionsWidget;\n\n    protected diffedSpanCounter = 0;\n    protected beforeVariableFinder: VariableFinder;\n    protected afterVariableFinder: VariableFinder;\n    protected isHighContrast = false;\n    protected override options: DiffMemoryOptions;\n    protected offsetData: OffsetData;\n\n    updateDiffData(newDiffData: Partial<MemoryDiffWidgetData>): void {\n        this.optionsWidget.updateDiffData(newDiffData);\n        this.diffData = { ...this.diffData, ...newDiffData };\n        this.getStateAndUpdate();\n    }\n\n    protected override getState(): void {\n        this.options = this.optionsWidget.options;\n        this.isHighContrast = this.themeService.getCurrentTheme().type === 'hc';\n        this.beforeVariableFinder = new VariableFinder(this.diffData.beforeVariables, this.isHighContrast);\n        this.afterVariableFinder = new VariableFinder(this.diffData.afterVariables, this.isHighContrast);\n        this.memory = { bytes: this.diffData.beforeBytes, address: new Long(0), variables: this.diffData.beforeVariables };\n        this.offsetData = this.getOffsetData();\n    }\n\n    protected getOffsetData(): OffsetData {\n        const offsetData: OffsetData = {\n            before: {\n                leading: this.options.beforeOffset * this.options.byteSize / 8,\n                trailing: 0,\n            },\n            after: {\n                leading: this.options.afterOffset * this.options.byteSize / 8,\n                trailing: 0,\n            },\n        };\n        this.setTrailing(offsetData);\n        return offsetData;\n    }\n\n    protected setTrailing(offsetData: OffsetData): void {\n        const totalBeforeLength = this.diffData.beforeBytes.length - offsetData.before.leading;\n        const totalAfterLength = this.diffData.afterBytes.length - offsetData.after.leading;\n        const totalDifference = totalBeforeLength - totalAfterLength;\n        const realDifference = Math.abs(totalDifference);\n        const beforeShorter = totalDifference < 0;\n        if (beforeShorter) {\n            offsetData.before.trailing = realDifference;\n        } else {\n            offsetData.after.trailing = realDifference;\n        }\n    }\n    /* eslint-enable no-param-reassign */\n\n    protected override getWrapperClass(): string {\n        return `${super.getWrapperClass()} diff-table`;\n    }\n\n    protected override getTableHeaderClass(): string {\n        return `${super.getTableHeaderClass()} diff-table`;\n    }\n\n    protected override *renderRows(): IterableIterator<React.ReactNode> {\n        const bytesPerRow = this.options.bytesPerGroup * this.options.groupsPerRow;\n        const oldGroupIterator = this.renderGroups(this.diffData.beforeBytes);\n        const changeGroupIterator = this.renderGroups(this.diffData.afterBytes);\n        let rowsYielded = 0;\n        let before = this.getNewRowData();\n        let after = this.getNewRowData();\n        let isModified = false;\n        for (const oldGroup of oldGroupIterator) {\n            const nextChanged: IteratorResult<MemoryTable.GroupData, undefined> = changeGroupIterator.next();\n            isModified = isModified || !!oldGroup.isHighlighted;\n            this.aggregate(before, oldGroup);\n            this.aggregate(after, nextChanged.value);\n            if (before.groups.length === this.options.groupsPerRow || oldGroup.index === this.diffData.beforeBytes.length - 1) {\n                const beforeID = this.diffData.beforeAddress.add(this.options.beforeOffset + (bytesPerRow * rowsYielded));\n                const afterID = this.diffData.afterAddress.add(this.options.afterOffset + (bytesPerRow * rowsYielded));\n                const beforeAddress = `0x${beforeID.toString(16)}`;\n                const afterAddress = `0x${afterID.toString(16)}`;\n                const doShowDivider = (rowsYielded % 4) === 3;\n                yield this.renderSingleRow({ beforeAddress, afterAddress, doShowDivider, before, after, isModified });\n                rowsYielded += 1;\n                isModified = false;\n                before = this.getNewRowData();\n                after = this.getNewRowData();\n            }\n        }\n    }\n\n    protected renderSingleRow(\n        options: DiffRowOptions,\n        getRowAttributes: Interfaces.RowDecorator = this.getRowAttributes.bind(this),\n    ): React.ReactNode {\n        const { beforeAddress, afterAddress, before, after, isModified, doShowDivider } = options;\n        const { className } = getRowAttributes({ doShowDivider });\n        return (\n            <tr key={beforeAddress} className={className}>\n                <td className={MemoryTable.ADDRESS_DATA_CLASS}>{beforeAddress}</td>\n                <td className={this.getDataCellClass('before', isModified)}>{before.groups}</td>\n                <td className={MemoryTable.ADDRESS_DATA_CLASS}>{afterAddress}</td>\n                <td className={this.getDataCellClass('after', isModified)}>{after.groups}</td>\n                {this.getExtraColumn({\n                    variables: before.variables.slice(),\n                    ascii: before.ascii,\n                    afterVariables: after.variables.slice(),\n                    afterAscii: after.ascii,\n                })}\n            </tr>\n        );\n    }\n\n    protected override getExtraColumn(options: DiffExtraColumnOptions): React.ReactNode[] {\n        const additionalColumns = [];\n        if (this.options.columnsDisplayed.variables.doRender) {\n            additionalColumns.push(this.getDiffedVariables(options));\n        }\n        if (this.options.columnsDisplayed.ascii.doRender) {\n            additionalColumns.push(this.getDiffedAscii(options));\n        }\n        return additionalColumns;\n    }\n\n    protected getDiffedAscii(options: DiffExtraColumnOptions): React.ReactNode {\n        const { ascii: beforeAscii, afterAscii } = options;\n        const highContrastClass = this.isHighContrast ? ' hc' : '';\n        if (beforeAscii === afterAscii) {\n            return super.getExtraColumn({ ascii: beforeAscii });\n        }\n\n        const EMPTY_TEXT = {\n            before: '',\n            after: '',\n        };\n\n        let currentText = { ...EMPTY_TEXT };\n\n        const beforeSpans: React.ReactNode[] = [];\n        const afterSpans: React.ReactNode[] = [];\n        let lastWasSame = true;\n\n        for (let i = 0; i < beforeAscii.length; i += 1) {\n            const beforeLetter = beforeAscii[i];\n            const afterLetter = afterAscii[i];\n            const thisIsSame = beforeLetter === afterLetter;\n\n            if (thisIsSame !== lastWasSame) {\n                lastWasSame = thisIsSame;\n                this.addTextBits(beforeSpans, afterSpans, currentText);\n                currentText = { ...EMPTY_TEXT };\n            }\n            currentText.before += beforeLetter;\n            currentText.after += afterLetter;\n        }\n        this.addTextBits(beforeSpans, afterSpans, currentText);\n        return (\n            <td key='ascii' className={MemoryTable.EXTRA_COLUMN_DATA_CLASS}>\n                <span className={`different t-mv-diffed-ascii before${highContrastClass}`}>{beforeSpans}</span>\n                <span className={`different t-mv-diffed-ascii after${highContrastClass}`}>{afterSpans}</span>\n            </td>\n        );\n    }\n\n    protected addTextBits(beforeSpans: React.ReactNode[], afterSpans: React.ReactNode[], texts: { before: string; after: string }): void {\n        const [newBeforeSpans, newAfterSpans] = this.getAsciiSpan(texts);\n        beforeSpans.push(newBeforeSpans);\n        afterSpans.push(newAfterSpans);\n    }\n\n    protected getAsciiSpan({ before, after }: { before: string; after: string }): [React.ReactNode, React.ReactNode] {\n        if (!before) {\n            return [undefined, undefined];\n        }\n        const differentClass = before === after ? '' : 'different';\n        const highContrastClass = this.isHighContrast ? ' hc' : '';\n        // use non-breaking spaces so they show up in the diff.\n        return [\n            <span key={before + after + (this.diffedSpanCounter += 1)} className={`before ${differentClass}${highContrastClass}`}>\n                {before.replace(/ /g, '\\xa0')}\n            </span>,\n            <span key={before + after + (this.diffedSpanCounter += 1)} className={`after ${differentClass}${highContrastClass}`}>\n                {after.replace(/ /g, '\\xa0')}\n            </span>,\n        ];\n    }\n\n    protected getDiffedVariables(options: DiffExtraColumnOptions): React.ReactNode {\n        const { variables: beforeVariables, afterVariables } = options;\n        const variableSpans: React.ReactNode[] = [];\n\n        let areDifferent = false;\n        for (const beforeVariable of beforeVariables) {\n            const placeInAfterVariables = afterVariables.findIndex(afterVariable => afterVariable.name === beforeVariable.name);\n            if (placeInAfterVariables > -1) {\n                afterVariables.splice(placeInAfterVariables, 1);\n                variableSpans.push(this.getVariableSpan(beforeVariable, DiffLabels.Before, false));\n            } else {\n                areDifferent = true;\n                variableSpans.push(this.getVariableSpan(beforeVariable, DiffLabels.Before, true));\n            }\n        }\n        for (const afterVariable of afterVariables) {\n            variableSpans.push(this.getVariableSpan(afterVariable, DiffLabels.After, true));\n        }\n\n        return <td key='variables' className={`${MemoryTable.EXTRA_COLUMN_DATA_CLASS}${areDifferent ? ' different' : ''}`}>{variableSpans}</td>;\n    }\n\n    protected getVariableSpan({ name, color }: VariableDecoration, origin: DiffLabels, isChanged: boolean): React.ReactNode {\n        return (\n            <span\n                key={name}\n                className={`t-mv-variable-label ${origin} ${isChanged ? ' different' : ''}`}\n                style={{ color }}\n            >\n                {name}\n            </span>\n        );\n    }\n\n    protected getDataCellClass(modifier: 'before' | 'after', isModified?: boolean): string {\n        const highContrastClass = this.isHighContrast ? 'hc' : '';\n        let base = `${MemoryTable.MEMORY_DATA_CLASS} ${modifier} ${highContrastClass}`;\n        if (isModified) {\n            base += ' different';\n        }\n        return base;\n    }\n\n    protected getNewRowData(): RowData {\n        return {\n            groups: [],\n            variables: [],\n            ascii: '',\n        };\n    }\n\n    protected aggregate(container: RowData, newData?: MemoryTable.GroupData): void {\n        if (newData) {\n            container.groups.push(newData.node);\n            container.variables.push(...newData.variables);\n            container.ascii += newData.ascii;\n        }\n    }\n\n    protected override *renderArrayItems(\n        iteratee: Interfaces.LabeledUint8Array = this.memory.bytes,\n        getBitAttributes: Interfaces.BitDecorator = this.getBitAttributes.bind(this),\n    ): IterableIterator<MemoryTable.ItemData> {\n        let ignoredItems = 0;\n        const iterateeOffsetData = iteratee.label === DiffLabels.Before ? this.offsetData.before : this.offsetData.after;\n        for (const item of super.renderArrayItems(iteratee, getBitAttributes)) {\n            if (ignoredItems < iterateeOffsetData.leading) {\n                ignoredItems += 1;\n                continue;\n            }\n            yield item;\n        }\n        for (let i = 0; i < iterateeOffsetData.trailing; i += 1) {\n            yield this.getDummySpan(i);\n        }\n    }\n\n    protected getDummySpan(key: number): MemoryTable.ItemData {\n        const node = <span key={key}>{'\\xa0'.repeat(2)}</span>;\n        return {\n            node,\n            content: '',\n            index: -1 * key,\n        };\n    }\n\n    protected override getBitAttributes(arrayOffset: number, iteratee: Interfaces.LabeledUint8Array): Partial<Interfaces.FullNodeAttributes> {\n        const isHighlighted = this.getHighlightStatus(arrayOffset, iteratee);\n        const content = iteratee[arrayOffset].toString(16).padStart(2, '0');\n        let className = `${MemoryTable.EIGHT_BIT_SPAN_CLASS} ${iteratee.label ?? ''}`;\n        const highContrastClass = this.isHighContrast ? 'hc' : '';\n        if (isHighlighted) {\n            className += ` different ${highContrastClass}`;\n        }\n\n        const isBeforeChunk = iteratee.label === DiffLabels.Before;\n        const baseAddress = isBeforeChunk ? this.diffData.beforeAddress : this.diffData.afterAddress;\n        const itemAddress = baseAddress.add(arrayOffset * 8 / this.options.byteSize);\n\n        const variable = isBeforeChunk\n            ? this.beforeVariableFinder.getVariableForAddress(itemAddress)\n            : this.afterVariableFinder.getVariableForAddress(itemAddress);\n\n        return { className, content, isHighlighted, variable, style: { color: variable?.color } };\n    }\n\n    protected getHighlightStatus(arrayOffset: number, iteratee: Interfaces.LabeledUint8Array): boolean {\n        const source = iteratee.label === DiffLabels.Before ? DiffLabels.Before : DiffLabels.After;\n        const targetArray = source === DiffLabels.Before ? this.diffData.afterBytes : this.diffData.beforeBytes;\n        const sourceValue = iteratee[arrayOffset];\n        const targetIndex = this.translateBetweenShiftedArrays(arrayOffset, source);\n        const targetValue = targetArray[targetIndex];\n        return sourceValue !== undefined &&\n            targetValue !== undefined &&\n            sourceValue !== targetValue;\n    }\n\n    protected translateBetweenShiftedArrays(sourceIndex: number, source: DiffLabels): number {\n        const sourceOffsets = source === DiffLabels.Before ? this.offsetData.before : this.offsetData.after;\n        const targetOffsets = source === DiffLabels.Before ? this.offsetData.after : this.offsetData.before;\n\n        return sourceIndex - sourceOffsets.leading + targetOffsets.leading;\n    }\n\n    protected override getHoverForVariable(span: HTMLElement): EasilyMappedObject | undefined {\n        const name = span.textContent ?? '';\n        const variable = this.beforeVariableFinder.searchForVariable(name) ??\n            this.afterVariableFinder.searchForVariable(name);\n\n        if (variable?.type) {\n            return { type: variable.type };\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { MemoryTable } from '../memory-widget/memory-table-widget';\nimport { VariableDecoration } from '../utils/memory-widget-variable-utils';\n\nexport enum DiffLabels {\n    Before = 'before',\n    After = 'after'\n}\n\nexport interface RowData {\n    groups: React.ReactNode[];\n    variables: VariableDecoration[];\n    ascii: string;\n}\n\nexport interface DiffRowOptions {\n    beforeAddress: string;\n    afterAddress: string;\n    before: RowData;\n    after: RowData;\n    doShowDivider: boolean;\n    isModified: boolean;\n}\n\nexport interface DiffExtraColumnOptions extends Pick<MemoryTable.RowOptions, 'ascii' | 'variables'> {\n    afterAscii: string;\n    afterVariables: VariableDecoration[];\n    variables: VariableDecoration[];\n    ascii: string;\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Key, KeyCode } from '@theia/core/lib/browser';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport * as Long from 'long';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { hexStrToUnsignedLong } from '../../common/util';\nimport { MemoryOptionsWidget } from '../memory-widget/memory-options-widget';\nimport { MemoryTable, MemoryTableWidget } from '../memory-widget/memory-table-widget';\nimport { MemoryWidget } from '../memory-widget/memory-widget';\nimport { EasilyMappedObject } from '../utils/memory-hover-renderer';\nimport { Constants, Interfaces } from '../utils/memory-widget-utils';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport type EditableMemoryWidget = MemoryWidget<MemoryOptionsWidget, MemoryEditableTableWidget>;\nexport namespace EditableMemoryWidget {\n    export const ID = 'editable.memory.widget';\n}\n\n@injectable()\nexport class MemoryEditableTableWidget extends MemoryTableWidget {\n    protected pendingMemoryEdits = new Map<string, string>();\n    protected override previousBytes: Interfaces.LabeledUint8Array | undefined;\n    protected memoryEditsCompleted = new Deferred<void>();\n    protected highlightedField: Long = Long.fromInt(-1);\n    protected writeErrorInfo: { location: string, error: string } | undefined;\n    protected currentErrorTimeout: number | undefined;\n\n    protected doShowMoreMemoryBefore = false;\n    protected doShowMoreMemoryAfter = false;\n\n    protected override async doInit(): Promise<void> {\n        this.memoryEditsCompleted.resolve();\n        await super.doInit();\n        this.addClass('editable');\n    }\n\n    resetModifiedValue(valueAddress: Long): void {\n        const didChange = this.pendingMemoryEdits.delete(valueAddress.toString());\n        if (didChange) {\n            this.update();\n        }\n    }\n\n    protected override getState(): void {\n        super.getState();\n        if (!this.isInBounds(this.highlightedField)) {\n            this.highlightedField = this.memory.address;\n        }\n    }\n\n    protected override async handleMemoryChange(newMemory: Interfaces.MemoryReadResult): Promise<void> {\n        await this.memoryEditsCompleted.promise;\n        if (newMemory.bytes.length === 0) {\n            this.pendingMemoryEdits.clear();\n        }\n        super.handleMemoryChange(newMemory);\n    }\n\n    protected override areSameRegion(a: Interfaces.MemoryReadResult, b?: Interfaces.MemoryReadResult): boolean {\n        return b !== undefined && a.address.equals(b.address) && a.bytes.length === b.bytes.length;\n    }\n\n    protected override getTableFooter(): React.ReactNode {\n        const showButtons = !!this.pendingMemoryEdits.size && !this.writeErrorInfo;\n        return (\n            (showButtons || this.writeErrorInfo) && (\n                <div className='memory-edit-button-container'>\n                    {showButtons && <button\n                        className='theia-button secondary'\n                        onClick={this.handleClearEditClick}\n                        type='reset'\n                        title={nls.localize('theia/memory-inspector/editable/clear', 'Clear Changes')}\n                    >\n                        {nls.localize('theia/memory-inspector/editable/clear', 'Clear Changes')}\n                    </button>}\n                    {showButtons && <button\n                        className='theia-button main'\n                        onClick={this.submitMemoryEdits}\n                        type='submit'\n                        title={nls.localize('theia/memory-inspector/editable/apply', 'Apply Changes')}\n                    >\n                        {nls.localize('theia/memory-inspector/editable/apply', 'Apply Changes')}\n                    </button>}\n                    {!!this.writeErrorInfo && <div className='memory-edit-error'>\n                        <div className='memory-edit-error-location'>{`Error writing to 0x${Long.fromString(this.writeErrorInfo?.location).toString(16)}`}</div>\n                        <div className='memory-edit-error-details'>{this.writeErrorInfo?.error}</div>\n                    </div>}\n                </div>)\n        );\n    }\n\n    protected override getBitAttributes(arrayOffset: number, iteratee: Interfaces.LabeledUint8Array): Partial<Interfaces.FullNodeAttributes> {\n        const attributes = super.getBitAttributes(arrayOffset, iteratee);\n        const classNames = attributes.className?.split(' ') ?? [];\n        const itemID = this.memory.address.add(arrayOffset);\n        const isHighlight = itemID.equals(this.highlightedField);\n        const isEditPending = this.pendingMemoryEdits.has(itemID.toString());\n        const padder = isHighlight && isEditPending ? '\\xa0' : '0'; // non-breaking space so it doesn't look like plain whitespace.\n        const stringValue = (this.pendingMemoryEdits.get(itemID.toString()) ?? this.memory.bytes[arrayOffset].toString(16)).padStart(2, padder);\n        if (!this.options.isFrozen) {\n            if (isHighlight) {\n                classNames.push('highlight');\n            }\n            if (isEditPending) {\n                classNames.push('modified');\n            }\n        }\n        return {\n            ...attributes,\n            className: classNames.join(' '),\n            content: stringValue\n        };\n    }\n\n    protected override getHoverForChunk(span: HTMLElement): EasilyMappedObject | undefined {\n        const addressAsString = span.getAttribute('data-id');\n        if (addressAsString) {\n            const address = hexStrToUnsignedLong(addressAsString);\n            const { value } = this.composeByte(address, true);\n            const { value: inMemory } = this.composeByte(address, false);\n            const oldValue = this.previousBytes && this.composeByte(address, false, this.previousBytes).value;\n            const decimal = parseInt(value, 16);\n            const octal = decimal.toString(8).padStart(this.options.byteSize / 8, '0');\n            const UTF8 = String.fromCharCode(decimal);\n            const binary = this.getPaddedBinary(decimal);\n            const toSend: EasilyMappedObject = { hex: value, octal, binary, decimal };\n            if (UTF8) {\n                toSend.UTF8 = UTF8;\n            }\n            if (inMemory !== value) {\n                toSend['Current Value'] = inMemory;\n            }\n            if (oldValue !== undefined && oldValue !== value) {\n                toSend['Previous Value'] = oldValue;\n            }\n            return toSend;\n        }\n        return undefined;\n    }\n\n    protected composeByte(\n        addressPlusArrayOffset: Long,\n        usePendingEdits: boolean,\n        dataSource: Uint8Array = this.memory.bytes,\n    ): Interfaces.ByteFromChunkData {\n        let value = '';\n\n        const offset = addressPlusArrayOffset.subtract(this.memory.address);\n        const chunksPerByte = this.options.byteSize / 8;\n        const startingChunkIndex = offset.subtract(offset.modulo(chunksPerByte));\n        const address = this.memory.address.add(startingChunkIndex.divide(chunksPerByte));\n        for (let i = 0; i < chunksPerByte; i += 1) {\n            const targetOffset = startingChunkIndex.add(i);\n            const targetChunk = this.getFromMapOrArray(targetOffset, usePendingEdits, dataSource);\n            value += targetChunk.padStart(2, '0');\n        }\n\n        return { address, value };\n    }\n\n    protected getFromMapOrArray(arrayOffset: Long, usePendingEdits: boolean, dataSource: Uint8Array = this.memory.bytes): string {\n        let value = usePendingEdits ? this.pendingMemoryEdits.get(arrayOffset.add(this.memory.address).toString()) : undefined;\n        if (value === undefined) {\n            value = dataSource[arrayOffset.toInt()]?.toString(16) ?? '';\n        }\n        return value;\n    }\n\n    protected handleClearEditClick = (): void => this.clearEdits();\n\n    protected clearEdits(address?: Long): void {\n        if (typeof address === 'number') {\n            this.pendingMemoryEdits.delete(address);\n        } else {\n            this.pendingMemoryEdits.clear();\n        }\n        this.update();\n    }\n\n    protected submitMemoryEdits = async (): Promise<void> => {\n        this.memoryEditsCompleted = new Deferred();\n        let didUpdateMemory = false;\n        for (const [key, edit] of this.createUniqueEdits()) {\n            try {\n                await this.doWriteMemory(edit);\n                didUpdateMemory = true;\n                this.pendingMemoryEdits.delete(key);\n            } catch (e) {\n                console.warn('Problem writing memory with arguments', edit, '\\n', e);\n                const text = e instanceof Error ? e.message : 'Unknown error';\n                this.showWriteError(key, text);\n                break;\n            }\n        }\n        this.memoryEditsCompleted.resolve();\n        if (didUpdateMemory) {\n            this.optionsWidget.fetchNewMemory();\n        }\n    };\n\n    protected createUniqueEdits(): Array<[string, DebugProtocol.WriteMemoryArguments]> {\n        const addressesSubmitted = new Set<string>();\n        const edits: Array<[string, DebugProtocol.WriteMemoryArguments]> = [];\n        for (const k of this.pendingMemoryEdits.keys()) {\n            const address = Long.fromString(k);\n            const { address: addressToSend, value: valueToSend } = this.composeByte(address, true);\n            const memoryReference = '0x' + addressToSend.toString(16);\n            if (!addressesSubmitted.has(memoryReference)) {\n                const data = Buffer.from(valueToSend, 'hex').toString('base64');\n                edits.push([k, { memoryReference, data }]);\n                addressesSubmitted.add(memoryReference);\n            }\n        }\n        return edits;\n    }\n\n    protected doWriteMemory(writeMemoryArgs: DebugProtocol.WriteMemoryArguments): Promise<DebugProtocol.WriteMemoryResponse> {\n        return this.memoryProvider.writeMemory(writeMemoryArgs);\n    }\n\n    protected showWriteError(location: string, error: string): void {\n        if (this.currentErrorTimeout !== undefined) {\n            clearTimeout(this.currentErrorTimeout);\n        }\n        this.writeErrorInfo = { location, error };\n        this.update();\n        this.currentErrorTimeout = window.setTimeout(() => this.hideWriteError(), Constants.ERROR_TIMEOUT);\n    }\n\n    protected hideWriteError(): void {\n        this.currentErrorTimeout = undefined;\n        this.writeErrorInfo = undefined;\n        this.update();\n    }\n\n    protected override getWrapperHandlers(): MemoryTable.WrapperHandlers {\n        return this.options.isFrozen\n            ? super.getWrapperHandlers()\n            : {\n                onClick: this.handleTableClick,\n                onContextMenu: this.handleTableRightClick,\n                onKeyDown: this.handleTableInput,\n                onMouseMove: this.handleTableMouseMove,\n            };\n    }\n\n    protected handleTableClick = (event: React.MouseEvent): void => {\n        const target = event.target as HTMLElement;\n        if (target.classList?.contains('eight-bits')) {\n            this.highlightedField = hexStrToUnsignedLong(target.getAttribute('data-id') ?? '-0x1');\n            this.update();\n            event.stopPropagation();\n        }\n    };\n\n    protected override doHandleTableRightClick(event: React.MouseEvent): void {\n        const target = event.target as HTMLElement;\n        if (target.classList?.contains('eight-bits')) {\n            this.highlightedField = hexStrToUnsignedLong(target.getAttribute('data-id') ?? '-0x1');\n        }\n        super.doHandleTableRightClick(event);\n    }\n\n    protected handleTableInput = (event: React.KeyboardEvent): void => {\n        if (this.highlightedField.lessThan(0)) {\n            return;\n        }\n        const keyCode = KeyCode.createKeyCode(event.nativeEvent).key?.keyCode;\n        const initialHighlight = this.highlightedField;\n        const initialHighlightIndex = initialHighlight.subtract(this.memory.address);\n        if (keyCode === Key.TAB.keyCode) {\n            return;\n        }\n        const arrayElementsPerRow = (this.options.byteSize / 8) * this.options.bytesPerGroup * this.options.groupsPerRow;\n        const isAlreadyEdited = this.pendingMemoryEdits.has(this.highlightedField.toString());\n        const oldValue = this.pendingMemoryEdits.get(initialHighlight.toString()) ??\n            this.memory.bytes[initialHighlightIndex.toInt()].toString(16).padStart(2, '0');\n        let possibleNewHighlight = new Long(-1);\n        let newValue = oldValue;\n        switch (keyCode) {\n            case Key.ARROW_DOWN.keyCode:\n                possibleNewHighlight = initialHighlight.add(arrayElementsPerRow);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n            case Key.ARROW_UP.keyCode:\n                possibleNewHighlight = initialHighlight.greaterThan(arrayElementsPerRow) ? initialHighlight.subtract(arrayElementsPerRow) : possibleNewHighlight;\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n            case Key.ARROW_RIGHT.keyCode:\n                possibleNewHighlight = initialHighlight.add(1);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n            case Key.ARROW_LEFT.keyCode:\n                possibleNewHighlight = initialHighlight.greaterThan(0) ? initialHighlight.subtract(1) : possibleNewHighlight;\n                break;\n            case Key.BACKSPACE.keyCode:\n                newValue = oldValue.slice(0, oldValue.length - 1);\n                break;\n            case Key.DELETE.keyCode:\n                newValue = '';\n                break;\n            case Key.ENTER.keyCode:\n                this.submitMemoryEdits();\n                break;\n            case Key.ESCAPE.keyCode:\n                if (isAlreadyEdited) {\n                    this.clearEdits(this.highlightedField);\n                } else {\n                    this.clearEdits();\n                }\n                break;\n            default: {\n                const keyValue = parseInt(KeyCode.createKeyCode(event.nativeEvent).toString(), 16);\n                if (!Number.isNaN(keyValue)) {\n                    newValue = isAlreadyEdited ? oldValue : '';\n                    if (newValue.length < 2) {\n                        newValue += keyValue.toString(16);\n                    }\n                }\n            }\n        }\n        if (this.isInBounds(possibleNewHighlight)) {\n            this.highlightedField = possibleNewHighlight;\n        }\n        const valueWasChanged = newValue !== oldValue;\n        if (valueWasChanged) {\n            this.pendingMemoryEdits.set(this.highlightedField.toString(), newValue);\n        }\n        if (valueWasChanged || !this.highlightedField.equals(initialHighlight)) {\n            this.update();\n        }\n    };\n\n    protected isInBounds(candidateAddress: Long): boolean {\n        const { address, bytes } = this.memory;\n        return candidateAddress.greaterThanOrEqual(address) &&\n            candidateAddress.lessThan(address.add(bytes.length));\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { AbstractViewContribution, FrontendApplicationContribution, Widget } from '@theia/core/lib/browser';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { Command, CommandRegistry, MenuModelRegistry } from '@theia/core/lib/common';\nimport { Color } from '@theia/core/lib/common/color';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { DebugScope, DebugVariable } from '@theia/debug/lib/browser/console/debug-console-items';\nimport { DebugFrontendApplicationContribution } from '@theia/debug/lib/browser/debug-frontend-application-contribution';\nimport { DebugVariablesWidget } from '@theia/debug/lib/browser/view/debug-variables-widget';\nimport * as Long from 'long';\nimport { MemoryEditableTableWidget } from './editable-widget/memory-editable-table-widget';\nimport { MemoryProviderService } from './memory-provider/memory-provider-service';\nimport { MemoryTableWidget } from './memory-widget/memory-table-widget';\nimport { MemoryWidget } from './memory-widget/memory-widget';\nimport { RegisterTableWidget } from './register-widget/register-table-widget';\nimport { RegisterWidget } from './register-widget/register-widget-types';\nimport {\n    CreateNewMemoryViewCommand, CreateNewRegisterViewCommand, FollowPointerDebugCommand, FollowPointerTableCommand, MemoryCommand,\n    RegisterSetVariableCommand, ResetModifiedCellCommand, ToggleDiffSelectWidgetVisibilityCommand, ViewVariableInMemoryCommand, ViewVariableInRegisterViewCommand\n} from './utils/memory-commands';\nimport { MemoryWidgetManager } from './utils/memory-widget-manager';\nimport { VariableRange } from './utils/memory-widget-variable-utils';\nimport { MemoryDockPanel } from './wrapper-widgets/memory-dock-panel';\nimport { MemoryLayoutWidget } from './wrapper-widgets/memory-layout-widget';\nimport { nls } from '@theia/core/lib/common/nls';\n\nconst ONE_HALF_OPACITY = 0.5;\n\n@injectable()\nexport class DebugFrontendContribution extends AbstractViewContribution<MemoryLayoutWidget>\n    implements FrontendApplicationContribution,\n    TabBarToolbarContribution,\n    ColorContribution {\n    @inject(DebugFrontendApplicationContribution) protected readonly debugContribution: DebugFrontendApplicationContribution;\n    @inject(MemoryWidgetManager) protected readonly memoryWidgetManager: MemoryWidgetManager;\n    @inject(FrontendApplicationStateService) protected readonly stateService: FrontendApplicationStateService;\n    @inject(MemoryProviderService) protected readonly memoryProvider: MemoryProviderService;\n\n    constructor() {\n        super({\n            widgetId: MemoryLayoutWidget.ID,\n            widgetName: MemoryLayoutWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'right',\n            },\n            toggleCommandId: MemoryCommand.id,\n        });\n    }\n\n    @postConstruct()\n    init(): void {\n        this.stateService.reachedState('initialized_layout').then(() => {\n            // Close leftover widgets from previous sessions.\n            this.memoryWidgetManager.availableWidgets.forEach(widget => {\n                if (!(widget.parent instanceof MemoryDockPanel)) {\n                    widget.close();\n                }\n            });\n        });\n    }\n\n    async initializeLayout(): Promise<void> {\n        await this.openView({ activate: false });\n    }\n\n    override registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(ViewVariableInMemoryCommand, {\n            execute: async () => {\n                const { selectedVariable } = this.debugContribution;\n                const referenceText = this.memoryProvider.formatVariableReference(selectedVariable);\n                if (referenceText) {\n                    await this.openMemoryWidgetAt(referenceText);\n                }\n            },\n            isVisible: () => {\n                const { selectedVariable } = this.debugContribution;\n                return Boolean(this.memoryProvider.supportsVariableReferenceSyntax(selectedVariable) && this.memoryProvider.formatVariableReference(selectedVariable));\n            },\n        });\n        registry.registerCommand(ViewVariableInRegisterViewCommand, {\n            execute: async () => {\n                const name = this.debugContribution.selectedVariable?.name;\n                if (name) {\n                    await this.openRegisterWidgetWithReg(name);\n                }\n            },\n            isVisible: () => {\n                let { selectedVariable: currentLevel } = this.debugContribution;\n                if (!currentLevel) {\n                    return false;\n                }\n                // Make sure it looks like it has a numerical value.\n                try { BigInt(currentLevel.value); } catch { return false; }\n                while (currentLevel.parent instanceof DebugVariable) {\n                    currentLevel = currentLevel.parent;\n                }\n                return currentLevel.parent instanceof DebugScope && currentLevel.parent?.['raw']?.name === 'Registers';\n            },\n        });\n        registry.registerCommand(FollowPointerDebugCommand, {\n            isVisible: () => !!this.isPointer(this.debugContribution.selectedVariable?.type),\n            isEnabled: () => !!this.isPointer(this.debugContribution.selectedVariable?.type),\n            execute: async () => {\n                const name = this.debugContribution.selectedVariable?.name;\n                if (name) {\n                    await this.openMemoryWidgetAt(name);\n                }\n            },\n        });\n        registry.registerCommand(ResetModifiedCellCommand, {\n            isEnabled: (widgetToActOn, address: Long) => Long.isLong(address) && widgetToActOn instanceof MemoryEditableTableWidget,\n            isVisible: (widgetToActOn, address: Long) => Long.isLong(address) && widgetToActOn instanceof MemoryEditableTableWidget,\n            execute: (widgetToActOn: MemoryEditableTableWidget, address: Long) => widgetToActOn.resetModifiedValue(address),\n        });\n        registry.registerCommand(FollowPointerTableCommand, {\n            isEnabled: (widgetToActOn, address, variable?: VariableRange) => widgetToActOn instanceof MemoryTableWidget &&\n                this.isPointer(variable?.type),\n            isVisible: (widgetToActOn, address, variable?: VariableRange) => widgetToActOn instanceof MemoryTableWidget &&\n                this.isPointer(variable?.type),\n            execute: (widgetToActOn: MemoryTableWidget, address, variable: VariableRange) => {\n                if (variable?.name) {\n                    widgetToActOn.optionsWidget.setAddressAndGo(variable.name);\n                }\n            },\n        });\n        registry.registerCommand(CreateNewMemoryViewCommand, {\n            isEnabled: w => this.withWidget(() => true, w),\n            isVisible: w => this.withWidget(() => true, w),\n            execute: () => this.memoryWidgetManager.createNewMemoryWidget(),\n        });\n        registry.registerCommand(CreateNewRegisterViewCommand, {\n            isEnabled: w => this.withWidget(() => true, w),\n            isVisible: w => this.withWidget(() => true, w),\n            execute: () => this.memoryWidgetManager.createNewMemoryWidget('register'),\n        });\n        registry.registerCommand(RegisterSetVariableCommand, {\n            isEnabled: (widgetToActOn, dVar: DebugVariable) => widgetToActOn instanceof RegisterTableWidget &&\n                dVar && dVar.supportSetVariable,\n            isVisible: (widgetToActOn, dVar: DebugVariable) => widgetToActOn instanceof RegisterTableWidget &&\n                dVar && dVar.supportSetVariable,\n            execute: (widgetToActOn: RegisterTableWidget, dVar: DebugVariable) => dVar && widgetToActOn.handleSetValue(dVar),\n        });\n        registry.registerCommand(ToggleDiffSelectWidgetVisibilityCommand, {\n            isVisible: widget => this.withWidget(() => this.memoryWidgetManager.canCompare, widget),\n            execute: (widget: MemoryLayoutWidget) => {\n                widget.toggleComparisonVisibility();\n            },\n        });\n    }\n\n    protected isPointer(type?: string): boolean {\n        return !!type?.includes('*');\n    }\n\n    /**\n     * @param {string} addressReference Should be the exact string to be used in the address bar. I.e. it must resolve to an address value.\n     */\n    protected async openMemoryWidgetAt(addressReference: string): Promise<MemoryWidget> {\n        await this.openView({ activate: false });\n        const newWidget = await this.memoryWidgetManager.createNewMemoryWidget();\n        await this.shell.activateWidget(newWidget.id);\n        if (newWidget) {\n            newWidget.optionsWidget.setAddressAndGo(addressReference);\n        }\n        return newWidget;\n    }\n\n    protected async openRegisterWidgetWithReg(name: string): Promise<MemoryWidget> {\n        await this.openView({ activate: false });\n        const newWidget = await this.memoryWidgetManager.createNewMemoryWidget<RegisterWidget>('register');\n        await this.shell.activateWidget(newWidget.id);\n        if (newWidget) {\n            newWidget.optionsWidget.setRegAndUpdate(name);\n        }\n        return newWidget;\n    }\n\n    protected withWidget(fn: (widget: MemoryLayoutWidget) => boolean, widget: Widget | undefined = this.tryGetWidget()): boolean {\n        if (widget instanceof MemoryLayoutWidget && widget.id === MemoryLayoutWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n\n    override registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        const registerMenuActions = (menuPath: string[], ...commands: Command[]): void => {\n            for (const [index, command] of commands.entries()) {\n                registry.registerMenuAction(menuPath, {\n                    commandId: command.id,\n                    label: command.label,\n                    icon: command.iconClass,\n                    order: String.fromCharCode('a'.charCodeAt(0) + index),\n                });\n            }\n        };\n\n        registry.registerMenuAction(\n            DebugVariablesWidget.WATCH_MENU,\n            { commandId: ViewVariableInMemoryCommand.id, label: ViewVariableInMemoryCommand.label },\n        );\n        registry.registerMenuAction(\n            DebugVariablesWidget.WATCH_MENU,\n            { commandId: FollowPointerDebugCommand.id, label: FollowPointerDebugCommand.label },\n        );\n        registry.registerMenuAction(\n            DebugVariablesWidget.WATCH_MENU,\n            { commandId: ViewVariableInRegisterViewCommand.id, label: ViewVariableInRegisterViewCommand.label },\n        );\n        registry.registerMenuAction(\n            MemoryEditableTableWidget.CONTEXT_MENU,\n            { commandId: ResetModifiedCellCommand.id, label: ResetModifiedCellCommand.label },\n        );\n        registry.registerMenuAction(\n            MemoryTableWidget.CONTEXT_MENU,\n            { commandId: FollowPointerTableCommand.id, label: FollowPointerTableCommand.label },\n        );\n        registerMenuActions(\n            RegisterTableWidget.CONTEXT_MENU,\n            RegisterSetVariableCommand,\n        );\n    }\n\n    registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): void {\n        toolbarRegistry.registerItem({\n            id: CreateNewMemoryViewCommand.id,\n            command: CreateNewMemoryViewCommand.id,\n            tooltip: CreateNewMemoryViewCommand.label,\n            priority: -2,\n        });\n        toolbarRegistry.registerItem({\n            id: CreateNewRegisterViewCommand.id,\n            command: CreateNewRegisterViewCommand.id,\n            tooltip: CreateNewRegisterViewCommand.label,\n            priority: -1,\n        });\n        toolbarRegistry.registerItem({\n            id: ToggleDiffSelectWidgetVisibilityCommand.id,\n            command: ToggleDiffSelectWidgetVisibilityCommand.id,\n            tooltip: nls.localize('theia/memory-inspector/toggleComparisonWidgetVisibility', 'Toggle Comparison Widget Visibility'),\n            priority: -3,\n            onDidChange: this.memoryWidgetManager.onChanged,\n        });\n    }\n\n    registerColors(colorRegistry: ColorRegistry): void {\n        colorRegistry.register(\n            {\n                id: 'memoryDiff.removedTextBackground',\n                defaults: {\n                    dark: Color.transparent('diffEditor.removedTextBackground', ONE_HALF_OPACITY),\n                    light: Color.transparent('diffEditor.removedTextBackground', ONE_HALF_OPACITY),\n                },\n                description: 'A less opaque diff color for use in the Memory Inspector where various overlays may me in place at once.',\n            },\n            {\n                id: 'memoryDiff.insertedTextBackground',\n                defaults: {\n                    dark: Color.transparent('diffEditor.insertedTextBackground', ONE_HALF_OPACITY),\n                    light: Color.transparent('diffEditor.insertedTextBackground', ONE_HALF_OPACITY),\n                },\n                description: 'A less opaque diff color for use in the Memory Inspector where various overlays may me in place at once.',\n            },\n            {\n                id: 'memoryInspector.focusBorder',\n                defaults: {\n                    dark: Color.transparent('focusBorder', ONE_HALF_OPACITY),\n                    light: Color.transparent('focusBorder', ONE_HALF_OPACITY),\n                },\n                description: 'A less opaque focus border color for use in the Memory Inspector where several overlays may be in place at once.',\n            },\n            {\n                id: 'memoryInspector.foreground',\n                defaults: {\n                    dark: Color.transparent('editor.foreground', ONE_HALF_OPACITY),\n                    light: Color.transparent('editor.foreground', ONE_HALF_OPACITY),\n                },\n                description: 'A less opaque foreground text style for use in the Memory Inspector',\n            },\n        );\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/register-widget/register-widget.css';\nimport '../../src/browser/style/index.css';\nimport '../../src/browser/utils/multi-select-bar.css';\nimport { bindContributionProvider } from '@theia/core';\nimport { bindViewContribution, FrontendApplicationContribution, WidgetFactory } from '@theia/core/lib/browser';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { DebugFrontendContribution } from './memory-inspector-frontend-contribution';\nimport { MemoryDiffOptionsWidget } from './diff-widget/memory-diff-options-widget';\nimport { MemoryDiffSelectWidget } from './diff-widget/memory-diff-select-widget';\nimport { MemoryDiffTableWidget, MemoryDiffWidget } from './diff-widget/memory-diff-table-widget';\nimport { EditableMemoryWidget, MemoryEditableTableWidget } from './editable-widget/memory-editable-table-widget';\nimport { DefaultMemoryProvider, MemoryProvider } from './memory-provider/memory-provider';\nimport { MemoryProviderService } from './memory-provider/memory-provider-service';\nimport { MemoryOptionsWidget } from './memory-widget/memory-options-widget';\nimport { MemoryTableWidget } from './memory-widget/memory-table-widget';\nimport { MemoryWidget } from './memory-widget/memory-widget';\nimport { RegisterOptionsWidget } from './register-widget/register-options-widget';\nimport { RegisterTableWidget } from './register-widget/register-table-widget';\nimport { RegisterWidget } from './register-widget/register-widget-types';\nimport { MemoryHoverRendererService } from './utils/memory-hover-renderer';\nimport { MemoryWidgetManager } from './utils/memory-widget-manager';\nimport { MemoryDiffWidgetData, MemoryWidgetOptions, RegisterWidgetOptions } from './utils/memory-widget-utils';\nimport { MemoryDockPanel } from './wrapper-widgets/memory-dock-panel';\nimport { MemoryDockpanelPlaceholder } from './wrapper-widgets/memory-dockpanel-placeholder-widget';\nimport { MemoryLayoutWidget } from './wrapper-widgets/memory-layout-widget';\nimport { CDTGDBMemoryProvider } from './memory-provider/cdt-gdb-memory-provider';\n\nexport default new ContainerModule(bind => {\n    bindViewContribution(bind, DebugFrontendContribution);\n    bind(ColorContribution).toService(DebugFrontendContribution);\n    bind(TabBarToolbarContribution).toService(DebugFrontendContribution);\n    bind(FrontendApplicationContribution).toService(DebugFrontendContribution);\n\n    bind(MemoryProviderService).toSelf().inSingletonScope();\n    bind(DefaultMemoryProvider).toSelf().inSingletonScope();\n    bindContributionProvider(bind, MemoryProvider);\n    bind(MemoryProvider).to(CDTGDBMemoryProvider).inSingletonScope();\n    bind(MemoryLayoutWidget).toSelf().inSingletonScope();\n    bind(MemoryDiffSelectWidget).toSelf().inSingletonScope();\n    bind(MemoryDockpanelPlaceholder).toSelf().inSingletonScope();\n    bind(MemoryHoverRendererService).toSelf().inSingletonScope();\n    bind(MemoryWidgetManager).toSelf().inSingletonScope();\n\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: MemoryDockPanel.ID,\n        createWidget: (): MemoryDockPanel => MemoryDockPanel.createWidget(container),\n    }));\n\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: MemoryLayoutWidget.ID,\n        createWidget: (): MemoryLayoutWidget => container.get(MemoryLayoutWidget),\n    })).inSingletonScope();\n\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: MemoryWidget.ID,\n        createWidget: (options: MemoryWidgetOptions): MemoryWidget => MemoryWidget.createWidget<MemoryOptionsWidget, MemoryTableWidget>(\n            container,\n            MemoryOptionsWidget,\n            MemoryTableWidget,\n            MemoryWidgetOptions,\n            options,\n        ),\n    }));\n\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: EditableMemoryWidget.ID,\n        createWidget: (options: MemoryWidgetOptions): EditableMemoryWidget => MemoryWidget\n            .createWidget<MemoryOptionsWidget, MemoryEditableTableWidget>(\n                container,\n                MemoryOptionsWidget,\n                MemoryEditableTableWidget,\n                MemoryWidgetOptions,\n                options,\n            ),\n    }));\n\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: MemoryDiffWidget.ID,\n        createWidget: (options: MemoryDiffWidgetData): MemoryDiffWidget => MemoryWidget\n            .createWidget<MemoryDiffOptionsWidget, MemoryDiffTableWidget>(\n                container,\n                MemoryDiffOptionsWidget,\n                MemoryDiffTableWidget,\n                MemoryDiffWidgetData,\n                options,\n            ),\n    }));\n\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: RegisterWidget.ID,\n        createWidget: (options: RegisterWidgetOptions): RegisterWidget => RegisterWidget\n            .createContainer(\n                container,\n                RegisterOptionsWidget,\n                RegisterTableWidget,\n                RegisterWidgetOptions,\n                options,\n            ).get(MemoryWidget),\n    }));\n});\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { DebugScope, DebugVariable } from '@theia/debug/lib/browser/console/debug-console-items';\nimport { DebugSession } from '@theia/debug/lib/browser/debug-session';\nimport { hexStrToUnsignedLong } from '../../common/util';\nimport { VariableRange } from '../utils/memory-widget-variable-utils';\nimport { AbstractMemoryProvider } from './memory-provider';\n\n/**\n * @file this file exists to show the customizations possible for specific debug adapters. Within the confines of the DebugAdapterProtocol, different adapters can behave\n * quite differently. In particular, they can differ in the kinds of expressions that they treat as references (in the `memoryReference` field of MemoryReadArguments, for example)\n * and the kinds of expressions that they can evaluate (for example to assist in determining the size of variables). The `MemoryProvider` type exists to allow applications\n * to enhance the base functionality of the Memory Inspector by tapping into specifics of known adapters.\n */\n\n/**\n * Read memory through the current debug session, using the cdt-gdb-adapter\n * extension to read memory.\n */\n@injectable()\nexport class CDTGDBMemoryProvider extends AbstractMemoryProvider {\n\n    canHandle(session: DebugSession): boolean {\n        return session.configuration.type === 'gdb';\n    }\n\n    override async getLocals(session: DebugSession | undefined): Promise<VariableRange[]> {\n        if (session === undefined) {\n            console.warn('No active debug session.');\n            return [];\n        }\n\n        const frame = session.currentFrame;\n        if (frame === undefined) {\n            throw new Error('No active stack frame.');\n        }\n\n        const ranges: VariableRange[] = [];\n\n        const scopes = await frame.getScopes();\n        const scopesWithoutRegisters = scopes.filter(x => x.render() !== 'Registers');\n        for (const scope of scopesWithoutRegisters) {\n            const variables = await scope.getElements();\n            for (const v of variables) {\n                if (v instanceof DebugVariable) {\n                    const addrExp = `&${v.name}`;\n                    const sizeExp = `sizeof(${v.name})`;\n                    const addrResp = await session.sendRequest('evaluate', {\n                        expression: addrExp,\n                        context: 'watch',\n                        frameId: frame.raw.id,\n                    }).catch(e => { console.warn(`Failed to evaluate ${addrExp}. Corresponding variable will be omitted from Memory Inspector display.`, e); });\n                    if (!addrResp) { continue; }\n\n                    const sizeResp = await session.sendRequest('evaluate', {\n                        expression: sizeExp,\n                        context: 'watch',\n                        frameId: frame.raw.id,\n                    }).catch(e => { console.warn(`Failed to evaluate ${sizeExp}. Corresponding variable will be omitted from Memory Inspector display.`, e); });\n                    if (!sizeResp) { continue; }\n\n                    // Make sure the address is in the format we expect.\n                    const addressPart = /0x[0-9a-f]+/i.exec(addrResp.body.result);\n                    if (!addressPart) { continue; }\n\n                    if (!/^[0-9]+$/.test(sizeResp.body.result)) { continue; }\n\n                    const size = parseInt(sizeResp.body.result);\n                    const address = hexStrToUnsignedLong(addressPart[0]);\n                    const pastTheEndAddress = address.add(size);\n\n                    ranges.push({\n                        name: v.name,\n                        address,\n                        pastTheEndAddress,\n                        type: v.type,\n                        value: v.value,\n                    });\n                }\n            }\n        }\n\n        return ranges;\n    }\n\n    override supportsVariableReferenceSyntax(session: DebugSession, currentLevel?: DebugVariable): boolean {\n        if (this.canHandle(session)) {\n            if (!currentLevel) {\n                return false;\n            }\n            while (currentLevel.parent instanceof DebugVariable) {\n                currentLevel = currentLevel.parent;\n            }\n            return currentLevel.parent instanceof DebugScope && currentLevel.parent['raw'].name === 'Local';\n        }\n        return false;\n    }\n\n    override formatVariableReference(session: DebugSession, currentLevel?: DebugVariable): string {\n        if (currentLevel && this.canHandle(session)) {\n            let { name } = currentLevel;\n            while (currentLevel.parent instanceof DebugVariable) {\n                const separator = name.startsWith('[') ? '' : '.';\n                currentLevel = currentLevel.parent;\n                if (name.startsWith(`*${currentLevel.name}.`)) { // Theia has added a layer of pointer dereferencing\n                    name = name.replace(`*${currentLevel.name}.`, `(*${currentLevel.name})->`);\n                } else if (name.startsWith(`*${currentLevel.name}`)) {\n                    // that's fine, it's what you clicked on and probably what you want to see.\n                } else {\n                    name = `${currentLevel.name}${separator}${name}`;\n                }\n            }\n            return `&(${name})`;\n        }\n        return '';\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContributionProvider } from '@theia/core';\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { DebugVariable } from '@theia/debug/lib/browser/console/debug-console-items';\nimport { DebugSession } from '@theia/debug/lib/browser/debug-session';\nimport { DebugSessionManager } from '@theia/debug/lib/browser/debug-session-manager';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { Interfaces } from '../utils/memory-widget-utils';\nimport { VariableRange } from '../utils/memory-widget-variable-utils';\nimport { DefaultMemoryProvider, MemoryProvider } from './memory-provider';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class MemoryProviderService {\n    @inject(DebugSessionManager) protected readonly sessionManager: DebugSessionManager;\n    @inject(DefaultMemoryProvider) protected readonly defaultProvider: DefaultMemoryProvider;\n    @inject(ContributionProvider) @named(MemoryProvider)\n    protected readonly contributions: ContributionProvider<MemoryProvider>;\n\n    readMemory(readMemoryArguments: DebugProtocol.ReadMemoryArguments): Promise<Interfaces.MemoryReadResult> {\n        const readError = nls.localize('theia/memory-inspector/provider/readError', 'Cannot read memory. No active debug session.');\n        const session = this.getSession(readError);\n        if (!session.capabilities.supportsReadMemoryRequest) {\n            throw new Error('Cannot read memory. The current session does not support the request.');\n        }\n        const provider = this.getProvider(session);\n        return provider.readMemory(session, readMemoryArguments);\n    }\n\n    writeMemory(writeMemoryArguments: DebugProtocol.WriteMemoryArguments): Promise<DebugProtocol.WriteMemoryResponse> {\n        const writeError = nls.localize('theia/memory-inspector/provider/writeError', 'Cannot write memory. No active debug session.');\n        const session = this.getSession(writeError);\n        if (!session.capabilities.supportsWriteMemoryRequest) {\n            throw new Error('Cannot write memory. The current session does not support the request.');\n        }\n        const provider = this.getProvider(session, 'writeMemory');\n\n        return provider.writeMemory(session, writeMemoryArguments);\n    }\n\n    getLocals(): Promise<VariableRange[]> {\n        const localsError = nls.localize('theia/memory-inspector/provider/localsError', 'Cannot read local variables. No active debug session.');\n        const session = this.getSession(localsError);\n        const provider = this.getProvider(session, 'getLocals');\n        return provider.getLocals(session);\n    }\n\n    supportsVariableReferenceSyntax(variable?: DebugVariable): boolean {\n        if (!this.sessionManager.currentSession) { return false; }\n        const provider = this.getProvider(this.sessionManager.currentSession, 'supportsVariableReferenceSyntax');\n        return provider.supportsVariableReferenceSyntax(this.sessionManager.currentSession, variable);\n    }\n\n    formatVariableReference(variable?: DebugVariable): string {\n        if (!this.sessionManager.currentSession) { return ''; }\n        const provider = this.getProvider(this.sessionManager.currentSession, 'formatVariableReference');\n        return provider.formatVariableReference(this.sessionManager.currentSession, variable);\n    }\n\n    /** @throws with {@link message} if there is no active debug session. */\n    protected getSession(message: string): DebugSession {\n        if (this.sessionManager.currentSession) { return this.sessionManager.currentSession; }\n        throw new Error(message);\n    }\n\n    protected getProvider(session: DebugSession, ensure?: keyof MemoryProvider): Required<MemoryProvider> {\n        return this.contributions.getContributions()\n            .find((candidate): candidate is Required<MemoryProvider> => Boolean(!ensure || candidate[ensure]) && candidate.canHandle(session))\n            ?? this.defaultProvider;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { DebugVariable } from '@theia/debug/lib/browser/console/debug-console-items';\nimport { DebugSession } from '@theia/debug/lib/browser/debug-session';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { Interfaces } from '../utils/memory-widget-utils';\nimport { VariableRange } from '../utils/memory-widget-variable-utils';\nimport Long = require('long');\n\nexport const MemoryProvider = Symbol('MemoryProvider');\n/**\n * Representation of a memory provider. It is only necessary to implement a new Memory Provider if the behavior of the Debug Adapter for a given session type\n * deviates from the Debug Adapter Protocol. Otherwise, the DefaultMemoryProvider should handle standard DAP requests and responses.\n *\n * Specific peculiarities that might require special handling include: restrictions on the formatting of memory location identifiers (only hex numbers, e.g.)\n * or deviations from the DAP in the format of the response to a given request.\n */\nexport interface MemoryProvider {\n    /**\n     * @param session\n     * @return whether the given MemoryProvider can handle memory reading / writing for a session of the type submitted.\n     */\n    canHandle(session: DebugSession): boolean;\n    readMemory(session: DebugSession, readMemoryArguments: DebugProtocol.ReadMemoryArguments): Promise<Interfaces.MemoryReadResult>;\n    writeMemory?(session: DebugSession, writeMemoryArguments: DebugProtocol.WriteMemoryArguments): Promise<DebugProtocol.WriteMemoryResponse>;\n    getLocals?(session: DebugSession): Promise<VariableRange[]>;\n    /**\n     * Whether the current debugger supports variable reference syntax (e.g. &a) in the `memoryReference` field of\n     * @link DebugProtocol.ReadMemoryArguments, ReadMemoryArguments}\n     */\n    supportsVariableReferenceSyntax?(session: DebugSession, variable?: DebugVariable): boolean;\n    formatVariableReference?(session: DebugSession, variable?: DebugVariable): string;\n}\n\n/**\n * Convert a base64-encoded string of bytes to the Uint8Array equivalent.\n */\nexport function base64ToBytes(base64: string): Interfaces.LabeledUint8Array {\n    return Buffer.from(base64, 'base64');\n}\n\n@injectable()\nexport class DefaultMemoryProvider implements Required<MemoryProvider> {\n    // This provider should only be used a fallback - it shouldn't volunteer to handle any session.\n    canHandle(): false {\n        return false;\n    }\n\n    async readMemory(session: DebugSession, readMemoryArguments: DebugProtocol.ReadMemoryArguments): Promise<Interfaces.MemoryReadResult> {\n        console.log('Requesting memory with the following arguments:', readMemoryArguments);\n        const result = await session.sendRequest('readMemory', readMemoryArguments) as DebugProtocol.ReadMemoryResponse;\n\n        if (result.body?.data) {\n            const { body: { data, address } } = result;\n            const bytes = base64ToBytes(data);\n            const longAddress = result.body.address.startsWith('0x') ? Long.fromString(address, true, 16) : Long.fromString(address, true, 10);\n            return { bytes, address: longAddress };\n        }\n        throw new Error('Received no data from debug adapter.');\n    }\n\n    async writeMemory(session: DebugSession, writeMemoryArguments: DebugProtocol.WriteMemoryArguments): Promise<DebugProtocol.WriteMemoryResponse> {\n        return session.sendRequest('writeMemory', writeMemoryArguments);\n    }\n\n    async getLocals(session: DebugSession): Promise<VariableRange[]> {\n        return [];\n    }\n\n    supportsVariableReferenceSyntax(session: DebugSession, variable?: DebugVariable | undefined): boolean {\n        return false;\n    }\n\n    formatVariableReference(session: DebugSession, variable?: DebugVariable | undefined): string {\n        return '';\n    }\n}\n\n@injectable()\nexport abstract class AbstractMemoryProvider implements Required<MemoryProvider> {\n    @inject(DefaultMemoryProvider) protected readonly defaultProvider: DefaultMemoryProvider;\n\n    abstract canHandle(session: DebugSession): boolean;\n\n    readMemory(session: DebugSession, readMemoryArguments: DebugProtocol.ReadMemoryArguments): Promise<Interfaces.MemoryReadResult> {\n        return this.defaultProvider.readMemory(session, readMemoryArguments);\n    }\n\n    writeMemory(session: DebugSession, writeMemoryArguments: DebugProtocol.WriteMemoryArguments): Promise<DebugProtocol.WriteMemoryResponse> {\n        return this.defaultProvider.writeMemory(session, writeMemoryArguments);\n    }\n\n    getLocals(session: DebugSession): Promise<VariableRange[]> {\n        return this.defaultProvider.getLocals(session);\n    }\n\n    supportsVariableReferenceSyntax(session: DebugSession, variable?: DebugVariable | undefined): boolean {\n        return this.defaultProvider.supportsVariableReferenceSyntax(session, variable);\n    }\n\n    formatVariableReference(session: DebugSession, variable?: DebugVariable | undefined): string {\n        return this.defaultProvider.formatVariableReference(session, variable);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { deepFreeze, Disposable, DisposableCollection, Emitter, nls } from '@theia/core';\nimport { Key, KeyCode, Message, ReactWidget, StatefulWidget } from '@theia/core/lib/browser';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { DebugSession, DebugState } from '@theia/debug/lib/browser/debug-session';\nimport { DebugSessionManager } from '@theia/debug/lib/browser/debug-session-manager';\nimport * as Long from 'long';\nimport { MemoryProviderService } from '../memory-provider/memory-provider-service';\nimport { Recents } from '../utils/memory-recents';\nimport { MWInput, MWInputWithSelect, MWSelect } from '../utils/memory-widget-components';\nimport { Constants, Interfaces, MemoryWidgetOptions, Utils } from '../utils/memory-widget-utils';\nimport { VariableRange } from '../utils/memory-widget-variable-utils';\nimport { MWMultiSelect, SingleSelectItemProps } from '../utils/multi-select-bar';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nexport const EMPTY_MEMORY: Interfaces.MemoryReadResult = deepFreeze({\n    bytes: new Uint8Array(),\n    address: new Long(0, 0, true),\n});\n\nexport const LOCATION_FIELD_ID = 't-mv-location';\nexport const LENGTH_FIELD_ID = 't-mv-length';\nexport const LOCATION_OFFSET_FIELD_ID = 't-mv-location-offset';\nexport const BYTES_PER_ROW_FIELD_ID = 't-mv-bytesrow';\nexport const BYTES_PER_GROUP_FIELD_ID = 't-mv-bytesgroup';\nexport const ENDIAN_SELECT_ID = 't-mv-endiannesss';\nexport const ASCII_TOGGLE_ID = 't-mv-ascii-toggle';\nexport const AUTO_UPDATE_TOGGLE_ID = 't-mv-auto-update-toggle';\n\n@injectable()\nexport class MemoryOptionsWidget extends ReactWidget implements StatefulWidget {\n    static ID = 'memory-view-options-widget';\n    static LABEL = nls.localize('theia/memory-inspector/memoryTitle', 'Memory');\n    iconClass = 'memory-view-icon';\n    lockIconClass = 'memory-lock-icon';\n\n    static WIDGET_H2_CLASS = 'memory-widget-header';\n    static WIDGET_HEADER_INPUT_CLASS = 'memory-widget-header-input';\n\n    protected additionalColumnSelectLabel = nls.localize('theia/memory-inspector/extraColumn', 'Extra Column');\n\n    protected sessionListeners = new DisposableCollection();\n\n    protected readonly onOptionsChangedEmitter = new Emitter<string | undefined>();\n    readonly onOptionsChanged = this.onOptionsChangedEmitter.event;\n    protected readonly onMemoryChangedEmitter = new Emitter<Interfaces.MemoryReadResult>();\n    readonly onMemoryChanged = this.onMemoryChangedEmitter.event;\n    protected pinnedMemoryReadResult: Deferred<Interfaces.MemoryReadResult | false> | undefined;\n\n    protected memoryReadResult: Interfaces.MemoryReadResult = EMPTY_MEMORY;\n    protected columnsDisplayed: Interfaces.ColumnsDisplayed = {\n        address: {\n            label: nls.localizeByDefault('Address'),\n            doRender: true\n        },\n        data: {\n            label: nls.localize('theia/memory-inspector/data', 'Data'),\n            doRender: true\n        },\n        variables: {\n            label: nls.localizeByDefault('Variables'),\n            doRender: true\n        },\n        ascii: {\n            label: nls.localize('theia/memory-inspector/ascii', 'ASCII'),\n            doRender: false\n        },\n    };\n\n    protected byteSize = 8;\n\n    protected bytesPerGroup = 1;\n    protected groupsPerRow = 4;\n    protected variables: VariableRange[] = [];\n    protected endianness: Interfaces.Endianness = Interfaces.Endianness.Little;\n\n    protected memoryReadError = nls.localize('theia/memory-inspector/memory/readError/noContents', 'No memory contents currently available.');\n\n    protected address: string | number = 0;\n    protected offset = 0;\n    protected readLength = 256;\n    protected doDisplaySettings = false;\n    protected doUpdateAutomatically = true;\n    protected showMemoryError = false;\n    protected errorTimeout: NodeJS.Timeout | undefined = undefined;\n    protected addressField: HTMLInputElement | undefined;\n    protected offsetField: HTMLInputElement | undefined;\n    protected readLengthField: HTMLInputElement | undefined;\n    protected headerInputField: HTMLInputElement | undefined;\n    protected recentLocations = new Recents();\n    protected showTitleEditIcon = false;\n    protected isTitleEditable = false;\n\n    @inject(MemoryProviderService) protected readonly memoryProvider: MemoryProviderService;\n    @inject(DebugSessionManager) protected readonly sessionManager: DebugSessionManager;\n    @inject(MemoryWidgetOptions) protected readonly memoryWidgetOptions: MemoryWidgetOptions;\n\n    get memory(): Interfaces.WidgetMemoryState {\n        return {\n            ...this.memoryReadResult,\n            variables: this.variables,\n        };\n    }\n\n    get options(): Interfaces.MemoryOptions {\n        return this.storeState();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.addClass(MemoryOptionsWidget.ID);\n\n        this.title.label = nls.localize('theia/memory-inspector/memory', 'Memory ({0})', this.memoryWidgetOptions.displayId);\n        this.title.caption = nls.localize('theia/memory-inspector/memory', 'Memory ({0})', this.memoryWidgetOptions.displayId);\n        this.title.iconClass = this.iconClass;\n        this.title.closable = true;\n\n        if (this.memoryWidgetOptions.dynamic !== false) {\n            this.toDispose.push(this.sessionManager.onDidChangeActiveDebugSession(({ current }) => {\n                this.setUpListeners(current);\n            }));\n\n            this.toDispose.push(this.sessionManager.onDidCreateDebugSession(current => {\n                this.setUpListeners(current);\n            }));\n            this.setUpListeners(this.sessionManager.currentSession);\n        }\n        this.toDispose.push(this.onOptionsChanged(() => this.update()));\n\n        this.update();\n    }\n\n    async setAddressAndGo(\n        newAddress: string,\n        newOffset?: number,\n        newLength?: number,\n        direction?: 'above' | 'below',\n    ): Promise<Interfaces.MemoryReadResult | false | undefined> {\n        let doUpdate = false;\n        const originalValues = {\n            offset: '',\n            length: '',\n        };\n        if (this.addressField) {\n            this.addressField.value = newAddress;\n            doUpdate = true;\n        }\n        if (this.offsetField && newOffset !== undefined) {\n            originalValues.offset = this.offsetField.value;\n            this.offsetField.value = newOffset.toString();\n            doUpdate = true;\n        }\n        if (this.readLengthField && newLength !== undefined) {\n            originalValues.length = this.readLengthField.value;\n            this.readLengthField.value = newLength.toString();\n            doUpdate = true;\n        }\n        if (doUpdate && this.readLengthField && this.offsetField) {\n            this.pinnedMemoryReadResult = new Deferred<Interfaces.MemoryReadResult>();\n            this.updateMemoryView();\n            const result = await this.pinnedMemoryReadResult.promise;\n            if (result === false) {\n                // Memory request errored\n                this.readLengthField.value = originalValues.length;\n                this.offsetField.value = originalValues.offset;\n            }\n            if (result) {\n                // Memory request returned some memory\n                const resultLength = result.bytes.length * 8 / this.byteSize;\n                const lengthFieldValue = parseInt(this.readLengthField.value);\n                if (lengthFieldValue !== resultLength) {\n                    this.memoryReadError = nls.localize('theia/memory-inspector/memory/readError/bounds', 'Memory bounds exceeded, result will be truncated.');\n                    this.doShowMemoryErrors();\n                    this.readLengthField.value = resultLength.toString();\n                    if (direction === 'above') {\n                        this.offsetField.value = `${parseInt(originalValues.offset) - (resultLength - parseInt(originalValues.length))}`;\n                    }\n                    this.update();\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected setUpListeners(session?: DebugSession): void {\n        this.sessionListeners.dispose();\n        this.sessionListeners = new DisposableCollection(Disposable.create(() => this.handleActiveSessionChange()));\n        if (session) {\n            this.sessionListeners.push(session.onDidChange(() => this.handleSessionChange()));\n        }\n    }\n\n    protected handleActiveSessionChange(): void {\n        const isDynamic = this.memoryWidgetOptions.dynamic !== false;\n        if (isDynamic && this.doUpdateAutomatically) {\n            this.memoryReadResult = EMPTY_MEMORY;\n            this.fireDidChangeMemory();\n        }\n    }\n\n    protected handleSessionChange(): void {\n        const isStopped = this.sessionManager.currentSession?.state === DebugState.Stopped;\n        const isReadyForQuery = !!this.sessionManager.currentSession?.currentFrame;\n        const isDynamic = this.memoryWidgetOptions.dynamic !== false;\n        if (isStopped && isReadyForQuery && isDynamic && this.doUpdateAutomatically && this.memoryReadResult !== EMPTY_MEMORY) {\n            this.updateMemoryView();\n        }\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.acceptFocus();\n    }\n\n    protected acceptFocus(): void {\n        if (this.doUpdateAutomatically) {\n            if (this.addressField) {\n                this.addressField.focus();\n                this.addressField.select();\n            }\n        } else {\n            const settingsCog = this.node.querySelector('.toggle-settings-click-zone') as HTMLDivElement;\n            settingsCog?.focus();\n        }\n    }\n\n    protected handleColumnSelectionChange = (columnLabel: string, doShow: boolean): void => this.doHandleColumnSelectionChange(columnLabel, doShow);\n\n    protected doHandleColumnSelectionChange(columnLabel: string, doShow: boolean): void {\n        if (columnLabel in this.columnsDisplayed) {\n            this.columnsDisplayed[columnLabel].doRender = doShow;\n            this.fireDidChangeOptions(ASCII_TOGGLE_ID);\n        }\n    }\n\n    protected toggleAutoUpdate = (e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>): void => {\n        if (e.nativeEvent.type === 'click') {\n            e.currentTarget.blur();\n        }\n        if ('key' in e && KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.TAB.keyCode) {\n            return;\n        }\n        this.doUpdateAutomatically = !this.doUpdateAutomatically;\n        if (this.doUpdateAutomatically) {\n            this.title.iconClass = this.iconClass;\n        } else {\n            this.title.iconClass = this.lockIconClass;\n        }\n        this.fireDidChangeOptions();\n    };\n\n    protected onByteSizeChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n        this.byteSize = parseInt(event.target.value);\n        this.fireDidChangeOptions(event.target.id);\n    };\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.memoryWidgetOptions.dynamic !== false) {\n            if (this.addressField) {\n                this.addressField.value = this.address.toString();\n            }\n        }\n    }\n\n    protected toggleDoShowSettings = (e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>): void => {\n        if (!('key' in e) || KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.TAB.keyCode) {\n            this.doDisplaySettings = !this.doDisplaySettings;\n            this.update();\n        }\n    };\n\n    protected render(): React.ReactNode {\n        return (\n            <div className='t-mv-container'>\n                {this.renderInputContainer()}\n            </div>\n        );\n    }\n\n    protected renderInputContainer(): React.ReactNode {\n        return (\n            <div className='t-mv-settings-container'>\n                <div className='t-mv-wrapper'>\n                    {this.renderToolbar()}\n                    {this.renderMemoryLocationGroup()}\n                    {this.doDisplaySettings && (\n                        <div className='t-mv-toggle-settings-wrapper'>\n                            {this.renderByteDisplayGroup()}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    protected renderByteDisplayGroup(): React.ReactNode {\n        return (\n            <div className='t-mv-group settings-group'>\n                <MWSelect\n                    id='byte-size-select'\n                    label={nls.localize('theia/memory-inspector/byteSize', 'Byte Size')}\n                    value={this.byteSize.toString()}\n                    onChange={this.onByteSizeChange}\n                    options={['8', '16', '32', '64']}\n                />\n                <MWSelect\n                    id={BYTES_PER_GROUP_FIELD_ID}\n                    label={nls.localize('theia/memory-inspector/bytesPerGroup', 'Bytes Per Group')}\n                    value={this.bytesPerGroup.toString()}\n                    onChange={this.onBytesPerGroupChange}\n                    options={['1', '2', '4', '8', '16']}\n                />\n                <MWSelect\n                    id={BYTES_PER_ROW_FIELD_ID}\n                    label={nls.localize('theia/memory-inspector/groupsPerRow', 'Groups Per Row')}\n                    value={this.groupsPerRow.toString()}\n                    onChange={this.onGroupsPerRowChange}\n                    options={['1', '2', '4', '8', '16', '32']}\n                />\n                <MWSelect\n                    id={ENDIAN_SELECT_ID}\n                    label={nls.localize('theia/memory-inspector/endianness', 'Endianness')}\n                    value={this.endianness}\n                    onChange={this.onEndiannessChange}\n                    options={[Interfaces.Endianness.Little, Interfaces.Endianness.Big]}\n                />\n                <MWMultiSelect\n                    id={ASCII_TOGGLE_ID}\n                    label={nls.localize('theia/memory-inspector/columns', 'Columns')}\n                    items={this.getOptionalColumns()}\n                    onSelectionChanged={this.handleColumnSelectionChange}\n                />\n            </div>\n        );\n    }\n\n    protected getObligatoryColumnIds(): string[] {\n        return ['address', 'data'];\n    }\n\n    protected getOptionalColumns(): SingleSelectItemProps[] {\n        const obligatoryColumns = new Set(this.getObligatoryColumnIds());\n        return Object.entries(this.columnsDisplayed)\n            .reduce<SingleSelectItemProps[]>((accumulated, [id, { doRender, label }]) => {\n                if (!obligatoryColumns.has(id)) {\n                    accumulated.push({ id, label, defaultChecked: doRender });\n                }\n                return accumulated;\n            }, []);\n    }\n\n    protected assignLocationRef: React.LegacyRef<HTMLInputElement> = location => {\n        this.addressField = location ?? undefined;\n    };\n\n    protected assignReadLengthRef: React.LegacyRef<HTMLInputElement> = readLength => {\n        this.readLengthField = readLength ?? undefined;\n    };\n\n    protected assignOffsetRef: React.LegacyRef<HTMLInputElement> = offset => {\n        this.offsetField = offset ?? undefined;\n    };\n\n    protected setAddressFromSelect = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n        if (this.addressField) {\n            this.addressField.value = e.target.value;\n        }\n    };\n\n    protected renderMemoryLocationGroup(): React.ReactNode {\n        return (\n            <>\n                <div className='t-mv-group view-group'>\n                    <MWInputWithSelect\n                        id={LOCATION_FIELD_ID}\n                        label={nls.localizeByDefault('Address')}\n                        title={nls.localize('theia/memory-inspector/addressTooltip', 'Memory location to display, an address or expression evaluating to an address')}\n                        defaultValue={`${this.address}`}\n                        onSelectChange={this.setAddressFromSelect}\n                        passRef={this.assignLocationRef}\n                        onKeyDown={this.doRefresh}\n                        options={[...this.recentLocations.values]}\n                        disabled={!this.doUpdateAutomatically}\n                    />\n                    <MWInput\n                        id={LOCATION_OFFSET_FIELD_ID}\n                        label={nls.localize('theia/memory-inspector/offset', 'Offset')}\n                        title={nls.localize('theia/memory-inspector/offsetTooltip', 'Offset to be added to the current memory location, when navigating')}\n                        defaultValue='0'\n                        passRef={this.assignOffsetRef}\n                        onKeyDown={this.doRefresh}\n                        disabled={!this.doUpdateAutomatically}\n                    />\n                    <MWInput\n                        id={LENGTH_FIELD_ID}\n                        label={nls.localize('theia/memory-inspector/length', 'Length')}\n                        title={nls.localize('theia/memory-inspector/lengthTooltip', 'Number of bytes to fetch, in decimal or hexadecimal')}\n                        defaultValue={this.readLength.toString()}\n                        passRef={this.assignReadLengthRef}\n                        onChange={Utils.validateNumericalInputs}\n                        onKeyDown={this.doRefresh}\n                        disabled={!this.doUpdateAutomatically}\n                    />\n                    <button\n                        type='button'\n                        className='theia-button main view-group-go-button'\n                        onClick={this.doRefresh}\n                        disabled={!this.doUpdateAutomatically}\n                        title={nls.localizeByDefault('Go')}\n                    >\n                        {nls.localizeByDefault('Go')}\n                    </button>\n                </div>\n                <div className={`t-mv-memory-fetch-error${this.showMemoryError ? ' show' : ' hide'}`}>\n                    {this.memoryReadError}\n                </div>\n            </>\n        );\n    }\n\n    protected activateHeaderInputField = (e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>): void => {\n        if (!this.isTitleEditable) {\n            const isMouseDown = !('key' in e);\n            const isActivationKey = 'key' in e && (\n                KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.SPACE.keyCode\n                || KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.ENTER.keyCode\n            );\n            if (isMouseDown || isActivationKey) {\n                if (isMouseDown) {\n                    e.currentTarget.blur();\n                }\n                this.isTitleEditable = true;\n                this.update();\n            }\n        }\n    };\n\n    protected saveHeaderInputValue = (e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>): void => {\n        const isMouseDown = !('key' in e);\n        const isSaveKey = 'key' in e && e.key === 'Enter';\n        const isCancelKey = 'key' in e && e.key === 'Escape';\n        e.stopPropagation();\n        if (isMouseDown || isSaveKey || isCancelKey) {\n            this.updateHeader(isCancelKey);\n        }\n    };\n\n    protected assignHeaderInputRef = (element: HTMLInputElement): void => {\n        if (element) {\n            this.headerInputField = element;\n            element.focus();\n        }\n    };\n\n    protected updateHeader(isCancelKey: boolean): void {\n        if (!isCancelKey && this.headerInputField) {\n            this.title.label = this.headerInputField.value;\n            this.title.caption = this.headerInputField.value;\n        }\n\n        this.isTitleEditable = false;\n        this.update();\n    }\n\n    protected renderToolbar(): React.ReactNode {\n        return (\n            <div className='memory-widget-toolbar'>\n                {this.renderLockIcon()}\n                {this.renderEditableTitleField()}\n                {this.renderSettingsContainer()}\n            </div>\n        );\n    }\n\n    protected renderSettingsContainer(): React.ReactNode {\n        return <div className='toggle-settings-container'>\n            <div\n                className='toggle-settings-click-zone no-select'\n                tabIndex={0}\n                aria-label={this.doDisplaySettings ?\n                    nls.localize('theia/memory-inspector/memory/hideSettings', 'Hide Settings Panel') :\n                    nls.localize('theia/memory-inspector/memory/showSettings', 'Show Settings Panel')}\n                role='button'\n                onClick={this.toggleDoShowSettings}\n                onKeyDown={this.toggleDoShowSettings}\n                title={this.doDisplaySettings ?\n                    nls.localize('theia/memory-inspector/memory/hideSettings', 'Hide Settings Panel') :\n                    nls.localize('theia/memory-inspector/memory/showSettings', 'Show Settings Panel')}>\n                <i className='codicon codicon-settings-gear' />\n                <span>{this.doDisplaySettings ?\n                    nls.localize('theia/memory-inspector/closeSettings', 'Close Settings') :\n                    nls.localizeByDefault('Settings')}\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderLockIcon(): React.ReactNode {\n        return this.memoryWidgetOptions.dynamic !== false && (\n            <div className='memory-widget-auto-updates-container'>\n                <div\n                    className={`fa fa-${this.doUpdateAutomatically ? 'unlock' : 'lock'}`}\n                    id={AUTO_UPDATE_TOGGLE_ID}\n                    title={this.doUpdateAutomatically ?\n                        nls.localize('theia/memory-inspector/memory/freeze', 'Freeze Memory View') :\n                        nls.localize('theia/memory-inspector/memory/unfreeze', 'Unfreeze Memory View')}\n                    onClick={this.toggleAutoUpdate}\n                    onKeyDown={this.toggleAutoUpdate}\n                    role='button'\n                    tabIndex={0} />\n            </div>\n        );\n    }\n\n    protected renderEditableTitleField(): React.ReactNode {\n        return (\n            <div\n                className='memory-widget-header-click-zone'\n                tabIndex={0}\n                onClick={this.activateHeaderInputField}\n                onKeyDown={this.activateHeaderInputField}\n                role='button'\n            >\n                {!this.isTitleEditable\n                    ? (\n                        <h2 className={`${MemoryOptionsWidget.WIDGET_H2_CLASS}${!this.doUpdateAutomatically ? ' disabled' : ''} no-select`}>\n                            {this.title.label}\n                        </h2>\n                    )\n                    : <input\n                        className='theia-input'\n                        type='text'\n                        defaultValue={this.title.label}\n                        onKeyDown={this.saveHeaderInputValue}\n                        spellCheck={false}\n                        ref={this.assignHeaderInputRef}\n                    />}\n                {!this.isTitleEditable && (\n                    <div className={`fa fa-pencil${this.showTitleEditIcon ? ' show' : ' hide'}`} />\n                )}\n                {this.isTitleEditable && (\n                    <div\n                        className='fa fa-save'\n                        onClick={this.saveHeaderInputValue}\n                        onKeyDown={this.saveHeaderInputValue}\n                        role='button'\n                        tabIndex={0}\n                        title={nls.localizeByDefault('Save')}\n                    />\n                )}\n            </div>\n        );\n    }\n\n    storeState(): Interfaces.MemoryOptions {\n        return {\n            address: this.addressField?.value ?? this.address,\n            offset: parseInt(`${this.offsetField?.value}`) ?? this.offset,\n            length: parseInt(`${this.readLengthField?.value}`) ?? this.readLength,\n            byteSize: this.byteSize,\n            bytesPerGroup: this.bytesPerGroup,\n            groupsPerRow: this.groupsPerRow,\n            endianness: this.endianness,\n            doDisplaySettings: this.doDisplaySettings,\n            columnsDisplayed: this.columnsDisplayed,\n            recentLocationsArray: this.recentLocations.values,\n            isFrozen: !this.doUpdateAutomatically,\n            doUpdateAutomatically: this.doUpdateAutomatically,\n        };\n    }\n\n    restoreState(oldState: Interfaces.MemoryOptions): void {\n        this.address = oldState.address ?? this.address;\n        this.offset = oldState.offset ?? this.offset;\n        this.readLength = oldState.length ?? this.readLength;\n        this.byteSize = oldState.byteSize ?? this.byteSize;\n        this.bytesPerGroup = oldState.bytesPerGroup ?? this.bytesPerGroup;\n        this.groupsPerRow = oldState.groupsPerRow ?? this.groupsPerRow;\n        this.endianness = oldState.endianness ?? this.endianness;\n        this.recentLocations = new Recents(oldState.recentLocationsArray) ?? this.recentLocations;\n        this.doDisplaySettings = !!oldState.doDisplaySettings;\n        if (oldState.columnsDisplayed) {\n            this.columnsDisplayed = oldState.columnsDisplayed;\n        }\n    }\n\n    protected doShowMemoryErrors = (doClearError = false): void => {\n        if (this.errorTimeout !== undefined) {\n            clearTimeout(this.errorTimeout);\n        }\n        if (doClearError) {\n            this.showMemoryError = false;\n            this.update();\n            this.errorTimeout = undefined;\n            return;\n        }\n        this.showMemoryError = true;\n        this.update();\n        this.errorTimeout = setTimeout(() => {\n            this.showMemoryError = false;\n            this.update();\n            this.errorTimeout = undefined;\n        }, Constants.ERROR_TIMEOUT);\n    };\n\n    fetchNewMemory(): void {\n        this.updateMemoryView();\n    }\n\n    protected doRefresh = (event: React.KeyboardEvent<HTMLInputElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        if ('key' in event && event.key !== 'Enter') {\n            return;\n        }\n        this.updateMemoryView();\n    };\n\n    protected updateMemoryView = debounce(this.doUpdateMemoryView.bind(this), Constants.DEBOUNCE_TIME, { trailing: true });\n\n    protected async doUpdateMemoryView(): Promise<void> {\n        if (!(this.addressField && this.readLengthField)) { return; }\n\n        if (this.addressField?.value.trim().length === 0) {\n            this.memoryReadError = nls.localize('theia/memory-inspector/memory/addressField/memoryReadError', 'Enter an address or expression in the Location field.');\n            this.doShowMemoryErrors();\n            return;\n        }\n        if (this.readLengthField.value.trim().length === 0) {\n            this.memoryReadError = nls.localize('theia/memory-inspector/memory/readLength/memoryReadError', 'Enter a length (decimal or hexadecimal number) in the Length field.');\n            this.doShowMemoryErrors();\n            return;\n        }\n\n        const startAddress = this.addressField.value;\n        const locationOffset = parseInt(`${this.offsetField?.value}`) || 0;\n        const readLength = parseInt(this.readLengthField.value);\n\n        try {\n            this.memoryReadResult = await this.getMemory(startAddress, readLength, locationOffset);\n            this.fireDidChangeMemory();\n            if (this.pinnedMemoryReadResult) {\n                this.pinnedMemoryReadResult.resolve(this.memoryReadResult);\n            }\n            this.doShowMemoryErrors(true);\n        } catch (err) {\n            this.memoryReadError = this.getUserError(err);\n            console.error('Failed to read memory', err);\n            this.doShowMemoryErrors();\n            if (this.pinnedMemoryReadResult) {\n                this.pinnedMemoryReadResult.resolve(this.memoryReadResult);\n            }\n        } finally {\n            this.pinnedMemoryReadResult = undefined;\n            this.update();\n        }\n    }\n\n    protected getUserError(err: unknown): string {\n        return err instanceof Error ? err.message : nls.localize('theia/memory-inspector/memory/userError', 'There was an error fetching memory.');\n    }\n\n    protected async getMemory(memoryReference: string, count: number, offset: number): Promise<Interfaces.MemoryReadResult> {\n        const result = await this.retrieveMemory(memoryReference, count, offset);\n        try {\n            this.variables = await this.memoryProvider.getLocals();\n        } catch {\n            this.variables = [];\n        }\n        this.recentLocations.add(memoryReference);\n        this.updateDefaults(memoryReference, count, offset);\n        return result;\n    }\n\n    protected async retrieveMemory(memoryReference: string, count: number, offset: number): Promise<Interfaces.MemoryReadResult> {\n        return this.memoryProvider.readMemory({ memoryReference, count, offset });\n    }\n\n    // TODO: This may not be necessary if we change how state is stored (currently in the text fields themselves.)\n    protected updateDefaults(address: string, readLength: number, offset: number): void {\n        this.address = address;\n        this.readLength = readLength;\n        this.offset = offset;\n    }\n\n    // Callbacks for when the various view parameters change.\n    /**\n     * Handle bytes per row changed event.\n     */\n    protected onGroupsPerRowChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const { value, id } = event.target;\n        this.groupsPerRow = parseInt(value);\n        this.fireDidChangeOptions(id);\n    };\n\n    /**\n     * Handle bytes per group changed event.\n     */\n    protected onBytesPerGroupChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n        const { value, id } = event.target;\n        this.bytesPerGroup = parseInt(value);\n        this.fireDidChangeOptions(id);\n    };\n\n    /**\n     * Handle endianness changed event.\n     */\n    protected onEndiannessChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n        const { value, id } = event.target;\n        if (value !== Interfaces.Endianness.Big && value !== Interfaces.Endianness.Little) { return; }\n        this.endianness = value;\n        this.fireDidChangeOptions(id);\n    };\n\n    protected fireDidChangeOptions(targetId?: string): void {\n        this.onOptionsChangedEmitter.fire(targetId);\n    }\n\n    protected fireDidChangeMemory(): void {\n        this.onMemoryChangedEmitter.fire(this.memoryReadResult);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContextMenuRenderer, ReactWidget, Widget } from '@theia/core/lib/browser';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { ThemeChangeEvent } from '@theia/core/lib/common/theme';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { hexStrToUnsignedLong } from '../../common/util';\nimport { MemoryProviderService } from '../memory-provider/memory-provider-service';\nimport { EasilyMappedObject, MemoryHoverRendererService } from '../utils/memory-hover-renderer';\nimport { MWMoreMemorySelect } from '../utils/memory-widget-components';\nimport {\n    Constants, Interfaces, Utils\n} from '../utils/memory-widget-utils';\nimport { VariableDecoration, VariableFinder } from '../utils/memory-widget-variable-utils';\nimport { MemoryOptionsWidget } from './memory-options-widget';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport namespace MemoryTable {\n    export interface WrapperHandlers {\n        onKeyDown?: React.KeyboardEventHandler;\n        onClick?: React.MouseEventHandler;\n        onContextMenu?: React.MouseEventHandler;\n        onMouseMove?: React.MouseEventHandler;\n        onFocus?(e: React.FocusEvent<HTMLDivElement>): any;\n        onBlur?(e: React.FocusEvent<HTMLDivElement>): any;\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n    export interface StylableNodeAttributes {\n        className?: string;\n        style?: React.CSSProperties;\n        variable?: VariableDecoration;\n        title?: string;\n        isHighlighted?: boolean;\n    }\n\n    export interface GroupData {\n        node: React.ReactNode;\n        ascii: string; index: number;\n        variables: VariableDecoration[];\n        isHighlighted?: boolean;\n    }\n    export interface ByteData {\n        node: React.ReactNode;\n        ascii: string; index: number;\n        variables: VariableDecoration[];\n        isHighlighted?: boolean;\n    }\n    export interface ItemData {\n        node: React.ReactNode;\n        content: string;\n        variable?: VariableDecoration;\n        index: number;\n        isHighlighted?: boolean;\n    }\n\n    export interface RowOptions {\n        address: string;\n        groups: React.ReactNode;\n        ascii?: string;\n        variables?: VariableDecoration[];\n        doShowDivider?: boolean;\n        index: number;\n        isHighlighted?: boolean;\n    }\n\n    export const ROW_CLASS = 't-mv-view-row';\n    export const ROW_DIVIDER_CLASS = 't-mv-view-row-highlight';\n    export const ADDRESS_DATA_CLASS = 't-mv-view-address';\n    export const MEMORY_DATA_CLASS = 't-mv-view-data';\n    export const EXTRA_COLUMN_DATA_CLASS = 't-mv-view-code';\n    export const GROUP_SPAN_CLASS = 'byte-group';\n    export const BYTE_SPAN_CLASS = 'single-byte';\n    export const EIGHT_BIT_SPAN_CLASS = 'eight-bits';\n    export const HEADER_LABEL_CONTAINER_CLASS = 't-mv-header-label-container';\n    export const HEADER_LABEL_CLASS = 't-mv-header-label';\n    export const VARIABLE_LABEL_CLASS = 't-mv-variable-label';\n    export const HEADER_ROW_CLASS = 't-mv-header';\n}\n\n@injectable()\nexport class MemoryTableWidget extends ReactWidget {\n    static CONTEXT_MENU = ['memory.view.context.menu'];\n    static ID = 'memory-table-widget';\n\n    @inject(ThemeService) protected readonly themeService: ThemeService;\n    @inject(MemoryOptionsWidget) readonly optionsWidget: MemoryOptionsWidget;\n    @inject(MemoryProviderService) protected readonly memoryProvider: MemoryProviderService;\n    @inject(MemoryHoverRendererService) protected readonly hoverRenderer: MemoryHoverRendererService;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    protected previousBytes: Interfaces.LabeledUint8Array | undefined;\n    protected memory: Interfaces.WidgetMemoryState;\n    protected options: Interfaces.MemoryOptions;\n    protected variableFinder: VariableFinder | undefined;\n    protected deferredScrollContainer = new Deferred<HTMLDivElement>();\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.id = MemoryTableWidget.ID;\n        this.addClass(MemoryTableWidget.ID);\n        this.scrollOptions = { ...this.scrollOptions, suppressScrollX: false };\n        this.toDispose.push(this.optionsWidget.onOptionsChanged(optionId => this.handleOptionChange(optionId)));\n        this.toDispose.push(this.optionsWidget.onMemoryChanged(e => this.handleMemoryChange(e)));\n        this.toDispose.push(this.themeService.onDidColorThemeChange(e => this.handleThemeChange(e)));\n\n        this.getStateAndUpdate();\n    }\n\n    protected handleOptionChange(_id?: string): Promise<void> {\n        this.getStateAndUpdate();\n        return Promise.resolve();\n    }\n\n    override update(): void {\n        super.update();\n        this.updateColumnWidths();\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        this.updateColumnWidths();\n        super.onResize(msg);\n    }\n\n    protected updateColumnWidths = debounce(this.doUpdateColumnWidths.bind(this), Constants.DEBOUNCE_TIME);\n\n    protected doUpdateColumnWidths(): void {\n        setTimeout(() => {\n            const firstTR = this.node.querySelector('tr');\n            const header = this.node.querySelector(`.${MemoryTable.HEADER_ROW_CLASS}`) as HTMLDivElement;\n            if (firstTR && header) {\n                const allTDs = Array.from(firstTR.querySelectorAll('td'));\n                const allSizes = allTDs.map(td => `minmax(max-content, ${td.clientWidth}px)`);\n                header.style.gridTemplateColumns = allSizes.join(' ');\n            }\n        });\n    }\n\n    protected areSameRegion(a: Interfaces.MemoryReadResult, b: Interfaces.MemoryReadResult): boolean {\n        return a.address.equals(b?.address) && a.bytes.length === b?.bytes.length;\n    }\n\n    protected handleMemoryChange(newMemory: Interfaces.MemoryReadResult): void {\n        if (this.areSameRegion(this.memory, newMemory)) {\n            this.previousBytes = this.memory.bytes;\n        } else {\n            this.previousBytes = undefined;\n        }\n        this.getStateAndUpdate();\n    }\n\n    protected handleThemeChange(_themeChange: ThemeChangeEvent): void {\n        this.getStateAndUpdate();\n    }\n\n    protected getState(): void {\n        this.options = this.optionsWidget.options;\n        this.memory = this.optionsWidget.memory;\n        const isHighContrast = this.themeService.getCurrentTheme().type === 'hc';\n        this.variableFinder = this.optionsWidget.options.columnsDisplayed.variables.doRender\n            ? new VariableFinder(this.memory.variables, isHighContrast)\n            : undefined;\n    }\n\n    protected getStateAndUpdate(): void {\n        this.getState();\n        this.update();\n        this.scrollIntoViewIfNecessary();\n    }\n\n    protected scrollIntoViewIfNecessary(): Promise<void> {\n        return new Promise(resolve => setTimeout(() => {\n            this.deferredScrollContainer.promise.then(scrollContainer => {\n                const table = scrollContainer.querySelector('table');\n                if (table && scrollContainer.scrollTop > table.clientHeight) {\n                    const valueToGetInWindow = table.clientHeight - this.node.clientHeight;\n                    const scrollHere = Math.max(valueToGetInWindow, 0);\n                    scrollContainer.scrollTo(scrollContainer.scrollLeft, scrollHere);\n                }\n                this.scrollBar?.update();\n                resolve();\n            });\n        }));\n    }\n\n    protected getWrapperHandlers(): MemoryTable.WrapperHandlers {\n        return { onMouseMove: this.handleTableMouseMove };\n    }\n\n    protected assignScrollContainerRef = (element: HTMLDivElement): void => {\n        this.deferredScrollContainer.resolve(element);\n    };\n\n    override async getScrollContainer(): Promise<HTMLDivElement> {\n        return this.deferredScrollContainer.promise;\n    }\n\n    render(): React.ReactNode {\n        const rows = this.getTableRows();\n        const { onClick, onContextMenu, onFocus, onBlur, onKeyDown, onMouseMove } = this.getWrapperHandlers();\n        const headers: Interfaces.ColumnIDs[] = Object.entries(this.options.columnsDisplayed)\n            .filter(([, { doRender }]) => doRender)\n            .map(([id, { label }]) => ({ label, id }));\n\n        return (\n            <div\n                className={this.getWrapperClass()}\n                onClick={onClick}\n                onContextMenu={onContextMenu}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onKeyDown={onKeyDown}\n                onMouseMove={onMouseMove}\n                role='textbox'\n                tabIndex={0}\n            >\n                <div\n                    className={this.getTableHeaderClass()}\n                    style={this.getTableHeaderStyle(headers.length)}\n                >\n                    {this.getTableHeaders(headers)}\n                </div>\n                <div\n                    className='t-mv-view-container'\n                    style={{ position: 'relative' }}\n                    ref={this.assignScrollContainerRef}\n                >\n                    {this.getBeforeTableContent()}\n                    <table className='t-mv-view'>\n                        <tbody>\n                            {rows}\n                        </tbody>\n                    </table>\n                    {this.getAfterTableContent()}\n                </div>\n                {this.getTableFooter()}\n            </div>\n        );\n    }\n\n    protected getWrapperClass(): string {\n        return `t-mv-memory-container${this.options.isFrozen ? ' frozen' : ''}`;\n    }\n\n    protected getTableHeaderClass(): string {\n        return MemoryTable.HEADER_ROW_CLASS + ' no-select';\n    }\n\n    protected getTableHeaderStyle(numLabels: number): React.CSSProperties {\n        const safePercentage = Math.floor(100 / numLabels);\n        const gridTemplateColumns = ` ${safePercentage}% `.repeat(numLabels);\n        return { gridTemplateColumns };\n    }\n\n    protected getTableHeaders(labels: Interfaces.ColumnIDs[]): React.ReactNode {\n        return labels.map(label => this.getTableHeader(label));\n    }\n\n    protected getTableHeader({ label, id }: Interfaces.ColumnIDs): React.ReactNode {\n        return (\n            <div key={id} className={MemoryTable.HEADER_LABEL_CONTAINER_CLASS}>\n                <span className='t-mv-header-label'>{label}</span>\n            </div>\n        );\n    }\n\n    protected getBeforeTableContent(): React.ReactNode {\n        return (\n            !!this.memory.bytes.length && (<MWMoreMemorySelect\n                options={[128, 256, 512]}\n                direction='above'\n                handler={this.loadMoreMemory}\n            />)\n        );\n    }\n\n    protected getAfterTableContent(): React.ReactNode {\n        return (\n            !!this.memory.bytes.length && (<MWMoreMemorySelect\n                options={[128, 256, 512]}\n                direction='below'\n                handler={this.loadMoreMemory}\n            />)\n        );\n    }\n\n    protected loadMoreMemory = async (options: Interfaces.MoreMemoryOptions): Promise<void> => {\n        const { direction, numBytes } = options;\n        const { address, offset, length } = this.optionsWidget.options;\n        let newOffset = 0;\n        const newLength = length + numBytes;\n        if (direction === 'above') {\n            newOffset = offset - numBytes;\n        }\n        await this.optionsWidget.setAddressAndGo(`${address}`, newOffset, newLength, direction);\n    };\n\n    protected getTableFooter(): React.ReactNode {\n        return undefined;\n    }\n\n    protected getTableRows(): React.ReactNode {\n        return [...this.renderRows()];\n    }\n\n    protected *renderRows(iteratee: Interfaces.LabeledUint8Array = this.memory.bytes): IterableIterator<React.ReactNode> {\n        const bytesPerRow = this.options.bytesPerGroup * this.options.groupsPerRow;\n        let rowsYielded = 0;\n        let groups: React.ReactNode[] = [];\n        let ascii = '';\n        let variables: VariableDecoration[] = [];\n        let isRowHighlighted = false;\n        for (const { node, index, ascii: groupAscii, variables: groupVariables, isHighlighted = false } of this.renderGroups(iteratee)) {\n            groups.push(node);\n            ascii += groupAscii;\n            variables.push(...groupVariables);\n            isRowHighlighted = isRowHighlighted || isHighlighted;\n            if (groups.length === this.options.groupsPerRow || index === iteratee.length - 1) {\n                const rowAddress = this.memory.address.add(bytesPerRow * rowsYielded);\n                const options: MemoryTable.RowOptions = {\n                    address: `0x${rowAddress.toString(16)}`,\n                    doShowDivider: (rowsYielded % 4) === 3,\n                    isHighlighted: isRowHighlighted,\n                    ascii,\n                    groups,\n                    variables,\n                    index,\n                };\n                yield this.renderRow(options);\n                ascii = '';\n                variables = [];\n                groups = [];\n                rowsYielded += 1;\n                isRowHighlighted = false;\n            }\n        }\n    }\n\n    protected renderRow(\n        options: MemoryTable.RowOptions,\n        getRowAttributes: Interfaces.RowDecorator = this.getRowAttributes.bind(this),\n    ): React.ReactNode {\n        const { address, groups } = options;\n        const { className, style, title } = getRowAttributes(options);\n        return (\n            <tr\n                // Add a marker to help visual navigation when scrolling\n                className={className}\n                style={style}\n                title={title}\n                key={address}\n            >\n                <td className={MemoryTable.ADDRESS_DATA_CLASS}>{address}</td>\n                <td className={MemoryTable.MEMORY_DATA_CLASS}>{groups}</td>\n                {this.getExtraColumn(options)}\n            </tr>\n        );\n    }\n\n    protected getRowAttributes(options: Partial<MemoryTable.RowOptions>): Partial<Interfaces.StylableNodeAttributes> {\n        let className = MemoryTable.ROW_CLASS;\n        if (options.doShowDivider) {\n            className += ` ${MemoryTable.ROW_DIVIDER_CLASS}`;\n        }\n        return { className };\n    }\n\n    protected getExtraColumn(options: Pick<MemoryTable.RowOptions, 'ascii' | 'variables'>): React.ReactNode {\n        const { variables } = options;\n        const additionalColumns = [];\n        if (this.options.columnsDisplayed.variables.doRender) {\n            additionalColumns.push(\n                <td className={MemoryTable.EXTRA_COLUMN_DATA_CLASS} key='variables'>\n                    {!!variables?.length && (\n                        <span className='variable-container'>\n                            {variables.map(({ name, color }) => (\n                                <span\n                                    key={name}\n                                    className={MemoryTable.VARIABLE_LABEL_CLASS}\n                                    style={{ color }}\n                                >\n                                    {name}\n                                </span>\n                            ))}\n                        </span>\n                    )}\n                </td>,\n            );\n        }\n        if (this.options.columnsDisplayed.ascii.doRender) {\n            const asciiColumn = this.options.columnsDisplayed.ascii.doRender && <td className={MemoryTable.EXTRA_COLUMN_DATA_CLASS} key='ascii'>{options.ascii}</td>;\n            additionalColumns.push(asciiColumn);\n        }\n        return additionalColumns;\n    }\n\n    protected *renderGroups(iteratee: Interfaces.LabeledUint8Array = this.memory.bytes): IterableIterator<MemoryTable.GroupData> {\n        let bytesInGroup: React.ReactNode[] = [];\n        let ascii = '';\n        let variables: VariableDecoration[] = [];\n        let isGroupHighlighted = false;\n        for (const { node, index, ascii: byteAscii, variables: byteVariables, isHighlighted = false } of this.renderBytes(iteratee)) {\n            this.buildGroupByEndianness(bytesInGroup, node);\n            ascii += byteAscii;\n            variables.push(...byteVariables);\n            isGroupHighlighted = isGroupHighlighted || isHighlighted;\n            if (bytesInGroup.length === this.options.bytesPerGroup || index === iteratee.length - 1) {\n                const itemID = this.memory.address.add(index);\n                yield {\n                    node: <span className='byte-group' key={itemID.toString(16)}>{bytesInGroup}</span>,\n                    ascii,\n                    index,\n                    variables,\n                    isHighlighted: isGroupHighlighted,\n                };\n                bytesInGroup = [];\n                ascii = '';\n                variables = [];\n                isGroupHighlighted = false;\n            }\n        }\n    }\n\n    protected buildGroupByEndianness(oldBytes: React.ReactNode[], newByte: React.ReactNode): void {\n        if (this.options.endianness === Interfaces.Endianness.Big) {\n            oldBytes.push(newByte);\n        } else {\n            oldBytes.unshift(newByte);\n        }\n    }\n\n    protected *renderBytes(iteratee: Interfaces.LabeledUint8Array = this.memory.bytes): IterableIterator<MemoryTable.ByteData> {\n        const itemsPerByte = this.options.byteSize / 8;\n        let currentByte = 0;\n        let chunksInByte: React.ReactNode[] = [];\n        let variables: VariableDecoration[] = [];\n        let isByteHighlighted = false;\n        for (const { node, content, index, variable, isHighlighted = false } of this.renderArrayItems(iteratee)) {\n            chunksInByte.push(node);\n            const numericalValue = parseInt(content, 16);\n            currentByte = (currentByte << 8) + numericalValue;\n            isByteHighlighted = isByteHighlighted || isHighlighted;\n            if (variable?.firstAppearance) {\n                variables.push(variable);\n            }\n            if (chunksInByte.length === itemsPerByte || index === iteratee.length - 1) {\n                const itemID = this.memory.address.add(index);\n                const ascii = this.getASCIIForSingleByte(currentByte);\n                yield {\n                    node: <span className='single-byte' key={itemID.toString(16)}>{chunksInByte}</span>,\n                    ascii,\n                    index,\n                    variables,\n                    isHighlighted: isByteHighlighted,\n                };\n                currentByte = 0;\n                chunksInByte = [];\n                variables = [];\n                isByteHighlighted = false;\n            }\n        }\n    }\n\n    protected getASCIIForSingleByte(byte: number | undefined): string {\n        return typeof byte === 'undefined'\n            ? ' ' : Utils.isPrintableAsAscii(byte) ? String.fromCharCode(byte) : '.';\n    }\n\n    protected *renderArrayItems(\n        iteratee: Interfaces.LabeledUint8Array = this.memory.bytes,\n        getBitAttributes: Interfaces.BitDecorator = this.getBitAttributes.bind(this),\n    ): IterableIterator<MemoryTable.ItemData> {\n        const { address } = this.memory;\n\n        for (let i = 0; i < iteratee.length; i += 1) {\n            const itemID = address.add(i).toString(16);\n            const { content = '', className, style, variable, title, isHighlighted } = getBitAttributes(i, iteratee);\n            const node = (\n                <span\n                    style={style}\n                    key={itemID}\n                    className={className}\n                    data-id={itemID}\n                    title={title}\n                >\n                    {content}\n                </span>\n            );\n            yield {\n                node,\n                content,\n                index: i,\n                variable,\n                isHighlighted,\n            };\n        }\n    }\n\n    protected getBitAttributes(arrayOffset: number, iteratee: Interfaces.LabeledUint8Array): Partial<Interfaces.FullNodeAttributes> {\n        const itemAddress = this.memory.address.add(arrayOffset * 8 / this.options.byteSize);\n        const classNames = [MemoryTable.EIGHT_BIT_SPAN_CLASS];\n        const isChanged = this.previousBytes && iteratee[arrayOffset] !== this.previousBytes[arrayOffset];\n        const variable = this.variableFinder?.getVariableForAddress(itemAddress);\n        if (!this.options.isFrozen) {\n            if (isChanged) {\n                classNames.push('changed');\n            }\n        }\n        return {\n            className: classNames.join(' '),\n            variable,\n            style: { color: variable?.color },\n            content: iteratee[arrayOffset].toString(16).padStart(2, '0')\n        };\n    }\n\n    protected handleTableMouseMove = (e: React.MouseEvent): void => {\n        const { target } = e; // react events can't be put into the debouncer\n        this.debounceHandleMouseTableMove(target);\n    };\n\n    protected debounceHandleMouseTableMove = debounce(this.doHandleTableMouseMove.bind(this), Constants.DEBOUNCE_TIME, { trailing: true });\n\n    protected doHandleTableMouseMove(targetSpan: React.MouseEvent['target']): void {\n        const target = targetSpan instanceof HTMLElement && targetSpan;\n        if (target) {\n            const { x, y } = target.getBoundingClientRect();\n            const anchor = { x: Math.round(x), y: Math.round(y + target.clientHeight) };\n            if (target.classList.contains(MemoryTable.EIGHT_BIT_SPAN_CLASS)) {\n                const properties = this.getHoverForChunk(target);\n                this.hoverRenderer.render(this.node, anchor, properties);\n            } else if (target.classList.contains(MemoryTable.VARIABLE_LABEL_CLASS)) {\n                const properties = this.getHoverForVariable(target);\n                this.hoverRenderer.render(this.node, anchor, properties);\n            } else {\n                this.hoverRenderer.hide();\n            }\n        } else {\n            this.hoverRenderer.hide();\n        }\n    }\n\n    protected getHoverForChunk(span: HTMLElement): EasilyMappedObject | undefined {\n        if (span.classList.contains(MemoryTable.EIGHT_BIT_SPAN_CLASS)) {\n            const parentByteContainer = span.parentElement;\n            if (parentByteContainer?.textContent) {\n                const hex = parentByteContainer.textContent ?? '';\n                const decimal = parseInt(hex, 16);\n                const binary = this.getPaddedBinary(decimal);\n                const UTF8 = String.fromCodePoint(decimal);\n                return { hex, binary, decimal, UTF8 };\n            }\n        }\n        return undefined;\n    }\n\n    protected getPaddedBinary(decimal: number): string {\n        const paddedBinary = decimal.toString(2).padStart(this.options.byteSize, '0');\n        let paddedAndSpacedBinary = '';\n        for (let i = 8; i <= paddedBinary.length; i += 8) {\n            paddedAndSpacedBinary += ` ${paddedBinary.slice(i - 8, i)}`;\n        }\n        return paddedAndSpacedBinary.trim();\n    }\n\n    protected getHoverForVariable(span: HTMLElement): EasilyMappedObject | undefined {\n        const variable = this.variableFinder?.searchForVariable(span.textContent ?? '');\n        if (variable?.type) {\n            return { type: variable.type };\n        }\n        return undefined;\n    }\n\n    protected handleTableRightClick = (e: React.MouseEvent): void => this.doHandleTableRightClick(e);\n\n    protected doHandleTableRightClick(event: React.MouseEvent): void {\n        event.preventDefault();\n        const target = event.target as HTMLElement;\n        if (target.classList?.contains('eight-bits')) {\n            const { right, top } = target.getBoundingClientRect();\n            this.update();\n            event.stopPropagation();\n            this.contextMenuRenderer.render({\n                menuPath: MemoryTableWidget.CONTEXT_MENU,\n                anchor: { x: right, y: top },\n                args: this.getContextMenuArgs(event),\n            });\n        }\n    }\n\n    protected getContextMenuArgs(event: React.MouseEvent): unknown[] {\n        const args: unknown[] = [this];\n        const id = (event.target as HTMLElement).getAttribute('data-id');\n        if (id) {\n            const location = hexStrToUnsignedLong(id);\n            args.push(location);\n            const offset = this.memory.address.multiply(-1).add(location);\n            const cellAddress = this.memory.address.add(offset.multiply(8 / this.options.byteSize));\n            const variableAtLocation = this.variableFinder?.searchForVariable(cellAddress);\n            args.push(variableAtLocation);\n        }\n        return args;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { nls } from '@theia/core';\nimport { BaseWidget, PanelLayout } from '@theia/core/lib/browser';\nimport { Container, inject, injectable, interfaces, postConstruct } from '@theia/core/shared/inversify';\nimport { MemoryWidgetOptions } from '../utils/memory-widget-utils';\nimport { MemoryOptionsWidget } from './memory-options-widget';\nimport { MemoryTableWidget } from './memory-table-widget';\n\n@injectable()\nexport class MemoryWidget<\n    O extends MemoryOptionsWidget = MemoryOptionsWidget,\n    T extends MemoryTableWidget = MemoryTableWidget\n>\n    extends BaseWidget {\n    static readonly ID = 'memory-view-wrapper';\n    static readonly LABEL = nls.localize('theia/memory-inspector/memoryTitle', 'Memory');\n\n    @inject(MemoryWidgetOptions) protected readonly memoryWidgetOptions: MemoryWidgetOptions;\n    @inject(MemoryOptionsWidget) readonly optionsWidget: O;\n    @inject(MemoryTableWidget) readonly tableWidget: T;\n\n    static createWidget<\n        Options extends MemoryOptionsWidget = MemoryOptionsWidget,\n        Table extends MemoryTableWidget = MemoryTableWidget\n    >(\n        parent: interfaces.Container,\n        optionsWidget: interfaces.ServiceIdentifier<Options>,\n        tableWidget: interfaces.ServiceIdentifier<Table>,\n        optionSymbol: interfaces.ServiceIdentifier<MemoryWidgetOptions> = MemoryWidgetOptions,\n        options?: MemoryWidgetOptions,\n    ): MemoryWidget<Options, Table> {\n        const child = MemoryWidget.createContainer(parent, optionsWidget, tableWidget, optionSymbol, options);\n        return child.get(MemoryWidget);\n    }\n\n    static createContainer(\n        parent: interfaces.Container,\n        optionsWidget: interfaces.ServiceIdentifier<MemoryOptionsWidget>,\n        tableWidget: interfaces.ServiceIdentifier<MemoryTableWidget>,\n        optionSymbol: interfaces.ServiceIdentifier<MemoryWidgetOptions | undefined> = MemoryWidgetOptions,\n        options?: MemoryWidgetOptions,\n    ): interfaces.Container {\n        const child = new Container({ defaultScope: 'Singleton' });\n        child.parent = parent;\n        child.bind(optionsWidget).toSelf();\n        child.bind(tableWidget).toSelf();\n        child.bind(MemoryWidgetOptions).toConstantValue(options);\n        if (optionsWidget !== MemoryOptionsWidget) {\n            child.bind(MemoryOptionsWidget).toService(optionsWidget);\n        }\n        if (tableWidget !== MemoryTableWidget) {\n            child.bind(MemoryTableWidget).toService(tableWidget);\n        }\n        if (optionSymbol !== MemoryWidgetOptions) {\n            child.bind(optionSymbol).toConstantValue(options);\n        }\n        child.bind(MemoryWidget).toSelf();\n        return child;\n    }\n\n    static getIdentifier(optionsWidgetID: string): string {\n        return `${MemoryWidget.ID}-${optionsWidgetID}`;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.id = MemoryWidget.getIdentifier(this.memoryWidgetOptions.identifier.toString());\n        this.addClass(MemoryWidget.ID);\n\n        this.title.label = this.optionsWidget.title.label;\n        this.title.caption = this.optionsWidget.title.caption;\n        this.title.iconClass = this.optionsWidget.title.iconClass;\n        this.title.closable = this.optionsWidget.title.closable;\n\n        const layout = this.layout = new PanelLayout();\n        layout.addWidget(this.optionsWidget);\n        layout.addWidget(this.tableWidget);\n\n        this.toDispose.pushAll([\n            this.layout,\n            this.optionsWidget,\n            this.tableWidget,\n        ]);\n\n        this.optionsWidget.title.changed.connect(title => {\n            this.title.label = title.label;\n            this.title.caption = title.caption;\n            this.title.iconClass = title.iconClass;\n        });\n    }\n\n    protected override onActivateRequest(): void {\n        this.optionsWidget.activate();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\n\nexport enum AllOrCustom {\n    All = 'All',\n    Custom = 'Custom'\n}\n\nexport const RegisterFilterService = Symbol('RegisterFilterService');\nexport interface RegisterFilterService {\n    currentFilterLabel: string;\n    filterLabels: string[];\n    setFilter(filterLabel: string): void;\n    shouldDisplayRegister(registerName: string): boolean;\n    currentFilterRegisters(): string[];\n}\nexport const RegisterFilterServiceOptions = Symbol('RegisterFilterServiceOptions');\nexport interface RegisterFilterServiceOptions {\n    [key: string]: string[];\n}\n\n@injectable()\nexport class RegisterFilterServiceImpl implements RegisterFilterService {\n    @inject(RegisterFilterServiceOptions) protected readonly options: RegisterFilterServiceOptions;\n\n    protected filters: Map<string, Set<string> | undefined> = new Map();\n    protected currentFilter: string = AllOrCustom.All;\n\n    get filterLabels(): string[] {\n        return [...this.filters.keys()];\n    }\n\n    get currentFilterLabel(): string {\n        return this.currentFilter;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.filters.set(AllOrCustom.All, undefined);\n        this.filters.set(AllOrCustom.Custom, new Set());\n        for (const [key, values] of Object.entries(this.options)) {\n            this.filters.set(key, new Set(values));\n        }\n    }\n\n    setFilter(filterLabel: string): void {\n        if (this.filters.has(filterLabel)) {\n            this.currentFilter = filterLabel;\n        }\n    }\n\n    shouldDisplayRegister(registerName: string): boolean {\n        const currentFilter = this.filters.get(this.currentFilter);\n        return !currentFilter || currentFilter.has(registerName);\n    }\n\n    currentFilterRegisters(): string[] {\n        const currentFilterRegisters = this.filters.get(this.currentFilter);\n        return currentFilterRegisters ? Array.from(currentFilterRegisters) : [];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable, DisposableCollection, Emitter, nls } from '@theia/core';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { DebugSession, DebugState } from '@theia/debug/lib/browser/debug-session';\nimport { ASCII_TOGGLE_ID, AUTO_UPDATE_TOGGLE_ID, MemoryOptionsWidget } from '../memory-widget/memory-options-widget';\nimport { MWInputWithSelect } from '../utils/memory-widget-components';\nimport { Constants, Interfaces, RegisterWidgetOptions } from '../utils/memory-widget-utils';\nimport { getRegisters, RegisterReadResult } from '../utils/memory-widget-variable-utils';\nimport { MWMultiSelect } from '../utils/multi-select-bar';\nimport { RegisterFilterService } from './register-filter-service';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nexport const EMPTY_REGISTERS: RegisterReadResult = {\n    threadId: undefined,\n    registers: [],\n};\n\nexport const REGISTER_FIELD_ID = 't-mv-register';\nexport const REGISTER_RADIX_ID = 't-mv-radix';\nexport const REGISTER_PRE_SETS_ID = 't-mv-pre-set';\n\nexport interface RegisterOptions extends Interfaces.MemoryOptions {\n    reg: string;\n    noRadixColumnDisplayed: boolean;\n}\n\n@injectable()\nexport class RegisterOptionsWidget extends MemoryOptionsWidget {\n    override iconClass = 'register-view-icon';\n    override lockIconClass = 'register-lock-icon';\n\n    protected readonly LABEL_PREFIX = nls.localize('theia/memory-inspector/register', 'Register');\n\n    protected readonly onRegisterChangedEmitter = new Emitter<[RegisterReadResult, boolean]>();\n    readonly onRegisterChanged = this.onRegisterChangedEmitter.event;\n\n    protected registerReadResult: RegisterReadResult = EMPTY_REGISTERS;\n\n    protected reg: string;\n    protected registerField: HTMLInputElement | undefined;\n    protected registerDisplaySet = new Set();\n    protected registerDisplayAll = true;\n    protected registerFilterUpdate = false;\n    protected registerReadError = nls.localize('theia/memory-inspector/register/readError', 'No Registers currently available.');\n    protected showRegisterError = false;\n    protected noRadixColumnDisplayed = this.noRadixDisplayed();\n    protected override columnsDisplayed: Interfaces.ColumnsDisplayed = {\n        register: {\n            label: nls.localize('theia/memory-inspector/register', 'Register'),\n            doRender: true\n        },\n        hexadecimal: {\n            label: nls.localize('theia/memory-inspector/hexadecimal', 'Hexadecimal'),\n            doRender: true\n        },\n        decimal: {\n            label: nls.localize('theia/memory-inspector/decimal', 'Decimal'),\n            doRender: false\n        },\n        octal: {\n            label: nls.localize('theia/memory-inspector/octal', 'Octal'),\n            doRender: false\n        },\n        binary: {\n            label: nls.localize('theia/memory-inspector/binary', 'Binary'),\n            doRender: false\n        },\n    };\n\n    @inject(RegisterWidgetOptions) protected override readonly memoryWidgetOptions: RegisterWidgetOptions;\n    @inject(RegisterFilterService) protected readonly filterService: RegisterFilterService;\n\n    get registers(): RegisterReadResult {\n        return {\n            ...this.registerReadResult,\n        };\n    }\n\n    override get options(): RegisterOptions {\n        return this.storeState();\n    }\n\n    displayReg(element: string): boolean {\n        return this.registerDisplayAll ||\n            this.registerDisplaySet.has(element);\n    }\n\n    handleRadixRendering(regVal: string, radix: number, _regName?: string): string {\n        // check if too big for integer\n        const bInt = BigInt(regVal);\n        return bInt.toString(radix);\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        this.addClass(MemoryOptionsWidget.ID);\n        this.addClass('reg-options-widget');\n\n        this.title.label = `${this.LABEL_PREFIX} (${this.memoryWidgetOptions.identifier})`;\n        this.title.caption = `${this.LABEL_PREFIX} (${this.memoryWidgetOptions.identifier})`;\n        this.title.iconClass = this.iconClass;\n        this.title.closable = true;\n\n        if (this.memoryWidgetOptions.dynamic !== false) {\n            this.toDispose.push(this.sessionManager.onDidChangeActiveDebugSession(({ current }) => {\n                this.setUpListeners(current);\n            }));\n\n            this.toDispose.push(this.sessionManager.onDidCreateDebugSession(current => {\n                this.setUpListeners(current);\n            }));\n            this.setUpListeners(this.sessionManager.currentSession);\n        }\n        this.toDispose.push(this.onOptionsChanged(() => this.update()));\n\n        this.update();\n    }\n\n    setRegAndUpdate(regName: string): void {\n        this.handleRegFromDebugWidgetSelection(regName);\n    }\n\n    protected override setUpListeners(session?: DebugSession): void {\n        this.sessionListeners.dispose();\n        this.sessionListeners = new DisposableCollection(Disposable.create(() => this.handleActiveSessionChange()));\n        if (session) {\n            this.sessionListeners.push(session.onDidChange(() => this.handleSessionChange()));\n        }\n    }\n\n    protected override handleActiveSessionChange(): void {\n        const isDynamic = this.memoryWidgetOptions.dynamic !== false;\n        if (isDynamic && this.doUpdateAutomatically) {\n            this.registerReadResult = EMPTY_REGISTERS;\n            this.fireDidChangeRegister();\n        }\n    }\n\n    protected override handleSessionChange(): void {\n        const debugState = this.sessionManager.currentSession?.state;\n        if (debugState === DebugState.Inactive) {\n            this.registerReadResult = EMPTY_REGISTERS;\n            this.fireDidChangeRegister();\n        } else if (debugState === DebugState.Stopped) {\n            const isReadyForQuery = !!this.sessionManager.currentSession?.currentFrame;\n            const isDynamic = this.memoryWidgetOptions.dynamic !== false;\n            if (isReadyForQuery && isDynamic && this.doUpdateAutomatically && this.registerReadResult !== EMPTY_REGISTERS) {\n                this.updateRegisterView();\n            }\n        }\n    }\n\n    protected override acceptFocus(): void {\n        if (this.doUpdateAutomatically) {\n            if (this.registerField) {\n                this.registerField.focus();\n                this.registerField.select();\n            }\n        } else {\n            const multiSelectBar = this.node.querySelector('.multi-select-bar') as HTMLDivElement;\n            multiSelectBar?.focus();\n        }\n    }\n\n    protected assignRegisterRef: React.LegacyRef<HTMLInputElement> = reg => {\n        this.registerField = reg ?? undefined;\n    };\n\n    protected setRegFilterFromSelect = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n        if (this.registerField) {\n            this.registerField.value = e.target.value;\n        }\n    };\n\n    protected radixDisplayed(): boolean {\n        const { register, ...radices } = this.columnsDisplayed;\n        for (const val of Object.values(radices)) {\n            if (val['doRender']) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected noRadixDisplayed(): boolean {\n        return !this.radixDisplayed();\n    }\n\n    protected renderRegisterFieldGroup(): React.ReactNode {\n        return (\n            <>\n                <div className='t-mv-group view-group'>\n                    <MWInputWithSelect\n                        id={REGISTER_FIELD_ID}\n                        label={nls.localize('theia/memory-inspector/registers', 'Registers')}\n                        placeholder={nls.localize('theia/memory-inspector/register-widget/filter-placeholder', 'Filter (starts with)')}\n                        onSelectChange={this.setRegFilterFromSelect}\n                        passRef={this.assignRegisterRef}\n                        onKeyDown={this.doRefresh}\n                        options={[...this.recentLocations.values]}\n                        disabled={!this.doUpdateAutomatically}\n                    />\n                    <MWMultiSelect\n                        id={ASCII_TOGGLE_ID}\n                        label={nls.localize('theia/memory-inspector/columns', 'Columns')}\n                        items={this.getOptionalColumns().map(column => ({ ...column, label: column.label.slice(0, 3) }))}\n                        onSelectionChanged={this.handleColumnSelectionChange}\n                    />\n                    <button\n                        type='button'\n                        className='theia-button main view-group-go-button'\n                        onClick={this.doRefresh}\n                        disabled={!this.doUpdateAutomatically}\n                    >\n                        {nls.localizeByDefault('Go')}\n                    </button>\n                </div>\n                <div className={`t-mv-memory-fetch-error${this.showRegisterError ? ' show' : ' hide'}`}>\n                    {this.registerReadError}\n                </div>\n            </>\n        );\n    }\n\n    protected override doHandleColumnSelectionChange(columnLabel: string, doShow: boolean): void {\n        const trueColumnLabel = Object.keys(this.columnsDisplayed).find(key => key.startsWith(columnLabel));\n        if (trueColumnLabel) {\n            super.doHandleColumnSelectionChange(trueColumnLabel, doShow);\n        }\n    }\n\n    protected override getObligatoryColumnIds(): string[] {\n        return ['register'];\n    }\n\n    protected override renderInputContainer(): React.ReactNode {\n        return (\n            <div className='t-mv-settings-container'>\n                <div className='t-mv-wrapper'>\n                    {this.renderToolbar()}\n                    {this.renderRegisterFieldGroup()}\n                </div>\n            </div>);\n    }\n\n    protected handleRegFromDebugWidgetSelection(regName: string): void {\n        this.registerDisplaySet.clear();\n        if (this.registerField) {\n            this.registerField.value = regName;\n            this.registerDisplayAll = false;\n        }\n        this.doUpdateRegisterView();\n    }\n\n    protected override renderToolbar(): React.ReactNode {\n        return (\n            <div className='memory-widget-toolbar'>\n                {this.memoryWidgetOptions.dynamic !== false && (\n                    <div className='memory-widget-auto-updates-container'>\n                        <div\n                            className={`fa fa-${this.doUpdateAutomatically ? 'unlock' : 'lock'}`}\n                            id={AUTO_UPDATE_TOGGLE_ID}\n                            title={this.doUpdateAutomatically ?\n                                nls.localize('theia/memory-inspector/register/freeze', 'Freeze memory view') :\n                                nls.localize('theia/memory-inspector/register/unfreeze', 'Unfreeze memory view')\n                            }\n                            onClick={this.toggleAutoUpdate}\n                            onKeyDown={this.toggleAutoUpdate}\n                            role='button'\n                            tabIndex={0}\n                        />\n                    </div>\n                )}\n                {this.renderEditableTitleField()}\n            </div>\n        );\n    }\n\n    protected validateInputRegs(input: string): void {\n        // identify sequences of alphanumeric characters\n        const searchTexts = input.match(/\\w+/g) ?? [];\n\n        if (searchTexts.length !== 0) {\n            this.registerDisplayAll = false;\n            this.registerDisplaySet.clear();\n            this.recentLocations.add(input);\n            for (const { name } of this.registerReadResult.registers) {\n                if (searchTexts.some(x => name.startsWith(x))) {\n                    this.registerDisplaySet.add(name);\n                }\n            }\n        } else {\n            this.registerDisplayAll = true;\n            this.registerDisplaySet.clear();\n        }\n    }\n\n    protected updateRegisterView = debounce(this.doUpdateRegisterView.bind(this), Constants.DEBOUNCE_TIME, { trailing: true });\n\n    protected async doUpdateRegisterView(): Promise<void> {\n        try {\n            if (!this.registerReadResult.registers || this.registerReadResult.threadId !== this.sessionManager.currentThread?.id) {\n                this.registerReadResult = await this.getRegisters();\n            }\n            this.updateRegDisplayFilter();\n            this.fireDidChangeRegister();\n            this.doShowRegisterErrors(true);\n        } catch (err) {\n            this.registerReadError = nls.localize('theia/memory-inspector/registerReadError', 'There was an error fetching registers.');\n            console.error('Failed to read registers', err);\n            this.doShowRegisterErrors();\n        } finally {\n            this.registerFilterUpdate = false;\n            this.update();\n        }\n    }\n\n    protected updateRegDisplayFilter(): void {\n        if (this.registerField) {\n            if (this.registerField.value.length === 0) {\n                this.registerDisplayAll = true;\n            } else {\n                this.validateInputRegs(this.registerField.value);\n            }\n        }\n    }\n\n    protected override doRefresh = (event: React.KeyboardEvent<HTMLInputElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        if ('key' in event && event.key !== 'Enter') {\n            return;\n        }\n        this.registerFilterUpdate = true;\n        this.updateRegisterView();\n    };\n\n    protected async getRegisters(): Promise<RegisterReadResult> {\n        const regResult = await getRegisters(this.sessionManager.currentSession);\n        const threadResult = this.sessionManager.currentSession?.currentThread?.id;\n        return { threadId: threadResult, registers: regResult };\n    }\n\n    protected fireDidChangeRegister(): void {\n        this.onRegisterChangedEmitter.fire([this.registerReadResult, this.registerFilterUpdate]);\n    }\n\n    override storeState(): RegisterOptions {\n        return {\n            ...super.storeState(),\n            reg: this.registerField?.value ?? this.reg,\n            noRadixColumnDisplayed: this.noRadixDisplayed(),\n        };\n    }\n\n    override restoreState(oldState: RegisterOptions): void {\n        this.reg = oldState.reg ?? this.reg;\n        this.noRadixColumnDisplayed = oldState.noRadixColumnDisplayed;\n    }\n\n    protected doShowRegisterErrors = (doClearError = false): void => {\n        if (this.errorTimeout !== undefined) {\n            clearTimeout(this.errorTimeout);\n        }\n        if (doClearError) {\n            this.showRegisterError = false;\n            this.update();\n            this.errorTimeout = undefined;\n            return;\n        }\n        this.showRegisterError = true;\n        this.update();\n        this.errorTimeout = setTimeout(() => {\n            this.showRegisterError = false;\n            this.update();\n            this.errorTimeout = undefined;\n        }, Constants.ERROR_TIMEOUT);\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Key, KeyCode } from '@theia/core/lib/browser';\nimport { inject } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { DebugVariable } from '@theia/debug/lib/browser/console/debug-console-items';\nimport { EMPTY_MEMORY } from '../memory-widget/memory-options-widget';\nimport { MemoryTable, MemoryTableWidget } from '../memory-widget/memory-table-widget';\nimport { Interfaces } from '../utils/memory-widget-utils';\nimport { RegisterReadResult } from '../utils/memory-widget-variable-utils';\nimport { RegisterOptions, RegisterOptionsWidget } from './register-options-widget';\n\nexport namespace RegisterTable {\n\n    export const ROW_CLASS = 't-mv-view-row';\n    export const ROW_DIVIDER_CLASS = 't-mv-view-row-highlight';\n    export const REGISTER_NAME_CLASS = 't-mv-view-address';\n    export const REGISTER_DATA_CLASS = 't-mv-view-data';\n    export const EXTRA_COLUMN_DATA_CLASS = 't-mv-view-code';\n    export const HEADER_ROW_CLASS = 't-mv-header';\n\n    export interface RowOptions {\n        regName: string;\n        regVal: string;\n        hexadecimal?: string;\n        decimal?: string;\n        octal?: string;\n        binary?: string;\n        doShowDivider?: boolean;\n        isChanged?: boolean;\n    }\n\n    export interface StylableNodeAttributes {\n        className?: string;\n        style?: React.CSSProperties;\n        title?: string;\n        isChanged?: boolean;\n    }\n\n    export interface RowDecorator {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]): Partial<StylableNodeAttributes>;\n    }\n}\n\nexport class RegisterTableWidget extends MemoryTableWidget {\n    static override CONTEXT_MENU = ['register.view.context.menu'];\n    static override ID = 'register-table-widget';\n\n    @inject(RegisterOptionsWidget) override readonly optionsWidget: RegisterOptionsWidget;\n\n    protected readonly registerNotSaved = '<not saved>';\n    protected registers: RegisterReadResult;\n    protected previousRegisters: RegisterReadResult | undefined;\n    protected override options: RegisterOptions;\n    protected override memory: Interfaces.WidgetMemoryState = { ...EMPTY_MEMORY, variables: [] };\n\n    protected override async doInit(): Promise<void> {\n        this.id = RegisterTableWidget.ID;\n        this.addClass(RegisterTableWidget.ID);\n        this.scrollOptions = { ...this.scrollOptions, suppressScrollX: false };\n        this.toDispose.push(this.optionsWidget.onOptionsChanged(optionId => this.handleOptionChange(optionId)));\n        this.toDispose.push(this.optionsWidget.onRegisterChanged(e => this.handleRegisterChange(e)));\n        this.toDispose.push(this.themeService.onDidColorThemeChange(e => this.handleThemeChange(e)));\n\n        this.getStateAndUpdate();\n    }\n\n    handleSetValue(dVar: DebugVariable | undefined): void {\n        if (dVar) {\n            dVar.open();\n        }\n    }\n\n    protected handleRegisterChange(newRegister: [RegisterReadResult, boolean]): void {\n        const regResult = newRegister[0];\n        const updatePrevRegs = !newRegister[1];\n        if (this.registers.threadId !== regResult.threadId) {\n            // if not same thread Id, dont highlighting register changes\n            this.previousRegisters = undefined;\n        } else {\n            if (updatePrevRegs) {\n                this.previousRegisters = this.registers;\n            }\n        }\n        this.getStateAndUpdate();\n    }\n\n    protected override getState(): void {\n        this.options = this.optionsWidget.options;\n        this.registers = this.optionsWidget.registers;\n    }\n\n    protected override getTableRows(): React.ReactNode {\n        return [...this.renderRegRows()];\n    }\n\n    protected *renderRegRows(result: RegisterReadResult = this.registers): IterableIterator<React.ReactNode> {\n        let rowsYielded = 0;\n        // For each row...\n        for (const reg of result.registers) {\n            if (this.optionsWidget.displayReg(reg.name)) {\n                const notSaved = reg.value === this.registerNotSaved;\n                const isChanged = this.previousRegisters && reg.value !== this.getPrevRegVal(reg.name, this.previousRegisters);\n                const options: RegisterTable.RowOptions = {\n                    regName: reg.name,\n                    regVal: reg.value,\n                    hexadecimal: notSaved ? reg.value : this.optionsWidget.handleRadixRendering(reg.value, 16, reg.name),\n                    decimal: notSaved ? reg.value : this.optionsWidget.handleRadixRendering(reg.value, 10),\n                    octal: notSaved ? reg.value : this.optionsWidget.handleRadixRendering(reg.value, 8),\n                    binary: notSaved ? reg.value : this.optionsWidget.handleRadixRendering(reg.value, 2, reg.name),\n                    doShowDivider: (rowsYielded % 4) === 3,\n                    isChanged,\n                };\n                yield this.renderRegRow(options);\n                rowsYielded += 1;\n            }\n        }\n    }\n\n    protected getPrevRegVal(regName: string, inRegs: RegisterReadResult): string | undefined {\n        return inRegs.registers.find(element => element.name === regName)?.value;\n    }\n\n    protected renderRegRow(\n        options: RegisterTable.RowOptions,\n        getRowAttributes: RegisterTable.RowDecorator = this.getRowAttributes.bind(this),\n    ): React.ReactNode {\n        const { regName } = options;\n        const { className, style, title } = getRowAttributes(options);\n        return (\n            <tr\n                // Add a marker to help visual navigation when scrolling\n                className={className}\n                style={style}\n                title={title}\n                key={regName}\n                data-id={regName}\n                data-value={options.decimal ?? 'none'}\n                tabIndex={0}\n                onKeyDown={this.handleRowKeyDown}\n                onContextMenu={this.options.isFrozen ? undefined : this.handleTableRightClick}\n                onDoubleClick={this.options.isFrozen ? undefined : this.openDebugVariableByCurrentTarget}\n            >\n                <td className={RegisterTable.REGISTER_NAME_CLASS}>{regName}</td>\n                {this.getExtraRegColumn(options)}\n            </tr>\n        );\n    }\n\n    protected override getRowAttributes(options: Partial<RegisterTable.RowOptions>): Partial<RegisterTable.StylableNodeAttributes> {\n        let className = RegisterTable.ROW_CLASS;\n        if (options.doShowDivider) {\n            className += ` ${RegisterTable.ROW_DIVIDER_CLASS}`;\n        }\n        if (options.isChanged) {\n            // use the eight-bits change CSS class\n            className += ' eight-bits changed';\n        }\n        return { className };\n    }\n\n    protected getExtraRegColumn(options: Pick<RegisterTable.RowOptions, 'hexadecimal' | 'decimal' | 'octal' | 'binary'>): React.ReactNode[] {\n        const additionalColumns = [];\n        if (this.options.columnsDisplayed.hexadecimal.doRender) {\n            additionalColumns.push(<td className={RegisterTable.EXTRA_COLUMN_DATA_CLASS} key='hexadecimal'>{options.hexadecimal}</td>);\n        }\n        if (this.options.columnsDisplayed.decimal.doRender) {\n            additionalColumns.push(<td className={RegisterTable.EXTRA_COLUMN_DATA_CLASS} key='decimal'>{options.decimal}</td>);\n        }\n        if (this.options.columnsDisplayed.octal.doRender) {\n            additionalColumns.push(<td className={RegisterTable.EXTRA_COLUMN_DATA_CLASS} key='octal'>{options.octal}</td>);\n        }\n        if (this.options.columnsDisplayed.binary.doRender) {\n            additionalColumns.push(<td className={RegisterTable.EXTRA_COLUMN_DATA_CLASS} key='binary'>{options.binary}</td>);\n        }\n\n        return additionalColumns;\n    }\n\n    protected override getWrapperHandlers(): MemoryTable.WrapperHandlers {\n        return this.options.isFrozen || this.options.noRadixColumnDisplayed\n            ? super.getWrapperHandlers()\n            : {\n                onMouseMove: this.handleTableMouseMove,\n                onContextMenu: this.handleTableRightClick,\n            };\n    }\n\n    protected override doHandleTableMouseMove(targetElement: React.MouseEvent['target']): void {\n        const tempTarget = targetElement as HTMLElement;\n        const target = tempTarget.parentElement?.tagName === 'TR' ? tempTarget.parentElement : tempTarget;\n        if (target.tagName === 'TR') {\n            const { x, y } = target.getBoundingClientRect();\n            const anchor = { x: Math.round(x), y: Math.round(y + target.clientHeight) };\n            const value = Number(target.getAttribute('data-value'));\n            if (!isNaN(value)) {\n                const register = target.getAttribute('data-id') as string;\n                const properties = {\n                    register,\n                    hex: `0x${value.toString(16)}`,\n                    binary: `0b${value.toString(2)}`,\n                    decimal: value.toString(10),\n                    octal: `0o${value.toString(8)}`,\n                };\n                return this.hoverRenderer.render(this.node, anchor, properties);\n            }\n        }\n        return this.hoverRenderer.hide();\n    }\n\n    protected handleRowKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n        const keyCode = KeyCode.createKeyCode(event.nativeEvent).key?.keyCode;\n        switch (keyCode) {\n            case Key.ENTER.keyCode:\n                this.openDebugVariableByCurrentTarget(event);\n                break;\n            default:\n                break;\n        }\n    };\n\n    protected openDebugVariableByCurrentTarget = (event: React.KeyboardEvent<HTMLElement> | React.MouseEvent<HTMLElement>): void => {\n        this.openDebugVariableByDataId(event.currentTarget);\n    };\n\n    protected openDebugVariableByDataId(element: HTMLElement): void {\n        const registerName = element.getAttribute('data-id');\n        if (registerName) {\n            this.openDebugVariableByName(registerName);\n        }\n    }\n\n    protected openDebugVariableByName(registerName: string): void {\n        const debugVariable = this.registers.registers.find(element => element.name === registerName);\n        this.handleSetValue(debugVariable);\n    }\n\n    protected override doHandleTableRightClick(event: React.MouseEvent): void {\n        event.preventDefault();\n        const curTarget = event.currentTarget as HTMLElement;\n        if (curTarget.tagName === 'TR') {\n            this.update();\n            event.stopPropagation();\n            this.contextMenuRenderer.render({\n                menuPath: RegisterTableWidget.CONTEXT_MENU,\n                anchor: event.nativeEvent,\n                args: this.getContextMenuArgs(event),\n            });\n        }\n    }\n\n    protected override getContextMenuArgs(event: React.MouseEvent): unknown[] {\n        const args: unknown[] = [this];\n        const regName = (event.currentTarget as HTMLElement).getAttribute('data-id');\n        if (regName) {\n            const dVar = this.registers.registers.find(element => element.name === regName);\n            args.push(dVar);\n        }\n        return args;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { nls } from '@theia/core';\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { MemoryOptionsWidget } from '../memory-widget/memory-options-widget';\nimport { MemoryTableWidget } from '../memory-widget/memory-table-widget';\nimport { MemoryWidget } from '../memory-widget/memory-widget';\nimport { MemoryWidgetOptions } from '../utils/memory-widget-utils';\nimport { RegisterFilterService, RegisterFilterServiceImpl, RegisterFilterServiceOptions } from './register-filter-service';\nimport { RegisterOptionsWidget } from './register-options-widget';\nimport { RegisterTableWidget } from './register-table-widget';\n\nexport type RegisterWidget = MemoryWidget<RegisterOptionsWidget, RegisterTableWidget>;\nexport namespace RegisterWidget {\n    export const ID = 'register-view-options-widget';\n    export const LABEL = nls.localize('theia/memory-inspector/register', 'Register');\n    export const is = (widget: MemoryWidget): boolean => widget.optionsWidget instanceof RegisterOptionsWidget;\n\n    export const createContainer = (\n        parent: interfaces.Container,\n        optionsWidget: interfaces.ServiceIdentifier<MemoryOptionsWidget>,\n        tableWidget: interfaces.ServiceIdentifier<MemoryTableWidget>,\n        optionSymbol: interfaces.ServiceIdentifier<MemoryWidgetOptions | undefined> = MemoryWidgetOptions,\n        options?: MemoryWidgetOptions,\n    ): interfaces.Container => {\n        const child = MemoryWidget.createContainer(parent, optionsWidget, tableWidget, optionSymbol, options);\n        child.bind(RegisterFilterService).to(RegisterFilterServiceImpl).inSingletonScope();\n        child.bind(RegisterFilterServiceOptions).toConstantValue({});\n        return child;\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Command } from '@theia/core';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const MemoryCommand: Command = { id: 'memory-inspector-command' };\nexport const MemoryCategory = nls.localize('theia/memory-inspector/memoryCategory', 'Memory Inspector');\n\nexport const ViewVariableInMemoryCommand: Command = {\n    id: 'view-variable-in-memory',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/viewVariable', 'Show Variable in Memory Inspector'),\n};\n\nexport const ViewVariableInRegisterViewCommand: Command = {\n    id: 'view-variable-in-register-view',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/showRegister', 'Show Register in Memory Inspector'),\n};\n\nexport const ResetModifiedCellCommand: Command = {\n    id: 'reset-modified-cell',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/resetValue', 'Reset Value'),\n};\n\nexport const CreateNewMemoryViewCommand: Command = {\n    id: 'create-new-memory-view',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/createNewMemory', 'Create New Memory Inspector'),\n    iconClass: 'memory-view-icon toolbar',\n};\n\nexport const FollowPointerTableCommand: Command = {\n    id: 'follow-pointer-table',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/followPointer', 'Follow Pointer'),\n};\n\nexport const FollowPointerDebugCommand: Command = {\n    id: 'follow-pointer-debug',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/followPointerMemory', 'Follow Pointer in Memory Inspector'),\n};\n\nexport const CreateNewRegisterViewCommand: Command = {\n    id: 'create-new-register-view',\n    category: MemoryCategory,\n    label: nls.localize('theia/memory-inspector/command/createNewRegisterView', 'Create New Register View'),\n    iconClass: 'register-view-icon toolbar',\n};\n\nexport const RegisterSetVariableCommand: Command = {\n    id: 'register-set-variable-value',\n    category: MemoryCategory,\n    label: nls.localizeByDefault('Set Value')\n};\n\nexport const ToggleDiffSelectWidgetVisibilityCommand: Command = {\n    id: 'toggle-diff-select-visibility',\n    iconClass: 'codicon codicon-git-compare',\n};\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable } from '@theia/core';\nimport { Anchor } from '@theia/core/lib/browser';\nimport { injectable } from '@theia/core/shared/inversify';\n\nexport interface EasilyMappedObject {\n    [key: string]: string | number;\n}\n\n@injectable()\nexport class MemoryHoverRendererService implements Disposable {\n    protected readonly container: HTMLDivElement;\n    protected isShown = false;\n    protected currentRenderContainer: HTMLElement;\n\n    constructor() {\n        this.container = document.createElement('div');\n        this.container.classList.add('t-mv-hover', 'hidden');\n        document.body.appendChild(this.container);\n    }\n\n    render(container: HTMLElement, anchor: Anchor, properties?: EasilyMappedObject): void {\n        this.clearAll();\n        if (!this.isShown) {\n            document.addEventListener('mousemove', this.closeIfHoverOff);\n            this.currentRenderContainer = container;\n        }\n\n        if (properties) {\n            for (const [key, value] of Object.entries(properties)) {\n                const label = key.toLowerCase().replace(/[\\W]/g, '-');\n                const keySpan = document.createElement('span');\n                keySpan.classList.add('t-mv-hover-key', label);\n                keySpan.textContent = `${key}:`;\n                const valueSpan = document.createElement('span');\n                valueSpan.classList.add('t-mv-hover-value', label);\n                // stringify as decimal number by default.\n                valueSpan.textContent = value.toString(10);\n                this.container.appendChild(keySpan);\n                this.container.appendChild(valueSpan);\n            }\n        }\n\n        if (this.container.children.length) {\n            this.show(anchor);\n            this.isShown = true;\n        } else {\n            this.hide();\n        }\n    }\n\n    hide(): void {\n        if (this.isShown) {\n            document.removeEventListener('mousemove', this.closeIfHoverOff);\n            this.container.classList.add('hidden');\n            this.isShown = false;\n        }\n    }\n\n    show({ x, y }: Anchor): void {\n        this.container.classList.remove('hidden');\n        this.container.style.top = `${y}px`;\n        this.container.style.left = `${x}px`;\n        setTimeout(() => this.checkNotOffScreen());\n    }\n\n    protected checkNotOffScreen(): void {\n        const left = parseInt((this.container.style.left ?? '').replace('px', ''));\n        const width = this.container.clientWidth;\n        const overflow = left + width - document.body.clientWidth;\n        if (overflow > 0) {\n            const safeLeft = Math.round(left - overflow);\n            this.container.style.left = `${safeLeft}px`;\n        }\n    }\n\n    protected clearAll(): void {\n        let toRemove = this.container.lastChild;\n        while (toRemove) {\n            this.container.removeChild(toRemove);\n            toRemove = this.container.lastChild;\n        }\n    }\n\n    protected closeIfHoverOff = (e: MouseEvent): void => {\n        const { target } = e;\n        if (!(target instanceof HTMLElement)) {\n            return;\n        }\n        if (!this.currentRenderContainer.contains(target) && !this.container.contains(target)) {\n            this.hide();\n        }\n    };\n\n    dispose(): void {\n        this.container.remove();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/*\n* Utility for storing and sorting an array of most recently visited memory locations\n*/\ninterface RecentsOptions {\n    maxValues?: number;\n}\n\nexport class Recents {\n    protected maxValues: number;\n    protected _values: string[] = [];\n    get values(): string[] {\n        return this._values;\n    }\n\n    constructor(initialValues?: string[], opts?: RecentsOptions) {\n        this.maxValues = opts?.maxValues ?? 10;\n        if (initialValues) {\n            if (initialValues.length <= this.maxValues) {\n                this._values = initialValues;\n                return;\n            }\n            console.error('Initial values length is greater than allowed length, resetting to empty array');\n        }\n        this._values = [];\n    }\n\n    add(locationString: string): void {\n        const indexOf = this.has(locationString);\n        if (indexOf > -1) {\n            this._values.splice(indexOf, 1);\n        } else {\n            if (this._values.length === this.maxValues) {\n                this._values.shift();\n            }\n        }\n        this._values.push(locationString);\n    }\n\n    has(locationString: string): number {\n        return this._values.indexOf(locationString);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Key, KeyCode } from '@theia/core/lib/browser';\nimport * as React from '@theia/core/shared/react';\nimport { Interfaces } from './memory-widget-utils';\n\nexport interface MWLabelProps { id: string; label: string; disabled?: boolean; classNames?: string[] }\n\nexport const MWLabel: React.FC<MWLabelProps> = ({ id, label, disabled, classNames }) => {\n    const additionalClassNames = classNames ? classNames.join(' ') : '';\n    return <label htmlFor={id} className={`t-mv-label theia-header no-select ${additionalClassNames}${disabled ? ' disabled' : ''}`}>{label}</label>;\n};\n\nexport interface InputProps<T extends HTMLElement = HTMLElement> {\n    id: string;\n    label: string;\n    defaultValue?: string;\n    value?: string;\n    onChange?: React.EventHandler<React.ChangeEvent>;\n    onKeyDown?: React.EventHandler<React.KeyboardEvent<HTMLInputElement>>;\n    passRef?: React.ClassAttributes<T>['ref'];\n    title?: string;\n    disabled?: boolean;\n    placeholder?: string;\n}\n\nexport const MWInput: React.FC<InputProps<HTMLInputElement>> = ({ id, label, passRef, defaultValue, onChange, title, onKeyDown, disabled }) => (\n    <>\n        <MWLabel id={id} label={label} disabled={disabled} />\n        <input\n            tabIndex={0}\n            type='text'\n            ref={passRef}\n            id={id}\n            className='theia-input t-mv-input'\n            defaultValue={defaultValue}\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            title={title}\n            spellCheck={false}\n            disabled={disabled}\n        />\n    </>\n);\n\nexport interface LabelAndSelectProps extends InputProps<HTMLSelectElement> {\n    options: string[];\n}\n\nexport const MWSelect: React.FC<LabelAndSelectProps> = ({ id, label, options, passRef, onChange, title, value, disabled }) => (\n    <>\n        <MWLabel id={id} label={label} disabled={disabled} />\n        <select\n            tabIndex={0}\n            ref={passRef}\n            id={id}\n            className='theia-select t-mv-select'\n            value={value}\n            onChange={onChange}\n            title={title}\n            disabled={disabled}\n        >\n            {options.map(option => <option value={option} key={option}>{option}</option>)}\n        </select>\n    </>\n);\n\nexport interface LabelAndSelectWithNameProps extends InputProps<HTMLSelectElement> {\n    options: Array<[string, string]>;\n}\n\nexport const MWSelectWithName: React.FC<LabelAndSelectWithNameProps> = ({ id, label, options, passRef, onChange, title, value, disabled }) => (\n    <>\n        <MWLabel id={id} label={label} disabled={disabled} />\n        <select\n            tabIndex={0}\n            ref={passRef}\n            id={id}\n            className='theia-select'\n            value={value}\n            onChange={onChange}\n            title={title}\n            disabled={disabled}\n        >\n            {options.map(option => <option value={option[0]} key={option[0]}>{option[1]}</option>)}\n        </select>\n    </>\n);\n\nexport interface InputWithSelectProps<T extends HTMLElement> extends InputProps<T> {\n    options: string[];\n    onSelectChange?(e: React.ChangeEvent): void;\n    onInputChange?(e: React.ChangeEvent<HTMLInputElement>): void;\n}\nexport const MWInputWithSelect: React.FC<InputWithSelectProps<HTMLInputElement>> = (\n    { id, label, passRef, onKeyDown, title, options, onSelectChange, defaultValue, disabled, placeholder },\n) => (\n    <>\n        <MWLabel id={id} label={label} disabled={disabled} />\n        <div className='mw-input-select'>\n            <input\n                tabIndex={0}\n                type='text'\n                ref={passRef}\n                id={id}\n                className='theia-input t-mv-input'\n                defaultValue={defaultValue}\n                onKeyDown={onKeyDown}\n                title={title}\n                spellCheck={false}\n                disabled={disabled}\n                placeholder={placeholder}\n            />\n            <select\n                className='theia-select t-mv-select'\n                onChange={onSelectChange}\n                disabled={disabled || (options.length === 0)}\n            >\n                {options.reverse().map(option => <option key={`'mw-input-select'-${id}-${option}`} value={option}>{option}</option>)}\n            </select>\n        </div>\n    </>\n);\n\nexport interface MoreMemoryProps {\n    options: number[];\n    direction: 'above' | 'below';\n    handler(opts: Interfaces.MoreMemoryOptions): void;\n}\n\nexport const MWMoreMemorySelect: React.FC<MoreMemoryProps> = ({ options, handler, direction }) => {\n    const [numBytes, setNumBytes] = React.useState<number>(options[0]);\n    const containerRef = React.createRef<HTMLDivElement>();\n    const onSelectChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n        e.stopPropagation();\n        const { value } = e.currentTarget;\n        setNumBytes(parseInt(value));\n    };\n\n    const loadMoreMemory = (e: React.MouseEvent | React.KeyboardEvent): void => {\n        containerRef.current?.blur();\n        const doHandle = !('key' in e) || KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.ENTER.keyCode;\n        if (doHandle) {\n            handler({\n                numBytes,\n                direction,\n            });\n        }\n    };\n\n    return (\n        <div\n            className='mw-more-memory-select'\n            tabIndex={0}\n            role='button'\n            onClick={loadMoreMemory}\n            onKeyDown={loadMoreMemory}\n            ref={containerRef}\n        >\n            <div className='mw-more-memory-select-top no-select'>\n                Load\n                <select\n                    className='theia-select'\n                    onChange={onSelectChange}\n                    tabIndex={0}\n                >\n                    {options.map(option => (\n                        <option\n                            key={`mw-more-memory-select-${option}`}\n                            value={option}\n                        >\n                            {option}\n                        </option>))}\n                </select>\n                {`more bytes ${direction}`}\n            </div>\n        </div>\n    );\n};\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Disposable, DisposableCollection, Emitter, MessageService } from '@theia/core';\nimport { ApplicationShell, OpenViewArguments, WidgetManager } from '@theia/core/lib/browser';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { MemoryDiffTableWidget, MemoryDiffWidget } from '../diff-widget/memory-diff-table-widget';\nimport { MemoryWidget } from '../memory-widget/memory-widget';\nimport { RegisterWidget } from '../register-widget/register-widget-types';\nimport { MemoryDiffWidgetData, MemoryWidgetOptions } from './memory-widget-utils';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { EditableMemoryWidget } from '../editable-widget/memory-editable-table-widget';\n\n@injectable()\nexport class MemoryWidgetManager implements Disposable {\n    protected createdWidgetCount = 0;\n    protected widgetDisplayId = 0;\n    protected readonly toDispose = new DisposableCollection();\n\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    protected readonly onNewWidgetCreated = new Emitter<MemoryWidget>();\n    readonly onDidCreateNewWidget = this.onNewWidgetCreated.event;\n\n    protected readonly onSelectedWidgetChanged = new Emitter<MemoryWidget | undefined>();\n    readonly onDidChangeSelectedWidget = this.onSelectedWidgetChanged.event;\n\n    protected readonly onChangedEmitter = new Emitter<void>();\n    readonly onChanged = this.onChangedEmitter.event;\n\n    protected readonly _availableWidgets = new Map<string, MemoryWidget>();\n    protected _focusedWidget: MemoryWidget | undefined;\n    protected _canCompare = false;\n\n    get availableWidgets(): MemoryWidget[] {\n        return Array.from(this._availableWidgets.values());\n    }\n\n    get canCompare(): boolean {\n        return this._canCompare;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.pushAll([\n            this.shell.onDidChangeActiveWidget(({ newValue }) => {\n                if (newValue instanceof MemoryWidget) {\n                    this._focusedWidget = newValue;\n                }\n            }),\n            this.widgetManager.onDidCreateWidget(e => {\n                const { widget } = e;\n                if (widget instanceof MemoryWidget) {\n                    this._availableWidgets.set(widget.id, widget);\n                    this.toDispose.push(widget.onDidDispose(() => {\n                        this._availableWidgets.delete(widget.id);\n                        if (widget === this._focusedWidget) {\n                            this.focusedWidget = undefined;\n                        }\n                        this.onChangedEmitter.fire();\n                    }));\n                }\n            }),\n            this.onChanged(() => this.setCanCompare()),\n            this.onNewWidgetCreated,\n            this.onChangedEmitter,\n            this.onSelectedWidgetChanged,\n        ]);\n    }\n\n    get focusedWidget(): MemoryWidget | undefined {\n        return this._focusedWidget ?? this._availableWidgets.values().next().value;\n    }\n\n    set focusedWidget(title: MemoryWidget | undefined) {\n        this._focusedWidget = title;\n        this.onSelectedWidgetChanged.fire(title);\n    }\n\n    protected setCanCompare(): void {\n        this._canCompare = this.availableWidgets.filter(widget => !RegisterWidget.is(widget) && !MemoryDiffWidget.is(widget)).length > 1;\n    }\n\n    async createNewMemoryWidget<T extends MemoryWidget>(kind: 'register' | 'memory' | 'writable' | string = 'memory'): Promise<T> {\n        this.widgetDisplayId = this._availableWidgets.size !== 0 ? this.widgetDisplayId + 1 : 1;\n        const widget = await this.getWidgetOfKind<T>(kind);\n        this._availableWidgets.set(widget.id, widget);\n        widget.title.changed.connect(() => this.onChangedEmitter.fire());\n        widget.activate();\n        this.fireNewWidget(widget);\n        return widget;\n    }\n\n    protected getWidgetOfKind<T extends MemoryWidget>(kind: string): Promise<T> {\n        const widgetId = this.getWidgetIdForKind(kind);\n        const options = this.getWidgetOptionsForId(widgetId);\n        return this.widgetManager.getOrCreateWidget<T>(widgetId, options);\n    }\n\n    protected getWidgetIdForKind(kind: string): string {\n        switch (kind) {\n            case 'register':\n            case RegisterWidget.ID:\n                return RegisterWidget.ID;\n            case 'writable':\n            case EditableMemoryWidget.ID:\n                return EditableMemoryWidget.ID;\n            default:\n                return MemoryWidget.ID;\n        }\n    }\n\n    protected getWidgetOptionsForId(widgetId: string): MemoryWidgetOptions {\n        return { identifier: this.createdWidgetCount += 1, displayId: this.widgetDisplayId };\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected fireNewWidget(widget: MemoryWidget): void {\n        this.onNewWidgetCreated.fire(widget);\n        this.onChangedEmitter.fire();\n    }\n\n    async doDiff(options: Omit<MemoryDiffWidgetData, 'dynamic' | 'identifier'>): Promise<MemoryDiffWidget | undefined> {\n        if (options.beforeBytes.length === 0) {\n            // eslint-disable-next-line max-len\n            const beforeBytesMessage = nls.localize('theia/memory-inspector/utils/bytesMessage', 'You must load memory in both widgets you would like to compare. {0} has no memory loaded.', options.titles[0]);\n            this.messageService.warn(beforeBytesMessage);\n            return undefined;\n        } else if (options.afterBytes.length === 0) {\n            // eslint-disable-next-line max-len\n            const afterBytesMessage = nls.localize('theia/memory-inspector/utils/afterBytes', 'You must load memory in both widgets you would like to compare. {0} has no memory loaded.', options.titles[1]);\n            this.messageService.warn(afterBytesMessage);\n            return undefined;\n        }\n\n        const fullOptions: MemoryDiffWidgetData = { ...options, dynamic: false, identifier: options.titles.join('-') };\n\n        const existingWidget = this._availableWidgets.get(MemoryWidget.getIdentifier(fullOptions.identifier.toString())) as MemoryDiffWidget;\n\n        if (existingWidget && existingWidget.tableWidget instanceof MemoryDiffTableWidget) {\n            existingWidget.tableWidget.updateDiffData(options);\n        }\n\n        const widget = existingWidget ?? await this.widgetManager\n            .getOrCreateWidget<MemoryDiffWidget>(\n                MemoryDiffWidget.ID,\n                { ...options, dynamic: false, identifier: options.titles.join('-') },\n            );\n\n        const tabBar = this.shell.getTabBarFor(widget);\n        if (!tabBar) {\n            // The widget is not attached yet, so add it to the shell\n            const widgetArgs: OpenViewArguments = {\n                area: 'main',\n            };\n            await this.shell.addWidget(widget, widgetArgs);\n        }\n        await this.shell.activateWidget(widget.id);\n\n        return widget;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as Long from 'long';\nimport { VariableRange, VariableDecoration } from './memory-widget-variable-utils';\n\nexport namespace Constants {\n    export const DEBOUNCE_TIME = 200;\n    export const ERROR_TIMEOUT = 5000;\n}\nexport namespace Utils {\n    export const validateNumericalInputs = (e: React.ChangeEvent<HTMLInputElement>, allowNegative = true): void => {\n        const toReplace = allowNegative ? /[^\\d-]/g : /[^\\d]/g;\n        e.target.value = e.target.value.replace(toReplace, '');\n    };\n\n    export const isPrintableAsAscii = (byte: number): boolean => byte >= 32 && byte < (128 - 1);\n}\n\nexport namespace Interfaces {\n    export interface MemoryReadResult {\n        bytes: LabeledUint8Array;\n        address: Long;\n    }\n    export interface WidgetMemoryState extends MemoryReadResult {\n        variables: VariableRange[];\n    }\n\n    export interface MemoryOptions {\n        address: string | number;\n        offset: number;\n        length: number;\n        byteSize: number;\n        bytesPerGroup: number;\n        groupsPerRow: number;\n        endianness: Endianness;\n        doDisplaySettings: boolean;\n        doUpdateAutomatically: boolean;\n        columnsDisplayed: ColumnsDisplayed;\n        recentLocationsArray: string[];\n        isFrozen: boolean;\n    }\n    export interface MoreMemoryOptions {\n        numBytes: number;\n        direction: 'above' | 'below';\n    }\n\n    export enum Endianness {\n        Little = 'Little Endian',\n        Big = 'Big Endian'\n    }\n    export interface LabeledUint8Array extends Uint8Array {\n        label?: string;\n    }\n\n    export interface StylableNodeAttributes {\n        className?: string;\n        style?: React.CSSProperties;\n        variable?: VariableDecoration;\n        title?: string;\n        isHighlighted?: boolean;\n    }\n\n    export interface FullNodeAttributes extends StylableNodeAttributes {\n        content: string;\n    }\n\n    export interface BitDecorator {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]): Partial<FullNodeAttributes>;\n    }\n    export interface RowDecorator {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]): Partial<StylableNodeAttributes>;\n    }\n    export interface ByteFromChunkData {\n        address: Long;\n        /**\n         * A single eight-bit byte\n         */\n        value: string;\n    }\n\n    export interface Column {\n        label: string;\n        doRender: boolean;\n    }\n\n    export interface ColumnIDs {\n        label: string;\n        id: string;\n    }\n\n    export interface ColumnsDisplayed {\n        [id: string]: Column;\n    }\n}\n\nexport const MemoryWidgetOptions = Symbol('MemoryWidgetOptions');\nexport interface MemoryWidgetOptions {\n    identifier: string | number;\n    displayId?: string | number;\n    dynamic?: boolean;\n}\n\nexport const MemoryDiffWidgetData = Symbol('MemoryDiffWidgetData');\nexport interface MemoryDiffWidgetData extends MemoryWidgetOptions {\n    beforeAddress: Long;\n    beforeBytes: Interfaces.LabeledUint8Array;\n    beforeVariables: VariableRange[];\n    afterAddress: Long;\n    afterBytes: Interfaces.LabeledUint8Array;\n    afterVariables: VariableRange[];\n    dynamic: false;\n    titles: [string, string];\n}\n\nexport const RegisterWidgetOptions = Symbol('RegisterWidgetData');\nexport type RegisterWidgetOptions = MemoryWidgetOptions;\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { DebugScope, DebugVariable } from '@theia/debug/lib/browser/console/debug-console-items';\nimport { DebugSession } from '@theia/debug/lib/browser/debug-session';\nimport * as Long from 'long';\n\nexport interface VariableRange {\n    name: string;\n    address: Long;\n    pastTheEndAddress: Long;\n    type?: string;\n    value?: string;\n}\n\nexport interface VariableDecoration {\n    name: string;\n    color: string;\n    firstAppearance?: boolean;\n}\n\nexport interface RegisterReadResult {\n    threadId: string | undefined;\n    registers: DebugVariable[];\n}\n\nexport class VariableFinder {\n    protected readonly HIGH_CONTRAST_COLORS = [\n        'var(--theia-contrastActiveBorder)',\n        'var(--theia-contrastBorder)',\n    ];\n\n    protected readonly NON_HC_COLORS = [\n        'var(--theia-terminal-ansiBlue)',\n        'var(--theia-terminal-ansiGreen)',\n        'var(--theia-terminal-ansiRed)',\n        'var(--theia-terminal-ansiYellow)',\n        'var(--theia-terminal-ansiMagenta)',\n    ];\n\n    protected readonly variables: VariableRange[];\n    protected currentIndex = -1;\n    protected currentVariable: VariableRange | undefined = undefined;\n    protected handledVariables = new Map<string, Long>();\n    protected workingColors: string[];\n    protected lastCall = Long.MAX_UNSIGNED_VALUE;\n\n    constructor(variables: VariableRange[], highContrast = false) {\n        this.variables = variables.sort((a, b) => a.address.lessThan(b.address) ? -1 : 1);\n        this.workingColors = highContrast ? this.HIGH_CONTRAST_COLORS : this.NON_HC_COLORS;\n    }\n\n    /**\n     * @param address the address of interest.\n     *\n     * This function should be called with a sequence of addresses in increasing order\n     */\n    getVariableForAddress(address: Long): VariableDecoration | undefined {\n        if (address.lessThan(this.lastCall)) {\n            this.initialize(address);\n        }\n        this.lastCall = address;\n        if (this.currentVariable && address.greaterThanOrEqual(this.currentVariable.pastTheEndAddress)) {\n            this.currentIndex += 1;\n            this.currentVariable = this.variables[this.currentIndex];\n        }\n        if (!this.currentVariable) {\n            return undefined;\n        }\n        const { name } = this.currentVariable;\n        // const color = `hsl(${HSL_BASIS * this.currentIndex / this.variables.length}, 60%, 60%)`;\n        const color = this.workingColors[this.currentIndex % this.workingColors.length];\n        const decoration: VariableDecoration = {\n            name,\n            color,\n            firstAppearance: this.handledVariables.get(name) === address || !this.handledVariables.has(name),\n        };\n        if (address.greaterThanOrEqual(this.currentVariable.address) && address.lessThan(this.currentVariable.pastTheEndAddress)) {\n            this.handledVariables.set(name, address);\n            return decoration;\n        }\n        return undefined;\n    }\n\n    protected initialize(address: Long): void {\n        this.handledVariables.clear();\n        const firstCandidateIndex = this.variables.findIndex(variable => address.lessThan(variable.pastTheEndAddress));\n        if (firstCandidateIndex === -1) {\n            this.currentIndex = this.variables.length;\n        } else {\n            this.currentVariable = this.variables[firstCandidateIndex];\n            this.currentIndex = firstCandidateIndex;\n        }\n    }\n\n    searchForVariable(addressOrName: Long | string): VariableRange | undefined {\n        if (typeof addressOrName === 'string') {\n            return this.variables.find(variable => variable.name === addressOrName);\n        }\n        let upperLimit = this.variables.length - 1;\n        let lowerLimit = 0;\n        while (upperLimit >= lowerLimit) {\n            const target = Math.floor((lowerLimit + upperLimit) / 2);\n            const candidate = this.variables[target];\n            if (addressOrName >= candidate.address && addressOrName < candidate.pastTheEndAddress) {\n                return candidate;\n            }\n            if (addressOrName < candidate.address) {\n                upperLimit = target - 1;\n            }\n            if (addressOrName >= candidate.pastTheEndAddress) {\n                lowerLimit = target + 1;\n            }\n        }\n        return undefined;\n    }\n}\n\n/**\n * Get the Registers of the currently selected frame.\n */\nexport async function getRegisters(session: DebugSession | undefined): Promise<DebugVariable[]> {\n    if (session === undefined) {\n        console.warn('No active debug session.');\n        return [];\n    }\n\n    const frame = session.currentFrame;\n    if (frame === undefined) {\n        throw new Error('No active stack frame.');\n    }\n\n    const registers: DebugVariable[] = [];\n\n    const scopes = await frame.getScopes();\n    const regScope = scopes.find(x => x.render() === 'Registers');\n    if (regScope !== undefined) {\n        const handleRegisterScope = async (scope: DebugVariable | DebugScope) => {\n            const variables = await scope.getElements();\n            for (const v of variables) {\n                if (v instanceof DebugVariable) {\n                    try {\n                        BigInt(v.value); // Make sure the value looks like a numerical value\n                        registers.push(v);\n                    } catch {\n                        handleRegisterScope(v);\n                    }\n                }\n            }\n        };\n        handleRegisterScope(regScope);\n    } else {\n        throw new Error('No Register scope in active stack frame.');\n    }\n    return registers;\n}\n\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from '@theia/core/shared/react';\nimport { MWLabel, MWLabelProps } from './memory-widget-components';\n\nexport interface SingleSelectItemProps {\n    id: string;\n    label: string;\n    defaultChecked?: boolean;\n}\ninterface MultiSelectBarProps {\n    items: SingleSelectItemProps[];\n    id?: string;\n    onSelectionChanged: (labelSelected: string, newSelectionState: boolean) => unknown;\n}\n\nexport const MultiSelectBar: React.FC<MultiSelectBarProps> = ({ items, onSelectionChanged, id }) => {\n    const changeHandler: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(e => {\n        onSelectionChanged(e.target.id, e.target.checked);\n    }, [onSelectionChanged]);\n\n    return (\n        <div className='multi-select-bar' id={id}>\n            {items.map(({ label, id: itemId, defaultChecked }) => (<LabeledCheckbox\n                label={label}\n                onChange={changeHandler}\n                defaultChecked={!!defaultChecked}\n                id={itemId}\n                key={`${label}-${id}-checkbox`}\n            />))}\n        </div>\n    );\n};\n\ninterface LabeledCheckboxProps {\n    label: string;\n    id: string;\n    onChange: React.ChangeEventHandler;\n    defaultChecked: boolean;\n}\n\nconst LabeledCheckbox: React.FC<LabeledCheckboxProps> = ({ defaultChecked, label, onChange, id }) => (\n    <div className='multi-select-checkbox-wrapper'>\n        <input\n            tabIndex={0}\n            type='checkbox'\n            id={id}\n            className='multi-select-checkbox'\n            defaultChecked={defaultChecked}\n            onChange={onChange}\n        />\n        <MWLabel id={id} label={label} classNames={['multi-select-label']} />\n    </div>\n);\n\nexport const MWMultiSelect: React.FC<MWLabelProps & MultiSelectBarProps> = ({ id, label, disabled, items, onSelectionChanged }) => (\n    <>\n        <MWLabel id={id} label={label} disabled={disabled} />\n        <MultiSelectBar id={id} items={items} onSelectionChanged={onSelectionChanged} />\n    </>\n);\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { DockPanelRendererFactory } from '@theia/core/lib/browser';\nimport { TheiaDockPanel } from '@theia/core/lib/browser/shell/theia-dock-panel';\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport class MemoryDockPanel extends TheiaDockPanel {\n    override toggleMaximized(): void { /* don't */ }\n}\n\nexport namespace MemoryDockPanel {\n    export const ID = 'memory-dock-panel-widget';\n    const DOCK_PANEL_ID = 'theia-main-content-panel';\n    const THEIA_TABBAR_CLASSES = ['theia-app-centers', 'theia-app-main'];\n    const MEMORY_INSPECTOR_TABBAR_CLASS = 'memory-dock-tabbar';\n    const DOCK_PANEL_CLASS = 'memory-dock-panel';\n\n    const createDockPanel = (factory: DockPanelRendererFactory): MemoryDockPanel => {\n        const renderer = factory();\n        renderer.tabBarClasses.push(...THEIA_TABBAR_CLASSES, MEMORY_INSPECTOR_TABBAR_CLASS);\n        const dockPanel = new MemoryDockPanel({\n            mode: 'multiple-document',\n            renderer,\n            spacing: 0,\n        });\n        dockPanel.addClass(DOCK_PANEL_CLASS);\n        dockPanel.id = DOCK_PANEL_ID;\n\n        return dockPanel;\n    };\n\n    export const createWidget = (parent: interfaces.Container): MemoryDockPanel => {\n        const dockFactory = parent.get<DockPanelRendererFactory>(DockPanelRendererFactory);\n        const dockPanel = createDockPanel(dockFactory);\n        return dockPanel;\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\n\n@injectable()\nexport class MemoryDockpanelPlaceholder extends ReactWidget {\n    static ID = 'memory-dockpanel-placeholder';\n\n    @postConstruct()\n    init(): void {\n        this.id = MemoryDockpanelPlaceholder.ID;\n        this.addClass(MemoryDockpanelPlaceholder.ID);\n        this.update();\n    }\n\n    render(): React.ReactNode {\n        return (\n            <div className='t-mv-memory-fetch-error'>\n                Click the <i className='memory-view-icon toolbar' /> icon to add a new memory view or the <i className='register-view-icon toolbar' /> icon to add a register view.\n            </div>\n        );\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable, DisposableCollection, Emitter, nls } from '@theia/core';\nimport { ApplicationShell, Message, Panel, Widget, WidgetManager } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { MemoryDiffSelectWidget } from '../diff-widget/memory-diff-select-widget';\nimport { MemoryWidget } from '../memory-widget/memory-widget';\nimport { MemoryWidgetManager } from '../utils/memory-widget-manager';\nimport { MemoryDockPanel } from './memory-dock-panel';\nimport { MemoryDockpanelPlaceholder } from './memory-dockpanel-placeholder-widget';\n\n@injectable()\nexport class MemoryLayoutWidget extends Panel implements Disposable, ApplicationShell.TrackableWidgetProvider {\n    static readonly ID = 'memory-layout-widget';\n    static readonly LABEL = nls.localize('theia/memory-inspector/memoryInspector', 'Memory Inspector');\n\n    // Necessary to inherit theia's tabbar styling\n    static readonly DOCK_PANEL_ID = 'theia-main-content-panel';\n    static readonly THEIA_TABBAR_CLASSES = ['theia-app-centers', 'theia-app-main'];\n    static readonly MEMORY_INSPECTOR_TABBAR_CLASS = 'memory-dock-tabbar';\n    static readonly DOCK_PANEL_CLASS = 'memory-dock-panel';\n\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n    @inject(MemoryWidgetManager) protected readonly memoryWidgetManager: MemoryWidgetManager;\n    @inject(MemoryDiffSelectWidget) protected readonly diffSelectWidget: MemoryDiffSelectWidget;\n    @inject(MemoryDockpanelPlaceholder) protected readonly placeholderWidget: MemoryDockpanelPlaceholder;\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n\n    protected readonly onDidChangeTrackableWidgetsEmitter = new Emitter<Widget[]>();\n    readonly onDidChangeTrackableWidgets = this.onDidChangeTrackableWidgetsEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n    protected dockPanel: MemoryDockPanel;\n    protected hasGeneratedWidgetAutomatically = false;\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.id = MemoryLayoutWidget.ID;\n        this.addClass(MemoryLayoutWidget.ID);\n        this.title.label = MemoryLayoutWidget.LABEL;\n        this.title.caption = MemoryLayoutWidget.LABEL;\n        this.title.closable = true;\n        this.title.iconClass = 'memory-view-icon';\n        this.dockPanel = await this.widgetManager.getOrCreateWidget<MemoryDockPanel>(MemoryDockPanel.ID);\n        this.addWidget(this.dockPanel);\n        this.addWidget(this.diffSelectWidget);\n        this.addWidget(this.placeholderWidget);\n        this.toDispose.push(this.memoryWidgetManager.onDidCreateNewWidget(widget => {\n            this.dockPanel.addWidget(widget);\n            this.dockPanel.activateWidget(widget);\n            this.onDidChangeTrackableWidgetsEmitter.fire([widget]);\n        }));\n        this.toDispose.push(this.memoryWidgetManager.onChanged(() => {\n            if (!this.memoryWidgetManager.canCompare) {\n                this.diffSelectWidget.hide();\n            }\n        }));\n        this.dockPanel.widgetRemoved.connect(this.handleWidgetRemoved.bind(this), this);\n        this.dockPanel.widgetAdded.connect(this.handleWidgetsChanged.bind(this), this);\n        this.toDispose.push(this.onDidChangeTrackableWidgetsEmitter);\n        this.diffSelectWidget.hide();\n        this.update();\n    }\n\n    toggleComparisonVisibility(): void {\n        if (this.diffSelectWidget.isHidden) {\n            this.diffSelectWidget.show();\n        } else {\n            this.diffSelectWidget.hide();\n        }\n        this.update();\n    }\n\n    override dispose(): void {\n        this.toDispose.dispose();\n        super.dispose();\n    }\n\n    protected dockPanelHoldsWidgets(): boolean {\n        const iter = this.dockPanel.tabBars();\n        let tabBar = iter.next();\n        while (tabBar) {\n            if (tabBar.titles.length) {\n                return true;\n            }\n            tabBar = iter.next();\n        }\n        return false;\n    }\n\n    protected handleWidgetsChanged(): void {\n        if (this.dockPanelHoldsWidgets()) {\n            this.placeholderWidget.hide();\n        } else {\n            this.placeholderWidget.show();\n        }\n    }\n\n    protected handleWidgetRemoved(_sender: Widget, widgetRemoved: Widget): void {\n        if (widgetRemoved instanceof MemoryWidget) { // Sometimes it's the tabbar.\n            this.handleWidgetsChanged();\n            this.shell.activateWidget(this.id);\n        }\n    }\n\n    protected async createAndFocusWidget(): Promise<void> {\n        const widget = await this.memoryWidgetManager.createNewMemoryWidget();\n        widget.activate();\n    }\n\n    protected override async onAfterShow(msg: Message): Promise<void> {\n        if (!this.hasGeneratedWidgetAutomatically && !this.dockPanelHoldsWidgets()) {\n            await this.createAndFocusWidget();\n            this.hasGeneratedWidgetAutomatically = true;\n        }\n        super.onAfterShow(msg);\n    }\n\n    getTrackableWidgets(): Widget[] {\n        const children: Widget[] = [];\n        const childIterator = this.dockPanel.children();\n        let currentChild = childIterator.next();\n        while (currentChild) {\n            children.push(currentChild);\n            currentChild = childIterator.next();\n        }\n        return children;\n    }\n\n    activateWidget(id: string): Widget | undefined {\n        const widget = this.getTrackableWidgets().find(candidateWidget => candidateWidget.id === id);\n        if (widget) {\n            this.dockPanel.activateWidget(widget);\n        }\n        return widget;\n    }\n\n    override onActivateRequest(msg: Message): void {\n        const displayedWidget = this.dockPanel.currentTabBar?.currentTitle?.owner;\n        if (displayedWidget) {\n            displayedWidget.activate();\n        } else {\n            // Only happens if you remove all widgets, then close the view.\n            this.node.tabIndex = -1;\n            this.node.focus();\n        }\n        super.onActivateRequest(msg);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as Long from 'long';\n\n/**\n * Parse `hexStr` as an hexadecimal string (with or without the leading 0x)\n * and return the value as a Long.\n */\nexport function hexStrToUnsignedLong(hexStr: string): Long {\n    if (hexStr.trim().length === 0) {\n        return new Long(0, 0, true);\n    }\n    return Long.fromString(hexStr, true, 16);\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './canonical-uri-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\nexport * from './workspace-trust-service';\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.register-table-widget table.t-mv-view {\n  table-layout: fixed;\n  width: 100%;\n}\n\n.register-table-widget table.t-mv-view td,\n.register-table-widget table.t-mv-view th {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.reg-options-widget .t-mv-group.view-group {\n  grid-template-columns: 3fr 2fr 30px;\n}\n\n.reg-options-widget .multi-select-bar {\n  height: 100%;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/memory-inspector/src/browser/register-widget/register-widget.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,mBAAmB;EACnB,WAAW;AACb;;AAEA;;EAEE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,YAAY;AACd\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2021 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.register-table-widget table.t-mv-view {\\n  table-layout: fixed;\\n  width: 100%;\\n}\\n\\n.register-table-widget table.t-mv-view td,\\n.register-table-widget table.t-mv-view th {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.reg-options-widget .t-mv-group.view-group {\\n  grid-template-columns: 3fr 2fr 30px;\\n}\\n\\n.reg-options-widget .multi-select-bar {\\n  height: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"memory-view.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"register-view.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"memory-lock.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"register-lock.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n:root {\n  --memory-widget-disabled-opacity: 0.7;\n  --memory-widget-placeholder-text-line-height: 24px;\n}\n\n.memory-view-options-widget {\n  display: flex;\n  overflow: unset !important;\n}\n\n.memory-view-icon {\n  -webkit-mask: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n  mask: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n}\n\n.register-view-icon {\n  -webkit-mask: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n  mask: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n}\n\n.memory-view-icon.toolbar,\n.register-view-icon.toolbar {\n  display: inline-block;\n  background-color: var(--theia-settings-headerForeground);\n  mask-size: 16px 15px;\n  mask-repeat: no-repeat;\n  mask-position: center center;\n  -webkit-mask-size: 16px 15px;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: center center;\n  min-width: var(--theia-icon-size);\n  min-height: var(--theia-icon-size);\n  cursor: pointer;\n}\n\n.memory-lock-icon {\n  -webkit-mask: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n  mask: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n}\n\n.register-lock-icon {\n  -webkit-mask: url(${___CSS_LOADER_URL_REPLACEMENT_3___});\n  mask: url(${___CSS_LOADER_URL_REPLACEMENT_3___});\n}\n\n.t-mv-container {\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  padding: 10px;\n  overflow: hidden;\n}\n\n.t-mv-container button:focus {\n  /* Fixes a padding issue when clicking a button */\n  border: none;\n}\n\n.memory-view-wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.t-mv-memory-container {\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background-color: var(--theia-editor-background);\n  height: 100%;\n  white-space: nowrap;\n}\n\n.t-mv-memory-container:focus {\n  outline: none;\n}\n\n.t-mv-memory-container.frozen,\n.t-mv-memory-container.frozen:focus {\n  font-style: italic;\n  opacity: var(--memory-widget-disabled-opacity) !important;\n}\n\n.t-mv-memory-fetch-error {\n  margin: var(--theia-ui-padding);\n  color: var(--theia-editorWarning-foreground);\n}\n\n.t-mv-memory-fetch-error.show {\n  display: block;\n}\n\n.t-mv-memory-fetch-error.hide {\n  display: none;\n}\n\n.t-mv-header {\n  margin-top: var(--theia-ui-padding);\n  display: grid;\n  box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\n  padding-bottom: var(--theia-ui-padding);\n}\n\n.t-mv-header-label {\n  background-color: var(--theia-editor-background);\n  border-radius: 10px;\n  font-weight: 400;\n  padding: 2px 5px 2px 5px;\n}\n\n.t-mv-view {\n  width: 100%;\n}\n\n.t-mv-view .eight-bits.changed {\n  background-color: var(--theia-memoryInspector-foreground);\n  color: var(--theia-editor-background);\n}\n\n.t-mv-view .eight-bits.changed:hover {\n  background-color: var(--theia-memoryInspector-foreground);\n  opacity: 0.85;\n}\n\n.t-mv-view .eight-bits {\n  border-bottom: 1px solid transparent;\n  box-sizing: border-box;\n}\n\n.t-mv-view .eight-bits:not(.changed):not(.highlight):hover {\n  background-color: var(--theia-editor-inactiveSelectionBackground);\n}\n\n.t-mv-memory-container:focus .eight-bits.highlight {\n  background-color: var(--theia-editor-selectionBackground);\n  border-radius: 1px;\n  border-bottom: solid 1px var(--theia-editorCursor-foreground);\n}\n\n.t-mv-memory-container:focus .eight-bits.changed.highlight {\n  background-color: var(--theia-memoryInspector-focusBorder);\n}\n\n.t-mv-memory-container:not(:focus) .eight-bits.highlight {\n  background-color: var(--theia-editor-inactiveSelectionBackground);\n}\n\n.t-mv-view .eight-bits.modified {\n  outline-width: 1px;\n  outline-style: solid;\n  outline-offset: -1px;\n  outline-color: var(--theia-editorWarning-foreground);\n  border: none;\n}\n\n.t-mv-view .byte-group:not(:first-of-type) {\n  display: inline-block;\n  padding-left: var(--theia-ui-padding);\n}\n\n.t-mv-view .data-address-col {\n  width: unset;\n}\n\n.t-mv-view-container {\n  flex: 1;\n  overflow: hidden;\n  margin-top: var(--theia-ui-padding);\n  height: 100%;\n}\n\n.t-mv-view-container thead {\n  position: absolute;\n}\n\n.t-mv-view-container .ps__rail-y {\n  left: unset !important;\n}\n\n.t-mv-view-container:focus {\n  /* Fixes a padding issue when clicking inside the container */\n  border: none;\n}\n\n.memory-diff-select .theia-select:focus,\n.t-mv-container .theia-select:focus {\n  outline-width: 1px;\n  outline-style: solid;\n  outline-offset: -1px;\n  opacity: 1 !important;\n  outline-color: var(--theia-focusBorder);\n}\n\n.t-mv-settings-container {\n  flex: none;\n  padding-bottom: var(--theia-ui-padding);\n}\n\n.t-mv-settings-container .t-mv-settings-group-header {\n  padding-bottom: calc(var(--theia-ui-padding) / 2);\n  border-bottom: 1px solid hsla(0, 0%, 50%, 0.5);\n}\n\n.memory-widget-toolbar {\n  display: flex;\n  flex-flow: row nowrap;\n  height: 24px;\n  align-items: center;\n  max-width: 100%;\n}\n\n.memory-widget-toolbar * {\n  flex: none;\n}\n\n.memory-widget-toolbar .memory-widget-header-click-zone {\n  min-width: 0;\n}\n\n.memory-widget-header-click-zone * {\n  flex: none;\n}\n\n.memory-widget-auto-updates-container {\n  width: 16px;\n  margin-right: var(--theia-ui-padding);\n  font-size: 1.3em;\n}\n\n.toggle-settings-container {\n  margin-left: auto;\n}\n\n.toggle-settings-container .toggle-settings-click-zone {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-left: var(--theia-ui-padding);\n  user-select: none;\n  box-sizing: content-box;\n  border-top: 1px solid transparent;\n}\n\n.toggle-settings-container .toggle-settings-click-zone:focus {\n  outline: none;\n  border-top: 1px solid var(--theia-focusBorder);\n}\n\n.toggle-settings-container .toggle-settings-click-zone span {\n  white-space: nowrap;\n}\n\n.toggle-settings-container .codicon-settings-gear {\n  font-size: 1.1em;\n  margin-right: var(--theia-ui-padding);\n}\n\n.toggle-settings-container + div > .t-mv-settings-group-header:first-of-type,\n.toggle-settings-container + .t-mv-settings-group-header {\n  margin-top: 0;\n}\n\n.t-mv-wrapper button.theia-button {\n  min-width: 30px;\n  margin: unset;\n  padding: unset;\n}\n\n.view-group {\n  grid-template-columns: 70px 1fr;\n}\n\n.settings-group {\n  grid-template-columns: 110px 1fr;\n  margin-top: calc(2 * var(--theia-ui-padding));\n}\n\n.ascii-group {\n  grid-template-columns: 70px 1fr;\n}\n\n.t-mv-group.view-group {\n  grid-template-columns: 3fr repeat(2, 1fr) 30px;\n  grid-template-rows: repeat(2, 24px);\n  grid-auto-flow: column;\n  border-bottom: 1px solid hsla(0, 0%, 50%, 0.5);\n  border-top: 1px solid hsla(0, 0%, 50%, 0.5);\n  padding-bottom: var(--theia-ui-padding);\n}\n\n.view-group-go-button {\n  grid-row: 2 / 3;\n  height: 100%;\n}\n\n.t-mv-group {\n  display: grid;\n  grid-column-gap: var(--theia-ui-padding);\n  grid-row-gap: calc(var(--theia-ui-padding) / 2);\n  align-items: center;\n}\n\n.t-mv-group .theia-select,\n.t-mv-group .theia-input {\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.t-mv-group .multi-select-bar {\n  min-height: 19px;\n}\n\n.t-mv-group .multi-select-label {\n  line-height: 17px;\n}\n\n.t-mv-input-group.button-wrapper {\n  margin: 2px;\n  width: 100%;\n  display: block;\n  text-align: center;\n}\n\n.t-mv-input-group.button-wrapper .theia-button.main {\n  margin: var(--theia-ui-padding) 0 0 0;\n}\n\ntable.t-mv-view {\n  align-self: center;\n  border-collapse: collapse;\n  border: none;\n}\n\ntable.t-mv-view {\n  font-size: var(--theia-ui-font-size1);\n  font-weight: 400;\n  text-align: left;\n  padding: 10px;\n}\n\ntable.t-mv-view td,\ntable.t-mv-view th {\n  font-family: monospace;\n  padding-right: 15px;\n  white-space: pre;\n}\n\ntable.t-mv-view .t-mv-view-row.t-mv-view-row-highlight {\n  border-bottom: 1px var(--theia-editorGroup-border) solid;\n}\n\ntable.t-mv-view .t-mv-view-row:hover {\n  background-color: var(--theia-sideBar-background);\n}\n\ntable.t-mv-view .t-mv-view-address {\n  font-weight: 700;\n  text-align: left;\n}\n\n.t-mv-settings-group-header.small-margin {\n  margin-bottom: var(--theia-ui-padding);\n  margin-top: var(--theia-ui-padding);\n}\n\n.t-mv-variable-label:not(:last-of-type)::after {\n  content: \",\";\n  margin-right: var(--theia-ui-padding);\n  color: var(--theia-editor-foreground);\n}\n\n.mw-input-select {\n  position: relative;\n  height: 100%;\n}\n\n.mw-input-select .theia-input {\n  position: absolute;\n  z-index: 1;\n  width: calc(100% - 18px);\n}\n\n.mw-input-select .theia-input:focus {\n  outline: unset;\n}\n\n.mw-input-select .theia-select {\n  position: absolute;\n  z-index: 0;\n  height: calc(var(--theia-content-line-height) + 2px);\n}\n\n.mw-input-select .theia-select:focus {\n  outline: unset;\n}\n\n.memory-layout-widget {\n  display: flex;\n  flex-direction: column;\n}\n\n.memory-dock-panel {\n  flex-grow: 1;\n  margin: var(--theia-ui-padding);\n  margin-top: 0;\n}\n\n.memory-edit-button-container {\n  padding: var(--theia-ui-padding) 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  box-shadow: 0px 6px 6px 6px var(--theia-widget-shadow);\n}\n\n.memory-edit-button-container .memory-edit-error {\n  width: 100%;\n  height: 100%;\n  bottom: 0;\n  box-sizing: border-box;\n  white-space: normal;\n  padding: var(--theia-ui-padding);\n  background-color: var(--theia-editor-background);\n  color: var(--theia-editorWarning-foreground);\n}\n\n.memory-diff-select {\n  padding: var(--theia-ui-padding);\n}\n\n.memory-diff-select-wrapper {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  border-top: 1px solid hsla(0, 0%, 50%, 0.5);\n  padding-top: var(--theia-ui-padding);\n}\n\n.diff-select-input-wrapper {\n  display: flex;\n  justify-content: space-around;\n  align-content: center;\n  align-items: center;\n  flex-flow: row wrap;\n}\n\n.memory-diff-select-go {\n  min-width: unset;\n  text-align: center;\n  width: 30px;\n  margin: 0 var(--theia-ui-padding);\n  margin-top: var(--theia-ui-padding);\n  align-self: flex-end;\n}\n\n.t-mv-diff-select-widget-options-wrapper {\n  display: grid;\n  grid-template-rows: 12px 24px;\n  grid-auto-flow: column;\n  gap: calc(var(--theia-ui-padding) / 2);\n  max-width: 215px;\n  margin: 0 var(--theia-ui-padding);\n  align-items: center;\n}\n\n.t-mv-diff-select-widget-options-wrapper .t-mv-label,\n.t-mv-diff-select-widget-options-wrapper .t-mv-select {\n  min-width: 0;\n}\n\n.t-mv-diff-select-widget-options-wrapper .t-mv-select {\n  height: 100%;\n}\n\n.theia-input:disabled {\n  opacity: var(--memory-widget-disabled-opacity);\n}\n\n.t-mv-label.disabled {\n  font-style: italic;\n  opacity: var(--memory-widget-disabled-opacity);\n}\n\n.memory-widget-header {\n  font-weight: normal;\n}\n\n.memory-widget-header-click-zone {\n  display: flex;\n  flex: 1 1 0;\n  align-items: center;\n}\n\n.memory-widget-header-click-zone .memory-widget-header {\n  margin: 0;\n  white-space: nowrap;\n  flex-shrink: 1;\n  min-width: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.memory-widget-header-click-zone input {\n  flex-grow: 1;\n  width: 0;\n  height: 18px;\n}\n\n.memory-widget-toolbar .fa.fa-pencil,\n.memory-widget-toolbar .fa.fa-save {\n  font-size: 1.2em;\n  margin: 0 var(--theia-ui-padding);\n  transition: opacity 0.3s;\n}\n\n.memory-widget-header-click-zone:hover .fa.fa-pencil {\n  opacity: 1;\n}\n\n.memory-widget-header-click-zone .fa.fa-pencil {\n  opacity: 0;\n}\n\n.memory-widget-header-click-zone .theia-input {\n  font-size: 1.5em;\n  /* same as theia h2 */\n}\n\n.t-mv-settings-group-header.disabled,\n.memory-widget-header.disabled {\n  font-style: italic;\n  opacity: var(--memory-widget-disabled-opacity);\n}\n\n.t-mv-view-container span {\n  display: inline-block;\n}\n\n.t-mv-diffed-ascii:not(:last-of-type) {\n  margin-right: var(--theia-ui-padding);\n}\n\n.t-mv-view-container span.different {\n  position: relative;\n}\n\n.t-mv-view-container span.different::before {\n  content: \"\";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n\n.t-mv-view-container span.before.different::before,\n.t-mv-view-container .before.different {\n  background-color: var(--theia-memoryDiff-removedTextBackground);\n}\n\n.t-mv-view-container span.after.different::before,\n.t-mv-view-container .after.different {\n  background-color: var(--theia-memoryDiff-insertedTextBackground);\n}\n\n.t-mv-view-container span.before.different.hc::before,\n.t-mv-view-container .before.different.hc {\n  border-top: dotted 1px var(--theia-contrastActiveBorder);\n  border-bottom: dotted 1px var(--theia-contrastActiveBorder);\n  box-sizing: border-box;\n}\n\n.t-mv-view-container span.after.different.hc::before,\n.t-mv-view-container .after.different.hc {\n  border-top: dashed 1px var(--theia-contrastBorder);\n  border-bottom: dashed 1px var(--theia-contrastBorder);\n  box-sizing: border-box;\n}\n\n.memory-dockpanel-placeholder {\n  position: absolute;\n  top: 10px;\n  padding: calc(2 * var(--theia-ui-padding));\n  width: 100%;\n  line-height: var(--memory-widget-placeholder-text-line-height);\n}\n\n.memory-dockpanel-placeholder i.toolbar {\n  background-color: var(--theia-errorForeground);\n  vertical-align: middle;\n  cursor: default;\n}\n\n.t-mv-hover {\n  position: fixed;\n  font-family: monospace;\n  box-sizing: border-box;\n  padding: var(--theia-ui-padding);\n  font-size: var(--theia-ui-font-size1);\n  background: var(--theia-editorHoverWidget-background);\n  border: 2px solid var(--theia-editorHoverWidget-border);\n  /* This ensures that the hover is visible over the widget even when focused */\n  z-index: 1000;\n\n  display: grid;\n  grid-template-columns: max-content max-content;\n  gap: calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\n}\n\n.t-mv-hover.hidden {\n  display: none;\n}\n\n.t-mv-hover-key {\n  color: var(--theia-symbolIcon-variableForeground);\n}\n\n.t-mv-hover-value {\n  color: var(--theia-variable-number-variable-color);\n}\n\n.t-mv-hover-value.utf8 {\n  color: var(--theia-variable-string-variable-color);\n}\n\n.mw-more-memory-select {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-style: italic;\n  opacity: 0.7;\n}\n\n.mw-more-memory-select-top {\n  display: flex;\n  justify-content: center;\n  height: 16px;\n  padding-bottom: 1px;\n  transition: border-color 0.1s;\n  border-color: transparent;\n}\n\n.mw-more-memory-select-top:hover {\n  border-bottom: 1px solid;\n  padding-bottom: 0;\n  border-color: var(--theia-sideBar-foreground);\n}\n\n.mw-more-memory-select select {\n  border: none;\n  background: none;\n  border-radius: 3px;\n  margin: 0 2px;\n  position: relative;\n  bottom: 1px;\n  transition: background 0.1s;\n  font-style: italic;\n}\n\n.mw-more-memory-select select:hover {\n  background: var(--theia-dropdown-background);\n}\n\n.mw-more-memory-select button {\n  background-color: unset;\n  border: none;\n  padding: 2px;\n  color: var(--theia-sideBar-foreground);\n}\n\n.mw-bookmarks-bar {\n  padding: calc(var(--theia-ui-padding) / 2) 0;\n}\n\n.mw-bookmarks-bar .bookmark-container {\n  display: inline;\n  position: relative;\n  cursor: pointer;\n  padding: 0 var(--theia-ui-padding);\n}\n\n.mw-bookmarks-bar .bookmark-container .bookmark-radio-button {\n  height: 100%;\n  z-index: -1;\n  border-radius: 3px;\n  padding: 0 var(--theia-ui-padding);\n  background-color: var(--theia-button-secondaryBackground);\n  color: var(--theia-button-secondaryForeground);\n  box-shadow: 0 2px 0 rgba(187, 187, 187, 0.4);\n}\n\n.mw-bookmarks-bar input {\n  position: absolute;\n  left: 0;\n  appearance: none;\n  -webkit-appearance: none;\n}\n\n.mw-bookmarks-bar input:checked ~ .bookmark-radio-button {\n  background-color: var(--theia-button-background);\n  color: var(--theia-button-foreground);\n}\n\n.diff-options-widget .t-mv-group.view-group {\n  grid-template-columns: repeat(2, 1fr) 30px;\n  grid-template-rows: 18px 24px;\n}\n\n#memory-table-widget.editable .t-mv-view .eight-bits:hover {\n  cursor: pointer;\n}\n\n#memory-table-widget.editable\n  .t-mv-memory-container:focus\n  .eight-bits.highlight {\n  cursor: text;\n}\n\n.diff-options-widget .memory-widget-header-click-zone,\n.diff-options-widget .toggle-settings-click-zone,\n#memory-layout-widget .memory-widget-header-click-zone,\n#memory-layout-widget .toggle-settings-click-zone,\n#memory-layout-widget .fa-unlock,\n#memory-layout-widget .fa-lock {\n  cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/memory-inspector/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2021 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n:root {\\n  --memory-widget-disabled-opacity: 0.7;\\n  --memory-widget-placeholder-text-line-height: 24px;\\n}\\n\\n.memory-view-options-widget {\\n  display: flex;\\n  overflow: unset !important;\\n}\\n\\n.memory-view-icon {\\n  -webkit-mask: url(\\\"memory-view.svg\\\");\\n  mask: url(\\\"memory-view.svg\\\");\\n}\\n\\n.register-view-icon {\\n  -webkit-mask: url(\\\"register-view.svg\\\");\\n  mask: url(\\\"register-view.svg\\\");\\n}\\n\\n.memory-view-icon.toolbar,\\n.register-view-icon.toolbar {\\n  display: inline-block;\\n  background-color: var(--theia-settings-headerForeground);\\n  mask-size: 16px 15px;\\n  mask-repeat: no-repeat;\\n  mask-position: center center;\\n  -webkit-mask-size: 16px 15px;\\n  -webkit-mask-repeat: no-repeat;\\n  -webkit-mask-position: center center;\\n  min-width: var(--theia-icon-size);\\n  min-height: var(--theia-icon-size);\\n  cursor: pointer;\\n}\\n\\n.memory-lock-icon {\\n  -webkit-mask: url(\\\"memory-lock.svg\\\");\\n  mask: url(\\\"memory-lock.svg\\\");\\n}\\n\\n.register-lock-icon {\\n  -webkit-mask: url(\\\"register-lock.svg\\\");\\n  mask: url(\\\"register-lock.svg\\\");\\n}\\n\\n.t-mv-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: left;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  padding: 10px;\\n  overflow: hidden;\\n}\\n\\n.t-mv-container button:focus {\\n  /* Fixes a padding issue when clicking a button */\\n  border: none;\\n}\\n\\n.memory-view-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.t-mv-memory-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  background-color: var(--theia-editor-background);\\n  height: 100%;\\n  white-space: nowrap;\\n}\\n\\n.t-mv-memory-container:focus {\\n  outline: none;\\n}\\n\\n.t-mv-memory-container.frozen,\\n.t-mv-memory-container.frozen:focus {\\n  font-style: italic;\\n  opacity: var(--memory-widget-disabled-opacity) !important;\\n}\\n\\n.t-mv-memory-fetch-error {\\n  margin: var(--theia-ui-padding);\\n  color: var(--theia-editorWarning-foreground);\\n}\\n\\n.t-mv-memory-fetch-error.show {\\n  display: block;\\n}\\n\\n.t-mv-memory-fetch-error.hide {\\n  display: none;\\n}\\n\\n.t-mv-header {\\n  margin-top: var(--theia-ui-padding);\\n  display: grid;\\n  box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\\n  padding-bottom: var(--theia-ui-padding);\\n}\\n\\n.t-mv-header-label {\\n  background-color: var(--theia-editor-background);\\n  border-radius: 10px;\\n  font-weight: 400;\\n  padding: 2px 5px 2px 5px;\\n}\\n\\n.t-mv-view {\\n  width: 100%;\\n}\\n\\n.t-mv-view .eight-bits.changed {\\n  background-color: var(--theia-memoryInspector-foreground);\\n  color: var(--theia-editor-background);\\n}\\n\\n.t-mv-view .eight-bits.changed:hover {\\n  background-color: var(--theia-memoryInspector-foreground);\\n  opacity: 0.85;\\n}\\n\\n.t-mv-view .eight-bits {\\n  border-bottom: 1px solid transparent;\\n  box-sizing: border-box;\\n}\\n\\n.t-mv-view .eight-bits:not(.changed):not(.highlight):hover {\\n  background-color: var(--theia-editor-inactiveSelectionBackground);\\n}\\n\\n.t-mv-memory-container:focus .eight-bits.highlight {\\n  background-color: var(--theia-editor-selectionBackground);\\n  border-radius: 1px;\\n  border-bottom: solid 1px var(--theia-editorCursor-foreground);\\n}\\n\\n.t-mv-memory-container:focus .eight-bits.changed.highlight {\\n  background-color: var(--theia-memoryInspector-focusBorder);\\n}\\n\\n.t-mv-memory-container:not(:focus) .eight-bits.highlight {\\n  background-color: var(--theia-editor-inactiveSelectionBackground);\\n}\\n\\n.t-mv-view .eight-bits.modified {\\n  outline-width: 1px;\\n  outline-style: solid;\\n  outline-offset: -1px;\\n  outline-color: var(--theia-editorWarning-foreground);\\n  border: none;\\n}\\n\\n.t-mv-view .byte-group:not(:first-of-type) {\\n  display: inline-block;\\n  padding-left: var(--theia-ui-padding);\\n}\\n\\n.t-mv-view .data-address-col {\\n  width: unset;\\n}\\n\\n.t-mv-view-container {\\n  flex: 1;\\n  overflow: hidden;\\n  margin-top: var(--theia-ui-padding);\\n  height: 100%;\\n}\\n\\n.t-mv-view-container thead {\\n  position: absolute;\\n}\\n\\n.t-mv-view-container .ps__rail-y {\\n  left: unset !important;\\n}\\n\\n.t-mv-view-container:focus {\\n  /* Fixes a padding issue when clicking inside the container */\\n  border: none;\\n}\\n\\n.memory-diff-select .theia-select:focus,\\n.t-mv-container .theia-select:focus {\\n  outline-width: 1px;\\n  outline-style: solid;\\n  outline-offset: -1px;\\n  opacity: 1 !important;\\n  outline-color: var(--theia-focusBorder);\\n}\\n\\n.t-mv-settings-container {\\n  flex: none;\\n  padding-bottom: var(--theia-ui-padding);\\n}\\n\\n.t-mv-settings-container .t-mv-settings-group-header {\\n  padding-bottom: calc(var(--theia-ui-padding) / 2);\\n  border-bottom: 1px solid hsla(0, 0%, 50%, 0.5);\\n}\\n\\n.memory-widget-toolbar {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  height: 24px;\\n  align-items: center;\\n  max-width: 100%;\\n}\\n\\n.memory-widget-toolbar * {\\n  flex: none;\\n}\\n\\n.memory-widget-toolbar .memory-widget-header-click-zone {\\n  min-width: 0;\\n}\\n\\n.memory-widget-header-click-zone * {\\n  flex: none;\\n}\\n\\n.memory-widget-auto-updates-container {\\n  width: 16px;\\n  margin-right: var(--theia-ui-padding);\\n  font-size: 1.3em;\\n}\\n\\n.toggle-settings-container {\\n  margin-left: auto;\\n}\\n\\n.toggle-settings-container .toggle-settings-click-zone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  margin-left: var(--theia-ui-padding);\\n  user-select: none;\\n  box-sizing: content-box;\\n  border-top: 1px solid transparent;\\n}\\n\\n.toggle-settings-container .toggle-settings-click-zone:focus {\\n  outline: none;\\n  border-top: 1px solid var(--theia-focusBorder);\\n}\\n\\n.toggle-settings-container .toggle-settings-click-zone span {\\n  white-space: nowrap;\\n}\\n\\n.toggle-settings-container .codicon-settings-gear {\\n  font-size: 1.1em;\\n  margin-right: var(--theia-ui-padding);\\n}\\n\\n.toggle-settings-container + div > .t-mv-settings-group-header:first-of-type,\\n.toggle-settings-container + .t-mv-settings-group-header {\\n  margin-top: 0;\\n}\\n\\n.t-mv-wrapper button.theia-button {\\n  min-width: 30px;\\n  margin: unset;\\n  padding: unset;\\n}\\n\\n.view-group {\\n  grid-template-columns: 70px 1fr;\\n}\\n\\n.settings-group {\\n  grid-template-columns: 110px 1fr;\\n  margin-top: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.ascii-group {\\n  grid-template-columns: 70px 1fr;\\n}\\n\\n.t-mv-group.view-group {\\n  grid-template-columns: 3fr repeat(2, 1fr) 30px;\\n  grid-template-rows: repeat(2, 24px);\\n  grid-auto-flow: column;\\n  border-bottom: 1px solid hsla(0, 0%, 50%, 0.5);\\n  border-top: 1px solid hsla(0, 0%, 50%, 0.5);\\n  padding-bottom: var(--theia-ui-padding);\\n}\\n\\n.view-group-go-button {\\n  grid-row: 2 / 3;\\n  height: 100%;\\n}\\n\\n.t-mv-group {\\n  display: grid;\\n  grid-column-gap: var(--theia-ui-padding);\\n  grid-row-gap: calc(var(--theia-ui-padding) / 2);\\n  align-items: center;\\n}\\n\\n.t-mv-group .theia-select,\\n.t-mv-group .theia-input {\\n  width: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.t-mv-group .multi-select-bar {\\n  min-height: 19px;\\n}\\n\\n.t-mv-group .multi-select-label {\\n  line-height: 17px;\\n}\\n\\n.t-mv-input-group.button-wrapper {\\n  margin: 2px;\\n  width: 100%;\\n  display: block;\\n  text-align: center;\\n}\\n\\n.t-mv-input-group.button-wrapper .theia-button.main {\\n  margin: var(--theia-ui-padding) 0 0 0;\\n}\\n\\ntable.t-mv-view {\\n  align-self: center;\\n  border-collapse: collapse;\\n  border: none;\\n}\\n\\ntable.t-mv-view {\\n  font-size: var(--theia-ui-font-size1);\\n  font-weight: 400;\\n  text-align: left;\\n  padding: 10px;\\n}\\n\\ntable.t-mv-view td,\\ntable.t-mv-view th {\\n  font-family: monospace;\\n  padding-right: 15px;\\n  white-space: pre;\\n}\\n\\ntable.t-mv-view .t-mv-view-row.t-mv-view-row-highlight {\\n  border-bottom: 1px var(--theia-editorGroup-border) solid;\\n}\\n\\ntable.t-mv-view .t-mv-view-row:hover {\\n  background-color: var(--theia-sideBar-background);\\n}\\n\\ntable.t-mv-view .t-mv-view-address {\\n  font-weight: 700;\\n  text-align: left;\\n}\\n\\n.t-mv-settings-group-header.small-margin {\\n  margin-bottom: var(--theia-ui-padding);\\n  margin-top: var(--theia-ui-padding);\\n}\\n\\n.t-mv-variable-label:not(:last-of-type)::after {\\n  content: \\\",\\\";\\n  margin-right: var(--theia-ui-padding);\\n  color: var(--theia-editor-foreground);\\n}\\n\\n.mw-input-select {\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.mw-input-select .theia-input {\\n  position: absolute;\\n  z-index: 1;\\n  width: calc(100% - 18px);\\n}\\n\\n.mw-input-select .theia-input:focus {\\n  outline: unset;\\n}\\n\\n.mw-input-select .theia-select {\\n  position: absolute;\\n  z-index: 0;\\n  height: calc(var(--theia-content-line-height) + 2px);\\n}\\n\\n.mw-input-select .theia-select:focus {\\n  outline: unset;\\n}\\n\\n.memory-layout-widget {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.memory-dock-panel {\\n  flex-grow: 1;\\n  margin: var(--theia-ui-padding);\\n  margin-top: 0;\\n}\\n\\n.memory-edit-button-container {\\n  padding: var(--theia-ui-padding) 0;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  box-shadow: 0px 6px 6px 6px var(--theia-widget-shadow);\\n}\\n\\n.memory-edit-button-container .memory-edit-error {\\n  width: 100%;\\n  height: 100%;\\n  bottom: 0;\\n  box-sizing: border-box;\\n  white-space: normal;\\n  padding: var(--theia-ui-padding);\\n  background-color: var(--theia-editor-background);\\n  color: var(--theia-editorWarning-foreground);\\n}\\n\\n.memory-diff-select {\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.memory-diff-select-wrapper {\\n  display: flex;\\n  flex-flow: row wrap;\\n  justify-content: center;\\n  align-content: center;\\n  align-items: center;\\n  border-top: 1px solid hsla(0, 0%, 50%, 0.5);\\n  padding-top: var(--theia-ui-padding);\\n}\\n\\n.diff-select-input-wrapper {\\n  display: flex;\\n  justify-content: space-around;\\n  align-content: center;\\n  align-items: center;\\n  flex-flow: row wrap;\\n}\\n\\n.memory-diff-select-go {\\n  min-width: unset;\\n  text-align: center;\\n  width: 30px;\\n  margin: 0 var(--theia-ui-padding);\\n  margin-top: var(--theia-ui-padding);\\n  align-self: flex-end;\\n}\\n\\n.t-mv-diff-select-widget-options-wrapper {\\n  display: grid;\\n  grid-template-rows: 12px 24px;\\n  grid-auto-flow: column;\\n  gap: calc(var(--theia-ui-padding) / 2);\\n  max-width: 215px;\\n  margin: 0 var(--theia-ui-padding);\\n  align-items: center;\\n}\\n\\n.t-mv-diff-select-widget-options-wrapper .t-mv-label,\\n.t-mv-diff-select-widget-options-wrapper .t-mv-select {\\n  min-width: 0;\\n}\\n\\n.t-mv-diff-select-widget-options-wrapper .t-mv-select {\\n  height: 100%;\\n}\\n\\n.theia-input:disabled {\\n  opacity: var(--memory-widget-disabled-opacity);\\n}\\n\\n.t-mv-label.disabled {\\n  font-style: italic;\\n  opacity: var(--memory-widget-disabled-opacity);\\n}\\n\\n.memory-widget-header {\\n  font-weight: normal;\\n}\\n\\n.memory-widget-header-click-zone {\\n  display: flex;\\n  flex: 1 1 0;\\n  align-items: center;\\n}\\n\\n.memory-widget-header-click-zone .memory-widget-header {\\n  margin: 0;\\n  white-space: nowrap;\\n  flex-shrink: 1;\\n  min-width: 0;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.memory-widget-header-click-zone input {\\n  flex-grow: 1;\\n  width: 0;\\n  height: 18px;\\n}\\n\\n.memory-widget-toolbar .fa.fa-pencil,\\n.memory-widget-toolbar .fa.fa-save {\\n  font-size: 1.2em;\\n  margin: 0 var(--theia-ui-padding);\\n  transition: opacity 0.3s;\\n}\\n\\n.memory-widget-header-click-zone:hover .fa.fa-pencil {\\n  opacity: 1;\\n}\\n\\n.memory-widget-header-click-zone .fa.fa-pencil {\\n  opacity: 0;\\n}\\n\\n.memory-widget-header-click-zone .theia-input {\\n  font-size: 1.5em;\\n  /* same as theia h2 */\\n}\\n\\n.t-mv-settings-group-header.disabled,\\n.memory-widget-header.disabled {\\n  font-style: italic;\\n  opacity: var(--memory-widget-disabled-opacity);\\n}\\n\\n.t-mv-view-container span {\\n  display: inline-block;\\n}\\n\\n.t-mv-diffed-ascii:not(:last-of-type) {\\n  margin-right: var(--theia-ui-padding);\\n}\\n\\n.t-mv-view-container span.different {\\n  position: relative;\\n}\\n\\n.t-mv-view-container span.different::before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.t-mv-view-container span.before.different::before,\\n.t-mv-view-container .before.different {\\n  background-color: var(--theia-memoryDiff-removedTextBackground);\\n}\\n\\n.t-mv-view-container span.after.different::before,\\n.t-mv-view-container .after.different {\\n  background-color: var(--theia-memoryDiff-insertedTextBackground);\\n}\\n\\n.t-mv-view-container span.before.different.hc::before,\\n.t-mv-view-container .before.different.hc {\\n  border-top: dotted 1px var(--theia-contrastActiveBorder);\\n  border-bottom: dotted 1px var(--theia-contrastActiveBorder);\\n  box-sizing: border-box;\\n}\\n\\n.t-mv-view-container span.after.different.hc::before,\\n.t-mv-view-container .after.different.hc {\\n  border-top: dashed 1px var(--theia-contrastBorder);\\n  border-bottom: dashed 1px var(--theia-contrastBorder);\\n  box-sizing: border-box;\\n}\\n\\n.memory-dockpanel-placeholder {\\n  position: absolute;\\n  top: 10px;\\n  padding: calc(2 * var(--theia-ui-padding));\\n  width: 100%;\\n  line-height: var(--memory-widget-placeholder-text-line-height);\\n}\\n\\n.memory-dockpanel-placeholder i.toolbar {\\n  background-color: var(--theia-errorForeground);\\n  vertical-align: middle;\\n  cursor: default;\\n}\\n\\n.t-mv-hover {\\n  position: fixed;\\n  font-family: monospace;\\n  box-sizing: border-box;\\n  padding: var(--theia-ui-padding);\\n  font-size: var(--theia-ui-font-size1);\\n  background: var(--theia-editorHoverWidget-background);\\n  border: 2px solid var(--theia-editorHoverWidget-border);\\n  /* This ensures that the hover is visible over the widget even when focused */\\n  z-index: 1000;\\n\\n  display: grid;\\n  grid-template-columns: max-content max-content;\\n  gap: calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\\n}\\n\\n.t-mv-hover.hidden {\\n  display: none;\\n}\\n\\n.t-mv-hover-key {\\n  color: var(--theia-symbolIcon-variableForeground);\\n}\\n\\n.t-mv-hover-value {\\n  color: var(--theia-variable-number-variable-color);\\n}\\n\\n.t-mv-hover-value.utf8 {\\n  color: var(--theia-variable-string-variable-color);\\n}\\n\\n.mw-more-memory-select {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-style: italic;\\n  opacity: 0.7;\\n}\\n\\n.mw-more-memory-select-top {\\n  display: flex;\\n  justify-content: center;\\n  height: 16px;\\n  padding-bottom: 1px;\\n  transition: border-color 0.1s;\\n  border-color: transparent;\\n}\\n\\n.mw-more-memory-select-top:hover {\\n  border-bottom: 1px solid;\\n  padding-bottom: 0;\\n  border-color: var(--theia-sideBar-foreground);\\n}\\n\\n.mw-more-memory-select select {\\n  border: none;\\n  background: none;\\n  border-radius: 3px;\\n  margin: 0 2px;\\n  position: relative;\\n  bottom: 1px;\\n  transition: background 0.1s;\\n  font-style: italic;\\n}\\n\\n.mw-more-memory-select select:hover {\\n  background: var(--theia-dropdown-background);\\n}\\n\\n.mw-more-memory-select button {\\n  background-color: unset;\\n  border: none;\\n  padding: 2px;\\n  color: var(--theia-sideBar-foreground);\\n}\\n\\n.mw-bookmarks-bar {\\n  padding: calc(var(--theia-ui-padding) / 2) 0;\\n}\\n\\n.mw-bookmarks-bar .bookmark-container {\\n  display: inline;\\n  position: relative;\\n  cursor: pointer;\\n  padding: 0 var(--theia-ui-padding);\\n}\\n\\n.mw-bookmarks-bar .bookmark-container .bookmark-radio-button {\\n  height: 100%;\\n  z-index: -1;\\n  border-radius: 3px;\\n  padding: 0 var(--theia-ui-padding);\\n  background-color: var(--theia-button-secondaryBackground);\\n  color: var(--theia-button-secondaryForeground);\\n  box-shadow: 0 2px 0 rgba(187, 187, 187, 0.4);\\n}\\n\\n.mw-bookmarks-bar input {\\n  position: absolute;\\n  left: 0;\\n  appearance: none;\\n  -webkit-appearance: none;\\n}\\n\\n.mw-bookmarks-bar input:checked ~ .bookmark-radio-button {\\n  background-color: var(--theia-button-background);\\n  color: var(--theia-button-foreground);\\n}\\n\\n.diff-options-widget .t-mv-group.view-group {\\n  grid-template-columns: repeat(2, 1fr) 30px;\\n  grid-template-rows: 18px 24px;\\n}\\n\\n#memory-table-widget.editable .t-mv-view .eight-bits:hover {\\n  cursor: pointer;\\n}\\n\\n#memory-table-widget.editable\\n  .t-mv-memory-container:focus\\n  .eight-bits.highlight {\\n  cursor: text;\\n}\\n\\n.diff-options-widget .memory-widget-header-click-zone,\\n.diff-options-widget .toggle-settings-click-zone,\\n#memory-layout-widget .memory-widget-header-click-zone,\\n#memory-layout-widget .toggle-settings-click-zone,\\n#memory-layout-widget .fa-unlock,\\n#memory-layout-widget .fa-lock {\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.multi-select-bar {\n  display: flex;\n  flex-flow: row nowrap;\n  user-select: none;\n  box-sizing: border-box;\n}\n\n.multi-select-checkbox-wrapper {\n  display: flex;\n  position: relative;\n  flex: auto;\n  text-align: center;\n}\n\n.multi-select-label {\n  height: 100%;\n  flex: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid;\n  padding: 0 var(--theia-ui-padding);\n  background-color: var(--theia-editor-background);\n  border-color: var(--theia-dropdown-border);\n  box-sizing: border-box;\n}\n\n.multi-select-checkbox-wrapper input:checked ~ .multi-select-label {\n  background-color: var(--theia-input-background);\n  border-color: var(--theia-sideBar-foreground);\n  text-decoration: underline;\n  font-weight: bolder;\n}\n\n.multi-select-checkbox {\n  appearance: none;\n  -webkit-appearance: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/memory-inspector/src/browser/utils/multi-select-bar.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,aAAa;EACb,qBAAqB;EACrB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,UAAU;EACV,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,iBAAiB;EACjB,kCAAkC;EAClC,gDAAgD;EAChD,0CAA0C;EAC1C,sBAAsB;AACxB;;AAEA;EACE,+CAA+C;EAC/C,6CAA6C;EAC7C,0BAA0B;EAC1B,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,wBAAwB;EACxB,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,SAAS;EACT,YAAY;EACZ,WAAW;EACX,eAAe;AACjB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2021 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.multi-select-bar {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  user-select: none;\\n  box-sizing: border-box;\\n}\\n\\n.multi-select-checkbox-wrapper {\\n  display: flex;\\n  position: relative;\\n  flex: auto;\\n  text-align: center;\\n}\\n\\n.multi-select-label {\\n  height: 100%;\\n  flex: auto;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 1px solid;\\n  padding: 0 var(--theia-ui-padding);\\n  background-color: var(--theia-editor-background);\\n  border-color: var(--theia-dropdown-border);\\n  box-sizing: border-box;\\n}\\n\\n.multi-select-checkbox-wrapper input:checked ~ .multi-select-label {\\n  background-color: var(--theia-input-background);\\n  border-color: var(--theia-sideBar-foreground);\\n  text-decoration: underline;\\n  font-weight: bolder;\\n}\\n\\n.multi-select-checkbox {\\n  appearance: none;\\n  -webkit-appearance: none;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  margin: 0;\\n  height: 100%;\\n  width: 100%;\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./register-widget.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./multi-select-bar.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}