{"version":3,"file":"packages_plugin-ext-vscode_lib_common_plugin-vscode-uri_js-packages_vsx-registry_lib_common_o-9c369c.js","mappings":"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","sources":["webpack:///../../dev-packages/ovsx-client/src/index.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-api-filter.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-http-client.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-mock-client.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-router-client.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-router-filters/abstract-reg-exp-filter.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-router-filters/extension-id-matches-filter.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-router-filters/index.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-router-filters/request-contains-filter.ts?","webpack:///../../dev-packages/ovsx-client/src/ovsx-types.ts?","webpack:///../../packages/plugin-ext-vscode/src/common/plugin-vscode-uri.ts?","webpack:///../../packages/vsx-registry/src/common/ovsx-client-provider.ts?","webpack:///../../packages/vsx-registry/src/common/vsx-environment.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { OVSXApiFilter, OVSXApiFilterImpl } from './ovsx-api-filter';\nexport { OVSXHttpClient } from './ovsx-http-client';\nexport { OVSXMockClient } from './ovsx-mock-client';\nexport { OVSXRouterClient, OVSXRouterConfig, OVSXRouterFilterFactory as FilterFactory } from './ovsx-router-client';\nexport * from './ovsx-router-filters';\nexport * from './ovsx-types';\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as semver from 'semver';\nimport { VSXAllVersions, VSXBuiltinNamespaces, VSXExtensionRaw, VSXSearchEntry } from './ovsx-types';\n\nexport const OVSXApiFilter = Symbol('OVSXApiFilter');\n/**\n * Filter various data types based on a pre-defined supported VS Code API version.\n */\nexport interface OVSXApiFilter {\n    supportedApiVersion: string;\n    /**\n     * Get the latest compatible extension version:\n     * - A builtin extension is fetched based on the extension version which matches the API.\n     * - An extension satisfies compatibility if its `engines.vscode` version is supported.\n     *\n     * @param extensionId the extension id.\n     * @returns the data for the latest compatible extension version if available, else `undefined`.\n     */\n    getLatestCompatibleExtension(extensions: VSXExtensionRaw[]): VSXExtensionRaw | undefined;\n    getLatestCompatibleVersion(searchEntry: VSXSearchEntry): VSXAllVersions | undefined;\n}\n\nexport class OVSXApiFilterImpl implements OVSXApiFilter {\n\n    constructor(\n        public supportedApiVersion: string\n    ) { }\n\n    getLatestCompatibleExtension(extensions: VSXExtensionRaw[]): VSXExtensionRaw | undefined {\n        if (extensions.length === 0) {\n            return;\n        } else if (this.isBuiltinNamespace(extensions[0].namespace.toLowerCase())) {\n            return extensions.find(extension => this.versionGreaterThanOrEqualTo(extension.version, this.supportedApiVersion));\n        } else {\n            return extensions.find(extension => this.supportedVscodeApiSatisfies(extension.engines?.vscode ?? '*'));\n        }\n    }\n\n    getLatestCompatibleVersion(searchEntry: VSXSearchEntry): VSXAllVersions | undefined {\n        function getLatestCompatibleVersion(predicate: (allVersions: VSXAllVersions) => boolean): VSXAllVersions | undefined {\n            if (searchEntry.allVersions) {\n                return searchEntry.allVersions.find(predicate);\n            }\n            // If the allVersions field is missing then try to use the\n            // searchEntry as VSXAllVersions and check if it's compatible:\n            if (predicate(searchEntry)) {\n                return searchEntry;\n            }\n        }\n        if (this.isBuiltinNamespace(searchEntry.namespace)) {\n            return getLatestCompatibleVersion(allVersions => this.versionGreaterThanOrEqualTo(allVersions.version, this.supportedApiVersion));\n        } else {\n            return getLatestCompatibleVersion(allVersions => this.supportedVscodeApiSatisfies(allVersions.engines?.vscode ?? '*'));\n        }\n    }\n\n    protected isBuiltinNamespace(namespace: string): boolean {\n        return VSXBuiltinNamespaces.is(namespace);\n    }\n\n    /**\n     * @returns `a >= b`\n     */\n    protected versionGreaterThanOrEqualTo(a: string, b: string): boolean {\n        const versionA = semver.clean(a);\n        const versionB = semver.clean(b);\n        if (!versionA || !versionB) {\n            return false;\n        }\n        return semver.lte(versionA, versionB);\n    }\n\n    protected supportedVscodeApiSatisfies(vscodeApiRange: string): boolean {\n        return semver.satisfies(this.supportedApiVersion, vscodeApiRange);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { OVSXClient, VSXQueryOptions, VSXQueryResult, VSXSearchOptions, VSXSearchResult } from './ovsx-types';\nimport { RequestContext, RequestService } from '@theia/request';\n\nexport class OVSXHttpClient implements OVSXClient {\n\n    /**\n     * @param requestService\n     * @returns factory that will cache clients based on the requested input URL.\n     */\n    static createClientFactory(requestService: RequestService): (url: string) => OVSXClient {\n        // eslint-disable-next-line no-null/no-null\n        const cachedClients: Record<string, OVSXClient> = Object.create(null);\n        return url => cachedClients[url] ??= new this(url, requestService);\n    }\n\n    constructor(\n        protected vsxRegistryUrl: string,\n        protected requestService: RequestService\n    ) { }\n\n    async search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        try {\n            return await this.requestJson(this.buildUrl('api/-/search', searchOptions));\n        } catch (err) {\n            return {\n                error: err?.message || String(err),\n                offset: -1,\n                extensions: []\n            };\n        }\n    }\n\n    async query(queryOptions?: VSXQueryOptions): Promise<VSXQueryResult> {\n        try {\n            return await this.requestJson(this.buildUrl('api/-/query', queryOptions));\n        } catch (error) {\n            console.warn(error);\n            return {\n                extensions: []\n            };\n        }\n    }\n\n    protected async requestJson<R>(url: string): Promise<R> {\n        return RequestContext.asJson<R>(await this.requestService.request({\n            url,\n            headers: { 'Accept': 'application/json' }\n        }));\n    }\n\n    protected buildUrl(url: string, query?: object): string {\n        return new URL(`${url}${this.buildQueryString(query)}`, this.vsxRegistryUrl).toString();\n    }\n\n    protected buildQueryString(searchQuery?: object): string {\n        if (!searchQuery) {\n            return '';\n        }\n        let queryString = '';\n        for (const [key, value] of Object.entries(searchQuery)) {\n            if (typeof value === 'string') {\n                queryString += `&${key}=${encodeURIComponent(value)}`;\n            } else if (typeof value === 'boolean' || typeof value === 'number') {\n                queryString += `&${key}=${value}`;\n            }\n        }\n        return queryString && '?' + queryString.slice(1);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ExtensionLike, OVSXClient, VSXExtensionRaw, VSXQueryOptions, VSXQueryResult, VSXSearchOptions, VSXSearchResult } from './ovsx-types';\n\n/**\n * Querying will only find exact matches.\n * Searching will try to find the query string in various fields.\n */\nexport class OVSXMockClient implements OVSXClient {\n\n    constructor(\n        public extensions: VSXExtensionRaw[] = []\n    ) { }\n\n    setExtensions(extensions: VSXExtensionRaw[]): this {\n        this.extensions = extensions;\n        return this;\n    }\n\n    /**\n     * @param baseUrl required to construct the URLs required by {@link VSXExtensionRaw}.\n     * @param ids list of ids to generate {@link VSXExtensionRaw} from.\n     */\n    setExtensionsFromIds(baseUrl: string, ids: string[]): this {\n        const now = Date.now();\n        const url = new OVSXMockClient.UrlBuilder(baseUrl);\n        this.extensions = ids.map((extension, i) => {\n            const [id, version = '0.0.1'] = extension.split('@', 2);\n            const [namespace, name] = id.split('.', 2);\n            return {\n                allVersions: {\n                    [version]: url.extensionUrl(namespace, name, `/${version}`)\n                },\n                displayName: name,\n                downloadCount: 0,\n                files: {\n                    download: url.extensionFileUrl(namespace, name, version, `/${id}-${version}.vsix`)\n                },\n                name,\n                namespace,\n                namespaceAccess: 'public',\n                namespaceUrl: url.namespaceUrl(namespace),\n                publishedBy: {\n                    loginName: 'mock'\n                },\n                reviewCount: 0,\n                reviewsUrl: url.extensionReviewsUrl(namespace, name),\n                timestamp: new Date(now - ids.length + i + 1).toISOString(),\n                version,\n                description: `Mock VS Code Extension for ${id}`\n            };\n        });\n        return this;\n    }\n\n    async query(queryOptions?: VSXQueryOptions): Promise<VSXQueryResult> {\n        return {\n            extensions: this.extensions\n                .filter(extension => typeof queryOptions === 'object' && (\n                    this.compare(queryOptions.extensionId, this.id(extension)) &&\n                    this.compare(queryOptions.extensionName, extension.name) &&\n                    this.compare(queryOptions.extensionVersion, extension.version) &&\n                    this.compare(queryOptions.namespaceName, extension.namespace)\n                ))\n        };\n    }\n\n    async search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        const query = searchOptions?.query;\n        const offset = searchOptions?.offset ?? 0;\n        const size = searchOptions?.size ?? 18;\n        const end = offset + size;\n        return {\n            offset,\n            extensions: this.extensions\n                .filter(extension => typeof query !== 'string' || (\n                    this.includes(query, this.id(extension)) ||\n                    this.includes(query, extension.description) ||\n                    this.includes(query, extension.displayName)\n                ))\n                .sort((a, b) => this.sort(a, b, searchOptions))\n                .filter((extension, i) => i >= offset && i < end)\n                .map(extension => ({\n                    downloadCount: extension.downloadCount,\n                    files: extension.files,\n                    name: extension.name,\n                    namespace: extension.namespace,\n                    timestamp: extension.timestamp,\n                    url: `${extension.namespaceUrl}/${extension.name}`,\n                    version: extension.version,\n                }))\n        };\n    }\n\n    protected id(extension: ExtensionLike): string {\n        return `${extension.namespace}.${extension.name}`;\n    }\n\n    /**\n     * Case sensitive.\n     */\n    protected compare(expected?: string, value?: string): boolean {\n        return expected === undefined || value === undefined || expected === value;\n    }\n\n    /**\n     * Case insensitive.\n     */\n    protected includes(needle: string, value?: string): boolean {\n        return value === undefined || value.toLowerCase().includes(needle.toLowerCase());\n    }\n\n    protected sort(a: VSXExtensionRaw, b: VSXExtensionRaw, searchOptions?: VSXSearchOptions): number {\n        let order: number = 0;\n        const sortBy = searchOptions?.sortBy ?? 'relevance';\n        const sortOrder = searchOptions?.sortOrder ?? 'desc';\n        if (sortBy === 'averageRating') {\n            order = (a.averageRating ?? -1) - (b.averageRating ?? -1);\n        } else if (sortBy === 'downloadCount') {\n            order = a.downloadCount - b.downloadCount;\n        } else if (sortBy === 'relevance') {\n            order = 0;\n        } else if (sortBy === 'timestamp') {\n            order = new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();\n        }\n        if (sortOrder === 'asc') {\n            order *= -1;\n        }\n        return order;\n    }\n}\nexport namespace OVSXMockClient {\n\n    /**\n     * URLs should respect the official OpenVSX API:\n     * https://open-vsx.org/swagger-ui/index.html\n     */\n    export class UrlBuilder {\n\n        constructor(\n            protected baseUrl: string\n        ) { }\n\n        url(path: string): string {\n            return this.baseUrl + path;\n        }\n\n        apiUrl(path: string): string {\n            return this.url(`/api${path}`);\n        }\n\n        namespaceUrl(namespace: string, path = ''): string {\n            return this.apiUrl(`/${namespace}${path}`);\n        }\n\n        extensionUrl(namespace: string, name: string, path = ''): string {\n            return this.apiUrl(`/${namespace}/${name}${path}`);\n        }\n\n        extensionReviewsUrl(namespace: string, name: string): string {\n            return this.apiUrl(`/${namespace}/${name}/reviews`);\n        }\n\n        extensionFileUrl(namespace: string, name: string, version: string, path = ''): string {\n            return this.apiUrl(`/${namespace}/${name}/${version}/file${path}`);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ExtensionLike, OVSXClient, OVSXClientProvider, VSXExtensionRaw, VSXQueryOptions, VSXQueryResult, VSXSearchEntry, VSXSearchOptions, VSXSearchResult } from './ovsx-types';\nimport type { MaybePromise } from './types';\n\nexport interface OVSXRouterFilter {\n    filterSearchOptions?(searchOptions?: VSXSearchOptions): MaybePromise<unknown>;\n    filterQueryOptions?(queryOptions?: VSXQueryOptions): MaybePromise<unknown>;\n    filterExtension?(extension: ExtensionLike): MaybePromise<unknown>;\n}\n\n/**\n * @param conditions key/value mapping of condition statements that rules may process\n * @param remainingKeys keys left to be processed, remove items from it when you handled them\n */\nexport type OVSXRouterFilterFactory = (conditions: Readonly<Record<string, unknown>>, remainingKeys: Set<string>) => MaybePromise<OVSXRouterFilter | undefined>;\n\n/**\n * Helper function to create factories that handle a single condition key.\n */\nexport function createFilterFactory(conditionKey: string, factory: (conditionValue: unknown) => OVSXRouterFilter | undefined): OVSXRouterFilterFactory {\n    return (conditions, remainingKeys) => {\n        if (conditionKey in conditions) {\n            const filter = factory(conditions[conditionKey]);\n            if (filter) {\n                remainingKeys.delete(conditionKey);\n                return filter;\n            }\n        }\n    };\n}\n\nexport interface OVSXRouterConfig {\n    /**\n     * Registry aliases that will be used for routing.\n     */\n    registries?: {\n        [alias: string]: string\n    }\n    /**\n     * The registry/ies to use by default.\n     */\n    use: string | string[]\n    /**\n     * Filters for the different phases of interfacing with a registry.\n     */\n    rules?: OVSXRouterRule[]\n}\n\nexport interface OVSXRouterRule {\n    [condition: string]: unknown\n    use?: string | string[] | null\n}\n\n/**\n * @internal\n */\nexport interface OVSXRouterParsedRule {\n    filters: OVSXRouterFilter[]\n    use: string[]\n}\n\n/**\n * Route and agglomerate queries according to {@link routerConfig}.\n * {@link ruleFactories} is the actual logic used to evaluate the config.\n * Each rule implementation will be ran sequentially over each configured rule.\n */\nexport class OVSXRouterClient implements OVSXClient {\n\n    static async FromConfig(routerConfig: OVSXRouterConfig, clientProvider: OVSXClientProvider, filterFactories: OVSXRouterFilterFactory[]): Promise<OVSXRouterClient> {\n        const rules = routerConfig.rules ? await this.ParseRules(routerConfig.rules, filterFactories, routerConfig.registries) : [];\n        return new this(\n            this.ParseUse(routerConfig.use, routerConfig.registries),\n            clientProvider,\n            rules\n        );\n    }\n\n    protected static async ParseRules(rules: OVSXRouterRule[], filterFactories: OVSXRouterFilterFactory[], aliases?: Record<string, string>): Promise<OVSXRouterParsedRule[]> {\n        return Promise.all(rules.map(async ({ use, ...conditions }) => {\n            const remainingKeys = new Set(Object.keys(conditions));\n            const filters = removeNullValues(await Promise.all(filterFactories.map(filterFactory => filterFactory(conditions, remainingKeys))));\n            if (remainingKeys.size > 0) {\n                throw new Error(`unknown conditions: ${Array.from(remainingKeys).join(', ')}`);\n            }\n            return {\n                filters,\n                use: this.ParseUse(use, aliases)\n            };\n        }));\n    }\n\n    protected static ParseUse(use: string | string[] | null | undefined, aliases?: Record<string, string>): string[] {\n        if (typeof use === 'string') {\n            return [alias(use)];\n        } else if (Array.isArray(use)) {\n            return use.map(alias);\n        } else {\n            return [];\n        }\n        function alias(aliasOrUri: string): string {\n            return aliases?.[aliasOrUri] ?? aliasOrUri;\n        }\n    }\n\n    constructor(\n        protected readonly useDefault: string[],\n        protected readonly clientProvider: OVSXClientProvider,\n        protected readonly rules: OVSXRouterParsedRule[],\n    ) { }\n\n    async search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        return this.runRules(\n            filter => filter.filterSearchOptions?.(searchOptions),\n            rule => rule.use.length > 0\n                ? this.mergedSearch(rule.use, searchOptions)\n                : this.emptySearchResult(searchOptions),\n            () => this.mergedSearch(this.useDefault, searchOptions)\n        );\n    }\n\n    async query(queryOptions: VSXQueryOptions = {}): Promise<VSXQueryResult> {\n        return this.runRules(\n            filter => filter.filterQueryOptions?.(queryOptions),\n            rule => rule.use.length > 0\n                ? this.mergedQuery(rule.use, queryOptions)\n                : this.emptyQueryResult(queryOptions),\n            () => this.mergedQuery(this.useDefault, queryOptions)\n        );\n    }\n\n    protected emptySearchResult(searchOptions?: VSXSearchOptions): VSXSearchResult {\n        return {\n            extensions: [],\n            offset: searchOptions?.offset ?? 0\n        };\n    }\n\n    protected emptyQueryResult(queryOptions?: VSXQueryOptions): VSXQueryResult {\n        return {\n            extensions: []\n        };\n    }\n\n    protected async mergedQuery(registries: string[], queryOptions?: VSXQueryOptions): Promise<VSXQueryResult> {\n        return this.mergeQueryResults(await createMapping(registries, async registry => (await this.clientProvider(registry)).query(queryOptions)));\n    }\n\n    protected async mergedSearch(registries: string[], searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        return this.mergeSearchResults(await createMapping(registries, async registry => (await this.clientProvider(registry)).search(searchOptions)));\n    }\n\n    protected async mergeSearchResults(results: Map<string, VSXSearchResult>): Promise<VSXSearchResult> {\n        const filtering = [] as Promise<VSXSearchEntry[]>[];\n        results.forEach((result, sourceUri) => {\n            filtering.push(Promise\n                .all(result.extensions.map(extension => this.filterExtension(sourceUri, extension)))\n                .then(removeNullValues)\n            );\n        });\n        return {\n            extensions: interleave(await Promise.all(filtering)),\n            offset: Math.min(...Array.from(results.values(), result => result.offset))\n        };\n    }\n\n    protected async mergeQueryResults(results: Map<string, VSXQueryResult>): Promise<VSXQueryResult> {\n        const filtering = [] as Promise<VSXExtensionRaw | undefined>[];\n        results.forEach((result, sourceUri) => {\n            result.extensions.forEach(extension => filtering.push(this.filterExtension(sourceUri, extension)));\n        });\n        return {\n            extensions: removeNullValues(await Promise.all(filtering))\n        };\n    }\n\n    protected async filterExtension<T extends ExtensionLike>(sourceUri: string, extension: T): Promise<T | undefined> {\n        return this.runRules(\n            filter => filter.filterExtension?.(extension),\n            rule => rule.use.includes(sourceUri) ? extension : undefined,\n            () => extension\n        );\n    }\n\n    protected runRules<T>(runFilter: (filter: OVSXRouterFilter) => unknown, onRuleMatched: (rule: OVSXRouterParsedRule) => T): Promise<T | undefined>;\n    protected runRules<T, U>(runFilter: (filter: OVSXRouterFilter) => unknown, onRuleMatched: (rule: OVSXRouterParsedRule) => T, onNoRuleMatched: () => U): Promise<T | U>;\n    protected async runRules<T, U>(\n        runFilter: (filter: OVSXRouterFilter) => unknown,\n        onRuleMatched: (rule: OVSXRouterParsedRule) => T,\n        onNoRuleMatched?: () => U\n    ): Promise<T | U | undefined> {\n        for (const rule of this.rules) {\n            const results = removeNullValues(await Promise.all(rule.filters.map(filter => runFilter(filter))));\n            if (results.length > 0 && results.every(value => value)) {\n                return onRuleMatched(rule);\n            }\n        }\n        return onNoRuleMatched?.();\n    }\n}\n\nfunction nonNullable<T>(value: T | null | undefined): value is T {\n    // eslint-disable-next-line no-null/no-null\n    return typeof value !== 'undefined' && value !== null;\n}\n\nfunction removeNullValues<T>(values: (T | null | undefined)[]): T[] {\n    return values.filter(nonNullable);\n}\n\n/**\n * Create a map where the keys are each element from {@link values} and the\n * values are the result of a mapping function applied on the key.\n */\nasync function createMapping<T, U>(values: T[], map: (value: T, index: number) => MaybePromise<U>, thisArg?: unknown): Promise<Map<T, U>> {\n    return new Map(await Promise.all(values.map(async (value, index) => [value, await map.call(thisArg, value, index)] as [T, U])));\n}\n\n/**\n * @example\n * interleave([[1, 2, 3], [4, 5], [6, 7, 8]]) === [1, 4, 6, 2, 5, 7, 3, 8]\n */\nfunction interleave<T>(arrays: T[][]): T[] {\n    const interleaved: T[] = [];\n    const length = Math.max(...arrays.map(array => array.length));\n    for (let i = 0; i < length; i++) {\n        for (const array of arrays) {\n            if (i < array.length) {\n                interleaved.push(array[i]);\n            }\n        }\n    }\n    return interleaved;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport abstract class AbstractRegExpFilter {\n\n    constructor(\n        protected regExp: RegExp\n    ) { }\n\n    protected test(value: unknown): boolean {\n        return typeof value === 'string' && this.regExp.test(value);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { createFilterFactory, OVSXRouterFilter } from '../ovsx-router-client';\nimport { ExtensionLike } from '../ovsx-types';\nimport { AbstractRegExpFilter } from './abstract-reg-exp-filter';\n\nexport const ExtensionIdMatchesFilterFactory = createFilterFactory('ifExtensionIdMatches', ifExtensionIdMatches => {\n    if (typeof ifExtensionIdMatches !== 'string') {\n        throw new TypeError(`expected a string, got: ${typeof ifExtensionIdMatches}`);\n    }\n    return new ExtensionIdMatchesFilter(new RegExp(ifExtensionIdMatches, 'i'));\n});\n\nexport class ExtensionIdMatchesFilter extends AbstractRegExpFilter implements OVSXRouterFilter {\n    filterExtension(extension: ExtensionLike): boolean {\n        return this.test(ExtensionLike.id(extension));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { ExtensionIdMatchesFilterFactory } from './extension-id-matches-filter';\nexport { RequestContainsFilterFactory } from './request-contains-filter';\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { createFilterFactory, OVSXRouterFilter } from '../ovsx-router-client';\nimport { VSXQueryOptions, VSXSearchOptions } from '../ovsx-types';\nimport { AbstractRegExpFilter } from './abstract-reg-exp-filter';\n\nexport const RequestContainsFilterFactory = createFilterFactory('ifRequestContains', ifRequestContains => {\n    if (typeof ifRequestContains !== 'string') {\n        throw new TypeError(`expected a string, got: ${typeof ifRequestContains}`);\n    }\n    return new RequestContainsFilter(new RegExp(ifRequestContains, 'i'));\n});\n\nexport class RequestContainsFilter extends AbstractRegExpFilter implements OVSXRouterFilter {\n    filterSearchOptions(searchOptions?: VSXSearchOptions): boolean {\n        return !searchOptions || this.test(searchOptions.query) || this.test(searchOptions.category);\n    }\n    filterQueryOptions(queryOptions?: VSXQueryOptions): boolean {\n        return !queryOptions || Object.values(queryOptions).some(this.test, this);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MaybePromise } from './types';\n\nexport interface ExtensionLike {\n    name: string;\n    namespace: string;\n    version?: string;\n}\nexport namespace ExtensionLike {\n    export function id<T extends ExtensionLike>(extension: T): `${string}.${string}` {\n        return `${extension.namespace}.${extension.name}`;\n    }\n    export function idWithVersion<T extends ExtensionLike>(extension: T): `${string}.${string}@${string}` {\n        if (!extension.version) {\n            throw new Error(`no valid \"version\" value provided for \"${id(extension)}\"`);\n        }\n        return `${id(extension)}@${extension.version}`;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    export function fromId(id: string): ExtensionLike {\n        const [left, version] = id.split('@', 2);\n        const [namespace, name] = left.split('.', 2);\n        return {\n            name,\n            namespace,\n            version\n        };\n    }\n}\n\nexport interface OVSXClient {\n    /**\n     * GET https://openvsx.org/api/-/search\n     */\n    search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult>;\n    /**\n     * GET https://openvsx.org/api/-/query\n     *\n     * Fetch one or all versions of an extension.\n     */\n    query(queryOptions?: VSXQueryOptions): Promise<VSXQueryResult>;\n}\n\n/** @deprecated since 1.31.0 use {@link VSXSearchOptions} instead */\nexport type VSXSearchParam = VSXSearchOptions;\n/**\n * The possible options when performing a search.\n *\n * For available options, and default values consult the `swagger`: https://open-vsx.org/swagger-ui/index.html.\n *\n * Should be aligned with https://github.com/eclipse/openvsx/blob/b5694a712e07d266801394916bac30609e16d77b/server/src/main/java/org/eclipse/openvsx/RegistryAPI.java#L246-L266\n */\nexport interface VSXSearchOptions {\n    /**\n     * The query text for searching.\n     */\n    query?: string;\n    /**\n     * The extension category.\n     */\n    category?: string;\n    /**\n     * The maximum number of entries to return.\n     */\n    size?: number;\n    /**\n     * The number of entries to skip (usually a multiple of the page size).\n     */\n    offset?: number;\n    /**\n     * The sort order.\n     */\n    sortOrder?: 'asc' | 'desc';\n    /**\n     * The sort key.\n     */\n    sortBy?: 'averageRating' | 'downloadCount' | 'relevance' | 'timestamp';\n    /**\n     * By default an OpenVSX registry will return the last known version of\n     * extensions. Setting this field to `true` will have the registry specify\n     * the {@link VSXExtensionRaw.allVersions} field which references all known\n     * versions for each returned extension.\n     *\n     * @default false\n     */\n    includeAllVersions?: boolean;\n}\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/e8f64fe145fc05d2de1469735d50a7a90e400bc4/server/src/main/java/org/eclipse/openvsx/json/SearchResultJson.java\n */\nexport interface VSXSearchResult {\n    error?: string;\n    offset: number;\n    extensions: VSXSearchEntry[];\n}\n\n/** @deprecated since 1.31.0 use {@link VSXQueryOptions} instead */\nexport type VSXQueryParam = VSXQueryOptions;\n/**\n * The possible options when performing a search.\n *\n * For available options, and default values consult the `swagger`: https://open-vsx.org/swagger-ui/index.html.\n *\n * Should be aligned with https://github.com/eclipse/openvsx/blob/b5694a712e07d266801394916bac30609e16d77b/server/src/main/java/org/eclipse/openvsx/json/QueryParamJson.java#L18-L46\n */\nexport interface VSXQueryOptions {\n    namespaceName?: string;\n    extensionName?: string;\n    extensionVersion?: string;\n    extensionId?: string;\n    extensionUuid?: string;\n    namespaceUuid?: string;\n    includeAllVersions?: boolean;\n}\n\nexport interface VSXQueryResult {\n    extensions: VSXExtensionRaw[];\n}\n\n/**\n * This type describes the data as found in {@link VSXSearchEntry.allVersions}.\n *\n * Note that this type only represents one version of a given plugin, despite the name.\n */\nexport interface VSXAllVersions {\n    url: string;\n    version: string;\n    engines?: {\n        [version: string]: string;\n    };\n}\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/master/server/src/main/java/org/eclipse/openvsx/json/SearchEntryJson.java\n */\nexport interface VSXSearchEntry {\n    url: string;\n    files: {\n        download: string;\n        manifest?: string;\n        readme?: string;\n        license?: string;\n        icon?: string;\n    };\n    name: string;\n    namespace: string;\n    version: string;\n    timestamp: string;\n    averageRating?: number;\n    downloadCount: number;\n    displayName?: string;\n    description?: string;\n    /**\n     * May be undefined when {@link VSXSearchOptions.includeAllVersions} is\n     * `false` or `undefined`.\n     */\n    allVersions?: VSXAllVersions[];\n}\n\nexport type VSXExtensionNamespaceAccess = 'public' | 'restricted';\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/master/server/src/main/java/org/eclipse/openvsx/json/UserJson.java\n */\nexport interface VSXUser {\n    loginName: string;\n    homepage?: string;\n}\n\nexport interface VSXExtensionRawFiles {\n    download: string;\n    readme?: string;\n    license?: string;\n    icon?: string;\n}\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/master/server/src/main/java/org/eclipse/openvsx/json/ExtensionJson.java\n */\nexport interface VSXExtensionRaw {\n    error?: string;\n    namespaceUrl: string;\n    reviewsUrl: string;\n    name: string;\n    namespace: string;\n    publishedBy: VSXUser\n    namespaceAccess: VSXExtensionNamespaceAccess;\n    files: VSXExtensionRawFiles;\n    allVersions: {\n        [version: string]: string;\n    };\n    averageRating?: number;\n    downloadCount: number;\n    reviewCount: number;\n    version: string;\n    timestamp: string;\n    preview?: boolean;\n    displayName?: string;\n    description?: string;\n    categories?: string[];\n    tags?: string[];\n    license?: string;\n    homepage?: string;\n    repository?: string;\n    bugs?: string;\n    markdown?: string;\n    galleryColor?: string;\n    galleryTheme?: string;\n    qna?: string;\n    engines?: {\n        [engine: string]: string;\n    };\n}\n\nexport interface VSXResponseError extends Error {\n    statusCode: number;\n}\n\nexport namespace VSXResponseError {\n    export function is(error: unknown): error is VSXResponseError {\n        return !!error && typeof error === 'object' && typeof (error as VSXResponseError).statusCode === 'number';\n    }\n}\n\n/**\n * Builtin namespaces maintained by the framework.\n */\nexport namespace VSXBuiltinNamespaces {\n\n    /**\n     * Namespace for individual vscode builtin extensions.\n     */\n    export const VSCODE = 'vscode';\n\n    /**\n     * Namespace for vscode builtin extension packs.\n     * - corresponds to: https://github.com/eclipse-theia/vscode-builtin-extensions/blob/af9cfeb2ea23e1668a8340c1c2fb5afd56be07d7/src/create-extension-pack.js#L45\n     */\n    export const THEIA = 'eclipse-theia';\n\n    /**\n     * Determines if the extension namespace is a builtin maintained by the framework.\n     * @param namespace the extension namespace to verify.\n     */\n    export function is(namespace: string): boolean {\n        return namespace === VSCODE\n            || namespace === THEIA;\n    }\n}\n\nexport type OVSXClientProvider = (uri: string) => MaybePromise<OVSXClient>;\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\n/**\n * Static methods for identifying a plugin as the target of the VSCode deployment system.\n * In practice, this means that it will be resolved and deployed by the Open-VSX system.\n */\nexport namespace VSCodeExtensionUri {\n    export const VSCODE_PREFIX = 'vscode:extension/';\n    /**\n     * Should be used to prefix a plugin's ID to ensure that it is identified as a VSX Extension.\n     * @returns `vscode:extension/${id}`\n     */\n    export function toVsxExtensionUriString(id: string): string {\n        return `${VSCODE_PREFIX}${id}`;\n    }\n    export function toUri(name: string, namespace: string): URI;\n    export function toUri(id: string): URI;\n    export function toUri(idOrName: string, namespace?: string): URI {\n        if (typeof namespace === 'string') {\n            return new URI(toVsxExtensionUriString(`${namespace}.${idOrName}`));\n        } else {\n            return new URI(toVsxExtensionUriString(idOrName));\n        }\n    }\n    export function toId(uri: URI): string | undefined {\n        if (uri.scheme === 'vscode' && uri.path.dir.toString() === 'extension') {\n            return uri.path.base;\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MaybePromise } from '@theia/core/lib/common';\nimport { RequestService } from '@theia/core/shared/@theia/request';\nimport type { interfaces } from '@theia/core/shared/inversify';\nimport { OVSXClient, OVSXHttpClient } from '@theia/ovsx-client';\nimport { VSXEnvironment } from './vsx-environment';\n\nexport const OVSXUrlResolver = Symbol('OVSXUrlResolver') as symbol & interfaces.Abstract<OVSXUrlResolver>;\nexport type OVSXUrlResolver = (value: string) => MaybePromise<string>;\n\nexport const OVSXClientProvider = Symbol('OVSXClientProvider') as symbol & interfaces.Abstract<OVSXClientProvider>;\nexport type OVSXClientProvider = () => MaybePromise<OVSXClient>;\n\n/**\n * @deprecated since 1.32.0\n */\nexport async function createOVSXClient(vsxEnvironment: VSXEnvironment, requestService: RequestService): Promise<OVSXClient> {\n    const apiUrl = await vsxEnvironment.getRegistryApiUri();\n    return new OVSXHttpClient(apiUrl, requestService);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type { OVSXRouterConfig } from '@theia/ovsx-client';\n\nexport const VSX_ENVIRONMENT_PATH = '/services/vsx-environment';\n\nexport const VSXEnvironment = Symbol('VSXEnvironment');\nexport interface VSXEnvironment {\n    getRegistryUri(): Promise<string>;\n    getRegistryApiUri(): Promise<string>;\n    getVscodeApiVersion(): Promise<string>;\n    getOvsxRouterConfig?(): Promise<OVSXRouterConfig | undefined>;\n}\n"],"names":[],"sourceRoot":""}