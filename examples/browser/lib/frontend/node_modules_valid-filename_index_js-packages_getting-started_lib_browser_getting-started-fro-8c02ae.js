"use strict";
(self["webpackChunk_theia_example_browser"] = self["webpackChunk_theia_example_browser"] || []).push([["node_modules_valid-filename_index_js-packages_getting-started_lib_browser_getting-started-fro-8c02ae"],{

/***/ "../../node_modules/filename-reserved-regex/index.js":
/*!***********************************************************!*\
  !*** ../../node_modules/filename-reserved-regex/index.js ***!
  \***********************************************************/
/***/ (function(module) {


/* eslint-disable no-control-regex */
// TODO: remove parens when Node.js 6 is targeted. Node.js 4 barfs at it.
module.exports = () => (/[<>:"\/\\|?*\x00-\x1F]/g);
module.exports.windowsNames = () => (/^(con|prn|aux|nul|com[0-9]|lpt[0-9])$/i);

;(globalThis['theia'] = globalThis['theia'] || {})['filename-reserved-regex'] = this;


/***/ }),

/***/ "../../node_modules/valid-filename/index.js":
/*!**************************************************!*\
  !*** ../../node_modules/valid-filename/index.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


const filenameReservedRegex = __webpack_require__(/*! filename-reserved-regex */ "../../node_modules/filename-reserved-regex/index.js");

module.exports = str => {
	if (!str || str.length > 255) {
		return false;
	}

	if (filenameReservedRegex().test(str) || filenameReservedRegex.windowsNames().test(str)) {
		return false;
	}

	if (/^\.\.?$/.test(str)) {
		return false;
	}

	return true;
};

;(globalThis['theia'] = globalThis['theia'] || {})['valid-filename'] = this;


/***/ }),

/***/ "../../packages/getting-started/lib/browser/getting-started-contribution.js":
/*!**********************************************************************************!*\
  !*** ../../packages/getting-started/lib/browser/getting-started-contribution.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2018 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GettingStartedContribution = exports.GettingStartedCommand = void 0;
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "../../packages/core/shared/inversify/index.js");
const common_1 = __webpack_require__(/*! @theia/core/lib/common */ "../../packages/core/lib/common/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "../../packages/core/lib/browser/index.js");
const editor_manager_1 = __webpack_require__(/*! @theia/editor/lib/browser/editor-manager */ "../../packages/editor/lib/browser/editor-manager.js");
const getting_started_widget_1 = __webpack_require__(/*! ./getting-started-widget */ "../../packages/getting-started/lib/browser/getting-started-widget.js");
const file_service_1 = __webpack_require__(/*! @theia/filesystem/lib/browser/file-service */ "../../packages/filesystem/lib/browser/file-service.js");
const frontend_application_state_1 = __webpack_require__(/*! @theia/core/lib/browser/frontend-application-state */ "../../packages/core/lib/browser/frontend-application-state.js");
const preview_contribution_1 = __webpack_require__(/*! @theia/preview/lib/browser/preview-contribution */ "../../packages/preview/lib/browser/preview-contribution.js");
const browser_2 = __webpack_require__(/*! @theia/workspace/lib/browser */ "../../packages/workspace/lib/browser/index.js");
/**
 * Triggers opening the `GettingStartedWidget`.
 */
exports.GettingStartedCommand = {
    id: getting_started_widget_1.GettingStartedWidget.ID,
    label: getting_started_widget_1.GettingStartedWidget.LABEL
};
let GettingStartedContribution = class GettingStartedContribution extends browser_1.AbstractViewContribution {
    constructor() {
        super({
            widgetId: getting_started_widget_1.GettingStartedWidget.ID,
            widgetName: getting_started_widget_1.GettingStartedWidget.LABEL,
            defaultWidgetOptions: {
                area: 'main',
            }
        });
    }
    async onStart(app) {
        this.stateService.reachedState('ready').then(async () => {
            if (this.editorManager.all.length === 0) {
                await this.preferenceService.ready;
                const startupEditor = this.preferenceService.get('workbench.startupEditor');
                switch (startupEditor) {
                    case 'welcomePage':
                        this.openView({ reveal: true, activate: true });
                        break;
                    case 'welcomePageInEmptyWorkbench':
                        if (!this.workspaceService.opened) {
                            this.openView({ reveal: true, activate: true });
                        }
                        break;
                    case 'newUntitledFile':
                        this.commandRegistry.executeCommand(browser_1.CommonCommands.NEW_UNTITLED_TEXT_FILE.id);
                        break;
                    case 'readme':
                        await this.openReadme();
                        break;
                }
            }
        });
    }
    async openReadme() {
        const roots = await this.workspaceService.roots;
        const readmes = await Promise.all(roots.map(async (folder) => {
            var _a;
            const folderStat = await this.fileService.resolve(folder.resource);
            const fileArr = ((_a = folderStat === null || folderStat === void 0 ? void 0 : folderStat.children) === null || _a === void 0 ? void 0 : _a.sort((a, b) => a.name.localeCompare(b.name))) || [];
            const filePath = fileArr.find(file => file.name.toLowerCase() === 'readme.md') || fileArr.find(file => file.name.toLowerCase().startsWith('readme'));
            return filePath === null || filePath === void 0 ? void 0 : filePath.resource;
        }));
        const validReadmes = common_1.ArrayUtils.coalesce(readmes);
        if (validReadmes.length) {
            for (const readme of validReadmes) {
                await this.previewContribution.open(readme);
            }
        }
        else {
            // If no readme is found, show the welcome page.
            this.openView({ reveal: true, activate: true });
        }
    }
    registerCommands(registry) {
        registry.registerCommand(exports.GettingStartedCommand, {
            execute: () => this.openView({ reveal: true, activate: true }),
        });
    }
    registerMenus(menus) {
        menus.registerMenuAction(browser_1.CommonMenus.HELP, {
            commandId: exports.GettingStartedCommand.id,
            label: exports.GettingStartedCommand.label,
            order: 'a10'
        });
    }
};
__decorate([
    (0, inversify_1.inject)(common_1.CommandRegistry),
    __metadata("design:type", common_1.CommandRegistry)
], GettingStartedContribution.prototype, "commandRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(editor_manager_1.EditorManager),
    __metadata("design:type", editor_manager_1.EditorManager)
], GettingStartedContribution.prototype, "editorManager", void 0);
__decorate([
    (0, inversify_1.inject)(file_service_1.FileService),
    __metadata("design:type", file_service_1.FileService)
], GettingStartedContribution.prototype, "fileService", void 0);
__decorate([
    (0, inversify_1.inject)(browser_1.PreferenceService),
    __metadata("design:type", Object)
], GettingStartedContribution.prototype, "preferenceService", void 0);
__decorate([
    (0, inversify_1.inject)(preview_contribution_1.PreviewContribution),
    __metadata("design:type", preview_contribution_1.PreviewContribution)
], GettingStartedContribution.prototype, "previewContribution", void 0);
__decorate([
    (0, inversify_1.inject)(frontend_application_state_1.FrontendApplicationStateService),
    __metadata("design:type", frontend_application_state_1.FrontendApplicationStateService)
], GettingStartedContribution.prototype, "stateService", void 0);
__decorate([
    (0, inversify_1.inject)(browser_2.WorkspaceService),
    __metadata("design:type", browser_2.WorkspaceService)
], GettingStartedContribution.prototype, "workspaceService", void 0);
GettingStartedContribution = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], GettingStartedContribution);
exports.GettingStartedContribution = GettingStartedContribution;

;(globalThis['theia'] = globalThis['theia'] || {})['@theia/getting-started/lib/browser/getting-started-contribution'] = this;


/***/ }),

/***/ "../../packages/getting-started/lib/browser/getting-started-frontend-module.js":
/*!*************************************************************************************!*\
  !*** ../../packages/getting-started/lib/browser/getting-started-frontend-module.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2018 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
const getting_started_contribution_1 = __webpack_require__(/*! ./getting-started-contribution */ "../../packages/getting-started/lib/browser/getting-started-contribution.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "../../packages/core/shared/inversify/index.js");
const getting_started_widget_1 = __webpack_require__(/*! ./getting-started-widget */ "../../packages/getting-started/lib/browser/getting-started-widget.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "../../packages/core/lib/browser/index.js");
const getting_started_preferences_1 = __webpack_require__(/*! ./getting-started-preferences */ "../../packages/getting-started/lib/browser/getting-started-preferences.js");
__webpack_require__(/*! ../../src/browser/style/index.css */ "../../packages/getting-started/src/browser/style/index.css");
exports["default"] = new inversify_1.ContainerModule((bind) => {
    (0, browser_1.bindViewContribution)(bind, getting_started_contribution_1.GettingStartedContribution);
    bind(browser_1.FrontendApplicationContribution).toService(getting_started_contribution_1.GettingStartedContribution);
    bind(getting_started_widget_1.GettingStartedWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(context => ({
        id: getting_started_widget_1.GettingStartedWidget.ID,
        createWidget: () => context.container.get(getting_started_widget_1.GettingStartedWidget),
    })).inSingletonScope();
    (0, getting_started_preferences_1.bindGettingStartedPreferences)(bind);
});

;(globalThis['theia'] = globalThis['theia'] || {})['@theia/getting-started/lib/browser/getting-started-frontend-module'] = this;


/***/ }),

/***/ "../../packages/getting-started/lib/browser/getting-started-preferences.js":
/*!*********************************************************************************!*\
  !*** ../../packages/getting-started/lib/browser/getting-started-preferences.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2023 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindGettingStartedPreferences = exports.createGettingStartedPreferences = exports.GettingStartedPreferences = exports.GettingStartedPreferenceContribution = exports.GettingStartedPreferenceSchema = void 0;
const preferences_1 = __webpack_require__(/*! @theia/core/lib/browser/preferences */ "../../packages/core/lib/browser/preferences/index.js");
const frontend_application_config_provider_1 = __webpack_require__(/*! @theia/core/lib/browser/frontend-application-config-provider */ "../../packages/core/lib/browser/frontend-application-config-provider.js");
const nls_1 = __webpack_require__(/*! @theia/core/lib/common/nls */ "../../packages/core/lib/common/nls.js");
exports.GettingStartedPreferenceSchema = {
    'type': 'object',
    properties: {
        'workbench.startupEditor': {
            type: 'string',
            enum: ['none', 'welcomePage', 'readme', 'newUntitledFile', 'welcomePageInEmptyWorkbench'],
            enumDescriptions: [
                nls_1.nls.localizeByDefault('Start without an editor.'),
                nls_1.nls.localize('theia/getting-started/startup-editor/welcomePage', 'Open the Welcome page, with content to aid in getting started with {0} and extensions.', frontend_application_config_provider_1.FrontendApplicationConfigProvider.get().applicationName),
                nls_1.nls.localizeByDefault(`Open the README when opening a folder that contains one, fallback to \'welcomePage\' otherwise. 
                Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.`),
                nls_1.nls.localizeByDefault('Open a new untitled text file (only applies when opening an empty window).'),
                nls_1.nls.localizeByDefault('Open the Welcome page when opening an empty workbench.'),
            ],
            default: 'welcomePage',
            description: nls_1.nls.localizeByDefault('Controls which editor is shown at startup, if none are restored from the previous session.')
        },
    }
};
exports.GettingStartedPreferenceContribution = Symbol('GettingStartedPreferenceContribution');
exports.GettingStartedPreferences = Symbol('GettingStartedPreferences');
function createGettingStartedPreferences(preferences, schema = exports.GettingStartedPreferenceSchema) {
    return (0, preferences_1.createPreferenceProxy)(preferences, schema);
}
exports.createGettingStartedPreferences = createGettingStartedPreferences;
function bindGettingStartedPreferences(bind) {
    bind(exports.GettingStartedPreferences).toDynamicValue(ctx => {
        const preferences = ctx.container.get(preferences_1.PreferenceService);
        const contribution = ctx.container.get(exports.GettingStartedPreferenceContribution);
        return createGettingStartedPreferences(preferences, contribution.schema);
    }).inSingletonScope();
    bind(exports.GettingStartedPreferenceContribution).toConstantValue({ schema: exports.GettingStartedPreferenceSchema });
    bind(preferences_1.PreferenceContribution).toService(exports.GettingStartedPreferenceContribution);
}
exports.bindGettingStartedPreferences = bindGettingStartedPreferences;

;(globalThis['theia'] = globalThis['theia'] || {})['@theia/getting-started/lib/browser/getting-started-preferences'] = this;


/***/ }),

/***/ "../../packages/getting-started/lib/browser/getting-started-widget.js":
/*!****************************************************************************!*\
  !*** ../../packages/getting-started/lib/browser/getting-started-widget.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2018 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var GettingStartedWidget_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GettingStartedWidget = void 0;
const React = __webpack_require__(/*! @theia/core/shared/react */ "../../packages/core/shared/react/index.js");
const uri_1 = __webpack_require__(/*! @theia/core/lib/common/uri */ "../../packages/core/lib/common/uri.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "../../packages/core/shared/inversify/index.js");
const common_1 = __webpack_require__(/*! @theia/core/lib/common */ "../../packages/core/lib/common/index.js");
const browser_1 = __webpack_require__(/*! @theia/workspace/lib/browser */ "../../packages/workspace/lib/browser/index.js");
const browser_2 = __webpack_require__(/*! @theia/keymaps/lib/browser */ "../../packages/keymaps/lib/browser/index.js");
const browser_3 = __webpack_require__(/*! @theia/core/lib/browser */ "../../packages/core/lib/browser/index.js");
const application_protocol_1 = __webpack_require__(/*! @theia/core/lib/common/application-protocol */ "../../packages/core/lib/common/application-protocol.js");
const frontend_application_config_provider_1 = __webpack_require__(/*! @theia/core/lib/browser/frontend-application-config-provider */ "../../packages/core/lib/browser/frontend-application-config-provider.js");
const env_variables_1 = __webpack_require__(/*! @theia/core/lib/common/env-variables */ "../../packages/core/lib/common/env-variables/index.js");
const window_service_1 = __webpack_require__(/*! @theia/core/lib/browser/window/window-service */ "../../packages/core/lib/browser/window/window-service.js");
const nls_1 = __webpack_require__(/*! @theia/core/lib/common/nls */ "../../packages/core/lib/common/nls.js");
/**
 * Default implementation of the `GettingStartedWidget`.
 * The widget is displayed when there are currently no workspaces present.
 * Some of the features displayed include:
 * - `open` commands.
 * - `recently used workspaces`.
 * - `settings` commands.
 * - `help` commands.
 * - helpful links.
 */
let GettingStartedWidget = GettingStartedWidget_1 = class GettingStartedWidget extends browser_3.ReactWidget {
    constructor() {
        super(...arguments);
        /**
         * The application name which is used for display purposes.
         */
        this.applicationName = frontend_application_config_provider_1.FrontendApplicationConfigProvider.get().applicationName;
        /**
         * The recently used workspaces limit.
         * Used in order to limit the number of recently used workspaces to display.
         */
        this.recentLimit = 5;
        /**
         * The list of recently used workspaces.
         */
        this.recentWorkspaces = [];
        /**
         * Collection of useful links to display for end users.
         */
        this.documentationUrl = 'https://www.theia-ide.org/docs/';
        this.compatibilityUrl = 'https://eclipse-theia.github.io/vscode-theia-comparator/status.html';
        this.extensionUrl = 'https://www.theia-ide.org/docs/authoring_extensions';
        this.pluginUrl = 'https://www.theia-ide.org/docs/authoring_plugins';
        /**
         * Trigger the open command.
         */
        this.doOpen = () => this.commandRegistry.executeCommand(browser_1.WorkspaceCommands.OPEN.id);
        this.doOpenEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpen();
            }
        };
        /**
         * Trigger the open file command.
         */
        this.doOpenFile = () => this.commandRegistry.executeCommand(browser_1.WorkspaceCommands.OPEN_FILE.id);
        this.doOpenFileEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpenFile();
            }
        };
        /**
         * Trigger the open folder command.
         */
        this.doOpenFolder = () => this.commandRegistry.executeCommand(browser_1.WorkspaceCommands.OPEN_FOLDER.id);
        this.doOpenFolderEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpenFolder();
            }
        };
        /**
         * Trigger the open workspace command.
         */
        this.doOpenWorkspace = () => this.commandRegistry.executeCommand(browser_1.WorkspaceCommands.OPEN_WORKSPACE.id);
        this.doOpenWorkspaceEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpenWorkspace();
            }
        };
        /**
         * Trigger the open recent workspace command.
         */
        this.doOpenRecentWorkspace = () => this.commandRegistry.executeCommand(browser_1.WorkspaceCommands.OPEN_RECENT_WORKSPACE.id);
        this.doOpenRecentWorkspaceEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpenRecentWorkspace();
            }
        };
        /**
         * Trigger the open preferences command.
         * Used to open the preferences widget.
         */
        this.doOpenPreferences = () => this.commandRegistry.executeCommand(browser_3.CommonCommands.OPEN_PREFERENCES.id);
        this.doOpenPreferencesEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpenPreferences();
            }
        };
        /**
         * Trigger the open keyboard shortcuts command.
         * Used to open the keyboard shortcuts widget.
         */
        this.doOpenKeyboardShortcuts = () => this.commandRegistry.executeCommand(browser_2.KeymapsCommands.OPEN_KEYMAPS.id);
        this.doOpenKeyboardShortcutsEnter = (e) => {
            if (this.isEnterKey(e)) {
                this.doOpenKeyboardShortcuts();
            }
        };
        /**
         * Open a workspace given its uri.
         * @param uri {URI} the workspace uri.
         */
        this.open = (uri) => this.workspaceService.open(uri);
        this.openEnter = (e, uri) => {
            if (this.isEnterKey(e)) {
                this.open(uri);
            }
        };
        /**
         * Open a link in an external window.
         * @param url the link.
         */
        this.doOpenExternalLink = (url) => this.windowService.openNewWindow(url, { external: true });
        this.doOpenExternalLinkEnter = (e, url) => {
            if (this.isEnterKey(e)) {
                this.doOpenExternalLink(url);
            }
        };
    }
    init() {
        this.doInit();
    }
    async doInit() {
        this.id = GettingStartedWidget_1.ID;
        this.title.label = GettingStartedWidget_1.LABEL;
        this.title.caption = GettingStartedWidget_1.LABEL;
        this.title.closable = true;
        this.applicationInfo = await this.appServer.getApplicationInfo();
        this.recentWorkspaces = await this.workspaceService.recentWorkspaces();
        this.home = new uri_1.default(await this.environments.getHomeDirUri()).path.toString();
        this.update();
    }
    onActivateRequest(msg) {
        super.onActivateRequest(msg);
        const elArr = this.node.getElementsByTagName('a');
        if (elArr && elArr.length > 0) {
            elArr[0].focus();
        }
    }
    /**
     * Render the content of the widget.
     */
    render() {
        return React.createElement("div", { className: 'gs-container' },
            React.createElement("div", { className: 'gs-content-container' },
                this.renderHeader(),
                React.createElement("hr", { className: 'gs-hr' }),
                React.createElement("div", { className: 'flex-grid' },
                    React.createElement("div", { className: 'col' }, this.renderOpen())),
                React.createElement("div", { className: 'flex-grid' },
                    React.createElement("div", { className: 'col' }, this.renderRecentWorkspaces())),
                React.createElement("div", { className: 'flex-grid' },
                    React.createElement("div", { className: 'col' }, this.renderSettings())),
                React.createElement("div", { className: 'flex-grid' },
                    React.createElement("div", { className: 'col' }, this.renderHelp())),
                React.createElement("div", { className: 'flex-grid' },
                    React.createElement("div", { className: 'col' }, this.renderVersion()))),
            React.createElement("div", { className: 'gs-preference-container' }, this.renderPreferences()));
    }
    /**
     * Render the widget header.
     * Renders the title `{applicationName} Getting Started`.
     */
    renderHeader() {
        return React.createElement("div", { className: 'gs-header' },
            React.createElement("h1", null,
                this.applicationName,
                React.createElement("span", { className: 'gs-sub-header' }, ' ' + GettingStartedWidget_1.LABEL)));
    }
    /**
     * Render the `open` section.
     * Displays a collection of `open` commands.
     */
    renderOpen() {
        const requireSingleOpen = common_1.isOSX || !common_1.environment.electron.is();
        const open = requireSingleOpen && React.createElement("div", { className: 'gs-action-container' },
            React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpen, onKeyDown: this.doOpenEnter }, nls_1.nls.localizeByDefault('Open')));
        const openFile = !requireSingleOpen && React.createElement("div", { className: 'gs-action-container' },
            React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenFile, onKeyDown: this.doOpenFileEnter }, nls_1.nls.localizeByDefault('Open File')));
        const openFolder = !requireSingleOpen && React.createElement("div", { className: 'gs-action-container' },
            React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenFolder, onKeyDown: this.doOpenFolderEnter }, nls_1.nls.localizeByDefault('Open Folder')));
        const openWorkspace = (React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenWorkspace, onKeyDown: this.doOpenWorkspaceEnter }, nls_1.nls.localizeByDefault('Open Workspace')));
        return React.createElement("div", { className: 'gs-section' },
            React.createElement("h3", { className: 'gs-section-header' },
                React.createElement("i", { className: (0, browser_3.codicon)('folder-opened') }),
                nls_1.nls.localizeByDefault('Open')),
            open,
            openFile,
            openFolder,
            openWorkspace);
    }
    /**
     * Render the recently used workspaces section.
     */
    renderRecentWorkspaces() {
        const items = this.recentWorkspaces;
        const paths = this.buildPaths(items);
        const content = paths.slice(0, this.recentLimit).map((item, index) => React.createElement("div", { className: 'gs-action-container', key: index },
            React.createElement("a", { role: 'button', tabIndex: 0, onClick: () => this.open(new uri_1.default(items[index])), onKeyDown: (e) => this.openEnter(e, new uri_1.default(items[index])) }, new uri_1.default(items[index]).path.base),
            React.createElement("span", { className: 'gs-action-details' }, item)));
        // If the recently used workspaces list exceeds the limit, display `More...` which triggers the recently used workspaces quick-open menu upon selection.
        const more = paths.length > this.recentLimit && React.createElement("div", { className: 'gs-action-container' },
            React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenRecentWorkspace, onKeyDown: this.doOpenRecentWorkspaceEnter }, nls_1.nls.localizeByDefault('More...')));
        return React.createElement("div", { className: 'gs-section' },
            React.createElement("h3", { className: 'gs-section-header' },
                React.createElement("i", { className: (0, browser_3.codicon)('history') }),
                nls_1.nls.localizeByDefault('Recent')),
            items.length > 0 ? content : React.createElement("p", { className: 'gs-no-recent' },
                nls_1.nls.localizeByDefault('You have no recent folders,') + ' ',
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenFolder, onKeyDown: this.doOpenFolderEnter }, nls_1.nls.localizeByDefault('open a folder')),
                ' ' + nls_1.nls.localizeByDefault('to start.')),
            more);
    }
    /**
     * Render the settings section.
     * Generally used to display useful links.
     */
    renderSettings() {
        return React.createElement("div", { className: 'gs-section' },
            React.createElement("h3", { className: 'gs-section-header' },
                React.createElement("i", { className: (0, browser_3.codicon)('settings-gear') }),
                nls_1.nls.localizeByDefault('Settings')),
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenPreferences, onKeyDown: this.doOpenPreferencesEnter }, nls_1.nls.localizeByDefault('Open Settings'))),
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: this.doOpenKeyboardShortcuts, onKeyDown: this.doOpenKeyboardShortcutsEnter }, nls_1.nls.localizeByDefault('Open Keyboard Shortcuts'))));
    }
    /**
     * Render the help section.
     */
    renderHelp() {
        return React.createElement("div", { className: 'gs-section' },
            React.createElement("h3", { className: 'gs-section-header' },
                React.createElement("i", { className: (0, browser_3.codicon)('question') }),
                nls_1.nls.localizeByDefault('Help')),
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: () => this.doOpenExternalLink(this.documentationUrl), onKeyDown: (e) => this.doOpenExternalLinkEnter(e, this.documentationUrl) }, nls_1.nls.localizeByDefault('Documentation'))),
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: () => this.doOpenExternalLink(this.compatibilityUrl), onKeyDown: (e) => this.doOpenExternalLinkEnter(e, this.compatibilityUrl) }, nls_1.nls.localize('theia/getting-started/apiComparator', '{0} API Compatibility', 'VS Code'))),
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: () => this.doOpenExternalLink(this.extensionUrl), onKeyDown: (e) => this.doOpenExternalLinkEnter(e, this.extensionUrl) }, nls_1.nls.localize('theia/getting-started/newExtension', 'Building a New Extension'))),
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("a", { role: 'button', tabIndex: 0, onClick: () => this.doOpenExternalLink(this.pluginUrl), onKeyDown: (e) => this.doOpenExternalLinkEnter(e, this.pluginUrl) }, nls_1.nls.localize('theia/getting-started/newPlugin', 'Building a New Plugin'))));
    }
    /**
     * Render the version section.
     */
    renderVersion() {
        return React.createElement("div", { className: 'gs-section' },
            React.createElement("div", { className: 'gs-action-container' },
                React.createElement("p", { className: 'gs-sub-header' }, this.applicationInfo ? nls_1.nls.localizeByDefault('Version: {0}', this.applicationInfo.version) : '')));
    }
    renderPreferences() {
        return React.createElement(WelcomePreferences, { preferenceService: this.preferenceService });
    }
    /**
     * Build the list of workspace paths.
     * @param workspaces {string[]} the list of workspaces.
     * @returns {string[]} the list of workspace paths.
     */
    buildPaths(workspaces) {
        const paths = [];
        workspaces.forEach(workspace => {
            const uri = new uri_1.default(workspace);
            const pathLabel = this.labelProvider.getLongName(uri);
            const path = this.home ? common_1.Path.tildify(pathLabel, this.home) : pathLabel;
            paths.push(path);
        });
        return paths;
    }
    isEnterKey(e) {
        var _a;
        return browser_3.Key.ENTER.keyCode === ((_a = browser_3.KeyCode.createKeyCode(e.nativeEvent).key) === null || _a === void 0 ? void 0 : _a.keyCode);
    }
};
/**
 * The widget `id`.
 */
GettingStartedWidget.ID = 'getting.started.widget';
/**
 * The widget `label` which is used for display purposes.
 */
GettingStartedWidget.LABEL = nls_1.nls.localizeByDefault('Welcome');
__decorate([
    (0, inversify_1.inject)(application_protocol_1.ApplicationServer),
    __metadata("design:type", Object)
], GettingStartedWidget.prototype, "appServer", void 0);
__decorate([
    (0, inversify_1.inject)(common_1.CommandRegistry),
    __metadata("design:type", common_1.CommandRegistry)
], GettingStartedWidget.prototype, "commandRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(env_variables_1.EnvVariablesServer),
    __metadata("design:type", Object)
], GettingStartedWidget.prototype, "environments", void 0);
__decorate([
    (0, inversify_1.inject)(browser_3.LabelProvider),
    __metadata("design:type", browser_3.LabelProvider)
], GettingStartedWidget.prototype, "labelProvider", void 0);
__decorate([
    (0, inversify_1.inject)(window_service_1.WindowService),
    __metadata("design:type", Object)
], GettingStartedWidget.prototype, "windowService", void 0);
__decorate([
    (0, inversify_1.inject)(browser_1.WorkspaceService),
    __metadata("design:type", browser_1.WorkspaceService)
], GettingStartedWidget.prototype, "workspaceService", void 0);
__decorate([
    (0, inversify_1.inject)(browser_3.PreferenceService),
    __metadata("design:type", Object)
], GettingStartedWidget.prototype, "preferenceService", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], GettingStartedWidget.prototype, "init", null);
GettingStartedWidget = GettingStartedWidget_1 = __decorate([
    (0, inversify_1.injectable)()
], GettingStartedWidget);
exports.GettingStartedWidget = GettingStartedWidget;
function WelcomePreferences(props) {
    const [startupEditor, setStartupEditor] = React.useState(props.preferenceService.get('workbench.startupEditor', 'welcomePage'));
    React.useEffect(() => {
        const prefListener = props.preferenceService.onPreferenceChanged(change => {
            if (change.preferenceName === 'workbench.startupEditor') {
                const prefValue = change.newValue;
                setStartupEditor(prefValue);
            }
        });
        return () => prefListener.dispose();
    }, [props.preferenceService]);
    const handleChange = (e) => {
        const newValue = e.target.checked ? 'welcomePage' : 'none';
        props.preferenceService.updateValue('workbench.startupEditor', newValue);
    };
    return (React.createElement("div", { className: 'gs-preference' },
        React.createElement("input", { type: "checkbox", className: "theia-input", id: "startupEditor", onChange: handleChange, checked: startupEditor === 'welcomePage' || startupEditor === 'welcomePageInEmptyWorkbench' }),
        React.createElement("label", { htmlFor: "startupEditor" }, nls_1.nls.localizeByDefault('Show welcome page on startup'))));
}

;(globalThis['theia'] = globalThis['theia'] || {})['@theia/getting-started/lib/browser/getting-started-widget'] = this;


/***/ }),

/***/ "../../packages/keymaps/lib/browser/index.js":
/*!***************************************************!*\
  !*** ../../packages/keymaps/lib/browser/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2017 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./keymaps-frontend-module */ "../../packages/keymaps/lib/browser/keymaps-frontend-module.js"), exports);
__exportStar(__webpack_require__(/*! ./keymaps-service */ "../../packages/keymaps/lib/browser/keymaps-service.js"), exports);
__exportStar(__webpack_require__(/*! ./keymaps-frontend-contribution */ "../../packages/keymaps/lib/browser/keymaps-frontend-contribution.js"), exports);

;(globalThis['theia'] = globalThis['theia'] || {})['@theia/keymaps/lib/browser'] = this;


/***/ }),

/***/ "../../packages/workspace/lib/browser/index.js":
/*!*****************************************************!*\
  !*** ../../packages/workspace/lib/browser/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2017 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./workspace-commands */ "../../packages/workspace/lib/browser/workspace-commands.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-service */ "../../packages/workspace/lib/browser/workspace-service.js"), exports);
__exportStar(__webpack_require__(/*! ./canonical-uri-service */ "../../packages/workspace/lib/browser/canonical-uri-service.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-frontend-contribution */ "../../packages/workspace/lib/browser/workspace-frontend-contribution.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-frontend-module */ "../../packages/workspace/lib/browser/workspace-frontend-module.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-preferences */ "../../packages/workspace/lib/browser/workspace-preferences.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-trust-service */ "../../packages/workspace/lib/browser/workspace-trust-service.js"), exports);

;(globalThis['theia'] = globalThis['theia'] || {})['@theia/workspace/lib/browser'] = this;


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../packages/getting-started/src/browser/style/index.css":
/*!************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../packages/getting-started/src/browser/style/index.css ***!
  \************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (C) 2018 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
 ********************************************************************************/

html,
body {
  font-family: var(--theia-ui-font-family);
}

.col {
  flex: 1;
  align-items: center;
  justify-content: center;
}

.flex-grid {
  display: flex;
}

.gs-action-container {
  line-height: 20px;
}

.gs-action-details {
  padding-left: 5px;
  color: var(--theia-descriptionForeground);
}

.gs-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
}

.gs-content-container {
  padding: 20px;
}

.gs-content-container a {
  cursor: pointer;
}

.gs-header h1 {
  flex: 1;
  font-weight: 600;
}

.gs-hr {
  background-color: var(--theia-contrastBorder);
  height: 1px;
  border: 0;
  margin: 0px;
}

.gs-no-recent {
  color: var(--theia-descriptionForeground);
}

.gs-section a {
  border: none;
  font-weight: 500;
  text-decoration: none;
}

.gs-section a:hover {
  text-decoration: underline;
}

.gs-section-header {
  font-size: var(--theia-ui-font-size2);
  font-weight: 600;
  margin-bottom: 5px;
  display: flex;
  align-items: center;
}

.gs-section-header i {
  padding-right: 5px;
}

.gs-sub-header {
  color: var(--theia-descriptionForeground);
  text-transform: capitalize;
  font-weight: 400;
}

.gs-preference-container {
  display: flex;
  justify-content: center;
}

.gs-preference {
  margin-bottom: 20px;
  display: flex;
  align-items: center;
}
`, "",{"version":3,"sources":["webpack://./../../packages/getting-started/src/browser/style/index.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;;EAEE,wCAAwC;AAC1C;;AAEA;EACE,OAAO;EACP,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,yCAAyC;AAC3C;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,OAAO;EACP,gBAAgB;AAClB;;AAEA;EACE,6CAA6C;EAC7C,WAAW;EACX,SAAS;EACT,WAAW;AACb;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,qCAAqC;EACrC,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,yCAAyC;EACzC,0BAA0B;EAC1B,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,mBAAmB;AACrB","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nhtml,\nbody {\n  font-family: var(--theia-ui-font-family);\n}\n\n.col {\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n}\n\n.flex-grid {\n  display: flex;\n}\n\n.gs-action-container {\n  line-height: 20px;\n}\n\n.gs-action-details {\n  padding-left: 5px;\n  color: var(--theia-descriptionForeground);\n}\n\n.gs-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n}\n\n.gs-content-container {\n  padding: 20px;\n}\n\n.gs-content-container a {\n  cursor: pointer;\n}\n\n.gs-header h1 {\n  flex: 1;\n  font-weight: 600;\n}\n\n.gs-hr {\n  background-color: var(--theia-contrastBorder);\n  height: 1px;\n  border: 0;\n  margin: 0px;\n}\n\n.gs-no-recent {\n  color: var(--theia-descriptionForeground);\n}\n\n.gs-section a {\n  border: none;\n  font-weight: 500;\n  text-decoration: none;\n}\n\n.gs-section a:hover {\n  text-decoration: underline;\n}\n\n.gs-section-header {\n  font-size: var(--theia-ui-font-size2);\n  font-weight: 600;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.gs-section-header i {\n  padding-right: 5px;\n}\n\n.gs-sub-header {\n  color: var(--theia-descriptionForeground);\n  text-transform: capitalize;\n  font-weight: 400;\n}\n\n.gs-preference-container {\n  display: flex;\n  justify-content: center;\n}\n\n.gs-preference {\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../packages/getting-started/src/browser/style/index.css":
/*!******************************************************************!*\
  !*** ../../packages/getting-started/src/browser/style/index.css ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../node_modules/css-loader/dist/cjs.js!./index.css */ "../../node_modules/css-loader/dist/cjs.js!../../packages/getting-started/src/browser/style/index.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ })

}]);
//# sourceMappingURL=node_modules_valid-filename_index_js-packages_getting-started_lib_browser_getting-started-fro-8c02ae.js.map