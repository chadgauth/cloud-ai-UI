{"version":3,"file":"api-samples_lib_browser_api-samples-frontend-module_js-node_modules_p-queue_index_js.js","mappings":"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5B,CAAC;AATD,0DASC;;;;;;;;;;;;;AC7BY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,uFAAuF,iBAAiB,MAAM,wBAAwB;AACtI;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,gDAAgD;;;;;;;;;;;;AC9LjD,gFAAgF;AAChF,0CAA0C;AAC1C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAGhF,iGAAsD;AACtD,6HAAkE;A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","sources":["webpack:///../api-samples/src/browser/api-samples-frontend-module.ts?","webpack:///../api-samples/src/browser/contribution-filter/sample-filtered-command-contribution.ts?","webpack:///../api-samples/src/browser/file-watching/sample-file-watching-contribution.ts?","webpack:///../api-samples/src/browser/label/sample-dynamic-label-provider-command-contribution.ts?","webpack:///../api-samples/src/browser/label/sample-dynamic-label-provider-contribution.ts?","webpack:///../api-samples/src/browser/monaco-editor-preferences/monaco-editor-preference-extractor.ts?","webpack:///../api-samples/src/browser/output/sample-output-channel-with-severity.ts?","webpack:///../api-samples/src/browser/toolbar/sample-toolbar-contribution.tsx?","webpack:///../api-samples/src/browser/toolbar/sample-toolbar-defaults-override.ts?","webpack:///../api-samples/src/browser/view/sample-unclosable-view-contribution.ts?","webpack:///../api-samples/src/browser/view/sample-unclosable-view.tsx?","webpack:///../api-samples/src/browser/vsx/sample-frontend-app-info.ts?","webpack:///../api-samples/src/browser/vsx/sample-vsx-command-contribution.ts?","webpack:///../api-samples/src/common/vsx/sample-app-info.ts?","webpack:///../api-samples/src/common/vsx/sample-ovsx-client-factory.ts?","webpack:///../../node_modules/p-queue/index.js?","webpack:///../../packages/toolbar/src/browser/abstract-toolbar-contribution.tsx?","webpack:///../../packages/vsx-registry/src/common/index.ts?","webpack:///../../packages/vsx-registry/src/common/vsx-extension-uri.ts?","webpack:///../api-samples/src/browser/style/branding.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../api-samples/src/browser/toolbar/sample-toolbar-contribution.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../api-samples/src/browser/style/branding.css?","webpack:///../api-samples/src/browser/toolbar/sample-toolbar-contribution.css?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { bindDynamicLabelProvider } from './label/sample-dynamic-label-provider-command-contribution';\nimport { bindSampleFilteredCommandContribution } from './contribution-filter/sample-filtered-command-contribution';\nimport { bindSampleUnclosableView } from './view/sample-unclosable-view-contribution';\nimport { bindSampleOutputChannelWithSeverity } from './output/sample-output-channel-with-severity';\nimport { bindSampleMenu } from './menu/sample-menu-contribution';\nimport { bindSampleFileWatching } from './file-watching/sample-file-watching-contribution';\nimport { bindVSXCommand } from './vsx/sample-vsx-command-contribution';\nimport { bindSampleToolbarContribution } from './toolbar/sample-toolbar-contribution';\n\nimport '../../src/browser/style/branding.css';\nimport { bindMonacoPreferenceExtractor } from './monaco-editor-preferences/monaco-editor-preference-extractor';\nimport { rebindOVSXClientFactory } from '../common/vsx/sample-ovsx-client-factory';\nimport { bindSampleAppInfo } from './vsx/sample-frontend-app-info';\n\nexport default new ContainerModule((\n    bind: interfaces.Bind,\n    unbind: interfaces.Unbind,\n    isBound: interfaces.IsBound,\n    rebind: interfaces.Rebind,\n) => {\n    bindDynamicLabelProvider(bind);\n    bindSampleUnclosableView(bind);\n    bindSampleOutputChannelWithSeverity(bind);\n    bindSampleMenu(bind);\n    bindSampleFileWatching(bind);\n    bindVSXCommand(bind);\n    bindSampleFilteredCommandContribution(bind);\n    bindSampleToolbarContribution(bind, rebind);\n    bindMonacoPreferenceExtractor(bind);\n    bindSampleAppInfo(bind);\n    rebindOVSXClientFactory(rebind);\n});\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, CommandContribution, CommandRegistry, FilterContribution, ContributionFilterRegistry, bindContribution, Filter } from '@theia/core/lib/common';\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\n\nexport namespace SampleFilteredCommand {\n\n    const EXAMPLE_CATEGORY = 'Examples';\n\n    export const FILTERED: Command = {\n        id: 'example_command.filtered',\n        category: EXAMPLE_CATEGORY,\n        label: 'This command should be filtered out'\n    };\n\n    export const FILTERED2: Command = {\n        id: 'example_command.filtered2',\n        category: EXAMPLE_CATEGORY,\n        label: 'This command should be filtered out (2)'\n    };\n}\n\n/**\n * This sample command is used to test the runtime filtering of already bound contributions.\n */\n@injectable()\nexport class SampleFilteredCommandContribution implements CommandContribution {\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(SampleFilteredCommand.FILTERED, { execute: () => { } });\n    }\n}\n\n@injectable()\nexport class SampleFilterAndCommandContribution implements FilterContribution, CommandContribution {\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(SampleFilteredCommand.FILTERED2, { execute: () => { } });\n    }\n\n    registerContributionFilters(registry: ContributionFilterRegistry): void {\n        registry.addFilters([CommandContribution], [\n            // filter ourselves out\n            contrib => contrib.constructor !== this.constructor\n        ]);\n        registry.addFilters('*', [\n            // filter a contribution based on its class name\n            filterClassName(name => name !== 'SampleFilteredCommandContribution')\n        ]);\n    }\n}\n\nexport function bindSampleFilteredCommandContribution(bind: interfaces.Bind): void {\n    bind(CommandContribution).to(SampleFilteredCommandContribution).inSingletonScope();\n    bind(SampleFilterAndCommandContribution).toSelf().inSingletonScope();\n    bindContribution(bind, SampleFilterAndCommandContribution, [CommandContribution, FilterContribution]);\n}\n\nfunction filterClassName(filter: Filter<string>): Filter<Object> {\n    return object => {\n        const className = object?.constructor?.name;\n        return className\n            ? filter(className)\n            : false;\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { postConstruct, injectable, inject, interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy, FrontendApplicationContribution, LabelProvider,\n    PreferenceContribution, PreferenceProxy, PreferenceSchema, PreferenceService\n} from '@theia/core/lib/browser';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\nexport function bindSampleFileWatching(bind: interfaces.Bind): void {\n    bind(FrontendApplicationContribution).to(SampleFileWatchingContribution).inSingletonScope();\n    bind(PreferenceContribution).toConstantValue({ schema: FileWatchingPreferencesSchema });\n    bind(FileWatchingPreferences).toDynamicValue(\n        ctx => createPreferenceProxy(ctx.container.get(PreferenceService), FileWatchingPreferencesSchema)\n    );\n}\n\nconst FileWatchingPreferences = Symbol('FileWatchingPreferences');\ntype FileWatchingPreferences = PreferenceProxy<FileWatchingPreferencesSchema>;\n\ninterface FileWatchingPreferencesSchema {\n    'sample.file-watching.verbose': boolean\n}\nconst FileWatchingPreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'sample.file-watching.verbose': {\n            type: 'boolean',\n            default: false,\n            description: 'Enable verbose file watching logs.'\n        }\n    }\n};\n\n@injectable()\nclass SampleFileWatchingContribution implements FrontendApplicationContribution {\n\n    protected verbose: boolean;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(FileWatchingPreferences)\n    protected readonly fileWatchingPreferences: FileWatchingPreferences;\n\n    @postConstruct()\n    protected init(): void {\n        this.verbose = this.fileWatchingPreferences['sample.file-watching.verbose'];\n        this.fileWatchingPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'sample.file-watching.verbose') {\n                this.verbose = e.newValue;\n            }\n        });\n    }\n\n    onStart(): void {\n        this.fileService.onDidFilesChange(event => {\n            // Only log if the verbose preference is set.\n            if (this.verbose) {\n                // Get the workspace roots for the current frontend:\n                const roots = this.workspaceService.tryGetRoots();\n                // Create some name to help find out which frontend logged the message:\n                const workspace = roots.length > 0\n                    ? roots.map(root => this.labelProvider.getLongName(root.resource)).join('+')\n                    : '<no workspace>';\n                console.log(`Sample File Watching: ${event.changes.length} file(s) changed! ${workspace}`);\n            }\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, interfaces } from '@theia/core/shared/inversify';\nimport { Command, CommandContribution, CommandRegistry, CommandHandler } from '@theia/core';\nimport { FrontendApplicationContribution, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { SampleDynamicLabelProviderContribution } from './sample-dynamic-label-provider-contribution';\n\nexport namespace ExampleLabelProviderCommands {\n    const EXAMPLE_CATEGORY = 'Examples';\n    export const TOGGLE_SAMPLE: Command = {\n        id: 'example_label_provider.toggle',\n        category: EXAMPLE_CATEGORY,\n        label: 'Toggle Dynamically-Changing Labels'\n    };\n}\n\n@injectable()\nexport class SampleDynamicLabelProviderCommandContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(SampleDynamicLabelProviderContribution)\n    protected readonly labelProviderContribution: SampleDynamicLabelProviderContribution;\n\n    initialize(): void { }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(ExampleLabelProviderCommands.TOGGLE_SAMPLE, new ExampleLabelProviderCommandHandler(this.labelProviderContribution));\n    }\n\n}\n\nexport class ExampleLabelProviderCommandHandler implements CommandHandler {\n\n    constructor(private readonly labelProviderContribution: SampleDynamicLabelProviderContribution) {\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(...args: any[]): any {\n        this.labelProviderContribution.toggle();\n    }\n\n}\n\nexport const bindDynamicLabelProvider = (bind: interfaces.Bind) => {\n    bind(SampleDynamicLabelProviderContribution).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(SampleDynamicLabelProviderContribution);\n    bind(CommandContribution).to(SampleDynamicLabelProviderCommandContribution).inSingletonScope();\n};\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { DefaultUriLabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core';\n\n@injectable()\nexport class SampleDynamicLabelProviderContribution extends DefaultUriLabelProviderContribution {\n\n    protected isActive: boolean = false;\n\n    constructor() {\n        super();\n        const outer = this;\n\n        setInterval(() => {\n            if (this.isActive) {\n                outer.x++;\n                outer.fireLabelsDidChange();\n            }\n        }, 1000);\n    }\n\n    override canHandle(element: object): number {\n        if (this.isActive && element.toString().includes('test')) {\n            return 30;\n        }\n        return 0;\n    }\n\n    toggle(): void {\n        this.isActive = !this.isActive;\n        this.fireLabelsDidChange();\n    }\n\n    private fireLabelsDidChange(): void {\n        this.onDidChangeEmitter.fire({\n            affects: (element: URI) => element.toString().includes('test')\n        });\n    }\n\n    protected override getUri(element: URI): URI {\n        return new URI(element.toString());\n    }\n\n    override getIcon(element: URI): string {\n        const uri = this.getUri(element);\n        const icon = super.getFileIcon(uri);\n        if (!icon) {\n            return this.defaultFileIcon;\n        }\n        return icon;\n    }\n\n    protected override readonly onDidChangeEmitter = new Emitter<DidChangeLabelEvent>();\n    private x: number = 0;\n\n    override getName(element: URI): string | undefined {\n        const uri = this.getUri(element);\n        if (this.isActive && uri.toString().includes('test')) {\n            return super.getName(uri) + '-' + this.x.toString(10);\n        } else {\n            return super.getName(uri);\n        }\n    }\n\n    override getLongName(element: URI): string | undefined {\n        const uri = this.getUri(element);\n        return super.getLongName(uri);\n    }\n\n    override get onDidChange(): Event<DidChangeLabelEvent> {\n        return this.onDidChangeEmitter.event;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2022 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * The command contributed in this file allows us to generate a copy of the schema expected for editor preferences by Monaco,\n * as well as an interface corresponding to those properties for use with our EditorPreferences PreferenceProxy.\n * It examines the schemata registered with the Monaco `ConfigurationRegistry` and writes any configurations associated with the editor\n * to a file in the `editor` package. It also generates an interface based on the types specified in the schema.\n * The only manual work required during a Monaco uplift is to run the command and then update any fields of the interface where the\n * schema type is `array` or `object`, since it is tricky to extract the type details for such fields automatically.\n */\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from '@theia/monaco-editor-core/esm/vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from '@theia/monaco-editor-core/esm/vs/platform/registry/common/platform';\nimport { CommandContribution, CommandRegistry, MaybeArray, MessageService, nls } from '@theia/core';\nimport { inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { PreferenceItem, PreferenceValidationService } from '@theia/core/lib/browser';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport { JsonType } from '@theia/core/lib/common/json-schema';\nimport { editorOptionsRegistry } from '@theia/monaco-editor-core/esm/vs/editor/common/config/editorOptions';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\n\nfunction generateContent(properties: string, interfaceEntries: string[]): string {\n    return `/********************************************************************************\n * Copyright (C) 2022 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { isOSX, isWindows, nls } from '@theia/core';\nimport { PreferenceSchema } from '@theia/core/lib/browser';\n\n/* eslint-disable @typescript-eslint/quotes,max-len,no-null/no-null */\n\n/**\n * Please do not modify this file by hand. It should be generated automatically\n * during a Monaco uplift using the command registered by monaco-editor-preference-extractor.ts\n * The only manual work required is fixing preferences with type 'array' or 'object'.\n */\n\nexport const editorGeneratedPreferenceProperties: PreferenceSchema['properties'] = ${properties};\n\nexport interface GeneratedEditorPreferences {\n    ${interfaceEntries.join('\\n    ')}\n}\n`;\n}\nconst dequoteMarker = '@#@';\n\n// From src/vs/editor/common/config/editorOptions.ts\nconst DEFAULT_WINDOWS_FONT_FAMILY = \"Consolas, \\\\'Courier New\\\\', monospace\";\nconst DEFAULT_MAC_FONT_FAMILY = \"Menlo, Monaco, \\\\'Courier New\\\\', monospace\";\nconst DEFAULT_LINUX_FONT_FAMILY = \"\\\\'Droid Sans Mono\\\\', \\\\'monospace\\\\', monospace\";\n\nconst fontFamilyText = `${dequoteMarker}isOSX ? '${DEFAULT_MAC_FONT_FAMILY}' : isWindows ? '${DEFAULT_WINDOWS_FONT_FAMILY}' : '${DEFAULT_LINUX_FONT_FAMILY}'${dequoteMarker}`;\nconst fontSizeText = `${dequoteMarker}isOSX ? 12 : 14${dequoteMarker}`;\n\n/**\n * This class is intended for use when uplifting Monaco.\n */\n@injectable()\nexport class MonacoEditorPreferenceSchemaExtractor implements CommandContribution {\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(PreferenceValidationService) protected readonly preferenceValidationService: PreferenceValidationService;\n    @inject(MonacoEditorProvider) protected readonly monacoEditorProvider: MonacoEditorProvider;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand({ id: 'check-for-unvalidated-editor-preferences', label: 'Check for unvalidated editor preferences in Monaco' }, {\n            execute: () => {\n                const firstRootUri = this.workspaceService.tryGetRoots()[0]?.resource;\n                if (firstRootUri) {\n                    const validatedEditorPreferences = new Set(editorOptionsRegistry.map(validator => validator.name));\n                    const allEditorPreferenceKeys = Object.keys(this.monacoEditorProvider['createOptions'](\n                        this.monacoEditorProvider['preferencePrefixes'], firstRootUri.toString(), 'typescript'\n                    ));\n                    const unvalidatedKeys = allEditorPreferenceKeys.filter(key => !validatedEditorPreferences.has(key));\n                    console.log('Unvalidated keys are:', unvalidatedKeys);\n                }\n            }\n        });\n        commands.registerCommand({ id: 'extract-editor-preference-schema', label: 'Extract editor preference schema from Monaco' }, {\n            execute: async () => {\n                const roots = this.workspaceService.tryGetRoots();\n                if (roots.length !== 1 || !(roots[0].resource.path.toString() ?? '').includes('theia')) {\n                    this.messageService.warn('This command should only be executed in the Theia workspace.');\n                }\n                const theiaRoot = roots[0];\n                const fileToWrite = theiaRoot.resource.resolve('packages/editor/src/browser/editor-generated-preference-schema.ts');\n                const properties = {};\n                Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurations().forEach(config => {\n                    if (config.id === 'editor' && config.properties) {\n                        Object.assign(properties, config.properties);\n                    }\n                });\n                this.guaranteePlatformOptions(properties);\n                const interfaceEntries = [];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                for (const [name, description] of Object.entries(properties) as Array<[string, any]>) {\n                    description.scope = this.getScope(description.scope);\n                    delete description.defaultDefaultValue;\n                    if (name === 'editor.fontSize') {\n                        description.default = fontSizeText;\n                    } else if (name === 'editor.fontFamily') {\n                        description.default = fontFamilyText;\n                    }\n                    interfaceEntries.push(`'${name}': ${this.formatSchemaForInterface(description)};`);\n                }\n                const stringified = JSON.stringify(properties, this.codeSnippetReplacer(), 4);\n                const propertyList = this.dequoteCodeSnippets(stringified);\n                const content = generateContent(propertyList, interfaceEntries);\n                await this.fileService.write(fileToWrite, content);\n            }\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected codeSnippetReplacer(): (key: string, value: any) => any {\n        // JSON.stringify doesn't give back the whole context when serializing so we use state...\n        let lastPreferenceName: string;\n        return (key, value) => {\n            if (key.startsWith('editor.') || key.startsWith('diffEditor.')) {\n                lastPreferenceName = key;\n            }\n            if ((key === 'description' || key === 'markdownDescription') && typeof value === 'string') {\n                if (value.length === 0) {\n                    return value;\n                }\n                const defaultKey = nls.getDefaultKey(value);\n                if (defaultKey) {\n                    return `${dequoteMarker}nls.localizeByDefault(${dequoteMarker}\"${value}${dequoteMarker}\")${dequoteMarker}`;\n                } else {\n                    const localizationKey = `${dequoteMarker}\"theia/editor/${lastPreferenceName}${dequoteMarker}\"`;\n                    return `${dequoteMarker}nls.localize(${localizationKey}, ${dequoteMarker}\"${value}${dequoteMarker}\")${dequoteMarker}`;\n                }\n            }\n            if ((key === 'enumDescriptions' || key === 'markdownEnumDescriptions') && Array.isArray(value)) {\n                return value.map((description, i) => {\n                    if (description.length === 0) {\n                        return description;\n                    }\n                    const defaultKey = nls.getDefaultKey(description);\n                    if (defaultKey) {\n                        return `${dequoteMarker}nls.localizeByDefault(${dequoteMarker}\"${description}${dequoteMarker}\")${dequoteMarker}`;\n                    } else {\n                        const localizationKey = `${dequoteMarker}\"theia/editor/${lastPreferenceName}${i}${dequoteMarker}\"`;\n                        return `${dequoteMarker}nls.localize(${localizationKey}, ${dequoteMarker}\"${description}${dequoteMarker}\")${dequoteMarker}`;\n                    }\n                });\n            }\n            return value;\n        };\n    };\n\n    protected getScope(monacoScope: unknown): string | undefined {\n        switch (monacoScope) {\n            case ConfigurationScope.MACHINE_OVERRIDABLE:\n            case ConfigurationScope.WINDOW:\n                return 'window';\n            case ConfigurationScope.RESOURCE:\n                return 'resource';\n            case ConfigurationScope.LANGUAGE_OVERRIDABLE:\n                return 'language-overridable';\n            case ConfigurationScope.APPLICATION:\n            case ConfigurationScope.MACHINE:\n                return 'application';\n        }\n        return undefined;\n    }\n\n    protected formatSchemaForInterface(schema: PreferenceItem): string {\n        const defaultValue = schema.default !== undefined ? schema.default : schema.defaultValue;\n        // There are a few preferences for which VSCode uses defaults that do not match the schema. We have to handle those manually.\n        if (defaultValue !== undefined && this.preferenceValidationService.validateBySchema('any-preference', defaultValue, schema) !== defaultValue) {\n            return 'HelpBadDefaultValue';\n        }\n        const jsonType = schema.const !== undefined ? schema.const : (schema.enum ?? schema.type);\n        if (jsonType === undefined) {\n            const subschemata = schema.anyOf ?? schema.oneOf;\n            if (subschemata) {\n                const permittedTypes = [].concat.apply(subschemata.map(subschema => this.formatSchemaForInterface(subschema).split(' | ')));\n                return Array.from(new Set(permittedTypes)).join(' | ');\n            }\n        }\n        return this.formatTypeForInterface(jsonType);\n\n    }\n\n    protected formatTypeForInterface(jsonType?: MaybeArray<JsonType | JSONValue> | undefined): string {\n        if (Array.isArray(jsonType)) {\n            return jsonType.map(subtype => this.formatTypeForInterface(subtype)).join(' | ');\n        }\n        switch (jsonType) {\n            case 'boolean':\n            case 'number':\n            case 'string':\n            case 'true':\n            case 'false':\n                return jsonType;\n            case true:\n            case false:\n            case null: // eslint-disable-line no-null/no-null\n                return `${jsonType}`;\n            case 'integer':\n                return 'number';\n            case 'array':\n            case 'object':\n            case undefined:\n                // These have to be fixed manually, so we output a type that will cause a TS error.\n                return 'Help';\n        }\n        // Most of the rest are string literals.\n        return `'${jsonType}'`;\n    }\n\n    protected dequoteCodeSnippets(stringification: string): string {\n        return stringification\n            .replace(new RegExp(`${dequoteMarker}\"|\"${dequoteMarker}|${dequoteMarker}\\\\\\\\`, 'g'), '')\n            .replace(new RegExp(`\\\\\\\\\"${dequoteMarker}`, 'g'), '\"')\n            .replace(/\\\\\\\\'/g, \"\\\\'\");\n    }\n\n    /**\n     * Ensures that options that are only relevant on certain platforms are caught.\n     * Check for use of `platform` in src/vs/editor/common/config/editorOptions.ts\n     */\n    protected guaranteePlatformOptions(properties: object): void {\n        Object.assign(properties, {\n            'editor.find.globalFindClipboard': {\n                type: 'boolean',\n                default: false,\n                description: 'Controls whether the Find Widget should read or modify the shared find clipboard on macOS.',\n                included: `${dequoteMarker}isOSX${dequoteMarker}`,\n            },\n            'editor.selectionClipboard': {\n                type: 'boolean',\n                default: true,\n                description: 'Controls whether the Linux primary clipboard should be supported.',\n                included: `${dequoteMarker}!isOSX && !isWindows${dequoteMarker}`\n            }\n        });\n    }\n}\n\n// Utility to assist with Monaco uplifts to generate preference schema. Not for regular use in the application.\nexport function bindMonacoPreferenceExtractor(bind: interfaces.Bind): void {\n    // bind(MonacoEditorPreferenceSchemaExtractor).toSelf().inSingletonScope();\n    // bind(CommandContribution).toService(MonacoEditorPreferenceSchemaExtractor);\n}\n","// *****************************************************************************\n// Copyright (C) 2020 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { OutputChannelManager, OutputChannelSeverity } from '@theia/output/lib/browser/output-channel';\n\n@injectable()\nexport class SampleOutputChannelWithSeverity\n    implements FrontendApplicationContribution {\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n    public onStart(): void {\n        const channel = this.outputChannelManager.getChannel('API Sample: my test channel');\n        channel.appendLine('hello info1'); // showed without color\n        channel.appendLine('hello info2', OutputChannelSeverity.Info);\n        channel.appendLine('hello error', OutputChannelSeverity.Error);\n        channel.appendLine('hello warning', OutputChannelSeverity.Warning);\n        channel.append('inlineInfo1 ');\n        channel.append('inlineWarning ', OutputChannelSeverity.Warning);\n        channel.append('inlineError ', OutputChannelSeverity.Error);\n        channel.append('inlineInfo2', OutputChannelSeverity.Info);\n    }\n}\nexport const bindSampleOutputChannelWithSeverity = (bind: interfaces.Bind) => {\n    bind(FrontendApplicationContribution)\n        .to(SampleOutputChannelWithSeverity)\n        .inSingletonScope();\n};\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CommandContribution, CommandRegistry, CommandService, MenuContribution, MenuModelRegistry } from '@theia/core';\nimport { LabelProvider, quickCommand, QuickInputService, QuickPickItem } from '@theia/core/lib/browser';\nimport { inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { quickFileOpen } from '@theia/file-search/lib/browser/quick-file-open';\nimport { SearchInWorkspaceCommands } from '@theia/search-in-workspace/lib/browser/search-in-workspace-frontend-contribution';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { AbstractToolbarContribution } from '@theia/toolbar/lib/browser/abstract-toolbar-contribution';\nimport { ToolbarMenus, ReactInteraction } from '@theia/toolbar/lib/browser/toolbar-constants';\nimport { ToolbarContribution } from '@theia/toolbar/lib/browser/toolbar-interfaces';\nimport { ToolbarDefaultsFactory } from '@theia/toolbar/lib/browser/toolbar-defaults';\nimport { SampleToolbarDefaultsOverride } from './sample-toolbar-defaults-override';\nimport '../../../src/browser/toolbar/sample-toolbar-contribution.css';\n\nexport const bindSampleToolbarContribution = (bind: interfaces.Bind, rebind: interfaces.Rebind) => {\n    bind(SampleToolbarContribution).toSelf().inSingletonScope();\n    bind(ToolbarContribution).to(SampleToolbarContribution);\n    bind(CommandContribution).to(SampleToolbarContribution);\n    bind(MenuContribution).to(SampleToolbarContribution);\n    bind(SearchInWorkspaceQuickInputService).toSelf().inSingletonScope();\n    rebind(ToolbarDefaultsFactory).toConstantValue(SampleToolbarDefaultsOverride);\n};\n\nexport const FIND_IN_WORKSPACE_ROOT = {\n    id: 'easy.search.find.in.workspace.root',\n    category: 'Search',\n    label: 'Search Workspace Root for Text',\n};\n\n@injectable()\nexport class SearchInWorkspaceQuickInputService {\n    @inject(QuickInputService) protected readonly quickInputService: QuickInputService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(CommandService) protected readonly commandService: CommandService;\n    protected quickPickItems: QuickPickItem[] = [];\n\n    open(): void {\n        this.quickPickItems = this.createWorkspaceList();\n        this.quickInputService.showQuickPick(this.quickPickItems, {\n            placeholder: 'Workspace root to search',\n        });\n    }\n\n    protected createWorkspaceList(): QuickPickItem[] {\n        const roots = this.workspaceService.tryGetRoots();\n        return roots.map(root => {\n            const uri = root.resource;\n            return {\n                label: this.labelProvider.getName(uri),\n                execute: (): Promise<void> => this.commandService.executeCommand(SearchInWorkspaceCommands.FIND_IN_FOLDER.id, [uri]),\n            };\n        });\n    }\n}\n\n@injectable()\nexport class SampleToolbarContribution extends AbstractToolbarContribution\n    implements CommandContribution,\n    MenuContribution {\n    @inject(SearchInWorkspaceQuickInputService) protected readonly searchPickService: SearchInWorkspaceQuickInputService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    static ID = 'theia-sample-toolbar-contribution';\n    id = SampleToolbarContribution.ID;\n\n    protected handleOnClick = (e: ReactInteraction<HTMLSpanElement>): void => this.doHandleOnClick(e);\n    protected doHandleOnClick(e: ReactInteraction<HTMLSpanElement>): void {\n        e.stopPropagation();\n        const toolbar = document.querySelector<HTMLDivElement>('#main-toolbar');\n        if (toolbar) {\n            const { bottom } = toolbar.getBoundingClientRect();\n            const { left } = e.currentTarget.getBoundingClientRect();\n            this.contextMenuRenderer.render({\n                includeAnchorArg: false,\n                menuPath: ToolbarMenus.SEARCH_WIDGET_DROPDOWN_MENU,\n                anchor: { x: left, y: bottom },\n            });\n        }\n    }\n\n    render(): React.ReactNode {\n        return (\n            <div\n                role='button'\n                tabIndex={0}\n                className='icon-wrapper action-label item enabled codicon codicon-search'\n                id='easy-search-item-icon'\n                onClick={this.handleOnClick}\n                title='Search for files, text, commands, and more...'\n            >\n                <div className='codicon codicon-triangle-down' />\n            </div>);\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(FIND_IN_WORKSPACE_ROOT, {\n            execute: async () => {\n                const wsRoots = await this.workspaceService.roots;\n                if (!wsRoots.length) {\n                    await this.commandService.executeCommand(SearchInWorkspaceCommands.FIND_IN_FOLDER.id);\n                } else if (wsRoots.length === 1) {\n                    const { resource } = wsRoots[0];\n                    await this.commandService.executeCommand(SearchInWorkspaceCommands.FIND_IN_FOLDER.id, [resource]);\n                } else {\n                    this.searchPickService.open();\n                }\n            },\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(ToolbarMenus.SEARCH_WIDGET_DROPDOWN_MENU, {\n            commandId: quickCommand.id,\n            label: 'Find a Command',\n            order: 'a',\n        });\n        registry.registerMenuAction(ToolbarMenus.SEARCH_WIDGET_DROPDOWN_MENU, {\n            commandId: quickFileOpen.id,\n            order: 'b',\n            label: 'Search for a file'\n        });\n        registry.registerMenuAction(ToolbarMenus.SEARCH_WIDGET_DROPDOWN_MENU, {\n            commandId: SearchInWorkspaceCommands.OPEN_SIW_WIDGET.id,\n            label: 'Search Entire Workspace for Text',\n            order: 'c',\n        });\n        registry.registerMenuAction(ToolbarMenus.SEARCH_WIDGET_DROPDOWN_MENU, {\n            commandId: FIND_IN_WORKSPACE_ROOT.id,\n            order: 'd',\n        });\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DeflatedToolbarTree, ToolbarAlignment } from '@theia/toolbar/lib/browser/toolbar-interfaces';\n\nexport const SampleToolbarDefaultsOverride: () => DeflatedToolbarTree = () => ({\n    items: {\n        [ToolbarAlignment.LEFT]: [\n            [\n                {\n                    id: 'textEditor.commands.go.back',\n                    command: 'textEditor.commands.go.back',\n                    icon: 'codicon codicon-arrow-left',\n                },\n                {\n                    id: 'textEditor.commands.go.forward',\n                    command: 'textEditor.commands.go.forward',\n                    icon: 'codicon codicon-arrow-right',\n                },\n            ],\n            [\n                {\n                    id: 'workbench.action.splitEditorRight',\n                    command: 'workbench.action.splitEditor',\n                    icon: 'codicon codicon-split-horizontal',\n                },\n            ],\n        ],\n        [ToolbarAlignment.CENTER]: [[\n            {\n                id: 'theia-sample-toolbar-contribution',\n                group: 'contributed'\n            }\n        ]],\n        [ToolbarAlignment.RIGHT]: [\n            [\n                {\n                    id: 'workbench.action.showCommands',\n                    command: 'workbench.action.showCommands',\n                    icon: 'codicon codicon-terminal',\n                    tooltip: 'Command Palette',\n                },\n            ]\n        ]\n    },\n});\n","// *****************************************************************************\n// Copyright (C) 2020 TORO Limited and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { AbstractViewContribution, bindViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { Command, CommandRegistry, MessageService } from '@theia/core/lib/common';\nimport { codicon, Widget, WidgetFactory } from '@theia/core/lib/browser';\nimport { SampleViewUnclosableView } from './sample-unclosable-view';\n\nexport const SampleToolBarCommand: Command = {\n    id: 'sample.toggle.toolbarCommand',\n    iconClass: codicon('add')\n};\n\n@injectable()\nexport class SampleUnclosableViewContribution extends AbstractViewContribution<SampleViewUnclosableView> implements TabBarToolbarContribution {\n\n    static readonly SAMPLE_UNCLOSABLE_VIEW_TOGGLE_COMMAND_ID = 'sampleUnclosableView:toggle';\n\n    protected toolbarItemState = false;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    constructor() {\n        super({\n            widgetId: SampleViewUnclosableView.ID,\n            widgetName: 'Sample Unclosable View',\n            toggleCommandId: SampleUnclosableViewContribution.SAMPLE_UNCLOSABLE_VIEW_TOGGLE_COMMAND_ID,\n            defaultWidgetOptions: {\n                area: 'main'\n            }\n        });\n    }\n\n    override registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(SampleToolBarCommand, {\n            execute: () => {\n                this.toolbarItemState = !this.toolbarItemState;\n                this.messageService.info(`Sample Toolbar Command is toggled = ${this.toolbarItemState}`);\n            },\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            isToggled: () => this.toolbarItemState\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: SampleToolBarCommand.id,\n            command: SampleToolBarCommand.id,\n            tooltip: 'Click to Toggle Toolbar Item',\n            priority: 0\n        });\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (sampleView: SampleViewUnclosableView) => T): T | false {\n        if (widget instanceof SampleViewUnclosableView && widget.id === SampleViewUnclosableView.ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n\nexport const bindSampleUnclosableView = (bind: interfaces.Bind) => {\n    bindViewContribution(bind, SampleUnclosableViewContribution);\n    bind(TabBarToolbarContribution).to(SampleUnclosableViewContribution).inSingletonScope();\n    bind(SampleViewUnclosableView).toSelf();\n    bind(WidgetFactory).toDynamicValue(ctx => ({\n        id: SampleViewUnclosableView.ID,\n        createWidget: () => ctx.container.get<SampleViewUnclosableView>(SampleViewUnclosableView)\n    }));\n};\n","// *****************************************************************************\n// Copyright (C) 2020 TORO Limited and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\n\n/**\n * This sample view is used to demo the behavior of \"Widget.title.closable\".\n */\n@injectable()\nexport class SampleViewUnclosableView extends ReactWidget {\n  static readonly ID = 'sampleUnclosableView';\n\n  @postConstruct()\n  init(): void {\n    this.id = SampleViewUnclosableView.ID;\n    this.title.caption = 'Sample Unclosable View';\n    this.title.label = 'Sample Unclosable View';\n    this.title.iconClass = 'unclosable-window-icon';\n    this.title.closable = false;\n    this.update();\n  }\n\n  protected render(): React.ReactNode {\n    return (\n      <div>\n        Closable\n        <input type=\"checkbox\" defaultChecked={this.title.closable} onChange={e => this.title.closable = e.target.checked} />\n      </div>\n    );\n  }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Endpoint } from '@theia/core/lib/browser';\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\nimport { SampleAppInfo } from '../../common/vsx/sample-app-info';\n\n@injectable()\nexport class SampleFrontendAppInfo implements SampleAppInfo {\n\n    async getSelfOrigin(): Promise<string> {\n        return new Endpoint().origin;\n    }\n}\n\nexport function bindSampleAppInfo(bind: interfaces.Bind): void {\n    bind(SampleAppInfo).to(SampleFrontendAppInfo).inSingletonScope();\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { VSXEnvironment } from '@theia/vsx-registry/lib/common/vsx-environment';\nimport { Command, CommandContribution, CommandRegistry, MessageService } from '@theia/core/lib/common';\n\n@injectable()\nexport class VSXCommandContribution implements CommandContribution {\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(VSXEnvironment)\n    protected readonly environment: VSXEnvironment;\n\n    protected readonly command: Command = {\n        id: 'vsx.echo-api-version',\n        label: 'VS Code API Version'\n    };\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(this.command, {\n            execute: async () => {\n                const version = await this.environment.getVscodeApiVersion();\n                this.messageService.info(`Supported VS Code API Version: ${version}`);\n            }\n        });\n    }\n\n}\n\nexport const bindVSXCommand = (bind: interfaces.Bind) => {\n    bind(CommandContribution).to(VSXCommandContribution).inSingletonScope();\n};\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport const SampleAppInfo = Symbol('SampleAppInfo') as symbol & interfaces.Abstract<SampleAppInfo>;\nexport interface SampleAppInfo {\n    getSelfOrigin(): Promise<string>;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { OVSXUrlResolver } from '@theia/vsx-registry/lib/common';\nimport { SampleAppInfo } from './sample-app-info';\n\nexport function rebindOVSXClientFactory(rebind: interfaces.Rebind): void {\n    // rebind the OVSX client factory so that we can replace patterns like \"${self}\" in the configs:\n    rebind(OVSXUrlResolver)\n        .toDynamicValue(ctx => {\n            const appInfo = ctx.container.get(SampleAppInfo);\n            const selfOrigin = appInfo.getSelfOrigin();\n            return async url => url.replace('${self}', await selfOrigin);\n        })\n        .inSingletonScope();\n}\n","'use strict';\n\n// Port of lower_bound from http://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comp) {\n\tlet first = 0;\n\tlet count = array.length;\n\n\twhile (count > 0) {\n\t\tconst step = (count / 2) | 0;\n\t\tlet it = first + step;\n\n\t\tif (comp(array[it], value) <= 0) {\n\t\t\tfirst = ++it;\n\t\t\tcount -= step + 1;\n\t\t} else {\n\t\t\tcount = step;\n\t\t}\n\t}\n\n\treturn first;\n}\n\nclass PriorityQueue {\n\tconstructor() {\n\t\tthis._queue = [];\n\t}\n\n\tenqueue(run, opts) {\n\t\topts = Object.assign({\n\t\t\tpriority: 0\n\t\t}, opts);\n\n\t\tconst element = {priority: opts.priority, run};\n\n\t\tif (this.size && this._queue[this.size - 1].priority >= opts.priority) {\n\t\t\tthis._queue.push(element);\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = lowerBound(this._queue, element, (a, b) => b.priority - a.priority);\n\t\tthis._queue.splice(index, 0, element);\n\t}\n\n\tdequeue() {\n\t\treturn this._queue.shift().run;\n\t}\n\n\tget size() {\n\t\treturn this._queue.length;\n\t}\n}\n\nclass PQueue {\n\tconstructor(opts) {\n\t\topts = Object.assign({\n\t\t\tconcurrency: Infinity,\n\t\t\tautoStart: true,\n\t\t\tqueueClass: PriorityQueue\n\t\t}, opts);\n\n\t\tif (!(typeof opts.concurrency === 'number' && opts.concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${opts.concurrency}\\` (${typeof opts.concurrency})`);\n\t\t}\n\n\t\tthis.queue = new opts.queueClass(); // eslint-disable-line new-cap\n\t\tthis._queueClass = opts.queueClass;\n\t\tthis._pendingCount = 0;\n\t\tthis._concurrency = opts.concurrency;\n\t\tthis._isPaused = opts.autoStart === false;\n\t\tthis._resolveEmpty = () => {};\n\t\tthis._resolveIdle = () => {};\n\t}\n\n\t_next() {\n\t\tthis._pendingCount--;\n\n\t\tif (this.queue.size > 0) {\n\t\t\tif (!this._isPaused) {\n\t\t\t\tthis.queue.dequeue()();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resolveEmpty();\n\t\t\tthis._resolveEmpty = () => {};\n\n\t\t\tif (this._pendingCount === 0) {\n\t\t\t\tthis._resolveIdle();\n\t\t\t\tthis._resolveIdle = () => {};\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(fn, opts) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst run = () => {\n\t\t\t\tthis._pendingCount++;\n\n\t\t\t\ttry {\n\t\t\t\t\tPromise.resolve(fn()).then(\n\t\t\t\t\t\tval => {\n\t\t\t\t\t\t\tresolve(val);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t},\n\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\tthis._next();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (!this._isPaused && this._pendingCount < this._concurrency) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tthis.queue.enqueue(run, opts);\n\t\t\t}\n\t\t});\n\t}\n\n\taddAll(fns, opts) {\n\t\treturn Promise.all(fns.map(fn => this.add(fn, opts)));\n\t}\n\n\tstart() {\n\t\tif (!this._isPaused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isPaused = false;\n\t\twhile (this.queue.size > 0 && this._pendingCount < this._concurrency) {\n\t\t\tthis.queue.dequeue()();\n\t\t}\n\t}\n\n\tpause() {\n\t\tthis._isPaused = true;\n\t}\n\n\tclear() {\n\t\tthis.queue = new this._queueClass(); // eslint-disable-line new-cap\n\t}\n\n\tonEmpty() {\n\t\t// Instantly resolve if the queue is empty\n\t\tif (this.queue.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveEmpty;\n\t\t\tthis._resolveEmpty = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tonIdle() {\n\t\t// Instantly resolve if none pending\n\t\tif (this._pendingCount === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveIdle;\n\t\t\tthis._resolveIdle = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tget size() {\n\t\treturn this.queue.size;\n\t}\n\n\tget pending() {\n\t\treturn this._pendingCount;\n\t}\n\n\tget isPaused() {\n\t\treturn this._isPaused;\n\t}\n}\n\nmodule.exports = PQueue;\n\n;(globalThis['theia'] = globalThis['theia'] || {})['p-queue'] = this;\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { CommandService, Emitter } from '@theia/core';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ContextMenuRenderer, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { DeflatedContributedToolbarItem, ToolbarContribution } from './toolbar-interfaces';\n\n@injectable()\nexport abstract class AbstractToolbarContribution implements ToolbarContribution {\n    @inject(KeybindingRegistry) protected readonly keybindingRegistry: KeybindingRegistry;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(CommandService) protected readonly commandService: CommandService;\n\n    abstract id: string;\n\n    protected didChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.didChangeEmitter.event;\n\n    abstract render(): React.ReactNode;\n\n    toJSON(): DeflatedContributedToolbarItem {\n        return { id: this.id, group: 'contributed' };\n    }\n\n    protected resolveKeybindingForCommand(commandID: string | undefined): string {\n        if (!commandID) {\n            return '';\n        }\n        const keybindings = this.keybindingRegistry.getKeybindingsForCommand(commandID);\n        if (keybindings.length > 0) {\n            const binding = keybindings[0];\n            const bindingKeySequence = this.keybindingRegistry.resolveKeybinding(binding);\n            const keyCode = bindingKeySequence[0];\n            return ` (${this.keybindingRegistry.acceleratorForKeyCode(keyCode, '+')})`;\n        }\n        return '';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { OVSXClientProvider, OVSXUrlResolver } from './ovsx-client-provider';\nexport { VSXEnvironment } from './vsx-environment';\nexport { VSXExtensionUri } from './vsx-extension-uri';\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { VSCodeExtensionUri as VSXExtensionUri } from '@theia/plugin-ext-vscode/lib/common/plugin-vscode-uri';\n/** @deprecated since 1.25.0. Import `VSCodeExtensionUri from `plugin-ext-vscode` package instead. */\nexport { VSXExtensionUri };\n\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../icons/theia.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"window-icon.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-icon {\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n#theia-main-content-panel {\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: 15%;\n}\n\n.unclosable-window-icon {\n  -webkit-mask: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n  mask: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../api-samples/src/browser/style/branding.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,yDAA2C;EAC3C,2BAA2B;EAC3B,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAEA;EACE,yDAA2C;EAC3C,kCAAkC;EAClC,4BAA4B;EAC5B,oBAAoB;AACtB;;AAEA;EACE,qDAAoC;EACpC,6CAA4B;AAC9B\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-icon {\\n  background-image: url(\\\"../icons/theia.png\\\");\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n}\\n\\n#theia-main-content-panel {\\n  background-image: url(\\\"../icons/theia.png\\\");\\n  background-position: center center;\\n  background-repeat: no-repeat;\\n  background-size: 15%;\\n}\\n\\n.unclosable-window-icon {\\n  -webkit-mask: url(\\\"window-icon.svg\\\");\\n  mask: url(\\\"window-icon.svg\\\");\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2022 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n#theia-sample-toolbar-contribution {\n  position: relative;\n}\n\n#theia-sample-toolbar-contribution .icon-wrapper {\n  cursor: pointer;\n  margin-left: 0;\n}\n\n#theia-sample-toolbar-contribution:focus,\n#theia-sample-toolbar-contribution .icon-wrapper:focus,\n#theia-sample-toolbar-contribution .codicon-search:focus {\n  outline: none;\n}\n\n#theia-sample-toolbar-contribution\n  .icon-wrapper.action-label.item.enabled:hover {\n  background-color: var(--theia-toolbar-hoverBackground);\n}\n\n#theia-sample-toolbar-contribution #easy-search-item-icon.codicon-search {\n  position: relative;\n}\n\n#theia-sample-toolbar-contribution .icon-wrapper .codicon-triangle-down {\n  position: absolute;\n  font-size: 10px;\n  bottom: -7px;\n  right: -2px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../api-samples/src/browser/toolbar/sample-toolbar-contribution.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;;;EAGE,aAAa;AACf;;AAEA;;EAEE,sDAAsD;AACxD;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,YAAY;EACZ,WAAW;AACb\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2022 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#theia-sample-toolbar-contribution {\\n  position: relative;\\n}\\n\\n#theia-sample-toolbar-contribution .icon-wrapper {\\n  cursor: pointer;\\n  margin-left: 0;\\n}\\n\\n#theia-sample-toolbar-contribution:focus,\\n#theia-sample-toolbar-contribution .icon-wrapper:focus,\\n#theia-sample-toolbar-contribution .codicon-search:focus {\\n  outline: none;\\n}\\n\\n#theia-sample-toolbar-contribution\\n  .icon-wrapper.action-label.item.enabled:hover {\\n  background-color: var(--theia-toolbar-hoverBackground);\\n}\\n\\n#theia-sample-toolbar-contribution #easy-search-item-icon.codicon-search {\\n  position: relative;\\n}\\n\\n#theia-sample-toolbar-contribution .icon-wrapper .codicon-triangle-down {\\n  position: absolute;\\n  font-size: 10px;\\n  bottom: -7px;\\n  right: -2px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./branding.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./sample-toolbar-contribution.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}