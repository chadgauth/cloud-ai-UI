{"version":3,"file":"packages_property-view_lib_browser_property-view-frontend-module_js.js","mappings":"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","sources":["webpack:///../../packages/core/src/common/selection-command-handler.ts?","webpack:///../../packages/core/shared/react/index.js?","webpack:///../../packages/filesystem/src/browser/file-selection.ts?","webpack:///../../packages/property-view/src/browser/empty-property-view-widget-provider.tsx?","webpack:///../../packages/property-view/src/browser/property-data-service.ts?","webpack:///../../packages/property-view/src/browser/property-view-contribution.ts?","webpack:///../../packages/property-view/src/browser/property-view-frontend-module.ts?","webpack:///../../packages/property-view/src/browser/property-view-service.ts?","webpack:///../../packages/property-view/src/browser/property-view-widget-provider.ts?","webpack:///../../packages/property-view/src/browser/property-view-widget.tsx?","webpack:///../../packages/property-view/src/browser/resource-property-view/index.ts?","webpack:///../../packages/property-view/src/browser/resource-property-view/resource-property-data-service.ts?","webpack:///../../packages/property-view/src/browser/resource-property-view/resource-property-view-label-provider.ts?","webpack:///../../packages/property-view/src/browser/resource-property-view/resource-property-view-tree-container.ts?","webpack:///../../packages/property-view/src/browser/resource-property-view/resource-property-view-tree-items.ts?","webpack:///../../packages/property-view/src/browser/resource-property-view/resource-property-view-tree-widget.tsx?","webpack:///../../packages/property-view/src/browser/resource-property-view/resource-property-view-widget-provider.ts?","webpack:///../../packages/property-view/src/browser/style/property-view.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../../packages/property-view/src/browser/style/property-view.css?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { CommandHandler } from './command';\nimport { SelectionService } from '../common/selection-service';\n\nexport class SelectionCommandHandler<S> implements CommandHandler {\n\n    constructor(\n        protected readonly selectionService: SelectionService,\n        protected readonly toSelection: (arg: any) => S | undefined,\n        protected readonly options: SelectionCommandHandler.Options<S>\n    ) { }\n\n    execute(...args: any[]): Object | undefined {\n        const selection = this.getSelection(...args);\n        return selection ? (this.options.execute as any)(selection, ...args) : undefined;\n    }\n\n    isVisible(...args: any[]): boolean {\n        const selection = this.getSelection(...args);\n        return !!selection && (!this.options.isVisible || (this.options.isVisible as any)(selection as any, ...args));\n    }\n\n    isEnabled(...args: any[]): boolean {\n        const selection = this.getSelection(...args);\n        return !!selection && (!this.options.isEnabled || (this.options.isEnabled as any)(selection as any, ...args));\n    }\n\n    protected isMulti(): boolean {\n        return this.options && !!this.options.multi;\n    }\n\n    protected getSelection(...args: any[]): S | S[] | undefined {\n        const givenSelection = args.length && this.toSelection(args[0]);\n        if (givenSelection) {\n            return this.isMulti() ? [givenSelection] : givenSelection;\n        }\n        const globalSelection = this.getSingleSelection(this.selectionService.selection);\n        if (this.isMulti()) {\n            return this.getMultiSelection(globalSelection);\n        }\n        return this.getSingleSelection(globalSelection);\n    }\n\n    protected getSingleSelection(arg: Object | undefined): S | undefined {\n        let selection = this.toSelection(arg);\n        if (selection) {\n            return selection;\n        }\n        if (Array.isArray(arg)) {\n            for (const element of arg) {\n                selection = this.toSelection(element);\n                if (selection) {\n                    return selection;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected getMultiSelection(arg: Object | undefined): S[] | undefined {\n        let selection = this.toSelection(arg);\n        if (selection) {\n            return [selection];\n        }\n        const result = [];\n        if (Array.isArray(arg)) {\n            for (const element of arg) {\n                selection = this.toSelection(element);\n                if (selection) {\n                    result.push(selection);\n                }\n            }\n        }\n        return result.length ? result : undefined;\n    }\n}\nexport namespace SelectionCommandHandler {\n    export type Options<S> = SelectionOptions<false, S> | SelectionOptions<true, S[]>;\n    export interface SelectionOptions<Multi extends boolean, T> {\n        multi: Multi;\n        execute(selection: T, ...args: any[]): any;\n        isEnabled?(selection: T, ...args: any[]): boolean;\n        isVisible?(selection: T, ...args: any[]): boolean;\n    }\n}\n","module.exports = require('react');\n\n;(globalThis['theia'] = globalThis['theia'] || {})['@theia/core/shared/react'] = this;\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { isObject } from '@theia/core/lib/common';\nimport { FileStat } from '../common/files';\n\nexport interface FileSelection {\n    fileStat: FileStat\n}\nexport namespace FileSelection {\n    export function is(arg: unknown): arg is FileSelection {\n        return isObject<FileSelection>(arg) && FileStat.is(arg.fileStat);\n    }\n    export class CommandHandler extends SelectionCommandHandler<FileSelection> {\n\n        constructor(\n            protected override readonly selectionService: SelectionService,\n            protected override readonly options: SelectionCommandHandler.Options<FileSelection>\n        ) {\n            super(\n                selectionService,\n                arg => FileSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core/lib/common/nls';\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { PropertyViewContentWidget } from './property-view-content-widget';\nimport { DefaultPropertyViewWidgetProvider } from './property-view-widget-provider';\n\n/**\n * Property view widget that is shown if no property data or selection is available.\n * This widget is provided by the {@link EmptyPropertyViewWidgetProvider}.\n */\nclass EmptyPropertyViewWidget extends ReactWidget implements PropertyViewContentWidget {\n\n    static readonly ID = 'theia-empty-property-view';\n    static readonly LABEL = 'No Properties';\n\n    constructor() {\n        super();\n        this.id = EmptyPropertyViewWidget.ID;\n        this.title.label = EmptyPropertyViewWidget.LABEL;\n        this.title.caption = EmptyPropertyViewWidget.LABEL;\n        this.title.closable = false;\n        this.node.tabIndex = 0;\n    }\n\n    updatePropertyViewContent(): void {\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return this.emptyComponent;\n    }\n\n    protected emptyComponent: JSX.Element = <div className={'theia-widget-noInfo'}>{nls.localize('theia/property-view/noProperties', 'No properties available.')}</div>;\n\n}\n\n/**\n * `EmptyPropertyViewWidgetProvider` is implemented to provide the {@link EmptyPropertyViewWidget}\n *  if the given selection is undefined or no other provider can handle the given selection.\n */\n@injectable()\nexport class EmptyPropertyViewWidgetProvider extends DefaultPropertyViewWidgetProvider {\n\n    static readonly ID = 'no-properties';\n    override readonly id = EmptyPropertyViewWidgetProvider.ID;\n    override readonly label = 'DefaultPropertyViewWidgetProvider';\n\n    private emptyWidget: EmptyPropertyViewWidget;\n\n    constructor() {\n        super();\n        this.emptyWidget = new EmptyPropertyViewWidget();\n    }\n\n    override canHandle(selection: Object | undefined): number {\n        return selection === undefined ? 1 : 0;\n    }\n\n    override provideWidget(selection: Object | undefined): Promise<EmptyPropertyViewWidget> {\n        return Promise.resolve(this.emptyWidget);\n    }\n\n    override updateContentWidget(selection: Object | undefined): void {\n        this.emptyWidget.updatePropertyViewContent();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const PropertyDataService = Symbol('PropertyDataService');\n/**\n * `PropertyDataService` should be implemented to provide property data for the given selection.\n */\nexport interface PropertyDataService {\n\n    /**\n     * A unique id for this provider.\n     */\n    readonly id: string;\n    /**\n     * A human-readable name for this provider.\n     */\n    readonly label?: string;\n\n    /**\n     * Test whether this provider can provide property data for the given selection.\n     * Return a nonzero number if this provider can provide; otherwise it cannot.\n     * Never reject.\n     *\n     * A returned value indicating a priority of this provider.\n     */\n    canHandleSelection(selection: Object | undefined): number;\n\n    /**\n     * Provide property data for the given selection.\n     * Resolve to a property view content widget.\n     * Never reject if `canHandle` returns a positive number; otherwise should reject.\n     */\n    providePropertyData(selection: Object | undefined): Promise<Object | undefined>;\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PropertyViewWidget } from './property-view-widget';\n\n@injectable()\nexport class PropertyViewContribution extends AbstractViewContribution<PropertyViewWidget> {\n\n    constructor() {\n        super({\n            widgetId: PropertyViewWidget.ID,\n            widgetName: PropertyViewWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'property-view:toggle',\n            toggleKeybinding: 'shift+alt+p'\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { bindViewContribution, WidgetFactory } from '@theia/core/lib/browser';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { EmptyPropertyViewWidgetProvider } from './empty-property-view-widget-provider';\nimport { PropertyDataService } from './property-data-service';\nimport { PropertyViewContribution } from './property-view-contribution';\nimport { PropertyViewService } from './property-view-service';\nimport { PropertyViewWidget } from './property-view-widget';\nimport { PropertyViewWidgetProvider } from './property-view-widget-provider';\nimport { bindResourcePropertyView } from './resource-property-view';\nimport '../../src/browser/style/property-view.css';\n\nexport default new ContainerModule(bind => {\n    bind(PropertyViewService).toSelf().inSingletonScope();\n\n    bindContributionProvider(bind, PropertyDataService);\n    bindContributionProvider(bind, PropertyViewWidgetProvider);\n\n    bind(EmptyPropertyViewWidgetProvider).toSelf().inSingletonScope();\n    bind(PropertyViewWidgetProvider).to(EmptyPropertyViewWidgetProvider);\n\n    bind(PropertyViewWidget).toSelf();\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: PropertyViewWidget.ID,\n        createWidget: () => container.get(PropertyViewWidget)\n    })).inSingletonScope();\n\n    bindViewContribution(bind, PropertyViewContribution);\n\n    bindResourcePropertyView(bind);\n});\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContributionProvider, Prioritizeable } from '@theia/core';\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { EmptyPropertyViewWidgetProvider } from './empty-property-view-widget-provider';\nimport { PropertyViewWidgetProvider } from './property-view-widget-provider';\n\n/**\n * `PropertyViewService` provides an access to existing property view widget providers.\n */\n@injectable()\nexport class PropertyViewService {\n\n    @inject(ContributionProvider) @named(PropertyViewWidgetProvider)\n    private readonly contributions: ContributionProvider<PropertyViewWidgetProvider>;\n\n    @inject(EmptyPropertyViewWidgetProvider)\n    private readonly emptyWidgetProvider: EmptyPropertyViewWidgetProvider;\n\n    private providers: PropertyViewWidgetProvider[] = [];\n\n    @postConstruct()\n    init(): void {\n        this.providers = this.providers.concat(this.contributions.getContributions());\n    }\n\n    /**\n     * Return a property view widget provider with the highest priority for the given selection.\n     * Never reject, return the default provider ({@link EmptyPropertyViewWidgetProvider};\n     * displays `No properties available`) if there are no other matches.\n     */\n    async getProvider(selection: Object | undefined): Promise<PropertyViewWidgetProvider> {\n        const provider = await this.prioritize(selection);\n        return provider ?? this.emptyWidgetProvider;\n    }\n\n    protected async prioritize(selection: Object | undefined): Promise<PropertyViewWidgetProvider | undefined> {\n        const prioritized = await Prioritizeable.prioritizeAll(this.providers, async (provider: PropertyViewWidgetProvider) => {\n            try {\n                return await provider.canHandle(selection);\n            } catch {\n                return 0;\n            }\n        });\n        return prioritized.length !== 0 ? prioritized[0].value : undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContributionProvider, MaybePromise, Prioritizeable } from '@theia/core';\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { PropertyDataService } from './property-data-service';\nimport { PropertyViewContentWidget } from './property-view-content-widget';\n\nexport const PropertyViewWidgetProvider = Symbol('PropertyViewWidgetProvider');\n/**\n * The `PropertyViewWidgetProvider` should be implemented to provide a property view content widget for the given selection..\n */\nexport interface PropertyViewWidgetProvider {\n    /**\n     * A unique id for this provider.\n     */\n    id: string;\n    /**\n     * A human-readable name for this provider.\n     */\n    label?: string;\n\n    /**\n     * Test whether this provider can provide a widget for the given selection.\n     * A returned value indicating a priority of this provider.\n     *\n     * @param selection the global selection object\n     * @returns a nonzero number if this provider can provide; otherwise it cannot; never reject\n     */\n    canHandle(selection: Object | undefined): MaybePromise<number>;\n\n    /**\n     * Provide a widget for the given selection.\n     * Never reject if `canHandle` return a positive number; otherwise should reject.\n     *\n     * @param selection the global selection object\n     * @returns a resolved property view content widget.\n     */\n    provideWidget(selection: Object | undefined): Promise<PropertyViewContentWidget>;\n\n    /**\n     * Update the widget with the given selection.\n     * Never reject if `canHandle` return a positive number; otherwise should reject.\n     *\n     * @param selection the global selection object\n     * @returns a resolved property view content widget.\n     */\n    updateContentWidget(selection: Object | undefined): void;\n\n}\n\n/**\n * The `DefaultPropertyViewWidgetProvider` is the default abstract implementation of the {@link PropertyViewWidgetProvider}\n * and should be extended to provide a property view content widget for the given selection.\n */\n@injectable()\nexport abstract class DefaultPropertyViewWidgetProvider implements PropertyViewWidgetProvider {\n\n    @inject(ContributionProvider) @named(PropertyDataService)\n    protected readonly contributions: ContributionProvider<PropertyDataService>;\n\n    protected propertyDataServices: PropertyDataService[] = [];\n\n    id = 'default';\n    label = 'DefaultPropertyViewWidgetProvider';\n\n    @postConstruct()\n    init(): void {\n        this.propertyDataServices = this.propertyDataServices.concat(this.contributions.getContributions());\n    }\n\n    canHandle(selection: Object | undefined): MaybePromise<number> {\n        return 0;\n    }\n\n    provideWidget(selection: Object | undefined): Promise<PropertyViewContentWidget> {\n        throw new Error('not implemented');\n    }\n\n    updateContentWidget(selection: Object | undefined): void {\n        // no-op\n    }\n\n    protected async getPropertyDataService(selection: Object | undefined): Promise<PropertyDataService> {\n        const dataService = await this.prioritize(selection);\n        return dataService ?? this.propertyDataServices[0];\n    }\n\n    protected async prioritize(selection: Object | undefined): Promise<PropertyDataService | undefined> {\n        const prioritized = await Prioritizeable.prioritizeAll(this.propertyDataServices, async (service: PropertyDataService) => {\n            try {\n                return service.canHandleSelection(selection);\n            } catch {\n                return 0;\n            }\n        });\n        return prioritized.length !== 0 ? prioritized[0].value : undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { Disposable, SelectionService } from '@theia/core';\nimport { BaseWidget, codicon, MessageLoop, Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { PropertyViewContentWidget } from './property-view-content-widget';\nimport { PropertyViewService } from './property-view-service';\nimport { nls } from '@theia/core/lib/common/nls';\n\n/**\n * The main container for the selection-specific property widgets.\n * Based on the given selection, the registered `PropertyViewWidgetProvider` provides the\n * content widget that displays the corresponding properties.\n */\n@injectable()\nexport class PropertyViewWidget extends BaseWidget {\n\n    static readonly ID = 'property-view';\n    static readonly LABEL = nls.localize('theia/property-view/properties', 'Properties');\n\n    protected contentWidget: PropertyViewContentWidget;\n\n    protected override toDisposeOnDetach = new DisposableCollection();\n\n    @inject(PropertyViewService) protected readonly propertyViewService: PropertyViewService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    @postConstruct()\n    init(): void {\n        this.id = PropertyViewWidget.ID;\n        this.title.label = PropertyViewWidget.LABEL;\n        this.title.caption = PropertyViewWidget.LABEL;\n        this.title.iconClass = codicon('table');\n        this.title.closable = true;\n\n        this.addClass('theia-property-view-widget');\n        this.node.tabIndex = 0;\n\n        let disposed = false;\n        this.toDispose.push(Disposable.create(() => disposed = true));\n        this.toDispose.push(this.selectionService.onSelectionChanged((selection: Object | undefined) => {\n            this.propertyViewService.getProvider(selection).then(provider => {\n                provider.provideWidget(selection).then(contentWidget => {\n                    if (!disposed) {\n                        this.replaceContentWidget(contentWidget);\n                        provider.updateContentWidget(selection);\n                    }\n                });\n            });\n        }));\n    }\n\n    protected initializeContentWidget(selection: Object | undefined): void {\n        this.propertyViewService.getProvider(selection).then(provider => {\n            provider.provideWidget(selection).then(contentWidget => {\n                this.attachContentWidget(contentWidget);\n                provider.updateContentWidget(selection);\n            });\n        });\n    }\n\n    protected replaceContentWidget(newContentWidget: PropertyViewContentWidget): void {\n        if (this.contentWidget.id !== newContentWidget.id) {\n            if (this.contentWidget) {\n                Widget.detach(this.contentWidget);\n            }\n            this.attachContentWidget(newContentWidget);\n        }\n    }\n\n    protected attachContentWidget(newContentWidget: PropertyViewContentWidget): void {\n        this.contentWidget = newContentWidget;\n        Widget.attach(this.contentWidget, this.node);\n        this.toDisposeOnDetach = new DisposableCollection();\n        this.toDisposeOnDetach.push(Disposable.create(() => {\n            if (this.contentWidget) {\n                Widget.detach(this.contentWidget);\n            }\n        }));\n        this.update();\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.initializeContentWidget(this.selectionService.selection);\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.node.focus();\n        if (this.contentWidget) {\n            this.contentWidget.activate();\n        }\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        if (this.contentWidget) {\n            MessageLoop.sendMessage(this.contentWidget, msg);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './resource-property-view-tree-container';\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Navigatable } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSelection } from '@theia/filesystem/lib/browser/file-selection';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { PropertyDataService } from '../property-data-service';\n\n/**\n * This data service provides property data for {@link FileSelection}s and selections of {@link Navigatable}s.\n */\n@injectable()\nexport class ResourcePropertyDataService implements PropertyDataService {\n\n    readonly id = 'resources';\n    readonly label = 'ResourcePropertyDataService';\n\n    @inject(FileService) protected readonly fileService: FileService;\n\n    canHandleSelection(selection: Object | undefined): number {\n        return (this.isFileSelection(selection) || this.isNavigatableSelection(selection)) ? 1 : 0;\n    }\n\n    protected isFileSelection(selection: Object | undefined): boolean {\n        return !!selection && Array.isArray(selection) && FileSelection.is(selection[0]);\n    }\n\n    protected isNavigatableSelection(selection: Object | undefined): boolean {\n        return !!selection && Navigatable.is(selection);\n    }\n\n    protected async getFileStat(uri: URI): Promise<FileStat> {\n        return this.fileService.resolve(uri);\n    }\n\n    async providePropertyData(selection: Object | undefined): Promise<FileStat | undefined> {\n        if (this.isFileSelection(selection) && Array.isArray(selection)) {\n            return this.getFileStat(selection[0].fileStat.resource);\n        } else if (this.isNavigatableSelection(selection)) {\n            const navigatableUri = (selection as Navigatable).getResourceUri();\n            if (navigatableUri) {\n                return this.getFileStat(navigatableUri);\n            }\n        }\n        return undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codicon, LabelProvider, LabelProviderContribution, TreeNode } from '@theia/core/lib/browser';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ResourcePropertiesCategoryNode, ResourcePropertiesItemNode } from './resource-property-view-tree-items';\n\nexport const DEFAULT_INFO_ICON = codicon('info');\n\n@injectable()\nexport class ResourcePropertiesLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    canHandle(element: TreeNode): number {\n        return (ResourcePropertiesCategoryNode.is(element) || ResourcePropertiesItemNode.is(element)) ? 75 : 0;\n    }\n\n    getIcon(node: ResourcePropertiesCategoryNode | ResourcePropertiesItemNode): string {\n        if (ResourcePropertiesCategoryNode.is(node)) {\n            return node.icon ?? DEFAULT_INFO_ICON;\n        }\n        return node.icon ?? '';\n    }\n\n    getName(node: ResourcePropertiesCategoryNode | ResourcePropertiesItemNode): string {\n        return node.name;\n    }\n\n    getLongName(node: ResourcePropertiesCategoryNode | ResourcePropertiesItemNode): string {\n        if (ResourcePropertiesItemNode.is(node)) {\n            return node.property;\n        }\n        return this.getName(node);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { createTreeContainer, LabelProviderContribution, TreeProps } from '@theia/core/lib/browser';\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { PropertyDataService } from '../property-data-service';\nimport { PropertyViewWidgetProvider } from '../property-view-widget-provider';\nimport { ResourcePropertyDataService } from './resource-property-data-service';\nimport { ResourcePropertiesLabelProvider } from './resource-property-view-label-provider';\nimport { ResourcePropertyViewTreeWidget } from './resource-property-view-tree-widget';\nimport { ResourcePropertyViewWidgetProvider } from './resource-property-view-widget-provider';\n\nconst RESOURCE_PROPERTY_VIEW_TREE_PROPS = {\n    multiSelect: true,\n    search: true,\n} as TreeProps;\n\nfunction createResourcePropertyViewTreeWidget(parent: interfaces.Container): ResourcePropertyViewTreeWidget {\n    const child = createTreeContainer(parent, {\n        props: RESOURCE_PROPERTY_VIEW_TREE_PROPS,\n        widget: ResourcePropertyViewTreeWidget,\n    });\n    return child.get(ResourcePropertyViewTreeWidget);\n}\n\nexport function bindResourcePropertyView(bind: interfaces.Bind): void {\n    bind(LabelProviderContribution).to(ResourcePropertiesLabelProvider).inSingletonScope();\n    bind(PropertyDataService).to(ResourcePropertyDataService).inSingletonScope();\n    bind(PropertyViewWidgetProvider).to(ResourcePropertyViewWidgetProvider).inSingletonScope();\n\n    bind(ResourcePropertyViewTreeWidget).toDynamicValue(ctx =>\n        createResourcePropertyViewTreeWidget(ctx.container)\n    );\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CompositeTreeNode, ExpandableTreeNode, SelectableTreeNode, TreeNode } from '@theia/core/lib/browser';\n\nexport const ROOT_ID = 'ResourcePropertiesTree';\n\nexport interface ResourcePropertiesRoot extends CompositeTreeNode {\n    children: ResourcePropertiesCategoryNode[];\n}\nexport namespace ResourcePropertiesRoot {\n    export function is(node: unknown): node is ResourcePropertiesRoot {\n        return CompositeTreeNode.is(node) && node.id === ROOT_ID;\n    }\n}\n\nexport interface ResourcePropertiesCategoryNode extends ExpandableTreeNode, SelectableTreeNode {\n    name: string;\n    icon?: string;\n    children: ResourcePropertiesItemNode[];\n    parent: ResourcePropertiesRoot;\n    categoryId: string;\n}\nexport namespace ResourcePropertiesCategoryNode {\n    export function is(node: TreeNode | undefined): node is ResourcePropertiesCategoryNode {\n        return ExpandableTreeNode.is(node) && SelectableTreeNode.is(node) && 'categoryId' in node;\n    }\n}\n\nexport interface ResourcePropertiesItemNode extends SelectableTreeNode {\n    name: string;\n    icon?: string;\n    parent: ResourcePropertiesCategoryNode;\n    property: string;\n}\nexport namespace ResourcePropertiesItemNode {\n    export function is(node: TreeNode | undefined): node is ResourcePropertiesItemNode {\n        return !!node && SelectableTreeNode.is(node) && 'property' in node;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    ContextMenuRenderer,\n    NodeProps,\n    TreeModel,\n    TreeNode,\n    TreeProps,\n    TreeWidget\n} from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { PropertyDataService } from '../property-data-service';\nimport { PropertyViewContentWidget } from '../property-view-content-widget';\nimport {\n    ResourcePropertiesCategoryNode,\n    ResourcePropertiesItemNode,\n    ResourcePropertiesRoot,\n    ROOT_ID\n} from './resource-property-view-tree-items';\nimport { nls } from '@theia/core/lib/common/nls';\n\n/**\n * This widget fetches the property data for {@link FileSelection}s and selections of {@link Navigatable}s\n * and renders that property data as a {@link TreeWidget}.\n * This widget is provided by the registered `ResourcePropertyViewWidgetProvider`.\n */\n@injectable()\nexport class ResourcePropertyViewTreeWidget extends TreeWidget implements PropertyViewContentWidget {\n\n    static readonly ID = 'resource-properties-tree-widget';\n    static readonly LABEL = 'Resource Properties Tree';\n\n    protected propertiesTree: Map<string, ResourcePropertiesCategoryNode>;\n    protected currentSelection: Object | undefined;\n\n    constructor(\n        @inject(TreeProps) props: TreeProps,\n        @inject(TreeModel) model: TreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n\n        model.root = {\n            id: ROOT_ID,\n            name: ResourcePropertyViewTreeWidget.LABEL,\n            parent: undefined,\n            visible: false,\n            children: []\n        } as ResourcePropertiesRoot;\n\n        this.propertiesTree = new Map<string, ResourcePropertiesCategoryNode>();\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n\n        this.id = ResourcePropertyViewTreeWidget.ID + '-treeContainer';\n        this.addClass('treeContainer');\n\n        this.fillPropertiesTree();\n    }\n\n    protected updateNeeded(selection: Object | undefined): boolean {\n        return this.currentSelection !== selection;\n    }\n\n    updatePropertyViewContent(propertyDataService?: PropertyDataService, selection?: Object | undefined): void {\n        if (this.updateNeeded(selection)) {\n            this.currentSelection = selection;\n            if (propertyDataService) {\n                propertyDataService.providePropertyData(selection).then((fileStatObject?: FileStat) => {\n                    this.fillPropertiesTree(fileStatObject);\n                });\n            }\n        }\n    }\n\n    protected fillPropertiesTree(fileStatObject?: FileStat): void {\n        if (fileStatObject) {\n            this.propertiesTree.clear();\n            const infoNode = this.createCategoryNode('info', nls.localizeByDefault('Info'));\n            this.propertiesTree.set('info', infoNode);\n\n            infoNode.children.push(this.createResultLineNode('isDirectory', nls.localize('theia/property-view/directory', 'Directory'), fileStatObject.isDirectory, infoNode));\n            infoNode.children.push(this.createResultLineNode('isFile', nls.localizeByDefault('File'), fileStatObject.isFile, infoNode));\n            infoNode.children.push(this.createResultLineNode('isSymbolicLink', nls.localize('theia/property-view/symbolicLink', 'Symbolic link'),\n                fileStatObject.isSymbolicLink, infoNode));\n            infoNode.children.push(this.createResultLineNode('location', nls.localize('theia/property-view/location', 'Location'),\n                this.getLocationString(fileStatObject), infoNode));\n            infoNode.children.push(this.createResultLineNode('name', nls.localizeByDefault('Name'), this.getFileName(fileStatObject), infoNode));\n            infoNode.children.push(this.createResultLineNode('path', nls.localizeByDefault('Path'), this.getFilePath(fileStatObject), infoNode));\n            infoNode.children.push(this.createResultLineNode('lastModification', nls.localize('theia/property-view/lastModified', 'Last modified'),\n                this.getLastModificationString(fileStatObject), infoNode));\n            infoNode.children.push(this.createResultLineNode('created', nls.localize('theia/property-view/created', 'Created'),\n                this.getCreationTimeString(fileStatObject), infoNode));\n            infoNode.children.push(this.createResultLineNode('size', nls.localize('theia/property-view/size', 'Size'), this.getSizeString(fileStatObject), infoNode));\n            this.refreshModelChildren();\n        }\n    }\n\n    protected getLocationString(fileStat: FileStat): string {\n        return fileStat.resource.path.fsPath();\n    }\n\n    protected getFileName(fileStat: FileStat): string {\n        return this.labelProvider.getName(fileStat.resource);\n    }\n\n    protected getFilePath(fileStat: FileStat): string {\n        return this.labelProvider.getLongName(fileStat.resource);\n    }\n\n    protected getLastModificationString(fileStat: FileStat): string {\n        return fileStat.mtime ? new Date(fileStat.mtime).toLocaleString() : '';\n    }\n\n    protected getCreationTimeString(fileStat: FileStat): string {\n        return fileStat.ctime ? new Date(fileStat.ctime).toLocaleString() : '';\n    }\n\n    protected getSizeString(fileStat: FileStat): string {\n        return fileStat.size ? nls.localizeByDefault('{0}B', fileStat.size.toString()) : '';\n    }\n\n    /*\n    * Creating TreeNodes\n    */\n\n    protected createCategoryNode(categoryId: string, name: string): ResourcePropertiesCategoryNode {\n        return {\n            id: categoryId,\n            parent: this.model.root as ResourcePropertiesRoot,\n            name,\n            children: [],\n            categoryId,\n            selected: false,\n            expanded: true\n        };\n    }\n\n    protected createResultLineNode(id: string, name: string, property: boolean | string | undefined, parent: ResourcePropertiesCategoryNode): ResourcePropertiesItemNode {\n        return {\n            id: `${parent.id}::${id}`,\n            parent,\n            name: name,\n            property: property !== undefined ? String(property) : '',\n            selected: false\n        };\n    }\n\n    /**\n     * Rendering\n     */\n\n    protected async refreshModelChildren(): Promise<void> {\n        if (ResourcePropertiesRoot.is(this.model.root)) {\n            this.model.root.children = Array.from(this.propertiesTree.values());\n            this.model.refresh();\n        }\n    }\n\n    protected override renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (ResourcePropertiesCategoryNode.is(node)) {\n            return this.renderExpandableNode(node);\n        } else if (ResourcePropertiesItemNode.is(node)) {\n            return this.renderItemNode(node);\n        }\n        return undefined;\n    }\n\n    protected renderExpandableNode(node: ResourcePropertiesCategoryNode): React.ReactNode {\n        return <React.Fragment>\n            <div className={`theia-resource-tree-node-icon ${this.toNodeIcon(node)}`}></div>\n            <div className={'theia-resource-tree-node-name theia-TreeNodeSegment theia-TreeNodeSegmentGrow'}>{this.toNodeName(node)}</div>\n        </React.Fragment>;\n    }\n\n    protected renderItemNode(node: ResourcePropertiesItemNode): React.ReactNode {\n        return <React.Fragment>\n            <div className={`theia-resource-tree-node-icon ${this.toNodeIcon(node)}`}></div>\n            <div className={'theia-resource-tree-node-name theia-TreeNodeSegment theia-TreeNodeSegmentGrow'}>{this.toNodeName(node)}</div>\n            <div className={'theia-resource-tree-node-property theia-TreeNodeSegment theia-TreeNodeSegmentGrow'}>{this.toNodeDescription(node)}</div>\n        </React.Fragment>;\n    }\n\n    protected override createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        return {\n            ...super.createNodeAttributes(node, props),\n            title: this.getNodeTooltip(node)\n        };\n    }\n\n    protected getNodeTooltip(node: TreeNode): string | undefined {\n        if (ResourcePropertiesCategoryNode.is(node)) {\n            return this.labelProvider.getName(node);\n        } else if (ResourcePropertiesItemNode.is(node)) {\n            return `${this.labelProvider.getName(node)}: ${this.labelProvider.getLongName(node)}`;\n        }\n        return undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Navigatable } from '@theia/core/lib/browser';\nimport { FileSelection } from '@theia/filesystem/lib/browser/file-selection';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { DefaultPropertyViewWidgetProvider } from '../property-view-widget-provider';\nimport { ResourcePropertyViewTreeWidget } from './resource-property-view-tree-widget';\n\n/**\n * Provides the {@link ResourcePropertyViewTreeWidget} for\n * {@link FileSelection}s and selections of {@link Navigatable}s.\n */\n@injectable()\nexport class ResourcePropertyViewWidgetProvider extends DefaultPropertyViewWidgetProvider {\n\n    @inject(ResourcePropertyViewTreeWidget) protected treeWidget: ResourcePropertyViewTreeWidget;\n\n    override readonly id = 'resources';\n    override readonly label = 'ResourcePropertyViewWidgetProvider';\n\n    override canHandle(selection: Object | undefined): number {\n        return (this.isFileSelection(selection) || this.isNavigatableSelection(selection)) ? 1 : 0;\n    }\n\n    protected isFileSelection(selection: Object | undefined): boolean {\n        return !!selection && Array.isArray(selection) && FileSelection.is(selection[0]);\n    }\n\n    protected isNavigatableSelection(selection: Object | undefined): boolean {\n        return !!selection && Navigatable.is(selection);\n    }\n\n    override provideWidget(selection: Object | undefined): Promise<ResourcePropertyViewTreeWidget> {\n        return Promise.resolve(this.treeWidget);\n    }\n\n    override updateContentWidget(selection: Object | undefined): void {\n        this.getPropertyDataService(selection).then(service => this.treeWidget.updatePropertyViewContent(service, selection));\n    }\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n:root {\n  --theia-property-view-widget-padding: 5px;\n  --theia-empty-property-view-widget-padding: 8px;\n  --theia-resource-tree-node-icon-margin: 0 3px;\n  --theia-resource-tree-node-icon-flex-basis: 1.5%;\n  --theia-resource-tree-node-name-flex-basis: 30%;\n  --theia-resource-tree-node-property-flex-basis: 70%;\n}\n\n.theia-property-view-widget {\n  padding: var(--theia-border-width);\n}\n\n#theia-empty-property-view .theia-widget-noInfo {\n  padding: var(--theia-empty-property-view-widget-padding);\n}\n\n.theia-property-view-widget .treeContainer {\n  height: 100%;\n}\n\n.theia-resource-tree-node-icon {\n  margin: var(--theia-resource-tree-node-icon-margin);\n  flex-basis: var(--theia-resource-tree-node-icon-flex-basis);\n  align-self: center;\n  text-align: center;\n}\n\n.theia-resource-tree-node-name {\n  flex-basis: var(--theia-resource-tree-node-name-flex-basis);\n}\n\n.theia-resource-tree-node-property {\n  flex-basis: var(--theia-resource-tree-node-property-flex-basis);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/property-view/src/browser/style/property-view.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,yCAAyC;EACzC,+CAA+C;EAC/C,6CAA6C;EAC7C,gDAAgD;EAChD,+CAA+C;EAC/C,mDAAmD;AACrD;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,wDAAwD;AAC1D;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,mDAAmD;EACnD,2DAA2D;EAC3D,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,2DAA2D;AAC7D;;AAEA;EACE,+DAA+D;AACjE\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2020 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n:root {\\n  --theia-property-view-widget-padding: 5px;\\n  --theia-empty-property-view-widget-padding: 8px;\\n  --theia-resource-tree-node-icon-margin: 0 3px;\\n  --theia-resource-tree-node-icon-flex-basis: 1.5%;\\n  --theia-resource-tree-node-name-flex-basis: 30%;\\n  --theia-resource-tree-node-property-flex-basis: 70%;\\n}\\n\\n.theia-property-view-widget {\\n  padding: var(--theia-border-width);\\n}\\n\\n#theia-empty-property-view .theia-widget-noInfo {\\n  padding: var(--theia-empty-property-view-widget-padding);\\n}\\n\\n.theia-property-view-widget .treeContainer {\\n  height: 100%;\\n}\\n\\n.theia-resource-tree-node-icon {\\n  margin: var(--theia-resource-tree-node-icon-margin);\\n  flex-basis: var(--theia-resource-tree-node-icon-flex-basis);\\n  align-self: center;\\n  text-align: center;\\n}\\n\\n.theia-resource-tree-node-name {\\n  flex-basis: var(--theia-resource-tree-node-name-flex-basis);\\n}\\n\\n.theia-resource-tree-node-property {\\n  flex-basis: var(--theia-resource-tree-node-property-flex-basis);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./property-view.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}