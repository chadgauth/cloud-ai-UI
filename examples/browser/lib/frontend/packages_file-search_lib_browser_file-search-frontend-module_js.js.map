{"version":3,"file":"packages_file-search_lib_browser_file-search-frontend-module_js.js","mappings":"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","sources":["webpack:///../../packages/file-search/src/browser/file-search-frontend-module.ts?","webpack:///../../packages/file-search/src/browser/quick-file-open-contribution.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { WebSocketConnectionProvider, KeybindingContribution } from '@theia/core/lib/browser';\nimport { QuickFileOpenFrontendContribution } from './quick-file-open-contribution';\nimport { QuickFileOpenService } from './quick-file-open';\nimport { fileSearchServicePath, FileSearchService } from '../common/file-search-service';\nimport { QuickAccessContribution } from '@theia/core/lib/browser/quick-input/quick-access';\n\nexport default new ContainerModule((bind: interfaces.Bind) => {\n    bind(FileSearchService).toDynamicValue(ctx => {\n        const provider = ctx.container.get(WebSocketConnectionProvider);\n        return provider.createProxy<FileSearchService>(fileSearchServicePath);\n    }).inSingletonScope();\n\n    bind(QuickFileOpenFrontendContribution).toSelf().inSingletonScope();\n    [CommandContribution, KeybindingContribution, MenuContribution, QuickAccessContribution].forEach(serviceIdentifier =>\n        bind(serviceIdentifier).toService(QuickFileOpenFrontendContribution)\n    );\n\n    bind(QuickFileOpenService).toSelf().inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { QuickFileOpenService, quickFileOpen } from './quick-file-open';\nimport { CommandRegistry, CommandContribution, MenuContribution, MenuModelRegistry } from '@theia/core/lib/common';\nimport { KeybindingRegistry, KeybindingContribution, QuickAccessContribution } from '@theia/core/lib/browser';\nimport { EditorMainMenu } from '@theia/editor/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class QuickFileOpenFrontendContribution implements QuickAccessContribution, CommandContribution, KeybindingContribution, MenuContribution {\n\n    @inject(QuickFileOpenService)\n    protected readonly quickFileOpenService: QuickFileOpenService;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(quickFileOpen, {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            execute: (...args: any[]) => {\n                let fileURI: string | undefined;\n                if (args) {\n                    [fileURI] = args;\n                }\n                if (fileURI) {\n                    this.quickFileOpenService.openFile(new URI(fileURI));\n                } else {\n                    this.quickFileOpenService.open();\n                }\n            }\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: quickFileOpen.id,\n            keybinding: 'ctrlcmd+p'\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(EditorMainMenu.WORKSPACE_GROUP, {\n            commandId: quickFileOpen.id,\n            label: nls.localizeByDefault('Go to File...'),\n            order: '1',\n        });\n    }\n\n    registerQuickAccessProvider(): void {\n        this.quickFileOpenService.registerQuickAccessProvider();\n    }\n}\n"],"names":[],"sourceRoot":""}