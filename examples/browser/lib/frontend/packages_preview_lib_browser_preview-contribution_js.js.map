{"version":3,"file":"packages_preview_lib_browser_preview-contribution_js.js","mappings":"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","sources":["webpack:///../../packages/preview/src/browser/preview-contribution.ts?","webpack:///../../packages/preview/src/browser/preview-handler.ts?","webpack:///../../packages/preview/src/browser/preview-preferences.ts?","webpack:///../../packages/preview/src/browser/preview-uri.ts?","webpack:///../../packages/preview/src/browser/preview-widget.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Widget } from '@theia/core/shared/@phosphor/widgets';\nimport { FrontendApplicationContribution, WidgetOpenerOptions, NavigatableWidgetOpenHandler, codicon } from '@theia/core/lib/browser';\nimport { EditorManager, TextEditor, EditorWidget, EditorContextMenu } from '@theia/editor/lib/browser';\nimport { DisposableCollection, CommandContribution, CommandRegistry, Command, MenuContribution, MenuModelRegistry, Disposable } from '@theia/core/lib/common';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { MiniBrowserCommands } from '@theia/mini-browser/lib/browser/mini-browser-open-handler';\nimport URI from '@theia/core/lib/common/uri';\nimport { Position } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { PreviewWidget } from './preview-widget';\nimport { PreviewHandlerProvider } from './preview-handler';\nimport { PreviewUri } from './preview-uri';\nimport { PreviewPreferences } from './preview-preferences';\nimport { nls } from '@theia/core/lib/common/nls';\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nexport namespace PreviewCommands {\n    /**\n     * No `label`. Otherwise, it would show up in the `Command Palette` and we already have the `Preview` open handler.\n     * See in (`WorkspaceCommandContribution`)[https://bit.ly/2DncrSD].\n     */\n    export const OPEN = Command.toLocalizedCommand({\n        id: 'preview:open',\n        label: 'Open Preview',\n        iconClass: codicon('open-preview')\n    }, 'vscode.markdown-language-features/package/markdown.preview.title');\n    export const OPEN_SOURCE: Command = {\n        id: 'preview.open.source',\n        iconClass: codicon('go-to-file')\n    };\n}\n\nexport interface PreviewOpenerOptions extends WidgetOpenerOptions {\n    originUri?: URI;\n}\n\n@injectable()\n// eslint-disable-next-line max-len\nexport class PreviewContribution extends NavigatableWidgetOpenHandler<PreviewWidget> implements CommandContribution, MenuContribution, FrontendApplicationContribution, TabBarToolbarContribution {\n\n    readonly id = PreviewUri.id;\n    readonly label = nls.localize(MiniBrowserCommands.PREVIEW_CATEGORY_KEY, MiniBrowserCommands.PREVIEW_CATEGORY);\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(PreviewHandlerProvider)\n    protected readonly previewHandlerProvider: PreviewHandlerProvider;\n\n    @inject(PreviewPreferences)\n    protected readonly preferences: PreviewPreferences;\n\n    protected readonly synchronizedUris = new Set<string>();\n\n    protected scrollSyncLockOn: 'preview' | 'editor' | undefined = undefined;\n\n    protected scrollSyncLockTimeout: number | undefined;\n\n    onStart(): void {\n        this.onCreated(previewWidget => {\n            this.registerOpenOnDoubleClick(previewWidget);\n            this.registerEditorAndPreviewSync(previewWidget);\n        });\n        this.editorManager.onCreated(editorWidget => {\n            this.registerEditorAndPreviewSync(editorWidget);\n        });\n    }\n\n    protected async lockScrollSync(on: 'preview' | 'editor', delay: number = 50): Promise<void> {\n        this.scrollSyncLockOn = on;\n        if (this.scrollSyncLockTimeout) {\n            window.clearTimeout(this.scrollSyncLockTimeout);\n        }\n        this.scrollSyncLockTimeout = window.setTimeout(() => {\n            this.scrollSyncLockOn = undefined;\n        }, delay);\n    }\n\n    protected async registerEditorAndPreviewSync(source: PreviewWidget | EditorWidget): Promise<void> {\n        let uri: string;\n        let editorWidget: EditorWidget | undefined;\n        let previewWidget: PreviewWidget | undefined;\n        if (source instanceof EditorWidget) {\n            editorWidget = source;\n            uri = editorWidget.editor.uri.toString();\n            previewWidget = await this.getWidget(editorWidget.editor.uri);\n        } else {\n            previewWidget = source;\n            uri = previewWidget.getUri().toString();\n            editorWidget = await this.editorManager.getByUri(previewWidget.getUri());\n        }\n        if (!previewWidget || !editorWidget || !uri) {\n            return;\n        }\n        if (this.synchronizedUris.has(uri)) {\n            return;\n        }\n        const syncDisposables = new DisposableCollection();\n        previewWidget.disposed.connect(() => syncDisposables.dispose());\n        editorWidget.disposed.connect(() => syncDisposables.dispose());\n\n        const editor = editorWidget.editor;\n        syncDisposables.push(editor.onScrollChanged(debounce(() => {\n            if (this.scrollSyncLockOn === 'editor') {\n                // avoid recursive scroll synchronization\n                return;\n            }\n            this.lockScrollSync('preview');\n            const range = editor.getVisibleRanges();\n            if (range.length > 0) {\n                this.revealSourceLineInPreview(previewWidget!, range[0].start);\n            }\n        }), 100));\n        syncDisposables.push(this.synchronizeScrollToEditor(previewWidget, editor));\n\n        this.synchronizedUris.add(uri);\n        syncDisposables.push(Disposable.create(() => this.synchronizedUris.delete(uri)));\n    }\n\n    protected revealSourceLineInPreview(previewWidget: PreviewWidget, position: Position): void {\n        previewWidget.revealForSourceLine(position.line);\n    }\n\n    protected synchronizeScrollToEditor(previewWidget: PreviewWidget, editor: TextEditor): Disposable {\n        return previewWidget.onDidScroll(sourceLine => {\n            if (this.scrollSyncLockOn === 'preview') {\n                // avoid recursive scroll synchronization\n                return;\n            }\n            const line = Math.floor(sourceLine);\n            this.lockScrollSync('editor'); // avoid recursive scroll synchronization\n            editor.revealRange({\n                start: {\n                    line,\n                    character: 0\n                },\n                end: {\n                    line: line + 1,\n                    character: 0\n                }\n            }, { at: 'top' });\n        });\n    }\n\n    protected registerOpenOnDoubleClick(ref: PreviewWidget): void {\n        const disposable = ref.onDidDoubleClick(async location => {\n            const { editor } = await this.openSource(ref);\n            editor.revealPosition(location.range.start);\n            editor.selection = location.range;\n            ref.revealForSourceLine(location.range.start.line);\n        });\n        ref.disposed.connect(() => disposable.dispose());\n    }\n\n    canHandle(uri: URI): number {\n        if (!this.previewHandlerProvider.canHandle(uri)) {\n            return 0;\n        }\n        const editorPriority = this.editorManager.canHandle(uri);\n        if (editorPriority === 0) {\n            return 200;\n        }\n        if (PreviewUri.match(uri)) {\n            return editorPriority * 2;\n        }\n        return editorPriority * (this.openByDefault ? 2 : 0.5);\n    }\n\n    protected get openByDefault(): boolean {\n        return this.preferences['preview.openByDefault'];\n    }\n\n    override async open(uri: URI, options?: PreviewOpenerOptions): Promise<PreviewWidget> {\n        const resolvedOptions = await this.resolveOpenerOptions(options);\n        return super.open(uri, resolvedOptions);\n    }\n    protected override serializeUri(uri: URI): string {\n        return super.serializeUri(PreviewUri.decode(uri));\n    }\n\n    protected async resolveOpenerOptions(options?: PreviewOpenerOptions): Promise<PreviewOpenerOptions> {\n        const resolved: PreviewOpenerOptions = { mode: 'activate', ...options };\n        if (resolved.originUri) {\n            const ref = await this.getWidget(resolved.originUri);\n            if (ref) {\n                resolved.widgetOptions = { ...resolved.widgetOptions, ref };\n            }\n        }\n        return resolved;\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(PreviewCommands.OPEN, {\n            execute: widget => this.openForEditor(widget),\n            isEnabled: widget => this.canHandleEditorUri(widget),\n            isVisible: widget => this.canHandleEditorUri(widget)\n        });\n        registry.registerCommand(PreviewCommands.OPEN_SOURCE, {\n            execute: widget => this.openSource(widget),\n            isEnabled: widget => widget instanceof PreviewWidget,\n            isVisible: widget => widget instanceof PreviewWidget\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(EditorContextMenu.NAVIGATION, {\n            commandId: PreviewCommands.OPEN.id\n        });\n    }\n\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        registry.registerItem({\n            id: PreviewCommands.OPEN.id,\n            command: PreviewCommands.OPEN.id,\n            tooltip: nls.localize('vscode.markdown-language-features/package/markdown.previewSide.title', 'Open Preview to the Side')\n        });\n        registry.registerItem({\n            id: PreviewCommands.OPEN_SOURCE.id,\n            command: PreviewCommands.OPEN_SOURCE.id,\n            tooltip: nls.localize('vscode.markdown-language-features/package/markdown.showSource.title', 'Open Source')\n        });\n    }\n\n    protected canHandleEditorUri(widget?: Widget): boolean {\n        const uri = this.getCurrentEditorUri(widget);\n        return !!uri && this.previewHandlerProvider.canHandle(uri);\n    }\n\n    protected getCurrentEditorUri(widget?: Widget): URI | undefined {\n        const current = this.getCurrentEditor(widget);\n        return current && current.editor.uri;\n    }\n\n    protected getCurrentEditor(widget?: Widget): EditorWidget | undefined {\n        const current = widget ? widget : this.editorManager.currentEditor;\n        return current instanceof EditorWidget && current || undefined;\n    }\n\n    protected async openForEditor(widget?: Widget): Promise<void> {\n        const ref = this.getCurrentEditor(widget);\n        if (!ref) {\n            return;\n        }\n        await this.open(ref.editor.uri, {\n            mode: 'reveal',\n            widgetOptions: { ref, mode: 'open-to-right' }\n        });\n    }\n\n    protected async openSource(ref: PreviewWidget): Promise<EditorWidget>;\n    protected async openSource(ref?: Widget): Promise<EditorWidget | undefined> {\n        if (ref instanceof PreviewWidget) {\n            return this.editorManager.open(ref.uri, {\n                widgetOptions: { ref, mode: 'tab-after' }\n            });\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ContributionProvider, isObject, MaybePromise, Prioritizeable } from '@theia/core';\n\nexport const PreviewHandler = Symbol('PreviewHandler');\n\n/**\n * The parameters given to the preview handler to render the preview content.\n */\nexport interface RenderContentParams {\n    /**\n     * Textual content of the resource.\n     */\n    content: string;\n    /**\n     * URI identifying the source resource.\n     */\n    originUri: URI;\n}\n\nexport namespace RenderContentParams {\n    export function is(params: unknown): params is RenderContentParams {\n        return isObject(params) && 'content' in params && 'originUri' in params;\n    }\n}\n\n/**\n * A PreviewHandler manages the integration of one or more previews.\n *\n * It indicates whether a preview shall be rendered for a given resource URI and, if yes, renders the content.\n * Additionally it optionally provides methods with which the scroll state of the preview and corresponding\n * editor can be managed.\n *\n * See {@link MarkdownPreviewHandler} for an example implementation.\n */\nexport interface PreviewHandler {\n    /**\n     * One or more classes which specify the preview widget icon.\n     */\n    readonly iconClass?: string;\n    /**\n     * Indicates whether and with which priority (larger is better) this preview handler is responsible for the resource identified by the given URI.\n     * If multiple handlers return the same priority it's undefined which one will be used.\n     *\n     * @param uri the URI identifying a resource.\n     *\n     * @returns a number larger than 0 if the handler is applicable, 0 or a negative number otherwise.\n     */\n    canHandle(uri: URI): number;\n    /**\n     * Render the preview content by returning appropriate HTML.\n     *\n     * @param params information for the handler to render its content.\n     *\n     * @returns the HTMLElement which will be attached to the preview widget.\n     */\n    renderContent(params: RenderContentParams): MaybePromise<HTMLElement | undefined>;\n    /**\n     * Search and return the HTMLElement which corresponds to the given fragment.\n     * This is used to initially reveal elements identified via the URI fragment.\n     *\n     * @param content the preview widget element containing the content previously rendered by {@link PreviewHandler.renderContent}.\n     * @param fragment the URI fragment for which the corresponding element shall be returned\n     *\n     * @returns the HTMLElement which is part of content and corresponds to the given fragment, undefined otherwise.\n     */\n    findElementForFragment?(content: HTMLElement, fragment: string): HTMLElement | undefined;\n    /**\n     * Search and return the HTMLElement which corresponds to the given line number.\n     * This is used to scroll the preview when the source editor scrolls.\n     *\n     * @param content the preview widget element containing the previously rendered by {@link PreviewHandler.renderContent}.\n     * @param sourceLine the line number for which the corresponding element shall be returned.\n     *\n     * @returns the HTMLElement which is part of content and corresponds to the given line number, undefined otherwise.\n     */\n    findElementForSourceLine?(content: HTMLElement, sourceLine: number): HTMLElement | undefined;\n    /**\n     * Returns the line number which corresponds to the preview element at the given offset.\n     * This is used to scroll the source editor when the preview scrolls.\n     *\n     * @param content the preview widget element containing the previously rendered by {@link PreviewHandler.renderContent}.\n     * @param offset the total amount by which the preview widget is scrolled.\n     *\n     * @returns the source line number which corresponds to the preview element at the given offset, undefined otherwise.\n     */\n    getSourceLineForOffset?(content: HTMLElement, offset: number): number | undefined;\n}\n\n/**\n * Provider managing the available PreviewHandlers.\n */\n@injectable()\nexport class PreviewHandlerProvider {\n\n    constructor(\n        @inject(ContributionProvider) @named(PreviewHandler)\n        protected readonly previewHandlerContributions: ContributionProvider<PreviewHandler>\n    ) { }\n\n    /**\n     * Find PreviewHandlers for the given resource identifier.\n     *\n     * @param uri the URI identifying a resource.\n     *\n     * @returns the list of all supported `PreviewHandlers` sorted by their priority.\n     */\n    findContribution(uri: URI): PreviewHandler[] {\n        const prioritized = Prioritizeable.prioritizeAllSync(this.previewHandlerContributions.getContributions(), contrib =>\n            contrib.canHandle(uri)\n        );\n        return prioritized.map(c => c.value);\n    }\n\n    /**\n     * Indicates whether any PreviewHandler can process the resource identified by the given URI.\n     *\n     * @param uri the URI identifying a resource.\n     *\n     * @returns `true` when a PreviewHandler can process the resource, `false` otherwise.\n     */\n    canHandle(uri: URI): boolean {\n        return this.findContribution(uri).length > 0;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema\n} from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const PreviewConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'preview.openByDefault': {\n            type: 'boolean',\n            description: nls.localize('theia/preview/openByDefault', 'Open the preview instead of the editor by default.'),\n            default: false\n        }\n    }\n};\n\nexport interface PreviewConfiguration {\n    'preview.openByDefault': boolean;\n}\n\nexport const PreviewPreferenceContribution = Symbol('PreviewPreferenceContribution');\nexport const PreviewPreferences = Symbol('PreviewPreferences');\nexport type PreviewPreferences = PreferenceProxy<PreviewConfiguration>;\n\nexport function createPreviewPreferences(preferences: PreferenceService, schema: PreferenceSchema = PreviewConfigSchema): PreviewPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindPreviewPreferences(bind: interfaces.Bind): void {\n    bind(PreviewPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(PreviewPreferenceContribution);\n        return createPreviewPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(PreviewPreferenceContribution).toConstantValue({ schema: PreviewConfigSchema });\n    bind(PreferenceContribution).toService(PreviewPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport namespace PreviewUri {\n    export const id = 'code-editor-preview';\n    export const param = 'open-handler=' + id;\n    export function match(uri: URI): boolean {\n        return uri.query.indexOf(param) !== -1;\n    }\n    export function encode(uri: URI): URI {\n        if (match(uri)) {\n            return uri;\n        }\n        const params = [param];\n        if (uri.query) {\n            params.push(...uri.query.split('&'));\n        }\n        const query = params.join('&');\n        return uri.withQuery(query);\n    }\n    export function decode(uri: URI): URI {\n        if (!match(uri)) {\n            return uri;\n        }\n        const query = uri.query.split('&').filter(p => p !== param).join('&');\n        return uri.withQuery(query);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport throttle = require('@theia/core/shared/lodash.throttle');\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Resource, MaybePromise } from '@theia/core';\nimport { Navigatable } from '@theia/core/lib/browser/navigatable';\nimport { BaseWidget, Message, addEventListener, codicon } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { Event, Emitter } from '@theia/core/lib/common';\nimport { PreviewHandler, PreviewHandlerProvider } from './preview-handler';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { EditorPreferences } from '@theia/editor/lib/browser';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { MonacoWorkspace } from '@theia/monaco/lib/browser/monaco-workspace';\nimport { Range, Location } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport const PREVIEW_WIDGET_CLASS = 'theia-preview-widget';\n\nconst DEFAULT_ICON = codicon('eye');\n\nlet widgetCounter: number = 0;\n\nexport const PreviewWidgetOptions = Symbol('PreviewWidgetOptions');\nexport interface PreviewWidgetOptions {\n    resource: Resource\n}\n\n@injectable()\nexport class PreviewWidget extends BaseWidget implements Navigatable {\n\n    readonly uri: URI;\n    protected readonly resource: Resource;\n    protected previewHandler: PreviewHandler | undefined;\n    protected firstUpdate: (() => void) | undefined = undefined;\n    protected readonly onDidScrollEmitter = new Emitter<number>();\n    protected readonly onDidDoubleClickEmitter = new Emitter<Location>();\n    protected scrollBeyondLastLine: boolean;\n\n    constructor(\n        @inject(PreviewWidgetOptions) protected readonly options: PreviewWidgetOptions,\n        @inject(PreviewHandlerProvider) protected readonly previewHandlerProvider: PreviewHandlerProvider,\n        @inject(ThemeService) protected readonly themeService: ThemeService,\n        @inject(MonacoWorkspace) protected readonly workspace: MonacoWorkspace,\n        @inject(EditorPreferences) protected readonly editorPreferences: EditorPreferences,\n    ) {\n        super();\n        this.resource = this.options.resource;\n        this.uri = this.resource.uri;\n        this.id = 'preview-widget-' + widgetCounter++;\n        this.title.closable = true;\n        this.title.label = `Preview ${this.uri.path.base}`;\n        this.title.caption = this.title.label;\n        this.title.closable = true;\n\n        this.toDispose.push(this.onDidScrollEmitter);\n        this.toDispose.push(this.onDidDoubleClickEmitter);\n\n        this.addClass(PREVIEW_WIDGET_CLASS);\n        this.node.tabIndex = 0;\n        const previewHandler = this.previewHandler = this.previewHandlerProvider.findContribution(this.uri)[0];\n        if (!previewHandler) {\n            return;\n        }\n        this.title.iconClass = previewHandler.iconClass || DEFAULT_ICON;\n        this.initialize();\n    }\n\n    async initialize(): Promise<void> {\n        this.scrollBeyondLastLine = !!this.editorPreferences['editor.scrollBeyondLastLine'];\n        this.toDispose.push(this.editorPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'editor.scrollBeyondLastLine') {\n                this.scrollBeyondLastLine = Boolean(e.newValue);\n                this.forceUpdate();\n            }\n        }));\n        this.toDispose.push(this.resource);\n        if (this.resource.onDidChangeContents) {\n            this.toDispose.push(this.resource.onDidChangeContents(() => this.update()));\n        }\n        const updateIfAffected = (affectedUri?: string) => {\n            if (!affectedUri || affectedUri === this.uri.toString()) {\n                this.update();\n            }\n        };\n        this.toDispose.push(this.workspace.onDidOpenTextDocument(document => updateIfAffected(document.uri)));\n        this.toDispose.push(this.workspace.onDidChangeTextDocument(params => updateIfAffected(params.model.uri)));\n        this.toDispose.push(this.workspace.onDidCloseTextDocument(document => updateIfAffected(document.uri)));\n        this.toDispose.push(this.themeService.onDidColorThemeChange(() => this.update()));\n        this.firstUpdate = () => {\n            this.revealFragment(this.uri);\n        };\n        this.update();\n    }\n\n    protected override onBeforeAttach(msg: Message): void {\n        super.onBeforeAttach(msg);\n        this.toDispose.push(this.startScrollSync());\n        this.toDispose.push(this.startDoubleClickListener());\n    }\n\n    protected preventScrollNotification: boolean = false;\n    protected startScrollSync(): Disposable {\n        return addEventListener(this.node, 'scroll', throttle((event: UIEvent) => {\n            if (this.preventScrollNotification) {\n                return;\n            }\n            const scrollTop = this.node.scrollTop;\n            this.didScroll(scrollTop);\n        }, 50));\n    }\n\n    protected startDoubleClickListener(): Disposable {\n        return addEventListener(this.node, 'dblclick', (event: MouseEvent) => {\n            if (!(event.target instanceof HTMLElement)) {\n                return;\n            }\n            const target = event.target as HTMLElement;\n            let node: HTMLElement | null = target;\n            while (node && node instanceof HTMLElement) {\n                if (node.tagName === 'A') {\n                    return;\n                }\n                node = node.parentElement;\n            }\n            const offsetParent = target.offsetParent as HTMLElement;\n            const offset = offsetParent.classList.contains(PREVIEW_WIDGET_CLASS) ? target.offsetTop : offsetParent.offsetTop;\n            this.didDoubleClick(offset);\n        });\n    }\n\n    getUri(): URI {\n        return this.uri;\n    }\n\n    getResourceUri(): URI | undefined {\n        return this.uri;\n    }\n    createMoveToUri(resourceUri: URI): URI | undefined {\n        return this.uri.withPath(resourceUri.path);\n    }\n\n    override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.node.focus();\n        this.update();\n    }\n\n    override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        this.performUpdate();\n    }\n\n    protected forceUpdate(): void {\n        this.previousContent = undefined;\n        this.update();\n    }\n\n    protected previousContent: string | undefined = undefined;\n    protected async performUpdate(): Promise<void> {\n        if (!this.resource) {\n            return;\n        }\n        const uri = this.resource.uri;\n        const document = this.workspace.textDocuments.find(d => d.uri === uri.toString());\n        const content: MaybePromise<string> = document ? document.getText() : await this.resource.readContents();\n        if (content === this.previousContent) {\n            return;\n        }\n        this.previousContent = content;\n        const contentElement = await this.render(content, uri);\n        this.node.innerHTML = '';\n        if (contentElement) {\n            if (this.scrollBeyondLastLine) {\n                contentElement.classList.add('scrollBeyondLastLine');\n            }\n            this.node.appendChild(contentElement);\n            if (this.firstUpdate) {\n                this.firstUpdate();\n                this.firstUpdate = undefined;\n            }\n        }\n    }\n\n    protected async render(content: string, originUri: URI): Promise<HTMLElement | undefined> {\n        if (!this.previewHandler || !this.resource) {\n            return undefined;\n        }\n        return this.previewHandler.renderContent({ content, originUri });\n    }\n\n    protected revealFragment(uri: URI): void {\n        if (uri.fragment === '' || !this.previewHandler || !this.previewHandler.findElementForFragment) {\n            return;\n        }\n        const elementToReveal = this.previewHandler.findElementForFragment(this.node, uri.fragment);\n        if (elementToReveal) {\n            this.preventScrollNotification = true;\n            elementToReveal.scrollIntoView();\n            window.setTimeout(() => {\n                this.preventScrollNotification = false;\n            }, 50);\n        }\n    }\n\n    revealForSourceLine(sourceLine: number): void {\n        this.internalRevealForSourceLine(sourceLine);\n    }\n    protected readonly internalRevealForSourceLine: (sourceLine: number) => void = throttle((sourceLine: number) => {\n        if (!this.previewHandler || !this.previewHandler.findElementForSourceLine) {\n            return;\n        }\n        const elementToReveal = this.previewHandler.findElementForSourceLine(this.node, sourceLine);\n        if (elementToReveal) {\n            this.preventScrollNotification = true;\n            elementToReveal.scrollIntoView();\n            window.setTimeout(() => {\n                this.preventScrollNotification = false;\n            }, 50);\n        }\n    }, 50);\n\n    get onDidScroll(): Event<number> {\n        return this.onDidScrollEmitter.event;\n    }\n\n    protected fireDidScrollToSourceLine(line: number): void {\n        this.onDidScrollEmitter.fire(line);\n    }\n\n    protected didScroll(scrollTop: number): void {\n        if (!this.previewHandler || !this.previewHandler.getSourceLineForOffset) {\n            return;\n        }\n        const offset = scrollTop;\n        const line = this.previewHandler.getSourceLineForOffset(this.node, offset);\n        if (line) {\n            this.fireDidScrollToSourceLine(line);\n        }\n    }\n\n    get onDidDoubleClick(): Event<Location> {\n        return this.onDidDoubleClickEmitter.event;\n    }\n\n    protected fireDidDoubleClickToSourceLine(line: number): void {\n        if (!this.resource) {\n            return;\n        }\n        this.onDidDoubleClickEmitter.fire({\n            uri: this.resource.uri.toString(),\n            range: Range.create({ line, character: 0 }, { line, character: 0 })\n        });\n    }\n\n    protected didDoubleClick(offsetTop: number): void {\n        if (!this.previewHandler || !this.previewHandler.getSourceLineForOffset) {\n            return;\n        }\n        const line = this.previewHandler.getSourceLineForOffset(this.node, offsetTop) || 0;\n        this.fireDidDoubleClickToSourceLine(line);\n    }\n\n}\n"],"names":[],"sourceRoot":""}