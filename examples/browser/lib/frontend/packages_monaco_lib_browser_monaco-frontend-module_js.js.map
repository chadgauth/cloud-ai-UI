{"version":3,"file":"packages_monaco_lib_browser_monaco-frontend-module_js.js","mappings":"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AAU;IACX,2CAAQ;IACR,+CAAU;IACV,qDAAa;IACb,iDAAW;IACX,6CAAS;IACT,+CAAU;IACV,mDAAY;IACZ,6CAAS;IACT,yDAAe;IACf,4CAAS;IACT,sDAAc;IACd,oDAAa;IACb,oDAAa;IACb,oDAAa;IACb,gDAAW;IACX,gDAAW;IACX,kDAAY;IACZ,8CAAU;IACV,gDAAW;IACX,0CAAQ;IACR,4CAAS;IACT,wDAAe;IACf,gDAAW;IACX,8CAAU;IACV,oDAAa;IACb,8DAAkB;AACtB,CAAC,EA3BI,UAAU,KAAV,UAAU,QA2Bd;;;;;;;;;;;;;;;;;;;;;ACnMD;AACsH;AACjB;AACrG,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AA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","sources":["webpack:///../../packages/monaco/src/browser/markdown-renderer/monaco-markdown-renderer.ts?","webpack:///../../packages/monaco/src/browser/monaco-command-registry.ts?","webpack:///../../packages/monaco/src/browser/monaco-command.ts?","webpack:///../../packages/monaco/src/browser/monaco-context-key-service.ts?","webpack:///../../packages/monaco/src/browser/monaco-formatting-conflicts.ts?","webpack:///../../packages/monaco/src/browser/monaco-frontend-application-contribution.ts?","webpack:///../../packages/monaco/src/browser/monaco-frontend-module.ts?","webpack:///../../packages/monaco/src/browser/monaco-gotoline-quick-access.ts?","webpack:///../../packages/monaco/src/browser/monaco-gotosymbol-quick-access.ts?","webpack:///../../packages/monaco/src/browser/monaco-indexed-db.ts?","webpack:///../../packages/monaco/src/browser/monaco-keybinding.ts?","webpack:///../../packages/monaco/src/browser/monaco-languages.ts?","webpack:///../../packages/monaco/src/browser/monaco-marker-collection.ts?","webpack:///../../packages/monaco/src/browser/monaco-menu.ts?","webpack:///../../packages/monaco/src/browser/monaco-mime-service.ts?","webpack:///../../packages/monaco/src/browser/monaco-outline-contribution.ts?","webpack:///../../packages/monaco/src/browser/monaco-outline-decorator.ts?","webpack:///../../packages/monaco/src/browser/monaco-quick-access-registry.ts?","webpack:///../../packages/monaco/src/browser/monaco-snippet-suggest-provider.ts?","webpack:///../../packages/monaco/src/browser/monaco-status-bar-contribution.ts?","webpack:///../../packages/monaco/src/browser/monaco-theming-service.ts?","webpack:///../../packages/monaco/src/browser/textmate/monaco-textmate-frontend-bindings.ts?","webpack:///../../packages/monaco/src/browser/textmate/monaco-textmate-service.ts?","webpack:///../../packages/monaco/src/browser/textmate/monaco-theme-registry.ts?","webpack:///../../packages/monaco/src/browser/textmate/monaco-theme-types.ts?","webpack:///../../packages/monaco/src/browser/textmate/textmate-contribution.ts?","webpack:///../../packages/monaco/src/browser/textmate/textmate-registry.ts?","webpack:///../../packages/monaco/src/browser/textmate/textmate-tokenizer.ts?","webpack:///../../packages/monaco/src/browser/workspace-symbol-command.ts?","webpack:///../../packages/monaco/src/browser/style/index.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../../packages/monaco/src/browser/style/index.css?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { ILanguageService } from '@theia/monaco-editor-core/esm/vs/editor/common/languages/language';\nimport { MarkdownRenderer as CodeMarkdownRenderer } from '@theia/monaco-editor-core/esm/vs/editor/contrib/markdownRenderer/browser/markdownRenderer';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { MonacoCommandServiceFactory } from '../monaco-command-service';\nimport { MonacoEditorService } from '../monaco-editor-service';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { OpenerService as MonacoOpenerService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/openerService';\nimport { OpenerService, PreferenceService, WidgetOpenerOptions, open } from '@theia/core/lib/browser';\nimport { OpenExternalOptions, OpenInternalOptions } from '@theia/monaco-editor-core/esm/vs/platform/opener/common/opener';\nimport { HttpOpenHandlerOptions } from '@theia/core/lib/browser/http-open-handler';\nimport { URI } from '@theia/core/lib/common/uri';\nimport { MarkdownRenderer, MarkdownRenderOptions, MarkdownRenderResult } from '@theia/core/lib/browser/markdown-rendering/markdown-renderer';\nimport { MarkedOptions, MarkdownRenderOptions as MonacoMarkdownRenderOptions } from '@theia/monaco-editor-core/esm/vs/base/browser/markdownRenderer';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering';\nimport { DisposableStore } from '@theia/monaco-editor-core/esm/vs/base/common/lifecycle';\nimport { DisposableCollection, DisposableGroup } from '@theia/core';\n\n@injectable()\nexport class MonacoMarkdownRenderer implements MarkdownRenderer {\n    @inject(MonacoEditorService) protected readonly codeEditorService: MonacoEditorService;\n    @inject(MonacoCommandServiceFactory) protected readonly commandServiceFactory: MonacoCommandServiceFactory;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(PreferenceService) protected readonly preferences: PreferenceService;\n\n    protected delegate: CodeMarkdownRenderer;\n    protected _openerService: OpenerService | undefined;\n\n    render(markdown: MarkdownString | undefined, options?: MarkdownRenderOptions, markedOptions?: MarkedOptions): MarkdownRenderResult {\n        return this.delegate.render(markdown, this.transformOptions(options), markedOptions);\n    }\n\n    protected transformOptions(options?: MarkdownRenderOptions): MonacoMarkdownRenderOptions | undefined {\n        if (!options?.actionHandler) {\n            return options as MarkdownRenderOptions & { actionHandler: undefined } | undefined;\n        }\n        const monacoActionHandler: MonacoMarkdownRenderOptions['actionHandler'] = {\n            disposables: this.toDisposableStore(options.actionHandler.disposables),\n            callback: (content, e) => options.actionHandler!.callback(content, e?.browserEvent)\n        };\n        return { ...options, actionHandler: monacoActionHandler };\n    }\n\n    protected toDisposableStore(current: DisposableGroup): DisposableStore {\n        if (current instanceof DisposableStore) {\n            return current;\n        } else if (current instanceof DisposableCollection) {\n            const store = new DisposableStore();\n            current['disposables'].forEach(disposable => store.add(disposable));\n            return store;\n        } else {\n            return new DisposableStore();\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const languages = StandaloneServices.get(ILanguageService);\n        const openerService = new MonacoOpenerService(this.codeEditorService, this.commandServiceFactory());\n        openerService.registerOpener({\n            open: (u, options) => this.interceptOpen(u, options)\n        });\n        const getPreference = () => this.preferences.get<string>('editor.fontFamily');\n        const rendererOptions = new Proxy(Object.create(null), { // eslint-disable-line no-null/no-null\n            get(_, field): string | undefined {\n                if (field === 'codeBlockFontFamily') {\n                    return getPreference();\n                } else {\n                    return undefined;\n                }\n            }\n        });\n        this.delegate = new CodeMarkdownRenderer(rendererOptions, languages, openerService);\n    }\n\n    protected async interceptOpen(monacoUri: monaco.Uri | string, monacoOptions?: OpenInternalOptions | OpenExternalOptions): Promise<boolean> {\n        let options = undefined;\n        if (monacoOptions) {\n            if ('openToSide' in monacoOptions && monacoOptions.openToSide) {\n                options = Object.assign(options || {}, <WidgetOpenerOptions>{\n                    widgetOptions: {\n                        mode: 'split-right'\n                    }\n                });\n            }\n            if ('openExternal' in monacoOptions && monacoOptions.openExternal) {\n                options = Object.assign(options || {}, <HttpOpenHandlerOptions>{\n                    openExternal: true\n                });\n            }\n        }\n        const uri = new URI(monacoUri.toString());\n        try {\n            await open(this.openerService, uri, options);\n            return true;\n        } catch (e) {\n            console.error(`Fail to open '${uri.toString()}':`, e);\n            return false;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Command, CommandHandler, CommandRegistry, SelectionService } from '@theia/core';\nimport { TextEditorSelection } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoEditorProvider } from './monaco-editor-provider';\n\nexport interface MonacoEditorCommandHandler {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(editor: MonacoEditor, ...args: any[]): any;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEnabled?(editor: MonacoEditor, ...args: any[]): boolean;\n}\n@injectable()\nexport class MonacoCommandRegistry {\n\n    @inject(MonacoEditorProvider)\n    protected readonly monacoEditors: MonacoEditorProvider;\n\n    @inject(CommandRegistry) protected readonly commands: CommandRegistry;\n\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    validate(command: string): string | undefined {\n        return this.commands.commandIds.indexOf(command) !== -1 ? command : undefined;\n    }\n\n    registerCommand(command: Command, handler: MonacoEditorCommandHandler): void {\n        this.commands.registerCommand({\n            ...command,\n            id: command.id\n        }, this.newHandler(handler));\n    }\n\n    registerHandler(command: string, handler: MonacoEditorCommandHandler): void {\n        this.commands.registerHandler(command, this.newHandler(handler));\n    }\n\n    protected newHandler(monacoHandler: MonacoEditorCommandHandler): CommandHandler {\n        return {\n            execute: (...args) => this.execute(monacoHandler, ...args),\n            isEnabled: (...args) => this.isEnabled(monacoHandler, ...args),\n            isVisible: (...args) => this.isVisible(monacoHandler, ...args)\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected execute(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): any {\n        const editor = this.monacoEditors.current;\n        if (editor) {\n            return Promise.resolve(monacoHandler.execute(editor, ...args));\n        }\n        return Promise.resolve();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isEnabled(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): boolean {\n        const editor = this.monacoEditors.current;\n        return !!editor && (!monacoHandler.isEnabled || monacoHandler.isEnabled(editor, ...args));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isVisible(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): boolean {\n        return TextEditorSelection.is(this.selectionService.selection);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, optional } from '@theia/core/shared/inversify';\nimport { Position, Location } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { CommandContribution, CommandRegistry, CommandHandler } from '@theia/core/lib/common/command';\nimport { CommonCommands, QuickInputService, ApplicationShell } from '@theia/core/lib/browser';\nimport { EditorCommands, EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoCommandRegistry, MonacoEditorCommandHandler } from './monaco-command-registry';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService } from './monaco-text-model-service';\nimport { ProtocolToMonacoConverter } from './protocol-to-monaco-converter';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { ContextKeyService as VSCodeContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\nimport { EditorExtensionsRegistry } from '@theia/monaco-editor-core/esm/vs/editor/browser/editorExtensions';\nimport { CommandsRegistry, ICommandService } from '@theia/monaco-editor-core/esm/vs/platform/commands/common/commands';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { EndOfLineSequence } from '@theia/monaco-editor-core/esm/vs/editor/common/model';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\n\nexport namespace MonacoCommands {\n\n    export const COMMON_ACTIONS = new Map<string, string>([\n        ['undo', CommonCommands.UNDO.id],\n        ['redo', CommonCommands.REDO.id],\n        ['editor.action.selectAll', CommonCommands.SELECT_ALL.id],\n        ['actions.find', CommonCommands.FIND.id],\n        ['editor.action.startFindReplaceAction', CommonCommands.REPLACE.id]\n    ]);\n\n    export const GO_TO_DEFINITION = 'editor.action.revealDefinition';\n\n    export const EXCLUDE_ACTIONS = new Set([\n        'editor.action.quickCommand',\n        'editor.action.clipboardCutAction',\n        'editor.action.clipboardCopyAction',\n        'editor.action.clipboardPasteAction'\n    ]);\n}\n\n@injectable()\nexport class MonacoEditorCommandHandlers implements CommandContribution {\n\n    @inject(MonacoCommandRegistry)\n    protected readonly monacoCommandRegistry: MonacoCommandRegistry;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(MonacoEditorService)\n    protected readonly codeEditorService: MonacoEditorService;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(VSCodeContextKeyService)\n    protected readonly contextKeyService: VSCodeContextKeyService;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(EditorManager)\n    protected editorManager: EditorManager;\n\n    registerCommands(): void {\n        this.registerMonacoCommands();\n        this.registerEditorCommandHandlers();\n    }\n\n    /**\n     * Register commands from Monaco to Theia registry.\n     *\n     * Monaco has different kind of commands which should be handled differently by Theia.\n     *\n     * ### Editor Actions\n     *\n     * They should be registered with a label to be visible in the quick command palette.\n     *\n     * Such actions should be enabled only if the current editor is available and\n     * it supports such action in the current context.\n     *\n     * ### Editor Commands\n     *\n     * Such actions should be enabled only if the current editor is available.\n     *\n     * `actions.find` and `editor.action.startFindReplaceAction` are registered as handlers for `find` and `replace`.\n     * If handlers are not enabled then the core should prevent the default browser behavior.\n     * Other Theia extensions can register alternative implementations using custom enablement.\n     *\n     * ### Global Commands\n     *\n     * These commands are not necessary dependent on the current editor and enabled always.\n     * But they depend on services which are global in VS Code, but bound to the editor in Monaco,\n     * i.e. `ICodeEditorService` or `IContextKeyService`. We should take care of providing Theia implementations for such services.\n     *\n     * #### Global Native or Editor Commands\n     *\n     * Namely: `undo`, `redo` and `editor.action.selectAll`. They depend on `ICodeEditorService`.\n     * They will try to delegate to the current editor and if it is not available delegate to the browser.\n     * They are registered as handlers for corresponding core commands always.\n     * Other Theia extensions can provide alternative implementations by introducing a dependency to `@theia/monaco` extension.\n     *\n     * #### Global Language Commands\n     *\n     * Like `_executeCodeActionProvider`, they depend on `ICodeEditorService` and `ITextModelService`.\n     *\n     * #### Global Context Commands\n     *\n     * It is `setContext`. It depends on `IContextKeyService`.\n     *\n     * #### Global Editor Commands\n     *\n     * Like `openReferenceToSide` and `openReference`, they depend on `IListService`.\n     * We treat all commands which don't match any other category of global commands as global editor commands\n     * and execute them using the instantiation service of the current editor.\n     */\n    protected registerMonacoCommands(): void {\n        const editorActions = new Map(EditorExtensionsRegistry.getEditorActions().map(({ id, label, alias }) => [id, { label, alias }]));\n\n        const { codeEditorService } = this;\n        const globalInstantiationService = StandaloneServices.initialize({});\n        const monacoCommands = CommandsRegistry.getCommands();\n        for (const id of monacoCommands.keys()) {\n            if (MonacoCommands.EXCLUDE_ACTIONS.has(id)) {\n                continue;\n            }\n            const handler: CommandHandler = {\n                execute: (...args) => {\n                    /*\n                     * We check monaco focused code editor first since they can contain inline like the debug console and embedded editors like in the peek reference.\n                     * If there is not such then we check last focused editor tracked by us.\n                     */\n                    const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n                    if (editorActions.has(id)) {\n                        const action = editor && editor.getAction(id);\n                        if (!action) {\n                            return;\n                        }\n                        return action.run();\n                    }\n                    if (!globalInstantiationService) {\n                        return;\n                    }\n                    return globalInstantiationService.invokeFunction(\n                        monacoCommands.get(id)!.handler,\n                        ...args\n                    );\n                },\n                isEnabled: () => {\n                    const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\n                    if (editorActions.has(id)) {\n                        const action = editor && editor.getAction(id);\n                        return !!action && action.isSupported();\n                    }\n                    if (!!EditorExtensionsRegistry.getEditorCommand(id)) {\n                        return !!editor;\n                    }\n                    return true;\n                }\n            };\n            const commandAction = editorActions.get(id);\n            this.commandRegistry.registerCommand({ id, label: commandAction?.label, originalLabel: commandAction?.alias }, handler);\n            const coreCommand = MonacoCommands.COMMON_ACTIONS.get(id);\n            if (coreCommand) {\n                this.commandRegistry.registerHandler(coreCommand, handler);\n            }\n        }\n    }\n\n    protected registerEditorCommandHandlers(): void {\n        this.monacoCommandRegistry.registerHandler(EditorCommands.SHOW_REFERENCES.id, this.newShowReferenceHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.CONFIG_INDENTATION.id, this.newConfigIndentationHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.CONFIG_EOL.id, this.newConfigEolHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.INDENT_USING_SPACES.id, this.newConfigTabSizeHandler(true));\n        this.monacoCommandRegistry.registerHandler(EditorCommands.INDENT_USING_TABS.id, this.newConfigTabSizeHandler(false));\n        this.monacoCommandRegistry.registerHandler(EditorCommands.REVERT_EDITOR.id, this.newRevertActiveEditorHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.REVERT_AND_CLOSE.id, this.newRevertAndCloseActiveEditorHandler());\n    }\n\n    protected newShowReferenceHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: (editor: MonacoEditor, uri: string, position: Position, locations: Location[]) => {\n                StandaloneServices.get(ICommandService).executeCommand(\n                    'editor.action.showReferences',\n                    monaco.Uri.parse(uri),\n                    this.p2m.asPosition(position),\n                    locations.map(l => this.p2m.asLocation(l))\n                );\n            }\n        };\n    }\n\n    protected newConfigIndentationHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: editor => this.configureIndentation(editor)\n        };\n    }\n    protected configureIndentation(editor: MonacoEditor): void {\n        const items = [true, false].map(useSpaces => ({\n            label: nls.localizeByDefault(`Indent Using ${useSpaces ? 'Spaces' : 'Tabs'}`),\n            execute: () => this.configureTabSize(editor, useSpaces)\n        }));\n        this.quickInputService?.showQuickPick(items, { placeholder: nls.localizeByDefault('Select Action') });\n    }\n\n    protected newConfigEolHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: editor => this.configureEol(editor)\n        };\n    }\n\n    protected configureEol(editor: MonacoEditor): void {\n        const items = ['LF', 'CRLF'].map(lineEnding =>\n        ({\n            label: lineEnding,\n            execute: () => this.setEol(editor, lineEnding)\n        })\n        );\n        this.quickInputService?.showQuickPick(items, { placeholder: nls.localizeByDefault('Select End of Line Sequence') });\n    }\n\n    protected setEol(editor: MonacoEditor, lineEnding: string): void {\n        const model = editor.document && editor.document.textEditorModel;\n        if (model) {\n            if (lineEnding === 'CRLF' || lineEnding === '\\r\\n') {\n                model.pushEOL(EndOfLineSequence.CRLF);\n            } else {\n                model.pushEOL(EndOfLineSequence.LF);\n            }\n        }\n    }\n\n    protected newConfigTabSizeHandler(useSpaces: boolean): MonacoEditorCommandHandler {\n        return {\n            execute: editor => this.configureTabSize(editor, useSpaces)\n        };\n    }\n    protected configureTabSize(editor: MonacoEditor, useSpaces: boolean): void {\n        const model = editor.document && editor.document.textEditorModel;\n        if (model) {\n            const { tabSize } = model.getOptions();\n            const sizes = Array.from(Array(8), (_, x) => x + 1);\n            const tabSizeOptions = sizes.map(size =>\n            ({\n                label: size === tabSize ? size + '   ' + nls.localizeByDefault('Configured Tab Size') : size.toString(),\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                execute: () => model.updateOptions({\n                    tabSize: size || tabSize,\n                    insertSpaces: useSpaces\n                })\n            })\n            );\n            this.quickInputService?.showQuickPick(tabSizeOptions, { placeholder: nls.localizeByDefault('Select Tab Size for Current File') });\n        }\n    }\n\n    protected newRevertActiveEditorHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: () => this.revertEditor(this.getActiveEditor().editor),\n        };\n    }\n\n    protected newRevertAndCloseActiveEditorHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: async () => this.revertAndCloseActiveEditor(this.getActiveEditor())\n        };\n    }\n\n    protected getActiveEditor(): { widget?: EditorWidget, editor?: MonacoEditor } {\n        const widget = this.editorManager.currentEditor;\n        return { widget, editor: widget && MonacoEditor.getCurrent(this.editorManager) };\n    }\n\n    protected async revertEditor(editor?: MonacoEditor): Promise<void> {\n        if (editor) {\n            return editor.document.revert();\n        }\n    }\n\n    protected async revertAndCloseActiveEditor(current: { widget?: EditorWidget, editor?: MonacoEditor }): Promise<void> {\n        if (current.editor && current.widget) {\n            try {\n                await this.revertEditor(current.editor);\n                current.widget.close();\n            } catch (error) {\n                await this.shell.closeWidget(current.widget.id, { save: false });\n            }\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    ContextKeyService as TheiaContextKeyService, ContextKey, ContextKeyChangeEvent,\n    ScopedValueStore, ContextMatcher, ContextKeyValue\n} from '@theia/core/lib/browser/context-key-service';\nimport { Emitter } from '@theia/core';\nimport { AbstractContextKeyService, ContextKeyService as VSCodeContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\nimport { ContextKeyExpr, ContextKeyExpression, IContext, IContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/common/contextkey';\n\n@injectable()\nexport class MonacoContextKeyService implements TheiaContextKeyService {\n    protected readonly onDidChangeEmitter = new Emitter<ContextKeyChangeEvent>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n\n    @inject(VSCodeContextKeyService)\n    protected readonly contextKeyService: VSCodeContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.contextKeyService.onDidChangeContext(e =>\n            this.onDidChangeEmitter.fire({\n                affects: keys => e.affectsSome(keys)\n            })\n        );\n    }\n\n    createKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): ContextKey<T> {\n        return this.contextKeyService.createKey(key, defaultValue);\n    }\n\n    activeContext?: HTMLElement | IContext;\n\n    match(expression: string, context?: HTMLElement): boolean {\n        const parsed = this.parse(expression);\n        if (parsed) {\n            const ctx = this.identifyContext(context);\n            if (!ctx) {\n                return this.contextKeyService.contextMatchesRules(parsed);\n            }\n            return parsed.evaluate(ctx);\n        }\n        return true;\n    }\n\n    protected identifyContext(callersContext?: HTMLElement | IContext, service: IContextKeyService = this.contextKeyService): IContext | undefined {\n        if (callersContext && 'getValue' in callersContext) {\n            return callersContext;\n        } else if (this.activeContext && 'getValue' in this.activeContext) {\n            return this.activeContext;\n        }\n        const browserContext = callersContext ?? this.activeContext ?? (document.activeElement instanceof HTMLElement ? document.activeElement : undefined);\n        if (browserContext) {\n            return service.getContext(browserContext);\n        }\n        return undefined;\n    }\n\n    protected readonly expressions = new Map<string, ContextKeyExpression>();\n    parse(when: string): ContextKeyExpression | undefined {\n        let expression = this.expressions.get(when);\n        if (!expression) {\n            expression = ContextKeyExpr.deserialize(when);\n            if (expression) {\n                this.expressions.set(when, expression);\n            }\n        }\n        return expression;\n    }\n\n    parseKeys(expression: string): Set<string> | undefined {\n        const expr = ContextKeyExpr.deserialize(expression);\n        return expr ? new Set<string>(expr.keys()) : expr;\n    }\n\n    with<T>(values: Record<string, unknown>, callback: () => T): T {\n        const oldActive = this.activeContext;\n        const id = this.contextKeyService.createChildContext();\n        const child = this.contextKeyService.getContextValuesContainer(id);\n        for (const [key, value] of Object.entries(values)) {\n            child.setValue(key, value);\n        }\n        this.activeContext = child;\n        try {\n            return callback();\n        } finally {\n            this.activeContext = oldActive;\n            this.contextKeyService.disposeContext(id);\n        }\n    }\n\n    createScoped(target: HTMLElement): ScopedValueStore {\n        const scoped = this.contextKeyService.createScoped(target);\n        if (scoped instanceof AbstractContextKeyService) {\n            return scoped as AbstractContextKeyService & { createScoped(): ScopedValueStore };\n        }\n        return this;\n    }\n\n    createOverlay(overlay: Iterable<[string, unknown]>): ContextMatcher {\n        const delegate = this.contextKeyService.createOverlay(overlay);\n        return {\n            match: (expression: string, context?: HTMLElement) => {\n                const parsed = this.parse(expression);\n                if (parsed) {\n                    const ctx = this.identifyContext(context, delegate);\n                    if (!ctx) {\n                        return delegate.contextMatchesRules(parsed);\n                    }\n                    return parsed.evaluate(ctx);\n                }\n                return true;\n            },\n            dispose: () => delegate.dispose(),\n        };\n    }\n\n    setContext(key: string, value: unknown): void {\n        this.contextKeyService.setContext(key, value);\n    }\n\n    dispose(): void {\n        this.activeContext = undefined;\n        this.onDidChangeEmitter.dispose();\n        this.contextKeyService.dispose();\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PreferenceService, FrontendApplicationContribution, PreferenceLanguageOverrideService } from '@theia/core/lib/browser';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { MonacoQuickInputService } from './monaco-quick-input-service';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { FormattingConflicts, FormattingMode } from '@theia/monaco-editor-core/esm/vs/editor/contrib/format/browser/format';\nimport { DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\nimport { ITextModel } from '@theia/monaco-editor-core/esm/vs/editor/common/model';\nimport { nls } from '@theia/core/lib/common/nls';\n\ntype FormattingEditProvider = DocumentFormattingEditProvider | DocumentRangeFormattingEditProvider;\n\nconst PREFERENCE_NAME = 'editor.defaultFormatter';\n\n@injectable()\nexport class MonacoFormattingConflictsContribution implements FrontendApplicationContribution {\n\n    @inject(MonacoQuickInputService)\n    protected readonly monacoQuickInputService: MonacoQuickInputService;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(PreferenceLanguageOverrideService)\n    protected readonly preferenceSchema: PreferenceLanguageOverrideService;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    async initialize(): Promise<void> {\n\n        FormattingConflicts.setFormatterSelector(<T extends FormattingEditProvider>(\n            formatters: T[], document: ITextModel, mode: FormattingMode) =>\n            this.selectFormatter(formatters, document, mode));\n    }\n\n    protected async setDefaultFormatter(language: string, formatter: string): Promise<void> {\n        const name = this.preferenceSchema.overridePreferenceName({\n            preferenceName: PREFERENCE_NAME,\n            overrideIdentifier: language\n        });\n\n        await this.preferenceService.set(name, formatter);\n    }\n\n    private getDefaultFormatter(language: string): string | undefined {\n        const name = this.preferenceSchema.overridePreferenceName({\n            preferenceName: PREFERENCE_NAME,\n            overrideIdentifier: language\n        });\n\n        return this.preferenceService.get<string>(name);\n    }\n\n    private async selectFormatter<T extends FormattingEditProvider>(\n        formatters: T[], document: monaco.editor.ITextModel | ITextModel, mode: FormattingMode): Promise<T | undefined> {\n\n        if (formatters.length === 0) {\n            return undefined;\n        }\n\n        if (formatters.length === 1) {\n            return formatters[0];\n        }\n\n        const currentEditor = this.editorManager.currentEditor;\n        if (!currentEditor) {\n            return undefined;\n        }\n\n        const languageId = currentEditor.editor.document.languageId;\n        const defaultFormatterId = this.getDefaultFormatter(languageId);\n\n        if (defaultFormatterId) {\n            const formatter = formatters.find(f => f.extensionId && f.extensionId.value === defaultFormatterId);\n            if (formatter) {\n                return formatter;\n            }\n        }\n\n        return new Promise<T | undefined>(async (resolve, reject) => {\n            const items = formatters\n                .filter(formatter => formatter.displayName)\n                .map(formatter => ({\n                    label: formatter.displayName!,\n                    detail: formatter.extensionId ? formatter.extensionId.value : undefined,\n                    value: formatter,\n                }))\n                .sort((a, b) => a.label!.localeCompare(b.label!));\n\n            const selectedFormatter = await this.monacoQuickInputService.showQuickPick(items, { placeholder: nls.localizeByDefault('Format Document With...') });\n            if (selectedFormatter) {\n                this.setDefaultFormatter(languageId, selectedFormatter.detail ? selectedFormatter.detail : '');\n                resolve(selectedFormatter.value);\n            } else {\n                resolve(undefined);\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ColorTheme, CssStyleCollector, FrontendApplicationContribution, PreferenceSchemaProvider, QuickAccessRegistry, StylingParticipant } from '@theia/core/lib/browser';\nimport { MonacoSnippetSuggestProvider } from './monaco-snippet-suggest-provider';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { setSnippetSuggestSupport } from '@theia/monaco-editor-core/esm/vs/editor/contrib/suggest/browser/suggest';\nimport { CompletionItemProvider } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService } from './monaco-text-model-service';\nimport { ContextKeyService as VSCodeContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { ICodeEditorService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/codeEditorService';\nimport { ITextModelService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/resolverService';\nimport { IContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from '@theia/monaco-editor-core/esm/vs/platform/contextview/browser/contextView';\nimport { MonacoContextMenuService } from './monaco-context-menu';\nimport { MonacoThemingService } from './monaco-theming-service';\nimport { isHighContrast } from '@theia/core/lib/common/theme';\nimport { editorOptionsRegistry, IEditorOption } from '@theia/monaco-editor-core/esm/vs/editor/common/config/editorOptions';\nimport { MAX_SAFE_INTEGER } from '@theia/core';\nimport { editorGeneratedPreferenceProperties } from '@theia/editor/lib/browser/editor-generated-preference-schema';\n\nlet theiaDidInitialize = false;\nconst originalInitialize = StandaloneServices.initialize;\nStandaloneServices.initialize = overrides => {\n    if (!theiaDidInitialize) {\n        console.warn('Monaco was initialized before overrides were installed by Theia\\'s initialization.'\n            + ' Please check the lifecycle of services that use Monaco and ensure that Monaco entities are not instantiated before Theia is initialized.', new Error());\n    }\n    return originalInitialize(overrides);\n};\n\n@injectable()\nexport class MonacoFrontendApplicationContribution implements FrontendApplicationContribution, StylingParticipant {\n\n    @inject(MonacoEditorService)\n    protected readonly codeEditorService: MonacoEditorService;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(VSCodeContextKeyService)\n    protected readonly contextKeyService: VSCodeContextKeyService;\n\n    @inject(MonacoSnippetSuggestProvider)\n    protected readonly snippetSuggestProvider: MonacoSnippetSuggestProvider;\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly preferenceSchema: PreferenceSchemaProvider;\n\n    @inject(QuickAccessRegistry)\n    protected readonly quickAccessRegistry: QuickAccessRegistry;\n\n    @inject(MonacoContextMenuService)\n    protected readonly contextMenuService: MonacoContextMenuService;\n\n    @inject(MonacoThemingService) protected readonly monacoThemingService: MonacoThemingService;\n\n    @postConstruct()\n    protected init(): void {\n        this.addAdditionalPreferenceValidations();\n        const { codeEditorService, textModelService, contextKeyService, contextMenuService } = this;\n        theiaDidInitialize = true;\n        StandaloneServices.initialize({\n            [ICodeEditorService.toString()]: codeEditorService,\n            [ITextModelService.toString()]: textModelService,\n            [IContextKeyService.toString()]: contextKeyService,\n            [IContextMenuService.toString()]: contextMenuService,\n        });\n        // Monaco registers certain quick access providers (e.g. QuickCommandAccess) at import time, but we want to use our own.\n        this.quickAccessRegistry.clear();\n\n        /**\n         * @monaco-uplift.Should be guaranteed to work.\n         * Incomparable enums prevent TypeScript from believing that public ITextModel satisfied private ITextModel\n         */\n        setSnippetSuggestSupport(this.snippetSuggestProvider as unknown as CompletionItemProvider);\n\n        for (const language of monaco.languages.getLanguages()) {\n            this.preferenceSchema.registerOverrideIdentifier(language.id);\n        }\n        const registerLanguage = monaco.languages.register.bind(monaco.languages);\n        monaco.languages.register = language => {\n            // first register override identifier, because monaco will immediately update already opened documents and then initialize with bad preferences.\n            this.preferenceSchema.registerOverrideIdentifier(language.id);\n            registerLanguage(language);\n        };\n\n        this.monacoThemingService.initialize();\n    }\n\n    initialize(): void { }\n\n    registerThemeStyle(theme: ColorTheme, collector: CssStyleCollector): void {\n        if (isHighContrast(theme.type)) {\n            const focusBorder = theme.getColor('focusBorder');\n            const contrastBorder = theme.getColor('contrastBorder');\n            if (focusBorder) {\n                // Quick input\n                collector.addRule(`\n                    .quick-input-list .monaco-list-row {\n                        outline-offset: -1px;\n                    }\n                    .quick-input-list .monaco-list-row.focused {\n                        outline: 1px dotted ${focusBorder};\n                    }\n                    .quick-input-list .monaco-list-row:hover {\n                        outline: 1px dashed ${focusBorder};\n                    }\n                `);\n                // Input box always displays an outline, even when unfocused\n                collector.addRule(`\n                    .monaco-editor .find-widget .monaco-inputbox {\n                        outline: var(--theia-border-width) solid;\n                        outline-offset: calc(-1 * var(--theia-border-width));\n                        outline-color: var(--theia-focusBorder);\n                    }\n                `);\n            }\n            if (contrastBorder) {\n                collector.addRule(`\n                    .quick-input-widget {\n                        outline: 1px solid ${contrastBorder};\n                        outline-offset: -1px;\n                    }\n                `);\n            }\n        } else {\n            collector.addRule(`\n                .quick-input-widget {\n                    box-shadow: rgb(0 0 0 / 36%) 0px 0px 8px 2px;\n                }\n            `);\n        }\n    }\n\n    /**\n     * For reasons that are unclear, while most preferences that apply in editors are validated, a few are not.\n     * There is a utility in `examples/api-samples/src/browser/monaco-editor-preferences/monaco-editor-preference-extractor.ts` to help determine which are not.\n     * Check `src/vs/editor/common/config/editorOptions.ts` for constructor arguments and to make sure that the preference names used to extract constructors are still accurate.\n     */\n    protected addAdditionalPreferenceValidations(): void {\n        let editorIntConstructor: undefined | (new (...args: unknown[]) => IEditorOption<number, number>);\n        let editorBoolConstructor: undefined | (new (...args: unknown[]) => IEditorOption<number, boolean>);\n        let editorStringEnumConstructor: undefined | (new (...args: unknown[]) => IEditorOption<number, string>);\n        for (const validator of editorOptionsRegistry) {\n            /* eslint-disable @typescript-eslint/no-explicit-any,max-len */\n            if (editorIntConstructor && editorBoolConstructor && editorStringEnumConstructor) { break; }\n            if (validator.name === 'acceptSuggestionOnCommitCharacter') {\n                editorBoolConstructor = validator.constructor as any;\n            } else if (validator.name === 'acceptSuggestionOnEnter') {\n                editorStringEnumConstructor = validator.constructor as any;\n            } else if (validator.name === 'accessibilityPageSize') {\n                editorIntConstructor = validator.constructor as any;\n            }\n            /* eslint-enable @typescript-eslint/no-explicit-any */\n        }\n        if (editorIntConstructor && editorBoolConstructor && editorStringEnumConstructor) {\n            let id = 200; // Needs to be bigger than the biggest index in the EditorOption enum.\n            editorOptionsRegistry.push(\n                new editorIntConstructor(id++, 'tabSize', 4, 1, MAX_SAFE_INTEGER, editorGeneratedPreferenceProperties['editor.tabSize']),\n                new editorBoolConstructor(id++, 'insertSpaces', true, editorGeneratedPreferenceProperties['editor.insertSpaces']),\n                new editorBoolConstructor(id++, 'detectIndentation', true, editorGeneratedPreferenceProperties['editor.detectIndentation']),\n                new editorBoolConstructor(id++, 'trimAutoWhitespace', true, editorGeneratedPreferenceProperties['editor.trimAutoWhitespace']),\n                new editorBoolConstructor(id++, 'largeFileOptimizations', true, editorGeneratedPreferenceProperties['editor.largeFileOptimizations']),\n                new editorBoolConstructor(id++, 'wordBasedSuggestions', true, editorGeneratedPreferenceProperties['editor.wordBasedSuggestions']),\n                new editorStringEnumConstructor(id++, 'wordBasedSuggestionsMode', 'matchingDocuments', editorGeneratedPreferenceProperties['editor.wordBasedSuggestionsMode'].enum, editorGeneratedPreferenceProperties['editor.wordBasedSuggestionsMode']),\n                new editorBoolConstructor(id++, 'stablePeek', false, editorGeneratedPreferenceProperties['editor.stablePeek']),\n                new editorIntConstructor(id++, 'maxTokenizationLineLength', 20000, 1, MAX_SAFE_INTEGER, editorGeneratedPreferenceProperties['editor.maxTokenizationLineLength']),\n            );\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as MonacoNls from '@theia/monaco-editor-core/esm/vs/nls';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { FormatType, Localization } from '@theia/core/lib/common/i18n/localization';\n\nObject.assign(MonacoNls, {\n    localize(_key: string, label: string, ...args: FormatType[]): string {\n        if (nls.locale) {\n            const defaultKey = nls.getDefaultKey(label);\n            if (defaultKey) {\n                return nls.localize(defaultKey, label, ...args);\n            }\n        }\n        return Localization.format(label, args);\n    }\n});\n\nimport '../../src/browser/style/index.css';\nimport { ContainerModule, decorate, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { MenuContribution, CommandContribution } from '@theia/core/lib/common';\nimport {\n    FrontendApplicationContribution, KeybindingContribution,\n    PreferenceService, PreferenceSchemaProvider, createPreferenceProxy,\n    PreferenceScope, PreferenceChange, OVERRIDE_PROPERTY_PATTERN, QuickInputService, StylingParticipant\n} from '@theia/core/lib/browser';\nimport { TextEditorProvider, DiffNavigatorProvider, TextEditor } from '@theia/editor/lib/browser';\nimport { MonacoEditorProvider, MonacoEditorFactory } from './monaco-editor-provider';\nimport { MonacoEditorMenuContribution } from './monaco-menu';\nimport { MonacoEditorCommandHandlers } from './monaco-command';\nimport { MonacoKeybindingContribution } from './monaco-keybinding';\nimport { MonacoLanguages } from './monaco-languages';\nimport { MonacoWorkspace } from './monaco-workspace';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService, MonacoEditorModelFactory } from './monaco-text-model-service';\nimport { MonacoContextMenuService } from './monaco-context-menu';\nimport { MonacoOutlineContribution } from './monaco-outline-contribution';\nimport { MonacoStatusBarContribution } from './monaco-status-bar-contribution';\nimport { MonacoCommandService, MonacoCommandServiceFactory } from './monaco-command-service';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { MonacoDiffNavigatorFactory } from './monaco-diff-navigator-factory';\nimport { MonacoFrontendApplicationContribution } from './monaco-frontend-application-contribution';\nimport MonacoTextmateModuleBinder from './textmate/monaco-textmate-frontend-bindings';\nimport { MonacoBulkEditService } from './monaco-bulk-edit-service';\nimport { MonacoOutlineDecorator } from './monaco-outline-decorator';\nimport { OutlineTreeDecorator } from '@theia/outline-view/lib/browser/outline-decorator-service';\nimport { MonacoSnippetSuggestProvider } from './monaco-snippet-suggest-provider';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { MonacoContextKeyService } from './monaco-context-key-service';\nimport { MonacoMimeService } from './monaco-mime-service';\nimport { MimeService } from '@theia/core/lib/browser/mime-service';\nimport { MonacoEditorServices } from './monaco-editor';\nimport { MonacoColorRegistry } from './monaco-color-registry';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { MonacoThemingService } from './monaco-theming-service';\nimport { bindContributionProvider } from '@theia/core';\nimport { WorkspaceSymbolCommand } from './workspace-symbol-command';\nimport { LanguageService } from '@theia/core/lib/browser/language-service';\nimport { MonacoToProtocolConverter } from './monaco-to-protocol-converter';\nimport { ProtocolToMonacoConverter } from './protocol-to-monaco-converter';\nimport { MonacoFormattingConflictsContribution } from './monaco-formatting-conflicts';\nimport { MonacoQuickInputImplementation, MonacoQuickInputService } from './monaco-quick-input-service';\nimport { GotoLineQuickAccessContribution } from './monaco-gotoline-quick-access';\nimport { GotoSymbolQuickAccessContribution } from './monaco-gotosymbol-quick-access';\nimport { QuickAccessContribution, QuickAccessRegistry } from '@theia/core/lib/browser/quick-input/quick-access';\nimport { MonacoQuickAccessRegistry } from './monaco-quick-access-registry';\nimport { ContextKeyService as VSCodeContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\nimport { ConfigurationTarget, IConfigurationChangeEvent, IConfigurationService } from '@theia/monaco-editor-core/esm/vs/platform/configuration/common/configuration';\nimport { StandaloneConfigurationService, StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { Configuration } from '@theia/monaco-editor-core/esm/vs/platform/configuration/common/configurationModels';\nimport { MarkdownRenderer } from '@theia/core/lib/browser/markdown-rendering/markdown-renderer';\nimport { MonacoMarkdownRenderer } from './markdown-renderer/monaco-markdown-renderer';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { ThemeServiceWithDB } from './monaco-indexed-db';\n\ndecorate(injectable(), VSCodeContextKeyService);\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(MonacoThemingService).toSelf().inSingletonScope();\n\n    bind(MonacoContextKeyService).toSelf().inSingletonScope();\n    rebind(ContextKeyService).toService(MonacoContextKeyService);\n\n    bind(MonacoSnippetSuggestProvider).toSelf().inSingletonScope();\n    bind(MonacoFrontendApplicationContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoFrontendApplicationContribution);\n    bind(StylingParticipant).toService(MonacoFrontendApplicationContribution);\n\n    bind(MonacoToProtocolConverter).toSelf().inSingletonScope();\n    bind(ProtocolToMonacoConverter).toSelf().inSingletonScope();\n\n    bind(MonacoLanguages).toSelf().inSingletonScope();\n    rebind(LanguageService).toService(MonacoLanguages);\n    bind(WorkspaceSymbolCommand).toSelf().inSingletonScope();\n    for (const identifier of [CommandContribution, KeybindingContribution, MenuContribution, QuickAccessContribution]) {\n        bind(identifier).toService(WorkspaceSymbolCommand);\n    }\n\n    bind(MonacoWorkspace).toSelf().inSingletonScope();\n\n    bind(MonacoConfigurationService).toDynamicValue(({ container }) =>\n        createMonacoConfigurationService(container)\n    ).inSingletonScope();\n    bind(VSCodeContextKeyService).toDynamicValue(({ container }) =>\n        new VSCodeContextKeyService(container.get(MonacoConfigurationService))\n    ).inSingletonScope();\n\n    bind(MonacoBulkEditService).toSelf().inSingletonScope();\n    bind(MonacoEditorService).toSelf().inSingletonScope();\n    bind(MonacoTextModelService).toSelf().inSingletonScope();\n    bind(MonacoContextMenuService).toSelf().inSingletonScope();\n    bind(MonacoEditorServices).toSelf().inSingletonScope();\n    bind(MonacoEditorProvider).toSelf().inSingletonScope();\n    bindContributionProvider(bind, MonacoEditorFactory);\n    bindContributionProvider(bind, MonacoEditorModelFactory);\n    bind(MonacoCommandService).toSelf().inTransientScope();\n    bind(MonacoCommandServiceFactory).toAutoFactory(MonacoCommandService);\n\n    bind(TextEditorProvider).toProvider(context =>\n        uri => context.container.get(MonacoEditorProvider).get(uri)\n    );\n\n    bind(MonacoDiffNavigatorFactory).toSelf().inSingletonScope();\n    bind(DiffNavigatorProvider).toFactory(context =>\n        (editor: TextEditor) => context.container.get(MonacoEditorProvider).getDiffNavigator(editor)\n    );\n\n    bind(MonacoOutlineContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoOutlineContribution);\n\n    rebind(MarkdownRenderer).to(MonacoMarkdownRenderer).inSingletonScope();\n\n    bind(MonacoFormattingConflictsContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoFormattingConflictsContribution);\n\n    bind(MonacoStatusBarContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoStatusBarContribution);\n\n    bind(MonacoCommandRegistry).toSelf().inSingletonScope();\n    bind(MonacoEditorCommandHandlers).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(MonacoEditorCommandHandlers);\n    bind(MonacoEditorMenuContribution).toSelf().inSingletonScope();\n    bind(MenuContribution).toService(MonacoEditorMenuContribution);\n    bind(MonacoKeybindingContribution).toSelf().inSingletonScope();\n    bind(KeybindingContribution).toService(MonacoKeybindingContribution);\n\n    bind(MonacoQuickInputImplementation).toSelf().inSingletonScope();\n    bind(MonacoQuickInputService).toSelf().inSingletonScope();\n    bind(QuickInputService).toService(MonacoQuickInputService);\n\n    bind(MonacoQuickAccessRegistry).toSelf().inSingletonScope();\n    bind(QuickAccessRegistry).toService(MonacoQuickAccessRegistry);\n\n    bind(GotoLineQuickAccessContribution).toSelf().inSingletonScope();\n    bind(QuickAccessContribution).toService(GotoLineQuickAccessContribution);\n\n    bind(GotoSymbolQuickAccessContribution).toSelf().inSingletonScope();\n    bind(QuickAccessContribution).toService(GotoSymbolQuickAccessContribution);\n\n    MonacoTextmateModuleBinder(bind, unbind, isBound, rebind);\n\n    bind(MonacoOutlineDecorator).toSelf().inSingletonScope();\n    bind(OutlineTreeDecorator).toService(MonacoOutlineDecorator);\n\n    bind(MonacoMimeService).toSelf().inSingletonScope();\n    rebind(MimeService).toService(MonacoMimeService);\n\n    bind(MonacoColorRegistry).toSelf().inSingletonScope();\n    rebind(ColorRegistry).toService(MonacoColorRegistry);\n\n    bind(ThemeServiceWithDB).toSelf().inSingletonScope();\n    rebind(ThemeService).toService(ThemeServiceWithDB);\n});\n\nexport const MonacoConfigurationService = Symbol('MonacoConfigurationService');\nexport function createMonacoConfigurationService(container: interfaces.Container): IConfigurationService {\n    const preferences = container.get<PreferenceService>(PreferenceService);\n    const preferenceSchemaProvider = container.get<PreferenceSchemaProvider>(PreferenceSchemaProvider);\n    const service = StandaloneServices.get(IConfigurationService) as StandaloneConfigurationService;\n    const _configuration: Configuration = service['_configuration'];\n\n    _configuration.getValue = (section, overrides) => {\n        const overrideIdentifier: string | undefined = (overrides && 'overrideIdentifier' in overrides && typeof overrides.overrideIdentifier === 'string')\n            ? overrides['overrideIdentifier']\n            : undefined;\n        const resourceUri: string | undefined = (overrides && 'resource' in overrides && !!overrides['resource']) ? overrides['resource'].toString() : undefined;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const proxy = createPreferenceProxy<{ [key: string]: any }>(preferences, preferenceSchemaProvider.getCombinedSchema(), {\n            resourceUri, overrideIdentifier, style: 'both'\n        });\n        if (section) {\n            return proxy[section];\n        }\n        return proxy;\n    };\n\n    const toTarget = (scope: PreferenceScope): ConfigurationTarget => {\n        switch (scope) {\n            case PreferenceScope.Default: return ConfigurationTarget.DEFAULT;\n            case PreferenceScope.User: return ConfigurationTarget.USER;\n            case PreferenceScope.Workspace: return ConfigurationTarget.WORKSPACE;\n            case PreferenceScope.Folder: return ConfigurationTarget.WORKSPACE_FOLDER;\n        }\n    };\n\n    interface FireDidChangeConfigurationContext {\n        changes: PreferenceChange[];\n        affectedKeys: Set<string>;\n        keys: Set<string>;\n        overrides: Map<string, Set<string>>\n    }\n    const newFireDidChangeConfigurationContext = (): FireDidChangeConfigurationContext => ({\n        changes: [],\n        affectedKeys: new Set<string>(),\n        keys: new Set<string>(),\n        overrides: new Map<string, Set<string>>()\n    });\n    const fireDidChangeConfiguration = (source: ConfigurationTarget, context: FireDidChangeConfigurationContext): void => {\n        if (!context.affectedKeys.size) {\n            return;\n        }\n        const overrides: [string, string[]][] = [];\n        for (const [override, values] of context.overrides) {\n            overrides.push([override, [...values]]);\n        }\n        service['_onDidChangeConfiguration'].fire(<IConfigurationChangeEvent>{\n            change: {\n                keys: [...context.keys],\n                overrides\n            },\n            affectedKeys: [...context.affectedKeys],\n            source,\n            affectsConfiguration: (prefix, options) => {\n                if (!context.affectedKeys.has(prefix)) {\n                    return false;\n                }\n                for (const change of context.changes) {\n                    const overridden = preferences.overriddenPreferenceName(change.preferenceName);\n                    const preferenceName = overridden ? overridden.preferenceName : change.preferenceName;\n                    if (preferenceName.startsWith(prefix)) {\n                        if (options?.overrideIdentifier !== undefined) {\n                            if (overridden && overridden.overrideIdentifier !== options?.overrideIdentifier) {\n                                continue;\n                            }\n                        }\n                        if (change.affects(options?.resource?.toString())) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n    };\n\n    preferences.onPreferencesChanged(event => {\n        let source: ConfigurationTarget | undefined;\n        let context = newFireDidChangeConfigurationContext();\n        for (let key of Object.keys(event)) {\n            const change = event[key];\n            const target = toTarget(change.scope);\n            if (source !== undefined && target !== source) {\n                fireDidChangeConfiguration(source, context);\n                context = newFireDidChangeConfigurationContext();\n            }\n            context.changes.push(change);\n            source = target;\n\n            let overrideKeys: Set<string> | undefined;\n            if (key.startsWith('[')) {\n                const index = key.indexOf('.');\n                const override = key.substring(0, index);\n                const overrideIdentifier = override.match(OVERRIDE_PROPERTY_PATTERN)?.[1];\n                if (overrideIdentifier) {\n                    context.keys.add(override);\n                    context.affectedKeys.add(override);\n                    overrideKeys = context.overrides.get(overrideIdentifier) || new Set<string>();\n                    context.overrides.set(overrideIdentifier, overrideKeys);\n                    key = key.substring(index + 1);\n                }\n            }\n            while (key) {\n                if (overrideKeys) {\n                    overrideKeys.add(key);\n                }\n                context.keys.add(key);\n                context.affectedKeys.add(key);\n                const index = key.lastIndexOf('.');\n                key = key.substring(0, index);\n            }\n        }\n        if (source) {\n            fireDidChangeConfiguration(source, context);\n        }\n    });\n\n    return service;\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { QuickAccessContribution } from '@theia/core/lib/browser/quick-input';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ICodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/codeEditorService';\nimport { StandaloneGotoLineQuickAccessProvider } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess';\nimport { IQuickAccessRegistry, Extensions } from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickAccess';\nimport { Registry } from '@theia/monaco-editor-core/esm/vs/platform/registry/common/platform';\n\nexport class GotoLineQuickAccess extends StandaloneGotoLineQuickAccessProvider {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(...services: any[]);\n    constructor(@ICodeEditorService private readonly service: ICodeEditorService) {\n        super(service);\n    }\n\n    override get activeTextEditorControl(): ICodeEditor | undefined {\n        return (this.service.getFocusedCodeEditor() || this.service.getActiveCodeEditor()) ?? undefined;\n    }\n}\n\n@injectable()\nexport class GotoLineQuickAccessContribution implements QuickAccessContribution {\n    registerQuickAccessProvider(): void {\n        Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n            ctor: GotoLineQuickAccess,\n            prefix: ':',\n            placeholder: '',\n            helpEntries: [{ description: 'Go to line' }]\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { QuickAccessContribution } from '@theia/core/lib/browser/quick-input';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ICodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/codeEditorService';\nimport { ILanguageFeaturesService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageFeatures';\nimport { IOutlineModelService } from '@theia/monaco-editor-core/esm/vs/editor/contrib/documentSymbols/browser/outlineModel';\nimport { StandaloneGotoSymbolQuickAccessProvider } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess';\nimport { IQuickAccessRegistry, Extensions } from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickAccess';\nimport { Registry } from '@theia/monaco-editor-core/esm/vs/platform/registry/common/platform';\n\nexport class GotoSymbolQuickAccess extends StandaloneGotoSymbolQuickAccessProvider {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(...services: any[]);\n    constructor(\n        @ICodeEditorService protected readonly codeEditorService: ICodeEditorService,\n        @ILanguageFeaturesService protected readonly languageFeatures: ILanguageFeaturesService,\n        @IOutlineModelService protected readonly outlineService: IOutlineModelService,\n    ) {\n        super(codeEditorService, languageFeatures, outlineService);\n    }\n\n    override get activeTextEditorControl(): ICodeEditor | undefined {\n        return (this.codeEditorService.getFocusedCodeEditor() ?? this.codeEditorService.getActiveCodeEditor()) ?? undefined;\n    }\n}\n\n@injectable()\nexport class GotoSymbolQuickAccessContribution implements QuickAccessContribution {\n    registerQuickAccessProvider(): void {\n        Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n            ctor: GotoSymbolQuickAccess,\n            prefix: '@',\n            placeholder: '',\n            helpEntries: [{ description: 'Go to symbol' }]\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as idb from 'idb';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport type { ThemeMix } from './textmate/monaco-theme-types';\nimport { Theme } from '@theia/core/lib/common/theme';\nimport { Emitter, Event, isObject } from '@theia/core';\n\nlet _monacoDB: Promise<idb.IDBPDatabase> | undefined;\nif ('indexedDB' in window) {\n    _monacoDB = idb.openDB('theia-monaco', 1, {\n        upgrade: db => {\n            if (!db.objectStoreNames.contains('themes')) {\n                db.createObjectStore('themes', { keyPath: 'id' });\n            }\n        }\n    });\n}\n\nexport const monacoDB = _monacoDB;\n\nexport interface MonacoThemeState {\n    id: string,\n    label: string,\n    description?: string,\n    uiTheme: monaco.editor.BuiltinTheme\n    data: ThemeMix\n}\nexport namespace MonacoThemeState {\n    export function is(state: unknown): state is MonacoThemeState {\n        return isObject(state) && 'id' in state && 'label' in state && 'uiTheme' in state && 'data' in state;\n    }\n}\n\nexport async function getThemes(): Promise<MonacoThemeState[]> {\n    if (!monacoDB) {\n        return [];\n    }\n    const db = await monacoDB;\n    const result = await db.transaction('themes', 'readonly').objectStore('themes').getAll();\n    return result.filter(MonacoThemeState.is);\n}\n\nexport function putTheme(state: MonacoThemeState): Disposable {\n    const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n    doPutTheme(state, toDispose);\n    return toDispose;\n}\nasync function doPutTheme(state: MonacoThemeState, toDispose: DisposableCollection): Promise<void> {\n    if (!monacoDB) {\n        return;\n    }\n    const db = await monacoDB;\n    if (toDispose.disposed) {\n        return;\n    }\n    const id = state.id;\n    await db.transaction('themes', 'readwrite').objectStore('themes').put(state);\n    if (toDispose.disposed) {\n        await deleteTheme(id);\n        return;\n    }\n    toDispose.push(Disposable.create(() => deleteTheme(id)));\n}\n\nexport async function deleteTheme(id: string): Promise<void> {\n    if (!monacoDB) {\n        return;\n    }\n    const db = await monacoDB;\n    await db.transaction('themes', 'readwrite').objectStore('themes').delete(id);\n}\n\nexport function stateToTheme(state: MonacoThemeState): Theme {\n    const { id, label, description, uiTheme, data } = state;\n    const type = uiTheme === 'vs' ? 'light' : uiTheme === 'vs-dark' ? 'dark' : 'hc';\n    return {\n        type,\n        id,\n        label,\n        description,\n        editorTheme: data.name!\n    };\n}\n\n@injectable()\nexport class ThemeServiceWithDB extends ThemeService {\n    protected onDidRetrieveThemeEmitter = new Emitter<MonacoThemeState>();\n    get onDidRetrieveTheme(): Event<MonacoThemeState> {\n        return this.onDidRetrieveThemeEmitter.event;\n    }\n\n    override loadUserTheme(): void {\n        this.loadUserThemeWithDB();\n    }\n\n    protected async loadUserThemeWithDB(): Promise<void> {\n        const themeId = window.localStorage.getItem(ThemeService.STORAGE_KEY) ?? this.defaultTheme.id;\n        const theme = this.themes[themeId] ?? await getThemes().then(themes => {\n            const matchingTheme = themes.find(candidate => candidate.id === themeId);\n            if (matchingTheme) {\n                this.onDidRetrieveThemeEmitter.fire(matchingTheme);\n                return stateToTheme(matchingTheme);\n            }\n        }) ?? this.getTheme(themeId);\n        // In case the theme comes from the DB.\n        if (!this.themes[theme.id]) {\n            this.themes[theme.id] = theme;\n        }\n        this.setCurrentTheme(theme.id, false);\n        this.deferredInitializer.resolve();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { KeybindingContribution, KeybindingRegistry, KeybindingScope, KeyCode } from '@theia/core/lib/browser';\nimport { MonacoCommands } from './monaco-command';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { CommandRegistry, DisposableCollection, environment, isOSX } from '@theia/core';\nimport { MonacoResolvedKeybinding } from './monaco-resolved-keybinding';\nimport { KeybindingsRegistry } from '@theia/monaco-editor-core/esm/vs/platform/keybinding/common/keybindingsRegistry';\nimport { StandaloneKeybindingService, StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { IKeybindingService } from '@theia/monaco-editor-core/esm/vs/platform/keybinding/common/keybinding';\nimport { MonacoContextKeyService } from './monaco-context-key-service';\nimport { KEY_CODE_MAP } from './monaco-keycode-map';\nimport * as monaco from '@theia/monaco-editor-core';\n\n@injectable()\nexport class MonacoKeybindingContribution implements KeybindingContribution {\n\n    protected toDisposeOnKeybindingChange = new DisposableCollection();\n\n    @inject(MonacoCommandRegistry) protected readonly commands: MonacoCommandRegistry;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n    @inject(CommandRegistry) protected readonly theiaCommandRegistry: CommandRegistry;\n    @inject(MonacoContextKeyService) protected readonly contextKeyService: MonacoContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.keybindings.onKeybindingsChanged(() => this.updateMonacoKeybindings());\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        const defaultKeybindings = KeybindingsRegistry.getDefaultKeybindings();\n        for (const item of defaultKeybindings) {\n            const command = this.commands.validate(item.command);\n            if (command) {\n                const when = (item.when && item.when.serialize()) ?? undefined;\n                let keybinding;\n                if (item.command === MonacoCommands.GO_TO_DEFINITION && !environment.electron.is()) {\n                    keybinding = 'ctrlcmd+f11';\n                } else {\n                    keybinding = MonacoResolvedKeybinding.toKeybinding(item.keybinding);\n                }\n                registry.registerKeybinding({ command, keybinding, when });\n            }\n        }\n    }\n\n    protected updateMonacoKeybindings(): void {\n        const monacoKeybindingRegistry = StandaloneServices.get(IKeybindingService);\n        if (monacoKeybindingRegistry instanceof StandaloneKeybindingService) {\n            this.toDisposeOnKeybindingChange.dispose();\n            for (const binding of this.keybindings.getKeybindingsByScope(KeybindingScope.USER).concat(this.keybindings.getKeybindingsByScope(KeybindingScope.WORKSPACE))) {\n                const resolved = this.keybindings.resolveKeybinding(binding);\n                const command = binding.command;\n                const when = binding.when\n                    ? this.contextKeyService.parse(binding.when)\n                    : binding.context\n                        ? this.contextKeyService.parse(binding.context)\n                        : undefined;\n                this.toDisposeOnKeybindingChange.push(monacoKeybindingRegistry.addDynamicKeybinding(\n                    binding.command,\n                    this.toMonacoKeybindingNumber(resolved),\n                    (_, ...args) => this.theiaCommandRegistry.executeCommand(command, ...args),\n                    when,\n                ));\n            }\n        }\n    }\n\n    protected toMonacoKeybindingNumber(codes: KeyCode[]): number {\n        const [firstPart, secondPart] = codes;\n        if (codes.length > 2) {\n            console.warn('Key chords should not consist of more than two parts; got ', codes);\n        }\n        const encodedFirstPart = this.toSingleMonacoKeybindingNumber(firstPart);\n        const encodedSecondPart = secondPart ? this.toSingleMonacoKeybindingNumber(secondPart) << 16 : 0;\n        return monaco.KeyMod.chord(encodedFirstPart, encodedSecondPart);\n    }\n\n    protected toSingleMonacoKeybindingNumber(code: KeyCode): number {\n        const keyCode = code.key?.keyCode !== undefined ? KEY_CODE_MAP[code.key.keyCode] : 0;\n        let encoded = (keyCode >>> 0) & 0x000000FF;\n        if (code.alt) {\n            encoded |= monaco.KeyMod.Alt;\n        }\n        if (code.shift) {\n            encoded |= monaco.KeyMod.Shift;\n        }\n        if (code.ctrl) {\n            encoded |= monaco.KeyMod.WinCtrl;\n        }\n        if (code.meta && isOSX) {\n            encoded |= monaco.KeyMod.CtrlCmd;\n        }\n        return encoded;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { SymbolInformation, WorkspaceSymbolParams } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ProblemManager } from '@theia/markers/lib/browser/problem/problem-manager';\nimport URI from '@theia/core/lib/common/uri';\nimport { MaybePromise, Mutable } from '@theia/core/lib/common/types';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { Language, LanguageService } from '@theia/core/lib/browser/language-service';\nimport { MonacoMarkerCollection } from './monaco-marker-collection';\nimport { ProtocolToMonacoConverter } from './protocol-to-monaco-converter';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport interface WorkspaceSymbolProvider {\n    provideWorkspaceSymbols(params: WorkspaceSymbolParams, token: CancellationToken): MaybePromise<SymbolInformation[] | undefined>;\n    resolveWorkspaceSymbol?(symbol: SymbolInformation, token: CancellationToken): Thenable<SymbolInformation | undefined>\n}\n\n@injectable()\nexport class MonacoLanguages implements LanguageService {\n\n    readonly workspaceSymbolProviders: WorkspaceSymbolProvider[] = [];\n\n    protected readonly markers = new Map<string, MonacoMarkerCollection>();\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n    @inject(ProtocolToMonacoConverter) protected readonly p2m: ProtocolToMonacoConverter;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(uri => this.updateMarkers(uri));\n        monaco.editor.onDidCreateModel(model => this.updateModelMarkers(model));\n    }\n\n    updateMarkers(uri: URI): void {\n        const markers = this.problemManager.findMarkers({ uri });\n        const uriString = uri.toString();\n        const collection = this.markers.get(uriString) || new MonacoMarkerCollection(uri, this.p2m);\n        this.markers.set(uriString, collection);\n        collection.updateMarkers(markers);\n    }\n\n    updateModelMarkers(model: monaco.editor.ITextModel): void {\n        const uriString = model.uri.toString();\n        const uri = new URI(uriString);\n        const collection = this.markers.get(uriString) || new MonacoMarkerCollection(uri, this.p2m);\n        this.markers.set(uriString, collection);\n        collection.updateModelMarkers(model);\n    }\n\n    registerWorkspaceSymbolProvider(provider: WorkspaceSymbolProvider): Disposable {\n        this.workspaceSymbolProviders.push(provider);\n        return Disposable.create(() => {\n            const index = this.workspaceSymbolProviders.indexOf(provider);\n            if (index !== -1) {\n                this.workspaceSymbolProviders.splice(index, 1);\n            }\n        });\n    }\n\n    get languages(): Language[] {\n        return [...this.mergeLanguages(monaco.languages.getLanguages()).values()];\n    }\n\n    getLanguage(languageId: string): Language | undefined {\n        return this.mergeLanguages(monaco.languages.getLanguages().filter(language => language.id === languageId)).get(languageId);\n    }\n\n    getExtension(languageId: string): string | undefined {\n        return this.getLanguage(languageId)?.extensions.values().next().value;\n    }\n\n    getLanguageIdByLanguageName(languageName: string): string | undefined {\n        return monaco.languages.getLanguages().find(language => language.aliases?.includes(languageName))?.id;\n    }\n\n    protected mergeLanguages(registered: monaco.languages.ILanguageExtensionPoint[]): Map<string, Mutable<Language>> {\n        const languages = new Map<string, Mutable<Language>>();\n        for (const { id, aliases, extensions, filenames } of registered) {\n            const merged = languages.get(id) || {\n                id,\n                name: '',\n                extensions: new Set(),\n                filenames: new Set()\n            };\n            if (!merged.name && aliases && aliases.length) {\n                merged.name = aliases[0];\n            }\n            if (extensions && extensions.length) {\n                for (const extension of extensions) {\n                    merged.extensions.add(extension);\n                }\n            }\n            if (filenames && filenames.length) {\n                for (const filename of filenames) {\n                    merged.filenames.add(filename);\n                }\n            }\n            languages.set(id, merged);\n        }\n        for (const [id, language] of languages) {\n            if (!language.name) {\n                language.name = id;\n            }\n        }\n        return languages;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ProtocolToMonacoConverter } from './protocol-to-monaco-converter';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { Marker } from '@theia/markers/lib/common/marker';\nimport URI from '@theia/core/lib/common/uri';\n\nexport class MonacoMarkerCollection {\n    protected readonly uri: monaco.Uri;\n    protected readonly p2m: ProtocolToMonacoConverter;\n    protected markers: Marker<Diagnostic>[] = [];\n    protected owners = new Map<string, Diagnostic[]>();\n    protected didUpdate: boolean = false;\n\n    constructor(\n        uri: URI,\n        p2m: ProtocolToMonacoConverter\n    ) {\n        this.uri = monaco.Uri.parse(uri.toString());\n        this.p2m = p2m;\n    }\n\n    updateMarkers(markers: Marker<Diagnostic>[]): void {\n        this.markers = markers;\n        const model = monaco.editor.getModel(this.uri);\n        this.doUpdateMarkers(model ? model : undefined);\n    }\n\n    updateModelMarkers(model: monaco.editor.ITextModel): void {\n        if (!this.didUpdate) {\n            this.doUpdateMarkers(model);\n            return;\n        }\n        for (const [owner, diagnostics] of this.owners) {\n            this.setModelMarkers(model, owner, diagnostics);\n        }\n    }\n\n    doUpdateMarkers(model: monaco.editor.ITextModel | undefined): void {\n        if (!model) {\n            this.didUpdate = false;\n            return;\n        }\n        this.didUpdate = true;\n        const toClean = new Set<string>(this.owners.keys());\n        this.owners.clear();\n        for (const marker of this.markers) {\n            const diagnostics = this.owners.get(marker.owner) || [];\n            diagnostics.push(marker.data);\n            this.owners.set(marker.owner, diagnostics);\n        }\n        for (const [owner, diagnostics] of this.owners) {\n            toClean.delete(owner);\n            this.setModelMarkers(model, owner, diagnostics);\n        }\n        for (const owner of toClean) {\n            this.clearModelMarkers(model, owner);\n        }\n    }\n\n    setModelMarkers(model: monaco.editor.ITextModel, owner: string, diagnostics: Diagnostic[]): void {\n        monaco.editor.setModelMarkers(model, owner, this.p2m.asDiagnostics(diagnostics));\n    }\n\n    clearModelMarkers(model: monaco.editor.ITextModel, owner: string): void {\n        monaco.editor.setModelMarkers(model, owner, []);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MenuContribution, MenuModelRegistry, MAIN_MENU_BAR, MenuPath, MenuAction } from '@theia/core/lib/common';\nimport { EditorMainMenu, EDITOR_CONTEXT_MENU } from '@theia/editor/lib/browser';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { IMenuItem, isIMenuItem, MenuId, MenuRegistry } from '@theia/monaco-editor-core/esm/vs/platform/actions/common/actions';\n\nexport interface MonacoActionGroup {\n    id: string;\n    actions: string[];\n}\nexport namespace MonacoMenus {\n    export const SELECTION = [...MAIN_MENU_BAR, '3_selection'];\n    export const PEEK_CONTEXT_SUBMENU: MenuPath = [...EDITOR_CONTEXT_MENU, 'navigation', 'peek_submenu'];\n    export const MARKERS_GROUP = [...EditorMainMenu.GO, '5_markers_group'];\n}\n\n@injectable()\nexport class MonacoEditorMenuContribution implements MenuContribution {\n\n    constructor(\n        @inject(MonacoCommandRegistry) protected readonly commands: MonacoCommandRegistry\n    ) { }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        for (const item of MenuRegistry.getMenuItems(MenuId.EditorContext)) {\n            if (!isIMenuItem(item)) {\n                continue;\n            }\n            const commandId = this.commands.validate(item.command.id);\n            if (commandId) {\n                const menuPath = [...EDITOR_CONTEXT_MENU, (item.group || '')];\n                registry.registerMenuAction(menuPath, this.buildMenuAction(commandId, item));\n            }\n        }\n\n        this.registerPeekSubmenu(registry);\n\n        registry.registerSubmenu(MonacoMenus.SELECTION, nls.localizeByDefault('Selection'));\n        for (const item of MenuRegistry.getMenuItems(MenuId.MenubarSelectionMenu)) {\n            if (!isIMenuItem(item)) {\n                continue;\n            }\n            const commandId = this.commands.validate(item.command.id);\n            if (commandId) {\n                const menuPath = [...MonacoMenus.SELECTION, (item.group || '')];\n                registry.registerMenuAction(menuPath, this.buildMenuAction(commandId, item));\n            }\n        }\n\n        // Builtin monaco language features commands.\n        registry.registerMenuAction(EditorMainMenu.LANGUAGE_FEATURES_GROUP, {\n            commandId: 'editor.action.quickOutline',\n            label: nls.localizeByDefault('Go to Symbol in Editor...'),\n            order: '1'\n        });\n        registry.registerMenuAction(EditorMainMenu.LANGUAGE_FEATURES_GROUP, {\n            commandId: 'editor.action.revealDefinition',\n            label: nls.localizeByDefault('Go to Definition'),\n            order: '2'\n        });\n        registry.registerMenuAction(EditorMainMenu.LANGUAGE_FEATURES_GROUP, {\n            commandId: 'editor.action.revealDeclaration',\n            label: nls.localizeByDefault('Go to Declaration'),\n            order: '3'\n        });\n        registry.registerMenuAction(EditorMainMenu.LANGUAGE_FEATURES_GROUP, {\n            commandId: 'editor.action.goToTypeDefinition',\n            label: nls.localizeByDefault('Go to Type Definition'),\n            order: '4'\n        });\n        registry.registerMenuAction(EditorMainMenu.LANGUAGE_FEATURES_GROUP, {\n            commandId: 'editor.action.goToImplementation',\n            label: nls.localizeByDefault('Go to Implementations'),\n            order: '5'\n        });\n        registry.registerMenuAction(EditorMainMenu.LANGUAGE_FEATURES_GROUP, {\n            commandId: 'editor.action.goToReferences',\n            label: nls.localizeByDefault('Go to References'),\n            order: '6'\n        });\n\n        registry.registerMenuAction(EditorMainMenu.LOCATION_GROUP, {\n            commandId: 'editor.action.jumpToBracket',\n            label: nls.localizeByDefault('Go to Bracket'),\n            order: '2'\n        });\n\n        // Builtin monaco problem commands.\n        registry.registerMenuAction(MonacoMenus.MARKERS_GROUP, {\n            commandId: 'editor.action.marker.nextInFiles',\n            label: nls.localizeByDefault('Next Problem'),\n            order: '1'\n        });\n        registry.registerMenuAction(MonacoMenus.MARKERS_GROUP, {\n            commandId: 'editor.action.marker.prevInFiles',\n            label: nls.localizeByDefault('Previous Problem'),\n            order: '2'\n        });\n    }\n\n    protected registerPeekSubmenu(registry: MenuModelRegistry): void {\n        registry.registerSubmenu(MonacoMenus.PEEK_CONTEXT_SUBMENU, nls.localizeByDefault('Peek'));\n\n        for (const item of MenuRegistry.getMenuItems(MenuId.EditorContextPeek)) {\n            if (!isIMenuItem(item)) {\n                continue;\n            }\n            const commandId = this.commands.validate(item.command.id);\n            if (commandId) {\n                registry.registerMenuAction([...MonacoMenus.PEEK_CONTEXT_SUBMENU, item.group || ''], this.buildMenuAction(commandId, item));\n            }\n        }\n    }\n\n    protected buildMenuAction(commandId: string, item: IMenuItem): MenuAction {\n        const title = typeof item.command.title === 'string' ? item.command.title : item.command.title.value;\n        const label = this.removeMnemonic(title);\n        const order = item.order ? String(item.order) : '';\n        return { commandId, order, label };\n    }\n\n    protected removeMnemonic(label: string): string {\n        return label.replace(/\\(&&\\w\\)|&&/g, '');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MimeAssociation, MimeService } from '@theia/core/lib/browser/mime-service';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { ILanguageService } from '@theia/monaco-editor-core/esm/vs/editor/common/languages/language';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { clearConfiguredLanguageAssociations, registerConfiguredLanguageAssociation } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languagesAssociations';\nimport { LanguageService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageService';\n\n@injectable()\nexport class MonacoMimeService extends MimeService {\n\n    protected associations: MimeAssociation[] = [];\n    protected updatingAssociations = false;\n\n    constructor() {\n        super();\n        StandaloneServices.get(ILanguageService).onDidChange(() => {\n            if (this.updatingAssociations) {\n                return;\n            }\n            this.updateAssociations();\n        });\n    }\n\n    override setAssociations(associations: MimeAssociation[]): void {\n        this.associations = associations;\n        this.updateAssociations();\n    }\n\n    protected updateAssociations = debounce(() => {\n        this.updatingAssociations = true;\n        try {\n            clearConfiguredLanguageAssociations();\n\n            for (const association of this.associations) {\n                const mimetype = this.getMimeForMode(association.id) || `text/x-${association.id}`;\n                registerConfiguredLanguageAssociation({ id: association.id, mime: mimetype, filepattern: association.filepattern });\n            }\n            (StandaloneServices.get(ILanguageService) as LanguageService)['_onDidChange'].fire(undefined);\n        } finally {\n            this.updatingAssociations = false;\n        }\n    });\n\n    protected getMimeForMode(langId: string): string | undefined {\n        for (const language of monaco.languages.getLanguages()) {\n            if (language.id === langId && language.mimetypes) {\n                return language.mimetypes[0];\n            }\n        }\n\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { FrontendApplicationContribution, FrontendApplication, TreeNode } from '@theia/core/lib/browser';\nimport { Range, EditorManager, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport { DisposableCollection, Disposable } from '@theia/core';\nimport { OutlineViewService } from '@theia/outline-view/lib/browser/outline-view-service';\nimport { OutlineSymbolInformationNode } from '@theia/outline-view/lib/browser/outline-view-widget';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditor } from './monaco-editor';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport * as monaco from '@theia/monaco-editor-core';\nimport { ILanguageFeaturesService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageFeatures';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { ITextModel } from '@theia/monaco-editor-core/esm/vs/editor/common/model';\nimport { DocumentSymbol } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\n\n@injectable()\nexport class MonacoOutlineContribution implements FrontendApplicationContribution {\n\n    protected readonly toDisposeOnEditor = new DisposableCollection();\n    protected roots: MonacoOutlineSymbolInformationNode[] | undefined;\n    protected canUpdateOutline: boolean = true;\n\n    @inject(OutlineViewService) protected readonly outlineViewService: OutlineViewService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    onStart(app: FrontendApplication): void {\n\n        // updateOutline and handleCurrentEditorChanged need to be called even when the outline view widget is closed\n        // in order to update breadcrumbs.\n        StandaloneServices.get(ILanguageFeaturesService).documentSymbolProvider.onDidChange(\n            debounce(() => this.updateOutline())\n        );\n        this.editorManager.onCurrentEditorChanged(\n            debounce(() => this.handleCurrentEditorChanged(), 50)\n        );\n        this.handleCurrentEditorChanged();\n\n        this.outlineViewService.onDidSelect(async node => {\n            if (MonacoOutlineSymbolInformationNode.is(node) && node.parent) {\n                const options: EditorOpenerOptions = {\n                    mode: 'reveal',\n                    selection: node.range\n                };\n                await this.selectInEditor(node, options);\n            }\n        });\n        this.outlineViewService.onDidOpen(async node => {\n            if (MonacoOutlineSymbolInformationNode.is(node)) {\n                const options: EditorOpenerOptions = {\n                    selection: {\n                        start: node.range.start\n                    }\n                };\n                await this.selectInEditor(node, options);\n            }\n        });\n    }\n\n    protected async selectInEditor(node: MonacoOutlineSymbolInformationNode, options?: EditorOpenerOptions): Promise<void> {\n        // Avoid cyclic updates: Outline -> Editor -> Outline.\n        this.canUpdateOutline = false;\n        try {\n            await this.editorManager.open(node.uri, options);\n        } finally {\n            this.canUpdateOutline = true;\n        }\n    }\n\n    protected handleCurrentEditorChanged(): void {\n        this.toDisposeOnEditor.dispose();\n        this.toDisposeOnEditor.push(Disposable.create(() => this.roots = undefined));\n        const editor = this.editorManager.currentEditor;\n        if (editor) {\n            const model = MonacoEditor.get(editor)!.getControl().getModel();\n            if (model) {\n                this.toDisposeOnEditor.push(model.onDidChangeContent(() => {\n                    this.roots = undefined; // Invalidate the previously resolved roots.\n                    this.updateOutline();\n                }));\n            }\n            this.toDisposeOnEditor.push(editor.editor.onSelectionChanged(selection => this.updateOutline(selection)));\n        }\n        this.updateOutline();\n    }\n\n    protected tokenSource = new monaco.CancellationTokenSource();\n    protected async updateOutline(editorSelection?: Range): Promise<void> {\n        if (!this.canUpdateOutline) {\n            return;\n        }\n        this.tokenSource.cancel();\n        this.tokenSource = new monaco.CancellationTokenSource();\n        const token = this.tokenSource.token;\n\n        const editor = MonacoEditor.get(this.editorManager.currentEditor);\n        const model = editor && editor.getControl().getModel();\n        const roots = model && await this.createRoots(model, token, editorSelection);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.outlineViewService.publish(roots || []);\n    }\n\n    protected async createRoots(\n        model: monaco.editor.ITextModel | ITextModel, token: monaco.CancellationToken, editorSelection?: Range\n    ): Promise<MonacoOutlineSymbolInformationNode[]> {\n        model = model as ITextModel;\n        if (this.roots && this.roots.length > 0) {\n            // Reset the selection on the tree nodes, so that we can apply the new ones based on the `editorSelection`.\n            const resetSelection = (node: MonacoOutlineSymbolInformationNode) => {\n                node.selected = false;\n                node.children.forEach(resetSelection);\n            };\n            this.roots.forEach(resetSelection);\n        } else {\n            this.roots = [];\n            const providers = StandaloneServices.get(ILanguageFeaturesService).documentSymbolProvider.all(model);\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            const uri = new URI(model.uri.toString());\n            for (const provider of providers) {\n                try {\n                    const symbols = await provider.provideDocumentSymbols(model, token) ?? [];\n                    if (token.isCancellationRequested) {\n                        return [];\n                    }\n                    const nodes = this.createNodes(uri, symbols);\n                    if (providers.length > 1 && provider.displayName) {\n                        const providerRoot = this.createProviderRootNode(uri, provider.displayName, nodes);\n                        this.roots.push(providerRoot);\n                    } else {\n                        this.roots.push(...nodes);\n                    }\n                } catch {\n                    /* collect symbols from other providers */\n                }\n            }\n        }\n        this.applySelection(this.roots, editorSelection);\n        return this.roots;\n    }\n\n    protected createProviderRootNode(uri: URI, displayName: string, children: MonacoOutlineSymbolInformationNode[]): MonacoOutlineSymbolInformationNode {\n        const node: MonacoOutlineSymbolInformationNode = {\n            uri,\n            id: displayName,\n            name: displayName,\n            iconClass: '',\n            range: this.asRange(new monaco.Range(1, 1, 1, 1)),\n            fullRange: this.asRange(new monaco.Range(1, 1, 1, 1)),\n            children,\n            parent: undefined,\n            selected: false,\n            expanded: true\n        };\n        return node;\n    }\n\n    protected createNodes(uri: URI, symbols: monaco.languages.DocumentSymbol[] | DocumentSymbol[]): MonacoOutlineSymbolInformationNode[] {\n        symbols = symbols as monaco.languages.DocumentSymbol[];\n        let rangeBased = false;\n        const ids = new Map();\n        const roots: MonacoOutlineSymbolInformationNode[] = [];\n        const nodesByName = symbols.sort(this.orderByPosition).reduce((result, symbol) => {\n            const node = this.createNode(uri, symbol, ids);\n            if (symbol.children) {\n                MonacoOutlineSymbolInformationNode.insert(roots, node);\n            } else {\n                rangeBased = rangeBased || symbol.range.startLineNumber !== symbol.range.endLineNumber;\n                const values = result.get(symbol.name) || [];\n                values.push({ symbol, node });\n                result.set(symbol.name, values);\n            }\n            return result;\n        }, new Map<string, MonacoOutlineContribution.NodeAndSymbol[]>());\n\n        for (const nodes of nodesByName.values()) {\n            for (const { node, symbol } of nodes) {\n                if (!symbol.containerName) {\n                    MonacoOutlineSymbolInformationNode.insert(roots, node);\n                } else {\n                    const possibleParents = nodesByName.get(symbol.containerName);\n                    if (possibleParents) {\n                        const parent = possibleParents.find(possibleParent => this.parentContains(symbol, possibleParent.symbol, rangeBased));\n                        if (parent) {\n                            node.parent = parent.node;\n                            MonacoOutlineSymbolInformationNode.insert(parent.node.children, node);\n                        }\n                    }\n                }\n            }\n        }\n        if (!roots.length) {\n            const nodes = nodesByName.values().next().value;\n            if (nodes && !nodes[0].node.parent) {\n                return [nodes[0].node];\n            }\n            return [];\n        }\n        return roots;\n    }\n\n    /**\n     * Sets the selection on the sub-trees based on the optional editor selection.\n     * Select the narrowest node that is strictly contains the editor selection.\n     */\n    protected applySelection(roots: MonacoOutlineSymbolInformationNode[], editorSelection?: Range): boolean {\n        if (editorSelection) {\n            for (const root of roots) {\n                if (this.parentContains(editorSelection, root.fullRange, true)) {\n                    const { children } = root;\n                    root.selected = !root.expanded || !this.applySelection(children, editorSelection);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns `true` if `candidate` is strictly contained inside `parent`\n     *\n     * If the argument is a `DocumentSymbol`, then `getFullRange` will be used to retrieve the range of the underlying symbol.\n     */\n    protected parentContains(candidate: monaco.languages.DocumentSymbol | Range, parent: monaco.languages.DocumentSymbol | Range, rangeBased: boolean): boolean {\n        // TODO: move this code to the `monaco-languageclient`: https://github.com/eclipse-theia/theia/pull/2885#discussion_r217800446\n        const candidateRange = Range.is(candidate) ? candidate : this.getFullRange(candidate);\n        const parentRange = Range.is(parent) ? parent : this.getFullRange(parent);\n        const sameStartLine = candidateRange.start.line === parentRange.start.line;\n        const startColGreaterOrEqual = candidateRange.start.character >= parentRange.start.character;\n        const startLineGreater = candidateRange.start.line > parentRange.start.line;\n        const sameEndLine = candidateRange.end.line === parentRange.end.line;\n        const endColSmallerOrEqual = candidateRange.end.character <= parentRange.end.character;\n        const endLineSmaller = candidateRange.end.line < parentRange.end.line;\n        return (((sameStartLine && startColGreaterOrEqual || startLineGreater) &&\n            (sameEndLine && endColSmallerOrEqual || endLineSmaller)) || !rangeBased);\n    }\n\n    /**\n     * `monaco` to LSP `Range` converter. Converts the `1-based` location indices into `0-based` ones.\n     */\n    protected asRange(range: monaco.IRange): Range {\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n        return {\n            start: {\n                line: startLineNumber - 1,\n                character: startColumn - 1\n            },\n            end: {\n                line: endLineNumber - 1,\n                character: endColumn - 1\n            }\n        };\n    }\n\n    /**\n     * Returns with a range enclosing this symbol not including leading/trailing whitespace but everything else like comments.\n     * This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI.\n     * This allows to obtain the range including the associated comments.\n     *\n     * See: [`DocumentSymbol#range`](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol) for more details.\n     */\n    protected getFullRange(documentSymbol: monaco.languages.DocumentSymbol): Range {\n        return this.asRange(documentSymbol.range);\n    }\n\n    /**\n     * The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the `getSelectionRange`.\n     *\n     * See: [`DocumentSymbol#selectionRange`](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol) for more details.\n     */\n    protected getNameRange(documentSymbol: monaco.languages.DocumentSymbol): Range {\n        return this.asRange(documentSymbol.selectionRange);\n    }\n\n    protected createNode(\n        uri: URI, symbol: monaco.languages.DocumentSymbol, ids: Map<string, number>, parent?: MonacoOutlineSymbolInformationNode\n    ): MonacoOutlineSymbolInformationNode {\n        const id = this.createId(symbol.name, ids);\n        const children: MonacoOutlineSymbolInformationNode[] = [];\n        const node: MonacoOutlineSymbolInformationNode = {\n            children,\n            id,\n            iconClass: monaco.languages.SymbolKind[symbol.kind].toString().toLowerCase(),\n            name: this.getName(symbol),\n            detail: this.getDetail(symbol),\n            parent,\n            uri,\n            range: this.getNameRange(symbol),\n            fullRange: this.getFullRange(symbol),\n            selected: false,\n            expanded: this.shouldExpand(symbol)\n        };\n        if (symbol.children) {\n            for (const child of symbol.children) {\n                MonacoOutlineSymbolInformationNode.insert(children, this.createNode(uri, child, ids, node));\n            }\n        }\n        return node;\n    }\n\n    protected getName(symbol: monaco.languages.DocumentSymbol): string {\n        return symbol.name;\n    }\n\n    protected getDetail(symbol: monaco.languages.DocumentSymbol): string {\n        return symbol.detail;\n    }\n\n    protected createId(name: string, ids: Map<string, number>): string {\n        const counter = ids.get(name);\n        const index = typeof counter === 'number' ? counter + 1 : 0;\n        ids.set(name, index);\n        return name + '_' + index;\n    }\n\n    protected shouldExpand(symbol: monaco.languages.DocumentSymbol): boolean {\n        return [\n            monaco.languages.SymbolKind.Class,\n            monaco.languages.SymbolKind.Enum, monaco.languages.SymbolKind.File,\n            monaco.languages.SymbolKind.Interface, monaco.languages.SymbolKind.Module,\n            monaco.languages.SymbolKind.Namespace, monaco.languages.SymbolKind.Object,\n            monaco.languages.SymbolKind.Package, monaco.languages.SymbolKind.Struct\n        ].indexOf(symbol.kind) !== -1;\n    }\n\n    protected orderByPosition(symbol: monaco.languages.DocumentSymbol, symbol2: monaco.languages.DocumentSymbol): number {\n        const startLineComparison = symbol.range.startLineNumber - symbol2.range.startLineNumber;\n        if (startLineComparison !== 0) {\n            return startLineComparison;\n        }\n        const startOffsetComparison = symbol.range.startColumn - symbol2.range.startColumn;\n        if (startOffsetComparison !== 0) {\n            return startOffsetComparison;\n        }\n        const endLineComparison = symbol.range.endLineNumber - symbol2.range.endLineNumber;\n        if (endLineComparison !== 0) {\n            return endLineComparison;\n        }\n        return symbol.range.endColumn - symbol2.range.endColumn;\n    }\n\n}\nexport namespace MonacoOutlineContribution {\n    export interface NodeAndSymbol {\n        node: MonacoOutlineSymbolInformationNode;\n        symbol: monaco.languages.DocumentSymbol\n    }\n}\n\nexport interface MonacoOutlineSymbolInformationNode extends OutlineSymbolInformationNode {\n    uri: URI;\n    range: Range;\n    fullRange: Range;\n    detail?: string;\n    parent: MonacoOutlineSymbolInformationNode | undefined;\n    children: MonacoOutlineSymbolInformationNode[];\n}\n\nexport namespace MonacoOutlineSymbolInformationNode {\n    export function is(node: TreeNode): node is MonacoOutlineSymbolInformationNode {\n        return OutlineSymbolInformationNode.is(node) && 'uri' in node && 'range' in node;\n    }\n    export function insert(nodes: MonacoOutlineSymbolInformationNode[], node: MonacoOutlineSymbolInformationNode): void {\n        const index = nodes.findIndex(current => compare(node, current) < 0);\n        if (index === -1) {\n            nodes.push(node);\n        } else {\n            nodes.splice(index, 0, node);\n        }\n    }\n    export function compare(node: MonacoOutlineSymbolInformationNode, node2: MonacoOutlineSymbolInformationNode): number {\n        const startLineComparison = node.range.start.line - node2.range.start.line;\n        if (startLineComparison !== 0) {\n            return startLineComparison;\n        }\n        const startColumnComparison = node.range.start.character - node2.range.start.character;\n        if (startColumnComparison !== 0) {\n            return startColumnComparison;\n        }\n        const endLineComparison = node2.range.end.line - node.range.end.line;\n        if (endLineComparison !== 0) {\n            return endLineComparison;\n        }\n        return node2.range.end.character - node.range.end.character;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 RedHat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { MonacoOutlineSymbolInformationNode } from './monaco-outline-contribution';\n\n@injectable()\nexport class MonacoOutlineDecorator implements TreeDecorator {\n\n    readonly id = 'theia-monaco-outline-decorator';\n\n    protected readonly emitter = new Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>();\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorations(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected collectDecorations(tree: Tree): Map<string, TreeDecoration.Data> {\n        const result = new Map();\n        if (tree.root === undefined) {\n            return result;\n        }\n\n        for (const treeNode of new DepthFirstTreeIterator(tree.root)) {\n            if (MonacoOutlineSymbolInformationNode.is(treeNode) && treeNode.detail) {\n                result.set(treeNode.id, this.toDecoration(treeNode));\n            }\n        }\n\n        return result;\n    }\n\n    protected toDecoration(node: MonacoOutlineSymbolInformationNode): TreeDecoration.Data {\n        const captionSuffixes: TreeDecoration.CaptionAffix[] = [{\n            data: (node.detail || ''),\n            fontData: {\n                color: 'var(--theia-descriptionForeground)',\n            }\n        }];\n\n        return {\n            captionSuffixes\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { KeybindingRegistry, QuickPickItem, QuickPickSeparator } from '@theia/core/lib/browser';\nimport { QuickAccessProviderDescriptor, QuickAccessRegistry } from '@theia/core/lib/browser/quick-input/quick-access';\nimport { CancellationToken, Disposable } from '@theia/core/lib/common';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { MonacoQuickPickItem } from './monaco-quick-input-service';\nimport {\n    IPickerQuickAccessProviderOptions, PickerQuickAccessProvider, Picks, Pick, IPickerQuickAccessItem\n} from '@theia/monaco-editor-core/esm/vs/platform/quickinput/browser/pickerQuickAccess';\nimport {\n    Extensions,\n    IQuickAccessProvider,\n    IQuickAccessProviderDescriptor,\n    IQuickAccessProviderHelp,\n    IQuickAccessRegistry,\n    QuickAccessRegistry as VSCodeQuickAccessRegistry,\n} from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickAccess';\nimport { IQuickPickItem, IQuickPickItemWithResource } from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickInput';\nimport { Registry } from '@theia/monaco-editor-core/esm/vs/platform/registry/common/platform';\n\ninterface IAnythingQuickPickItem extends IPickerQuickAccessItem, IQuickPickItemWithResource { }\n\nabstract class MonacoPickerAccessProvider extends PickerQuickAccessProvider<IQuickPickItem> {\n    constructor(prefix: string, options?: IPickerQuickAccessProviderOptions<IQuickPickItem>) {\n        super(prefix, options);\n    }\n\n    abstract getDescriptor(): QuickAccessProviderDescriptor;\n}\n\nclass TheiaQuickAccessDescriptor implements IQuickAccessProviderDescriptor {\n    constructor(\n        public readonly theiaDescriptor: QuickAccessProviderDescriptor,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        readonly ctor: { new(...services: any /* TS BrandedService but no clue how to type this properly */[]): IQuickAccessProvider },\n        readonly prefix: string,\n        readonly helpEntries: IQuickAccessProviderHelp[],\n        readonly placeholder?: string) { }\n}\n\n@injectable()\nexport class MonacoQuickAccessRegistry implements QuickAccessRegistry {\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    private get monacoRegistry(): IQuickAccessRegistry {\n        return Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n    }\n\n    registerQuickAccessProvider(descriptor: QuickAccessProviderDescriptor): Disposable {\n        const toMonacoPick = (item: QuickPickItem): Pick<IAnythingQuickPickItem> => {\n            if (QuickPickSeparator.is(item)) {\n                return item;\n            } else {\n                return new MonacoQuickPickItem(item, this.keybindingRegistry);\n            }\n        };\n\n        const inner =\n            class extends MonacoPickerAccessProvider {\n                getDescriptor(): QuickAccessProviderDescriptor {\n                    return descriptor;\n                }\n                constructor() {\n                    super(descriptor.prefix);\n                }\n\n                protected override async _getPicks(filter: string, disposables: unknown, token: CancellationToken): Promise<Picks<IQuickPickItem>> {\n                    const result = await Promise.resolve(descriptor.getInstance().getPicks(filter, token));\n                    return result.map(toMonacoPick);\n                }\n            };\n\n        return this.monacoRegistry.registerQuickAccessProvider(new TheiaQuickAccessDescriptor(\n            descriptor,\n            inner,\n            descriptor.prefix,\n            descriptor.helpEntries,\n            descriptor.placeholder\n        ));\n    }\n\n    getQuickAccessProviders(): QuickAccessProviderDescriptor[] {\n        return this.monacoRegistry.getQuickAccessProviders()\n            .filter(provider => provider instanceof TheiaQuickAccessDescriptor)\n            .map(provider => (provider as TheiaQuickAccessDescriptor).theiaDescriptor);\n    }\n    getQuickAccessProvider(prefix: string): QuickAccessProviderDescriptor | undefined {\n        const monacoDescriptor = this.monacoRegistry.getQuickAccessProvider(prefix);\n        return monacoDescriptor ? (monacoDescriptor as TheiaQuickAccessDescriptor).theiaDescriptor : undefined;\n    }\n    clear(): void {\n        if (this.monacoRegistry instanceof VSCodeQuickAccessRegistry) {\n            this.monacoRegistry.clear();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as jsoncparser from 'jsonc-parser';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileOperationError } from '@theia/filesystem/lib/common/files';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { SnippetParser } from '@theia/monaco-editor-core/esm/vs/editor/contrib/snippet/browser/snippetParser';\nimport { isObject } from '@theia/core/lib/common';\n\n@injectable()\nexport class MonacoSnippetSuggestProvider implements monaco.languages.CompletionItemProvider {\n\n    private static readonly _maxPrefix = 10000;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    protected readonly snippets = new Map<string, Snippet[]>();\n    protected readonly pendingSnippets = new Map<string, Promise<void>[]>();\n\n    async provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.CompletionContext): Promise<monaco.languages.CompletionList | undefined> {\n\n        // copied and modified from https://github.com/microsoft/vscode/blob/master/src/vs/workbench/contrib/snippets/browser/snippetCompletionProvider.ts\n        if (position.column >= MonacoSnippetSuggestProvider._maxPrefix) {\n            return undefined;\n        }\n\n        if (context.triggerKind === monaco.languages.CompletionTriggerKind.TriggerCharacter && context.triggerCharacter === ' ') {\n            // no snippets when suggestions have been triggered by space\n            return undefined;\n        }\n\n        const languageId = model.getLanguageId(); // TODO: look up a language id at the position\n        await this.loadSnippets(languageId);\n        const snippetsForLanguage = this.snippets.get(languageId) || [];\n\n        const pos = { lineNumber: position.lineNumber, column: 1 };\n        const lineOffsets: number[] = [];\n        const linePrefixLow = model.getLineContent(position.lineNumber).substring(0, position.column - 1).toLowerCase();\n        const endsInWhitespace = linePrefixLow.match(/\\s$/);\n\n        while (pos.column < position.column) {\n            const word = model.getWordAtPosition(pos);\n            if (word) {\n                // at a word\n                lineOffsets.push(word.startColumn - 1);\n                pos.column = word.endColumn + 1;\n                if (word.endColumn - 1 < linePrefixLow.length && !/\\s/.test(linePrefixLow[word.endColumn - 1])) {\n                    lineOffsets.push(word.endColumn - 1);\n                }\n            } else if (!/\\s/.test(linePrefixLow[pos.column - 1])) {\n                // at a none-whitespace character\n                lineOffsets.push(pos.column - 1);\n                pos.column += 1;\n            } else {\n                // always advance!\n                pos.column += 1;\n            }\n        }\n\n        const availableSnippets = new Set<Snippet>();\n        snippetsForLanguage.forEach(availableSnippets.add, availableSnippets);\n        const suggestions: MonacoSnippetSuggestion[] = [];\n        for (const start of lineOffsets) {\n            availableSnippets.forEach(snippet => {\n                if (this.isPatternInWord(linePrefixLow, start, linePrefixLow.length, snippet.prefix.toLowerCase(), 0, snippet.prefix.length)) {\n                    suggestions.push(new MonacoSnippetSuggestion(snippet, monaco.Range.fromPositions(position.delta(0, -(linePrefixLow.length - start)), position)));\n                    availableSnippets.delete(snippet);\n                }\n            });\n        }\n        if (endsInWhitespace || lineOffsets.length === 0) {\n            // add remaining snippets when the current prefix ends in whitespace or when no\n            // interesting positions have been found\n            availableSnippets.forEach(snippet => {\n                suggestions.push(new MonacoSnippetSuggestion(snippet, monaco.Range.fromPositions(position)));\n            });\n        }\n\n        // disambiguate suggestions with same labels\n        suggestions.sort(MonacoSnippetSuggestion.compareByLabel);\n        return { suggestions };\n    }\n\n    resolveCompletionItem?(item: monaco.languages.CompletionItem, token: monaco.CancellationToken): monaco.languages.CompletionItem {\n        return item instanceof MonacoSnippetSuggestion ? item.resolve() : item;\n    }\n\n    protected async loadSnippets(scope: string): Promise<void> {\n        const pending: Promise<void>[] = [];\n        pending.push(...(this.pendingSnippets.get(scope) || []));\n        pending.push(...(this.pendingSnippets.get('*') || []));\n        if (pending.length) {\n            await Promise.all(pending);\n        }\n    }\n\n    fromURI(uri: string | URI, options: SnippetLoadOptions): Disposable {\n        const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n        const pending = this.loadURI(uri, options, toDispose);\n        const { language } = options;\n        const scopes = Array.isArray(language) ? language : !!language ? [language] : ['*'];\n        for (const scope of scopes) {\n            const pendingSnippets = this.pendingSnippets.get(scope) || [];\n            pendingSnippets.push(pending);\n            this.pendingSnippets.set(scope, pendingSnippets);\n            toDispose.push(Disposable.create(() => {\n                const index = pendingSnippets.indexOf(pending);\n                if (index !== -1) {\n                    pendingSnippets.splice(index, 1);\n                }\n            }));\n        }\n        return toDispose;\n    }\n\n    /**\n     * should NOT throw to prevent load errors on suggest\n     */\n    protected async loadURI(uri: string | URI, options: SnippetLoadOptions, toDispose: DisposableCollection): Promise<void> {\n        try {\n            const resource = typeof uri === 'string' ? new URI(uri) : uri;\n            const { value } = await this.fileService.read(resource);\n            if (toDispose.disposed) {\n                return;\n            }\n            const snippets = value && jsoncparser.parse(value, undefined, { disallowComments: false });\n            toDispose.push(this.fromJSON(snippets, options));\n        } catch (e) {\n            if (!(e instanceof FileOperationError)) {\n                console.error(e);\n            }\n        }\n    }\n\n    fromJSON(snippets: JsonSerializedSnippets | undefined, { language, source }: SnippetLoadOptions): Disposable {\n        const toDispose = new DisposableCollection();\n        this.parseSnippets(snippets, (name, snippet) => {\n            const { isFileTemplate, prefix, body, description } = snippet;\n            const parsedBody = Array.isArray(body) ? body.join('\\n') : body;\n            const parsedPrefixes = !prefix ? [''] : Array.isArray(prefix) ? prefix : [prefix];\n\n            if (typeof parsedBody !== 'string') {\n                return;\n            }\n            const scopes: string[] = [];\n            if (language) {\n                if (Array.isArray(language)) {\n                    scopes.push(...language);\n                } else {\n                    scopes.push(language);\n                }\n            } else if (typeof snippet.scope === 'string') {\n                for (const rawScope of snippet.scope.split(',')) {\n                    const scope = rawScope.trim();\n                    if (scope) {\n                        scopes.push(scope);\n                    }\n                }\n            }\n            parsedPrefixes.forEach(parsedPrefix => toDispose.push(this.push({\n                isFileTemplate: Boolean(isFileTemplate),\n                scopes,\n                name,\n                prefix: parsedPrefix,\n                description,\n                body: parsedBody,\n                source\n            })));\n        });\n        return toDispose;\n    }\n    protected parseSnippets(snippets: JsonSerializedSnippets | undefined, accept: (name: string, snippet: JsonSerializedSnippet) => void): void {\n        for (const [name, scopeOrTemplate] of Object.entries(snippets ?? {})) {\n            if (JsonSerializedSnippet.is(scopeOrTemplate)) {\n                accept(name, scopeOrTemplate);\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                for (const [name, template] of Object.entries(scopeOrTemplate)) {\n                    accept(name, template);\n                }\n            }\n        }\n    }\n\n    push(...snippets: Snippet[]): Disposable {\n        const toDispose = new DisposableCollection();\n        for (const snippet of snippets) {\n            for (const scope of snippet.scopes) {\n                const languageSnippets = this.snippets.get(scope) || [];\n                languageSnippets.push(snippet);\n                this.snippets.set(scope, languageSnippets);\n                toDispose.push(Disposable.create(() => {\n                    const index = languageSnippets.indexOf(snippet);\n                    if (index !== -1) {\n                        languageSnippets.splice(index, 1);\n                    }\n                }));\n            }\n        }\n        return toDispose;\n    }\n\n    protected isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number): boolean {\n        while (patternPos < patternLen && wordPos < wordLen) {\n            if (patternLow[patternPos] === wordLow[wordPos]) {\n                patternPos += 1;\n            }\n            wordPos += 1;\n        }\n        return patternPos === patternLen; // pattern must be exhausted\n    }\n\n}\n\nexport interface SnippetLoadOptions {\n    language?: string | string[]\n    source: string\n}\n\nexport interface JsonSerializedSnippets {\n    [name: string]: JsonSerializedSnippet | { [name: string]: JsonSerializedSnippet };\n}\nexport interface JsonSerializedSnippet {\n    isFileTemplate?: boolean;\n    body: string | string[];\n    scope?: string;\n    prefix?: string | string[];\n    description: string;\n}\nexport namespace JsonSerializedSnippet {\n    export function is(obj: unknown): obj is JsonSerializedSnippet {\n        return isObject(obj) && 'body' in obj;\n    }\n}\n\nexport interface Snippet {\n    readonly isFileTemplate: boolean\n    readonly scopes: string[]\n    readonly name: string\n    readonly prefix: string\n    readonly description: string\n    readonly body: string\n    readonly source: string\n}\n\nexport class MonacoSnippetSuggestion implements monaco.languages.CompletionItem {\n\n    readonly label: string;\n    readonly detail: string;\n    readonly sortText: string;\n    readonly noAutoAccept = true;\n    readonly kind = monaco.languages.CompletionItemKind.Snippet;\n    readonly insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n\n    insertText: string;\n    documentation?: monaco.IMarkdownString;\n\n    constructor(\n        protected readonly snippet: Snippet,\n        readonly range: monaco.Range\n    ) {\n        this.label = snippet.prefix;\n        this.detail = `${snippet.description || snippet.name} (${snippet.source})`;\n        this.insertText = snippet.body;\n        this.sortText = `z-${snippet.prefix}`;\n        this.range = range;\n    }\n\n    protected resolved = false;\n    resolve(): MonacoSnippetSuggestion {\n        if (!this.resolved) {\n            const codeSnippet = new SnippetParser().parse(this.snippet.body).toString();\n            this.documentation = { value: '```\\n' + codeSnippet + '```' };\n            this.resolved = true;\n        }\n        return this;\n    }\n\n    static compareByLabel(a: MonacoSnippetSuggestion, b: MonacoSnippetSuggestion): number {\n        return a.label > b.label ? 1 : a.label < b.label ? -1 : 0;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { DisposableCollection, nls } from '@theia/core';\nimport { FrontendApplicationContribution, FrontendApplication, StatusBar, StatusBarAlignment } from '@theia/core/lib/browser';\nimport { EditorCommands, EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\nimport * as monaco from '@theia/monaco-editor-core';\n\n@injectable()\nexport class MonacoStatusBarContribution implements FrontendApplicationContribution {\n\n    protected readonly toDispose = new DisposableCollection();\n\n    constructor(\n        @inject(EditorManager) protected readonly editorManager: EditorManager,\n        @inject(StatusBar) protected readonly statusBar: StatusBar\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBar();\n        this.editorManager.onCurrentEditorChanged(() => this.updateStatusBar());\n    }\n\n    protected updateStatusBar(): void {\n        const editor = this.editorManager.currentEditor;\n        const editorModel = this.getModel(editor);\n        if (editor && editorModel) {\n            this.setConfigTabSizeWidget();\n            this.setLineEndingWidget();\n\n            this.toDispose.dispose();\n            this.toDispose.push(editorModel.onDidChangeOptions(() => {\n                this.setConfigTabSizeWidget();\n                this.setLineEndingWidget();\n            }));\n            let previous = editorModel.getEOL();\n            this.toDispose.push(editorModel.onDidChangeContent(e => {\n                if (previous !== e.eol) {\n                    previous = e.eol;\n                    this.setLineEndingWidget();\n                }\n            }));\n        } else {\n            this.removeConfigTabSizeWidget();\n            this.removeLineEndingWidget();\n        }\n    }\n\n    protected setConfigTabSizeWidget(): void {\n        const editor = this.editorManager.currentEditor;\n        const editorModel = this.getModel(editor);\n        if (editor && editorModel) {\n            const modelOptions = editorModel.getOptions();\n            const tabSize = modelOptions.tabSize;\n            const spaceOrTabSizeMessage = modelOptions.insertSpaces\n                ? nls.localizeByDefault('Spaces: {0}', tabSize)\n                : nls.localizeByDefault('Tab Size: {0}', tabSize);\n            this.statusBar.setElement('editor-status-tabbing-config', {\n                text: spaceOrTabSizeMessage,\n                alignment: StatusBarAlignment.RIGHT,\n                priority: 10,\n                command: EditorCommands.CONFIG_INDENTATION.id,\n                tooltip: nls.localizeByDefault('Select Indentation')\n            });\n        }\n    }\n    protected removeConfigTabSizeWidget(): void {\n        this.statusBar.removeElement('editor-status-tabbing-config');\n    }\n\n    protected setLineEndingWidget(): void {\n        const editor = this.editorManager.currentEditor;\n        const editorModel = this.getModel(editor);\n        if (editor && editorModel) {\n            const eol = editorModel.getEOL();\n            const text = eol === '\\n' ? 'LF' : 'CRLF';\n            this.statusBar.setElement('editor-status-eol', {\n                text: `${text}`,\n                alignment: StatusBarAlignment.RIGHT,\n                priority: 11,\n                command: EditorCommands.CONFIG_EOL.id,\n                tooltip: nls.localizeByDefault('Select End of Line Sequence')\n            });\n        }\n    }\n    protected removeLineEndingWidget(): void {\n        this.statusBar.removeElement('editor-status-eol');\n    }\n\n    protected getModel(editor: EditorWidget | undefined): monaco.editor.ITextModel | undefined {\n        const monacoEditor = MonacoEditor.get(editor);\n        return monacoEditor && monacoEditor.getControl().getModel() || undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport * as jsoncparser from 'jsonc-parser';\nimport * as plistparser from 'fast-plist';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { MonacoThemeRegistry } from './textmate/monaco-theme-registry';\nimport { getThemes, putTheme, MonacoThemeState, stateToTheme, ThemeServiceWithDB } from './monaco-indexed-db';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport interface MonacoTheme {\n    id?: string;\n    label?: string;\n    uiTheme?: monaco.editor.BuiltinTheme;\n    description?: string;\n    uri: string;\n}\n\nexport interface MonacoThemeJson {\n    /**\n     * theme id (optional), label is used if not provided\n     */\n    id?: string;\n    label: string;\n    /**\n     * theme type, `vs-dark` if not provided\n     */\n    uiTheme?: monaco.editor.BuiltinTheme;\n    description?: string;\n    /**\n     * Follow https://code.visualstudio.com/api/extension-guides/color-theme#create-a-new-color-theme to create a custom theme.\n     */\n    json: any\n    /**\n     * Themes can include each other. It specifies how inclusions should be resolved.\n     */\n    includes?: { [includePath: string]: any }\n}\n\n@injectable()\nexport class MonacoThemingService {\n\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(MonacoThemeRegistry) protected readonly monacoThemeRegistry: MonacoThemeRegistry;\n    @inject(ThemeServiceWithDB) protected readonly themeService: ThemeServiceWithDB;\n\n    /** Register themes whose configuration needs to be loaded */\n    register(theme: MonacoTheme, pending: { [uri: string]: Promise<any> } = {}): Disposable {\n        const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n        this.doRegister(theme, pending, toDispose);\n        return toDispose;\n    }\n\n    protected async doRegister(theme: MonacoTheme,\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<void> {\n        try {\n            const includes = {};\n            const json = await this.loadTheme(theme.uri, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n            const label = theme.label || new URI(theme.uri).path.base;\n            const { id, description, uiTheme } = theme;\n            toDispose.push(this.registerParsedTheme({ id, label, description, uiTheme: uiTheme, json, includes }));\n        } catch (e) {\n            console.error('Failed to load theme from ' + theme.uri, e);\n        }\n    }\n\n    protected async loadTheme(\n        uri: string,\n        includes: { [include: string]: any },\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<any> {\n        const result = await this.fileService.read(new URI(uri));\n        const content = result.value;\n        if (toDispose.disposed) {\n            return;\n        }\n        const themeUri = new URI(uri);\n        if (themeUri.path.ext !== '.json') {\n            const value = plistparser.parse(content);\n            if (value && 'settings' in value && Array.isArray(value.settings)) {\n                return { tokenColors: value.settings };\n            }\n            throw new Error(`Problem parsing tmTheme file: ${uri}. 'settings' is not array.`);\n        }\n        const json = jsoncparser.parse(content, undefined, { disallowComments: false });\n        if ('tokenColors' in json && typeof json.tokenColors === 'string') {\n            const value = await this.doLoadTheme(themeUri, json.tokenColors, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n            json.tokenColors = value.tokenColors;\n        }\n        if (json.include) {\n            includes[json.include] = await this.doLoadTheme(themeUri, json.include, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n        }\n        this.clean(json.colors);\n        return json;\n    }\n\n    protected doLoadTheme(\n        themeUri: URI,\n        referencedPath: string,\n        includes: { [include: string]: any },\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<any> {\n        const referencedUri = themeUri.parent.resolve(referencedPath).toString();\n        if (!pending[referencedUri]) {\n            pending[referencedUri] = this.loadTheme(referencedUri, includes, pending, toDispose);\n        }\n        return pending[referencedUri];\n    }\n\n    initialize(): void {\n        this.monacoThemeRegistry.initializeDefaultThemes();\n        this.updateBodyUiTheme();\n        this.themeService.onDidColorThemeChange(() => this.updateBodyUiTheme());\n        this.themeService.onDidRetrieveTheme(theme => this.monacoThemeRegistry.setTheme(MonacoThemingService.toCssSelector(theme.id), theme.data));\n        this.restore();\n    }\n\n    /** register a theme whose configuration has already been loaded */\n    registerParsedTheme(theme: MonacoThemeJson): Disposable {\n        const uiTheme = theme.uiTheme || 'vs-dark';\n        const { label, description, json, includes } = theme;\n        const id = theme.id || label;\n        const cssSelector = MonacoThemingService.toCssSelector(id);\n        const data = this.monacoThemeRegistry.register(json, includes, cssSelector, uiTheme);\n        return this.doRegisterParsedTheme({ id, label, description, uiTheme, data });\n    }\n\n    protected toUpdateUiTheme = new DisposableCollection();\n    protected updateBodyUiTheme(): void {\n        this.toUpdateUiTheme.dispose();\n        const type = this.themeService.getCurrentTheme().type;\n        const uiTheme: monaco.editor.BuiltinTheme = type === 'hc' ? 'hc-black' : type === 'light' ? 'vs' : 'vs-dark';\n        document.body.classList.add(uiTheme);\n        this.toUpdateUiTheme.push(Disposable.create(() => document.body.classList.remove(uiTheme)));\n    }\n\n    protected doRegisterParsedTheme(state: MonacoThemeState): Disposable {\n        return new DisposableCollection(\n            this.themeService.register(stateToTheme(state)),\n            putTheme(state)\n        );\n    }\n\n    protected async restore(): Promise<void> {\n        try {\n            const themes = await getThemes();\n            for (const state of themes) {\n                this.monacoThemeRegistry.setTheme(state.data.name!, state.data);\n                this.doRegisterParsedTheme(state);\n            }\n        } catch (e) {\n            console.error('Failed to restore monaco themes', e);\n        }\n    }\n\n    /* remove all characters that are not allowed in css */\n    protected static toCssSelector(str: string): string {\n        str = str.replace(/[^\\-a-zA-Z0-9]/g, '-');\n        if (str.charAt(0).match(/[0-9\\-]/)) {\n            str = '-' + str;\n        }\n        return str;\n    }\n\n    /** removes all invalid theming values */\n    private clean(obj: any): void {\n        for (const key in obj) {\n            if (typeof obj[key] !== 'string') {\n                delete obj[key];\n            }\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { FrontendApplicationContribution, isBasicWasmSupported } from '@theia/core/lib/browser';\nimport { bindContributionProvider } from '@theia/core';\nimport { TextmateRegistry } from './textmate-registry';\nimport { LanguageGrammarDefinitionContribution } from './textmate-contribution';\nimport { MonacoTextmateService } from './monaco-textmate-service';\nimport { MonacoThemeRegistry } from './monaco-theme-registry';\nimport { loadWASM, createOnigScanner, OnigScanner, createOnigString, OnigString } from 'vscode-oniguruma';\nimport { IOnigLib, IRawGrammar, parseRawGrammar, Registry } from 'vscode-textmate';\nimport { OnigasmProvider, TextmateRegistryFactory, ThemeMix } from './monaco-theme-types';\n\nexport class OnigasmLib implements IOnigLib {\n    createOnigScanner(sources: string[]): OnigScanner {\n        return createOnigScanner(sources);\n    }\n    createOnigString(sources: string): OnigString {\n        return createOnigString(sources);\n    }\n}\n\nexport default (bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind) => {\n    const onigLib = createOnigasmLib();\n    bind(OnigasmProvider).toConstantValue(() => onigLib);\n    bind(MonacoTextmateService).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoTextmateService);\n    bindContributionProvider(bind, LanguageGrammarDefinitionContribution);\n    bind(TextmateRegistry).toSelf().inSingletonScope();\n    bind(MonacoThemeRegistry).toSelf().inSingletonScope();\n    bind(TextmateRegistryFactory).toFactory(({ container }) => (theme?: ThemeMix) => {\n        const onigProvider = container.get<OnigasmProvider>(OnigasmProvider);\n        const textmateRegistry = container.get(TextmateRegistry);\n        return new Registry({\n            onigLib: onigProvider(),\n            theme,\n            loadGrammar: async (scopeName: string) => {\n                const provider = textmateRegistry.getProvider(scopeName);\n                if (provider) {\n                    const definition = await provider.getGrammarDefinition();\n                    let rawGrammar: IRawGrammar;\n                    if (typeof definition.content === 'string') {\n                        rawGrammar = parseRawGrammar(definition.content, definition.format === 'json' ? 'grammar.json' : 'grammar.plist');\n                    } else {\n                        rawGrammar = definition.content as IRawGrammar;\n                    }\n                    return rawGrammar;\n                }\n                return undefined;\n            },\n            getInjections: (scopeName: string) => {\n                const provider = textmateRegistry.getProvider(scopeName);\n                if (provider && provider.getInjections) {\n                    return provider.getInjections(scopeName);\n                }\n                return [];\n            }\n        });\n    });\n};\n\nexport async function createOnigasmLib(): Promise<IOnigLib> {\n    if (!isBasicWasmSupported) {\n        throw new Error('wasm not supported');\n    }\n    const wasm = await fetchOnigasm();\n    await loadWASM(wasm);\n    return new OnigasmLib();\n}\n\nexport async function fetchOnigasm(): Promise<ArrayBuffer> {\n    // Using Webpack's wasm loader should give us a URL to fetch the resource from:\n    const onigasmPath: string = require('vscode-oniguruma/release/onig.wasm');\n    const response = await fetch(onigasmPath, { method: 'GET' });\n    return response.arrayBuffer();\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Redhat, Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { Registry } from 'vscode-textmate';\nimport { ILogger, ContributionProvider, DisposableCollection, Disposable } from '@theia/core';\nimport { FrontendApplicationContribution, isBasicWasmSupported } from '@theia/core/lib/browser';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { LanguageGrammarDefinitionContribution, getEncodedLanguageId } from './textmate-contribution';\nimport { createTextmateTokenizer, TokenizerOption } from './textmate-tokenizer';\nimport { TextmateRegistry } from './textmate-registry';\nimport { MonacoThemeRegistry } from './monaco-theme-registry';\nimport { EditorPreferences } from '@theia/editor/lib/browser/editor-preferences';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { TokenizationRegistry } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\nimport { IStandaloneThemeService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/common/standaloneTheme';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { ILanguageService } from '@theia/monaco-editor-core/esm/vs/editor/common/languages/language';\nimport { TokenizationSupportAdapter } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneLanguages';\nimport { LanguageService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageService';\nimport { OnigasmProvider, TextmateRegistryFactory } from './monaco-theme-types';\n\n@injectable()\nexport class MonacoTextmateService implements FrontendApplicationContribution {\n\n    protected readonly tokenizerOption: TokenizerOption = {\n        lineLimit: 400\n    };\n\n    protected readonly _activatedLanguages = new Set<string>();\n\n    protected grammarRegistry: Registry;\n\n    @inject(ContributionProvider) @named(LanguageGrammarDefinitionContribution)\n    protected readonly grammarProviders: ContributionProvider<LanguageGrammarDefinitionContribution>;\n\n    @inject(TextmateRegistry)\n    protected readonly textmateRegistry: TextmateRegistry;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(OnigasmProvider)\n    protected readonly onigasmProvider: OnigasmProvider;\n\n    @inject(ThemeService)\n    protected readonly themeService: ThemeService;\n\n    @inject(MonacoThemeRegistry)\n    protected readonly monacoThemeRegistry: MonacoThemeRegistry;\n\n    @inject(EditorPreferences)\n    protected readonly preferences: EditorPreferences;\n\n    @inject(TextmateRegistryFactory)\n    protected readonly registryFactory: TextmateRegistryFactory;\n\n    initialize(): void {\n        if (!isBasicWasmSupported) {\n            console.log('Textmate support deactivated because WebAssembly is not detected.');\n            return;\n        }\n\n        for (const grammarProvider of this.grammarProviders.getContributions()) {\n            try {\n                grammarProvider.registerTextmateLanguage(this.textmateRegistry);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        this.grammarRegistry = this.registryFactory(this.monacoThemeRegistry.getThemeData(this.currentEditorTheme));\n\n        this.tokenizerOption.lineLimit = this.preferences['editor.maxTokenizationLineLength'];\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'editor.maxTokenizationLineLength') {\n                this.tokenizerOption.lineLimit = e.newValue;\n            }\n        });\n\n        this.updateTheme();\n        this.themeService.onDidColorThemeChange(() => this.updateTheme());\n\n        for (const id of this.textmateRegistry.languages) {\n            this.activateLanguage(id);\n        }\n    }\n\n    protected readonly toDisposeOnUpdateTheme = new DisposableCollection();\n\n    protected updateTheme(): void {\n        this.toDisposeOnUpdateTheme.dispose();\n\n        const currentEditorTheme = this.currentEditorTheme;\n        document.body.classList.add(currentEditorTheme);\n        this.toDisposeOnUpdateTheme.push(Disposable.create(() => document.body.classList.remove(currentEditorTheme)));\n\n        // first update registry to run tokenization with the proper theme\n        const theme = this.monacoThemeRegistry.getThemeData(currentEditorTheme);\n        if (theme) {\n            this.grammarRegistry.setTheme(theme);\n        }\n\n        // then trigger tokenization by setting monaco theme\n        monaco.editor.setTheme(currentEditorTheme);\n    }\n\n    protected get currentEditorTheme(): string {\n        return this.themeService.getCurrentTheme().editorTheme || MonacoThemeRegistry.DARK_DEFAULT_THEME;\n    }\n\n    activateLanguage(language: string): Disposable {\n        const toDispose = new DisposableCollection(\n            Disposable.create(() => { /* mark as not disposed */ })\n        );\n        toDispose.push(this.waitForLanguage(language, () =>\n            this.doActivateLanguage(language, toDispose)\n        ));\n        return toDispose;\n    }\n\n    protected async doActivateLanguage(languageId: string, toDispose: DisposableCollection): Promise<void> {\n        if (this._activatedLanguages.has(languageId)) {\n            return;\n        }\n        this._activatedLanguages.add(languageId);\n        toDispose.push(Disposable.create(() => this._activatedLanguages.delete(languageId)));\n\n        const scopeName = this.textmateRegistry.getScope(languageId);\n        if (!scopeName) {\n            return;\n        }\n        const provider = this.textmateRegistry.getProvider(scopeName);\n        if (!provider) {\n            return;\n        }\n\n        const configuration = this.textmateRegistry.getGrammarConfiguration(languageId);\n        const initialLanguage = getEncodedLanguageId(languageId);\n\n        await this.onigasmProvider();\n        if (toDispose.disposed) {\n            return;\n        }\n        try {\n            const grammar = await this.grammarRegistry.loadGrammarWithConfiguration(scopeName, initialLanguage, configuration);\n            if (toDispose.disposed) {\n                return;\n            }\n            if (!grammar) {\n                throw new Error(`no grammar for ${scopeName}, ${initialLanguage}, ${JSON.stringify(configuration)}`);\n            }\n            const options = configuration.tokenizerOption ? configuration.tokenizerOption : this.tokenizerOption;\n            const tokenizer = createTextmateTokenizer(grammar, options);\n            toDispose.push(monaco.languages.setTokensProvider(languageId, tokenizer));\n            const support = TokenizationRegistry.get(languageId);\n            const themeService = StandaloneServices.get(IStandaloneThemeService);\n            const languageService = StandaloneServices.get(ILanguageService);\n            const adapter = new TokenizationSupportAdapter(languageId, tokenizer, languageService, themeService);\n            support!.tokenize = adapter.tokenize.bind(adapter);\n        } catch (error) {\n            this.logger.warn('No grammar for this language id', languageId, error);\n        }\n    }\n\n    protected waitForLanguage(language: string, cb: () => {}): Disposable {\n        const languageService = StandaloneServices.get(ILanguageService) as LanguageService;\n        if (languageService['_encounteredLanguages'].has(language)) {\n            cb();\n            return Disposable.NULL;\n        }\n        return monaco.languages.onLanguage(language, cb);\n    }\n}\n","\n// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { IRawThemeSetting } from 'vscode-textmate/release/theme';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { IStandaloneThemeService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/common/standaloneTheme';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { StandaloneThemeService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneThemeService';\nimport { Color } from '@theia/monaco-editor-core/esm/vs/base/common/color';\nimport { MixStandaloneTheme, TextmateRegistryFactory, ThemeMix } from './monaco-theme-types';\n\n@injectable()\nexport class MonacoThemeRegistry {\n\n    @inject(TextmateRegistryFactory) protected readonly registryFactory: TextmateRegistryFactory;\n\n    initializeDefaultThemes(): void {\n        this.register(require('../../../data/monaco-themes/vscode/dark_theia.json'), {\n            './dark_vs.json': require('../../../data/monaco-themes/vscode/dark_vs.json'),\n            './dark_plus.json': require('../../../data/monaco-themes/vscode/dark_plus.json')\n        }, 'dark-theia', 'vs-dark');\n        this.register(require('../../../data/monaco-themes/vscode/light_theia.json'), {\n            './light_vs.json': require('../../../data/monaco-themes/vscode/light_vs.json'),\n            './light_plus.json': require('../../../data/monaco-themes/vscode/light_plus.json'),\n        }, 'light-theia', 'vs');\n        this.register(require('../../../data/monaco-themes/vscode/hc_theia.json'), {\n            './hc_black.json': require('../../../data/monaco-themes/vscode/hc_black.json')\n        }, 'hc-theia', 'hc-black');\n        this.register(require('../../../data/monaco-themes/vscode/hc_theia_light.json'), {\n            './hc_light.json': require('../../../data/monaco-themes/vscode/hc_light.json')\n        }, 'hc-theia-light', 'hc-light');\n    }\n\n    getThemeData(): ThemeMix;\n    getThemeData(name: string): ThemeMix | undefined;\n    getThemeData(name?: string): ThemeMix | undefined {\n        const theme = this.doGetTheme(name);\n        return theme && theme.themeData;\n    }\n\n    getTheme(): MixStandaloneTheme;\n    getTheme(name: string): MixStandaloneTheme | undefined;\n    getTheme(name?: string): MixStandaloneTheme | undefined {\n        return this.doGetTheme(name);\n    }\n\n    protected doGetTheme(name: string | undefined): MixStandaloneTheme | undefined {\n        const standaloneThemeService = StandaloneServices.get(IStandaloneThemeService) as StandaloneThemeService;\n        const theme = !name ? standaloneThemeService.getColorTheme() : standaloneThemeService['_knownThemes'].get(name);\n        return theme as MixStandaloneTheme | undefined;\n    }\n\n    setTheme(name: string, data: ThemeMix): void {\n        // monaco auto refreshes a theme with new data\n        monaco.editor.defineTheme(name, data);\n    }\n\n    /**\n     * Register VS Code compatible themes\n     */\n    register(json: any, includes?: { [includePath: string]: any }, givenName?: string, monacoBase?: monaco.editor.BuiltinTheme): ThemeMix {\n        const name = givenName || json.name!;\n        const result: ThemeMix = {\n            name,\n            base: monacoBase || 'vs',\n            inherit: true,\n            colors: {},\n            rules: [],\n            settings: []\n        };\n        if (typeof json.include !== 'undefined') {\n            if (!includes || !includes[json.include]) {\n                console.error(`Couldn't resolve includes theme ${json.include}.`);\n            } else {\n                const parentTheme = this.register(includes[json.include], includes);\n                Object.assign(result.colors, parentTheme.colors);\n                result.rules.push(...parentTheme.rules);\n                result.settings.push(...parentTheme.settings);\n            }\n        }\n        const tokenColors: Array<IRawThemeSetting> = json.tokenColors;\n        if (Array.isArray(tokenColors)) {\n            for (const tokenColor of tokenColors) {\n                if (tokenColor.scope && tokenColor.settings) {\n                    result.settings.push({\n                        scope: tokenColor.scope,\n                        settings: {\n                            foreground: this.normalizeColor(tokenColor.settings.foreground),\n                            background: this.normalizeColor(tokenColor.settings.background),\n                            fontStyle: tokenColor.settings.fontStyle\n                        }\n                    });\n                }\n            }\n        }\n        if (json.colors) {\n            Object.assign(result.colors, json.colors);\n            result.encodedTokensColors = Object.keys(result.colors).map(key => result.colors[key]);\n        }\n        if (monacoBase && givenName) {\n            for (const setting of result.settings) {\n                this.transform(setting, rule => result.rules.push(rule));\n            }\n\n            // the default rule (scope empty) is always the first rule. Ignore all other default rules.\n            const defaultTheme = (StandaloneServices.get(IStandaloneThemeService) as StandaloneThemeService)['_knownThemes'].get(result.base)!;\n            const foreground = result.colors['editor.foreground'] || defaultTheme.getColor('editor.foreground');\n            const background = result.colors['editor.background'] || defaultTheme.getColor('editor.background');\n            result.settings.unshift({\n                settings: {\n                    foreground: this.normalizeColor(foreground),\n                    background: this.normalizeColor(background)\n                }\n            });\n\n            const reg = this.registryFactory(result);\n            result.encodedTokensColors = reg.getColorMap();\n            // index 0 has to be set to null as it is 'undefined' by default, but monaco code expects it to be null\n            // eslint-disable-next-line no-null/no-null\n            result.encodedTokensColors[0] = null!;\n            this.setTheme(givenName, result);\n        }\n        return result;\n    }\n\n    protected transform(tokenColor: any, acceptor: (rule: monaco.editor.ITokenThemeRule) => void): void {\n        if (typeof tokenColor.scope === 'undefined') {\n            tokenColor.scope = [''];\n        } else if (typeof tokenColor.scope === 'string') {\n            tokenColor.scope = tokenColor.scope.split(',').map((scope: string) => scope.trim());\n        }\n\n        for (const scope of tokenColor.scope) {\n            acceptor({\n                ...tokenColor.settings, token: scope\n            });\n        }\n    }\n\n    protected normalizeColor(color: string | Color | undefined): string | undefined {\n        if (!color) {\n            return undefined;\n        }\n        const normalized = String(color).replace(/^\\#/, '').slice(0, 6);\n        if (normalized.length < 6 || !(normalized).match(/^[0-9A-Fa-f]{6}$/)) {\n            // ignoring not normalized colors to avoid breaking token color indexes between monaco and vscode-textmate\n            console.error(`Color '${normalized}' is NOT normalized, it must have 6 positions.`);\n            return undefined;\n        }\n        return '#' + normalized;\n    }\n}\n\nexport namespace MonacoThemeRegistry {\n    export const DARK_DEFAULT_THEME = 'dark-theia';\n    export const LIGHT_DEFAULT_THEME = 'light-theia';\n    export const HC_DEFAULT_THEME = 'hc-theia';\n    export const HC_LIGHT_THEME = 'hc-theia-light';\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as monaco from '@theia/monaco-editor-core';\nimport { IStandaloneTheme } from '@theia/monaco-editor-core/esm/vs/editor/standalone/common/standaloneTheme';\nimport { IOnigLib, Registry } from 'vscode-textmate';\nimport { IRawTheme } from 'vscode-textmate/release/theme';\n\nexport interface ThemeMix extends IRawTheme, monaco.editor.IStandaloneThemeData { }\nexport interface MixStandaloneTheme extends IStandaloneTheme {\n    themeData: ThemeMix\n}\n\nexport const OnigasmProvider = Symbol('OnigasmProvider');\nexport type OnigasmProvider = () => Promise<IOnigLib>;\nexport const TextmateRegistryFactory = Symbol('TextmateRegistryFactory');\nexport type TextmateRegistryFactory = (currentTheme?: ThemeMix) => Registry;\n\nexport type MonacoThemeColor = monaco.editor.IColors;\nexport interface MonacoTokenRule extends monaco.editor.ITokenThemeRule { };\nexport type MonacoBuiltinTheme = monaco.editor.BuiltinTheme;\nexport interface MonacoTheme extends monaco.editor.IStandaloneThemeData {\n    name: string;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { TextmateRegistry } from './textmate-registry';\nimport * as monaco from '@theia/monaco-editor-core';\n\n/**\n * Callback for extensions to contribute language grammar definitions\n */\nexport const LanguageGrammarDefinitionContribution = Symbol('LanguageGrammarDefinitionContribution');\nexport interface LanguageGrammarDefinitionContribution {\n    registerTextmateLanguage(registry: TextmateRegistry): void;\n}\nexport function getEncodedLanguageId(languageId: string): number {\n    return monaco.languages.getEncodedLanguageId(languageId);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { IGrammarConfiguration } from 'vscode-textmate';\nimport { TokenizerOption } from './textmate-tokenizer';\nimport { Disposable } from '@theia/core/lib/common/disposable';\n\nexport interface TextmateGrammarConfiguration extends IGrammarConfiguration {\n\n    /**\n     * Optional options to further refine the tokenization of the grammar.\n     */\n    readonly tokenizerOption?: TokenizerOption;\n\n}\n\nexport interface GrammarDefinitionProvider {\n    getGrammarDefinition(): Promise<GrammarDefinition>;\n    getInjections?(scopeName: string): string[];\n}\n\nexport interface GrammarDefinition {\n    format: 'json' | 'plist';\n    content: object | string;\n    location?: string;\n}\n\n@injectable()\nexport class TextmateRegistry {\n\n    protected readonly scopeToProvider = new Map<string, GrammarDefinitionProvider[]>();\n    protected readonly languageToConfig = new Map<string, TextmateGrammarConfiguration[]>();\n    protected readonly languageIdToScope = new Map<string, string[]>();\n\n    get languages(): IterableIterator<string> {\n        return this.languageIdToScope.keys();\n    }\n\n    registerTextmateGrammarScope(scope: string, provider: GrammarDefinitionProvider): Disposable {\n        const providers = this.scopeToProvider.get(scope) || [];\n        const existingProvider = providers[0];\n        if (existingProvider) {\n            Promise.all([existingProvider.getGrammarDefinition(), provider.getGrammarDefinition()]).then(([a, b]) => {\n                if (a.location !== b.location || !a.location && !b.location) {\n                    console.warn(`a registered grammar provider for '${scope}' scope is overridden`);\n                }\n            });\n        }\n        providers.unshift(provider);\n        this.scopeToProvider.set(scope, providers);\n        return Disposable.create(() => {\n            const index = providers.indexOf(provider);\n            if (index !== -1) {\n                providers.splice(index, 1);\n            }\n        });\n    }\n\n    getProvider(scope: string): GrammarDefinitionProvider | undefined {\n        const providers = this.scopeToProvider.get(scope);\n        return providers && providers[0];\n    }\n\n    mapLanguageIdToTextmateGrammar(languageId: string, scope: string): Disposable {\n        const scopes = this.languageIdToScope.get(languageId) || [];\n        const existingScope = scopes[0];\n        if (typeof existingScope === 'string') {\n            console.warn(`'${languageId}' language is remapped from '${existingScope}' to '${scope}' scope`);\n        }\n        scopes.unshift(scope);\n        this.languageIdToScope.set(languageId, scopes);\n        return Disposable.create(() => {\n            const index = scopes.indexOf(scope);\n            if (index !== -1) {\n                scopes.splice(index, 1);\n            }\n        });\n    }\n\n    getScope(languageId: string): string | undefined {\n        const scopes = this.languageIdToScope.get(languageId);\n        return scopes && scopes[0];\n    }\n\n    getLanguageId(scope: string): string | undefined {\n        for (const languageId of this.languageIdToScope.keys()) {\n            if (this.getScope(languageId) === scope) {\n                return languageId;\n            }\n        }\n        return undefined;\n    }\n\n    registerGrammarConfiguration(languageId: string, config: TextmateGrammarConfiguration): Disposable {\n        const configs = this.languageToConfig.get(languageId) || [];\n        const existingConfig = configs[0];\n        if (existingConfig) {\n            console.warn(`a registered grammar configuration for '${languageId}' language is overridden`);\n        }\n        configs.unshift(config);\n        this.languageToConfig.set(languageId, configs);\n        return Disposable.create(() => {\n            const index = configs.indexOf(config);\n            if (index !== -1) {\n                configs.splice(index, 1);\n            }\n        });\n    }\n\n    getGrammarConfiguration(languageId: string): TextmateGrammarConfiguration {\n        const configs = this.languageToConfig.get(languageId);\n        return configs && configs[0] || {};\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { INITIAL, IGrammar, StackElement } from 'vscode-textmate';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport class TokenizerState implements monaco.languages.IState {\n\n    constructor(\n        public readonly stackElement: StackElement\n    ) { }\n\n    clone(): monaco.languages.IState {\n        return new TokenizerState(this.stackElement);\n    }\n\n    equals(other: monaco.languages.IState): boolean {\n        return other instanceof TokenizerState && (other === this || other.stackElement === this.stackElement);\n    }\n\n}\n\n/**\n * Options for the TextMate tokenizer.\n */\nexport interface TokenizerOption {\n\n    /**\n     * Maximum line length that will be handled by the TextMate tokenizer. If the length of the actual line exceeds this\n     * limit, the tokenizer terminates and the tokenization of any subsequent lines might be broken.\n     *\n     * If the `lineLimit` is not defined, it means, there are no line length limits. Otherwise, it must be a positive\n     * integer or an error will be thrown.\n     */\n    lineLimit?: number;\n\n}\n\nexport function createTextmateTokenizer(grammar: IGrammar, options: TokenizerOption): monaco.languages.EncodedTokensProvider & monaco.languages.TokensProvider {\n    if (options.lineLimit !== undefined && (options.lineLimit <= 0 || !Number.isInteger(options.lineLimit))) {\n        throw new Error(`The 'lineLimit' must be a positive integer. It was ${options.lineLimit}.`);\n    }\n    return {\n        getInitialState: () => new TokenizerState(INITIAL),\n        tokenizeEncoded(line: string, state: TokenizerState): monaco.languages.IEncodedLineTokens {\n            if (options.lineLimit !== undefined && line.length > options.lineLimit) {\n                // Skip tokenizing the line if it exceeds the line limit.\n                return { endState: state.stackElement, tokens: new Uint32Array() };\n            }\n            const result = grammar.tokenizeLine2(line, state.stackElement, 500);\n            return {\n                endState: new TokenizerState(result.ruleStack),\n                tokens: result.tokens\n            };\n        },\n        tokenize(line: string, state: TokenizerState): monaco.languages.ILineTokens {\n            if (options.lineLimit !== undefined && line.length > options.lineLimit) {\n                // Skip tokenizing the line if it exceeds the line limit.\n                return { endState: state.stackElement, tokens: [] };\n            }\n            const result = grammar.tokenizeLine(line, state.stackElement, 500);\n            return {\n                endState: new TokenizerState(result.ruleStack),\n                tokens: result.tokens.map(t => ({\n                    startIndex: t.startIndex,\n                    scopes: t.scopes.reverse().join(' ')\n                }))\n            };\n        }\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { environment } from '@theia/core/shared/@theia/application-package/lib/environment';\nimport { KeybindingContribution, KeybindingRegistry, OpenerService, LabelProvider } from '@theia/core/lib/browser';\nimport { QuickAccessContribution, QuickAccessProvider, QuickInputService, QuickAccessRegistry, QuickPicks, QuickPickItem, findMatches } from '@theia/core/lib/browser/quick-input';\nimport {\n    CommandRegistry, CommandHandler, Command, SelectionService, CancellationToken,\n    CommandContribution, MenuContribution, MenuModelRegistry, nls\n} from '@theia/core/lib/common';\nimport { Range, Position, SymbolInformation, WorkspaceSymbolParams } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { MonacoLanguages, WorkspaceSymbolProvider } from './monaco-languages';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorMainMenu } from '@theia/editor/lib/browser';\n\n@injectable()\nexport class WorkspaceSymbolCommand implements QuickAccessProvider, CommandContribution, KeybindingContribution, MenuContribution, CommandHandler, QuickAccessContribution {\n    public static readonly PREFIX = '#';\n\n    private command = Command.toDefaultLocalizedCommand({\n        id: 'languages.workspace.symbol',\n        label: 'Go to Symbol in Workspace...'\n    });\n\n    @inject(MonacoLanguages) protected readonly languages: MonacoLanguages;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(QuickInputService) protected quickInputService: QuickInputService;\n    @inject(QuickAccessRegistry) protected quickAccessRegistry: QuickAccessRegistry;\n    @inject(SelectionService) protected selectionService: SelectionService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    isEnabled(): boolean {\n        return this.languages.workspaceSymbolProviders !== undefined;\n    }\n\n    execute(): void {\n        this.quickInputService.open(WorkspaceSymbolCommand.PREFIX);\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(this.command, this);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(EditorMainMenu.WORKSPACE_GROUP, {\n            commandId: this.command.id,\n            order: '2'\n        });\n    }\n\n    private isElectron(): boolean {\n        return environment.electron.is();\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: this.command.id,\n            keybinding: this.isElectron() ? 'ctrlcmd+t' : 'ctrlcmd+o',\n        });\n    }\n\n    registerQuickAccessProvider(): void {\n        this.quickAccessRegistry.registerQuickAccessProvider({\n            getInstance: () => this,\n            prefix: WorkspaceSymbolCommand.PREFIX,\n            placeholder: '',\n            helpEntries: [{ description: nls.localizeByDefault('Go to Symbol in Workspace'), needsEditor: false }]\n        });\n    }\n\n    async getPicks(filter: string, token: CancellationToken): Promise<QuickPicks> {\n        const items: QuickPicks = [];\n        if (this.languages.workspaceSymbolProviders) {\n            const param: WorkspaceSymbolParams = {\n                query: filter\n            };\n\n            const workspaceProviderPromises = [];\n            for (const provider of this.languages.workspaceSymbolProviders) {\n                workspaceProviderPromises.push((async () => {\n                    const symbols = await provider.provideWorkspaceSymbols(param, token);\n                    if (symbols && !token.isCancellationRequested) {\n                        for (const symbol of symbols) {\n                            items.push(this.createItem(symbol, provider, filter, token));\n                        }\n                    }\n                    return symbols;\n                })());\n            }\n            await Promise.all(workspaceProviderPromises.map(p => p.then(sym => sym, _ => undefined)))\n                .then(symbols => {\n                    const filteredSymbols = symbols.filter(el => el && el.length !== 0);\n                    if (filteredSymbols.length === 0) {\n                        items.push({\n                            label: filter.length === 0\n                                ? nls.localize('theia/monaco/typeToSearchForSymbols', 'Type to search for symbols')\n                                : nls.localize('theia/monaco/noSymbolsMatching', 'No symbols matching'),\n                        });\n                    }\n                }).catch();\n        }\n        return items;\n    }\n\n    protected createItem(sym: SymbolInformation, provider: WorkspaceSymbolProvider, filter: string, token: CancellationToken): QuickPickItem {\n        const uri = new URI(sym.location.uri);\n        const iconClasses = this.toCssClassName(sym.kind);\n        let parent = sym.containerName;\n        if (parent) {\n            parent += ' - ';\n        }\n        const description = (parent || '') + this.labelProvider.getName(uri);\n        return ({\n            label: sym.name,\n            description,\n            ariaLabel: uri.toString(),\n            iconClasses,\n            highlights: {\n                label: findMatches(sym.name, filter),\n                description: findMatches(description, filter)\n            },\n            execute: () => {\n                if (provider.resolveWorkspaceSymbol) {\n                    provider.resolveWorkspaceSymbol(sym, token).then(resolvedSymbol => {\n                        if (resolvedSymbol) {\n                            this.openURL(uri, resolvedSymbol.location.range.start, resolvedSymbol.location.range.end);\n                        } else {\n                            // the symbol didn't resolve -> use given symbol\n                            this.openURL(uri, sym.location.range.start, sym.location.range.end);\n                        }\n                    });\n                } else {\n                    // resolveWorkspaceSymbol wasn't specified\n                    this.openURL(uri, sym.location.range.start, sym.location.range.end);\n                }\n            }\n        });\n    }\n\n    protected toCssClassName(symbolKind: SymbolKind, inline?: boolean): string[] | undefined {\n        const kind = SymbolKind[symbolKind];\n        if (!kind) {\n            return undefined;\n        }\n        return [`codicon ${inline ? 'inline' : 'block'} codicon-symbol-${kind.toLowerCase() || 'property'}`];\n    }\n\n    private openURL(uri: URI, start: Position, end: Position): void {\n        this.openerService.getOpener(uri).then(opener => opener.open(uri, {\n            selection: Range.create(start, end)\n        }));\n    }\n}\n\nenum SymbolKind {\n    File = 1,\n    Module = 2,\n    Namespace = 3,\n    Package = 4,\n    Class = 5,\n    Method = 6,\n    Property = 7,\n    Field = 8,\n    Constructor = 9,\n    Enum = 10,\n    Interface = 11,\n    Function = 12,\n    Variable = 13,\n    Constant = 14,\n    String = 15,\n    Number = 16,\n    Boolean = 17,\n    Array = 18,\n    Object = 19,\n    Key = 20,\n    Null = 21,\n    EnumMember = 22,\n    Struct = 23,\n    Event = 24,\n    Operator = 25,\n    TypeParameter = 26\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.monaco-editor {\n  padding-bottom: 5.6px;\n  font-family: var(--theia-code-font-family);\n  font-size: inherit !important;\n}\n\n#quick-input-container {\n  position: fixed;\n  right: 50%;\n  z-index: 1000000;\n}\n\n/*\n * set z-index to 0, so tabs are not above overlay widgets\n */\n.p-TabBar.theia-app-centers {\n  z-index: 0;\n  display: flex;\n}\n\n.monaco-editor .zone-widget {\n  position: absolute;\n  z-index: 10;\n  background-color: var(--theia-editorWidget-background);\n}\n\n.monaco-editor .zone-widget .zone-widget-container {\n  border-top-style: solid;\n  border-bottom-style: solid;\n  border-top-width: 0;\n  border-bottom-width: 0;\n  border-top-color: var(--theia-peekView-border);\n  border-bottom-color: var(--theia-peekView-border);\n  position: relative;\n}\n\n.monaco-editor .parameter-hints-widget > .wrapper {\n  overflow: hidden;\n}\n\n/* List highlight, see https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/browser/style.ts#L50 */\n.monaco-tree .monaco-tree-row .monaco-highlighted-label .highlight,\n.monaco-list .monaco-list-row .monaco-highlighted-label .highlight {\n  color: var(--theia-list-highlightForeground) !important;\n}\n\n/* Scrollbars, see https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/browser/style.ts#L65 */\n.monaco-scrollable-element > .shadow.top {\n  box-shadow: var(--theia-scrollbar-shadow) 0 6px 6px -6px inset !important;\n}\n\n.monaco-scrollable-element > .shadow.left {\n  box-shadow: var(--theia-scrollbar-shadow) 6px 0 6px -6px inset !important;\n}\n\n.monaco-scrollable-element > .shadow.top.left {\n  box-shadow: var(--theia-scrollbar-shadow) 6px 6px 6px -6px inset !important;\n}\n\n.monaco-scrollable-element > .scrollbar > .slider {\n  background: var(--theia-scrollbarSlider-background) !important;\n}\n\n.monaco-scrollable-element > .scrollbar > .slider:hover {\n  background: var(--theia-scrollbarSlider-hoverBackground) !important;\n}\n\n.monaco-scrollable-element > .scrollbar > .slider.active {\n  background: var(--theia-scrollbarSlider-activeBackground) !important;\n}\n\n.monaco-editor .codicon.codicon-debug-start {\n  color: var(--theia-debugIcon-startForeground) !important;\n}\n\n.monaco-editor .codelens-decoration a {\n  color: inherit !important;\n}\n\n.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight {\n  color: unset !important;\n}\n\n.monaco-editor .find-widget .monaco-inputbox.synthetic-focus {\n  outline: var(--theia-border-width) solid;\n  outline-offset: calc(-1 * var(--theia-border-width));\n  outline-color: var(--theia-focusBorder);\n}\n\n.monaco-editor .rename-box input {\n  color: var(--theia-editor-foreground);\n}\n\n.monaco-editor .rename-box .rename-label {\n  opacity: 0.8;\n  padding: 3px;\n  font-family: sans-serif;\n}\n\n/* Monaco Quick Input */\n.quick-input-widget {\n  background-color: var(--theia-quickInput-background) !important;\n  color: var(--theia-foreground) !important;\n}\n\n.quick-input-list .monaco-list-row.focused {\n  background-color: var(--theia-quickInputList-focusBackground) !important;\n}\n\n.quick-input-list .monaco-keybinding > .monaco-keybinding-key {\n  color: inherit !important;\n}\n\n.quick-input-list .monaco-list-row.focused,\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label,\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .codicon,\n.quick-input-list .monaco-list-row.focused .quick-input-list-entry .quick-input-list-separator,\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .monaco-keybinding .monaco-keybinding-key,\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .monaco-keybinding .monaco-keybinding-key-separator {\n  color: var(--theia-quickInputList-focusForeground) !important;\n}\n\n.quick-input-list .monaco-list-row .codicon {\n  color: var(--theia-foreground) !important;\n}\n\n.quick-input-list .monaco-list-row.focused .codicon {\n  color: var(--theia-list-foreground) !important;\n}\n\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .highlight {\n  color: var(--theia-list-focusHighlightForeground) !important;\n}\n\n.quick-input-titlebar .action-item .action-label {\n    color: var(--theia-foreground) !important;\n}\n\n.monaco-list-rows\n  .monaco-list-row:not(:first-child)\n  .quick-input-list-entry.quick-input-list-separator-border {\n  border-top: 1px solid var(--theia-pickerGroup-border) !important;\n}\n.quick-input-list .quick-input-list-separator {\n  color: var(--theia-pickerGroup-foreground) !important;\n}\n\n.monaco-icon-label > .monaco-icon-label-container {\n  flex: 1;\n}\n\n.quick-input-list-rows\n  .quick-input-list-row\n  .monaco-icon-label\n  .monaco-icon-description-container\n  .label-description {\n    font-family: var(--theia-ui-font-family);\n    font-size: calc(var(--theia-ui-font-size1) * 0.9) !important;\n    color: var(--theia-foreground) !important;\n    white-space: inherit;\n}\n\n.quick-input-list-rows\n  .quick-input-list-row\n  .monaco-icon-label\n  .monaco-icon-label-container\n  .monaco-icon-name-container\n  .label-name {\n    font-family: var(--theia-ui-font-family);\n    font-size: var(--theia-ui-font-size1) !important;\n    color: var(--theia-foreground) !important;\n}\n\n.quick-input-list .monaco-icon-label.codicon,\n.quick-input-list .monaco-icon-label.file-icon {\n  display: flex;\n  text-align: left;\n}\n\n.codicon-file.default-file-icon.file-icon {\n  padding-left: 2px;\n  height: 22px;\n}\n\n.codicon-file.default-file-icon.file-icon::before {\n  margin-right: 4px;\n  font-size: var(--theia-ui-font-size1);\n}\n\n.quick-input-list .monaco-icon-label.codicon::before {\n  position: relative;\n  top: 3px;\n}\n\n.quick-input-list .monaco-icon-label.theia-file-icons-js {\n  line-height: inherit;\n}\n\n.quick-input-list .quick-input-list-label {\n  cursor: pointer !important;\n}\n\n.quick-input-progress.active.infinite {\n    background-color: var(--theia-progressBar-background);\n    width: 3%;\n    /* \\`progress-animation\\` is defined in \\`packages/core/src/browser/style/progress-bar.css\\` */\n    animation: progress-animation 1.3s 0s infinite cubic-bezier(0.645, 0.045, 0.355, 1);\n}\n\n.monaco-list:not(.drop-target) .monaco-list-row:hover:not(.selected):not(.focused) {\n  background: var(--theia-list-hoverBackground);\n}\n\n.monaco-editor .peekview-widget .head .peekview-title {\n  font-family: var(--theia-ui-font-family);\n}\n\n.monaco-editor .peekview-widget .referenceMatch {\n  font-family: var(--theia-ui-font-family);\n}\n\n.monaco-editor .find-widget .monaco-findInput .input,\n.monaco-editor .find-widget .matchesCount {\n  font-family: var(--theia-ui-font-family);\n}\n\n.monaco-editor .monaco-action-bar .action-label.codicon {\n  color: var(--theia-foreground);\n}\n\n.monaco-editor .monaco-action-bar .action-item.active {\n\ttransform: none;\n}\n\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .label-name,\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .label-description,\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .monaco-highlighted-label,\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .codicon {\n  color: var(--theia-list-activeSelectionForeground) !important;\n}\n\n.quick-input-titlebar {\n  background-color: var(--theia-quickInputTitle-background);\n}\n\n.quick-input-widget input {\n  background-color: var(--theia-input-background) !important;\n}\n\n.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused>.contents>.main .monaco-highlighted-label .highlight {\n    color: var(--vscode-editorSuggestWidget-focusHighlightForeground) !important;\n}\n\n.symbol-icon-center {\n  align-self: center;\n  margin-right: 4px;\n}\n\n.monaco-inputbox.error > .ibwrapper > .input,\n.monaco-inputbox.warning > .ibwrapper > .input,\n.monaco-inputbox.info > .ibwrapper > .input {\n    outline: 0 !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/monaco/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB;EACrB,0CAA0C;EAC1C,6BAA6B;AAC/B;;AAEA;EACE,eAAe;EACf,UAAU;EACV,gBAAgB;AAClB;;AAEA;;EAEE;AACF;EACE,UAAU;EACV,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,sDAAsD;AACxD;;AAEA;EACE,uBAAuB;EACvB,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,8CAA8C;EAC9C,iDAAiD;EACjD,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA,gJAAgJ;AAChJ;;EAEE,uDAAuD;AACzD;;AAEA,4IAA4I;AAC5I;EACE,yEAAyE;AAC3E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,8DAA8D;AAChE;;AAEA;EACE,mEAAmE;AACrE;;AAEA;EACE,oEAAoE;AACtE;;AAEA;EACE,wDAAwD;AAC1D;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,wCAAwC;EACxC,oDAAoD;EACpD,uCAAuC;AACzC;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,uBAAuB;AACzB;;AAEA,uBAAuB;AACvB;EACE,+DAA+D;EAC/D,yCAAyC;AAC3C;;AAEA;EACE,wEAAwE;AAC1E;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;;;;;EAME,6DAA6D;AAC/D;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE,4DAA4D;AAC9D;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;;;EAGE,gEAAgE;AAClE;AACA;EACE,qDAAqD;AACvD;;AAEA;EACE,OAAO;AACT;;AAEA;;;;;IAKI,wCAAwC;IACxC,4DAA4D;IAC5D,yCAAyC;IACzC,oBAAoB;AACxB;;AAEA;;;;;;IAMI,wCAAwC;IACxC,gDAAgD;IAChD,yCAAyC;AAC7C;;AAEA;;EAEE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;IACI,qDAAqD;IACrD,SAAS;IACT,0FAA0F;IAC1F,mFAAmF;AACvF;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;;EAEE,wCAAwC;AAC1C;;AAEA;EACE,8BAA8B;AAChC;;AAEA;CACC,eAAe;AAChB;;AAEA;;;;EAIE,6DAA6D;AAC/D;;AAEA;EACE,yDAAyD;AAC3D;;AAEA;EACE,0DAA0D;AAC5D;;AAEA;IACI,4EAA4E;AAChF;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;;;IAGI,qBAAqB;AACzB\",\"sourcesContent\":[\".monaco-editor {\\n  padding-bottom: 5.6px;\\n  font-family: var(--theia-code-font-family);\\n  font-size: inherit !important;\\n}\\n\\n#quick-input-container {\\n  position: fixed;\\n  right: 50%;\\n  z-index: 1000000;\\n}\\n\\n/*\\n * set z-index to 0, so tabs are not above overlay widgets\\n */\\n.p-TabBar.theia-app-centers {\\n  z-index: 0;\\n  display: flex;\\n}\\n\\n.monaco-editor .zone-widget {\\n  position: absolute;\\n  z-index: 10;\\n  background-color: var(--theia-editorWidget-background);\\n}\\n\\n.monaco-editor .zone-widget .zone-widget-container {\\n  border-top-style: solid;\\n  border-bottom-style: solid;\\n  border-top-width: 0;\\n  border-bottom-width: 0;\\n  border-top-color: var(--theia-peekView-border);\\n  border-bottom-color: var(--theia-peekView-border);\\n  position: relative;\\n}\\n\\n.monaco-editor .parameter-hints-widget > .wrapper {\\n  overflow: hidden;\\n}\\n\\n/* List highlight, see https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/browser/style.ts#L50 */\\n.monaco-tree .monaco-tree-row .monaco-highlighted-label .highlight,\\n.monaco-list .monaco-list-row .monaco-highlighted-label .highlight {\\n  color: var(--theia-list-highlightForeground) !important;\\n}\\n\\n/* Scrollbars, see https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/browser/style.ts#L65 */\\n.monaco-scrollable-element > .shadow.top {\\n  box-shadow: var(--theia-scrollbar-shadow) 0 6px 6px -6px inset !important;\\n}\\n\\n.monaco-scrollable-element > .shadow.left {\\n  box-shadow: var(--theia-scrollbar-shadow) 6px 0 6px -6px inset !important;\\n}\\n\\n.monaco-scrollable-element > .shadow.top.left {\\n  box-shadow: var(--theia-scrollbar-shadow) 6px 6px 6px -6px inset !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar > .slider {\\n  background: var(--theia-scrollbarSlider-background) !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar > .slider:hover {\\n  background: var(--theia-scrollbarSlider-hoverBackground) !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar > .slider.active {\\n  background: var(--theia-scrollbarSlider-activeBackground) !important;\\n}\\n\\n.monaco-editor .codicon.codicon-debug-start {\\n  color: var(--theia-debugIcon-startForeground) !important;\\n}\\n\\n.monaco-editor .codelens-decoration a {\\n  color: inherit !important;\\n}\\n\\n.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight {\\n  color: unset !important;\\n}\\n\\n.monaco-editor .find-widget .monaco-inputbox.synthetic-focus {\\n  outline: var(--theia-border-width) solid;\\n  outline-offset: calc(-1 * var(--theia-border-width));\\n  outline-color: var(--theia-focusBorder);\\n}\\n\\n.monaco-editor .rename-box input {\\n  color: var(--theia-editor-foreground);\\n}\\n\\n.monaco-editor .rename-box .rename-label {\\n  opacity: 0.8;\\n  padding: 3px;\\n  font-family: sans-serif;\\n}\\n\\n/* Monaco Quick Input */\\n.quick-input-widget {\\n  background-color: var(--theia-quickInput-background) !important;\\n  color: var(--theia-foreground) !important;\\n}\\n\\n.quick-input-list .monaco-list-row.focused {\\n  background-color: var(--theia-quickInputList-focusBackground) !important;\\n}\\n\\n.quick-input-list .monaco-keybinding > .monaco-keybinding-key {\\n  color: inherit !important;\\n}\\n\\n.quick-input-list .monaco-list-row.focused,\\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label,\\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .codicon,\\n.quick-input-list .monaco-list-row.focused .quick-input-list-entry .quick-input-list-separator,\\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .monaco-keybinding .monaco-keybinding-key,\\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .monaco-keybinding .monaco-keybinding-key-separator {\\n  color: var(--theia-quickInputList-focusForeground) !important;\\n}\\n\\n.quick-input-list .monaco-list-row .codicon {\\n  color: var(--theia-foreground) !important;\\n}\\n\\n.quick-input-list .monaco-list-row.focused .codicon {\\n  color: var(--theia-list-foreground) !important;\\n}\\n\\n.quick-input-list .monaco-list-row.focused .monaco-highlighted-label .highlight {\\n  color: var(--theia-list-focusHighlightForeground) !important;\\n}\\n\\n.quick-input-titlebar .action-item .action-label {\\n    color: var(--theia-foreground) !important;\\n}\\n\\n.monaco-list-rows\\n  .monaco-list-row:not(:first-child)\\n  .quick-input-list-entry.quick-input-list-separator-border {\\n  border-top: 1px solid var(--theia-pickerGroup-border) !important;\\n}\\n.quick-input-list .quick-input-list-separator {\\n  color: var(--theia-pickerGroup-foreground) !important;\\n}\\n\\n.monaco-icon-label > .monaco-icon-label-container {\\n  flex: 1;\\n}\\n\\n.quick-input-list-rows\\n  .quick-input-list-row\\n  .monaco-icon-label\\n  .monaco-icon-description-container\\n  .label-description {\\n    font-family: var(--theia-ui-font-family);\\n    font-size: calc(var(--theia-ui-font-size1) * 0.9) !important;\\n    color: var(--theia-foreground) !important;\\n    white-space: inherit;\\n}\\n\\n.quick-input-list-rows\\n  .quick-input-list-row\\n  .monaco-icon-label\\n  .monaco-icon-label-container\\n  .monaco-icon-name-container\\n  .label-name {\\n    font-family: var(--theia-ui-font-family);\\n    font-size: var(--theia-ui-font-size1) !important;\\n    color: var(--theia-foreground) !important;\\n}\\n\\n.quick-input-list .monaco-icon-label.codicon,\\n.quick-input-list .monaco-icon-label.file-icon {\\n  display: flex;\\n  text-align: left;\\n}\\n\\n.codicon-file.default-file-icon.file-icon {\\n  padding-left: 2px;\\n  height: 22px;\\n}\\n\\n.codicon-file.default-file-icon.file-icon::before {\\n  margin-right: 4px;\\n  font-size: var(--theia-ui-font-size1);\\n}\\n\\n.quick-input-list .monaco-icon-label.codicon::before {\\n  position: relative;\\n  top: 3px;\\n}\\n\\n.quick-input-list .monaco-icon-label.theia-file-icons-js {\\n  line-height: inherit;\\n}\\n\\n.quick-input-list .quick-input-list-label {\\n  cursor: pointer !important;\\n}\\n\\n.quick-input-progress.active.infinite {\\n    background-color: var(--theia-progressBar-background);\\n    width: 3%;\\n    /* `progress-animation` is defined in `packages/core/src/browser/style/progress-bar.css` */\\n    animation: progress-animation 1.3s 0s infinite cubic-bezier(0.645, 0.045, 0.355, 1);\\n}\\n\\n.monaco-list:not(.drop-target) .monaco-list-row:hover:not(.selected):not(.focused) {\\n  background: var(--theia-list-hoverBackground);\\n}\\n\\n.monaco-editor .peekview-widget .head .peekview-title {\\n  font-family: var(--theia-ui-font-family);\\n}\\n\\n.monaco-editor .peekview-widget .referenceMatch {\\n  font-family: var(--theia-ui-font-family);\\n}\\n\\n.monaco-editor .find-widget .monaco-findInput .input,\\n.monaco-editor .find-widget .matchesCount {\\n  font-family: var(--theia-ui-font-family);\\n}\\n\\n.monaco-editor .monaco-action-bar .action-label.codicon {\\n  color: var(--theia-foreground);\\n}\\n\\n.monaco-editor .monaco-action-bar .action-item.active {\\n\\ttransform: none;\\n}\\n\\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .label-name,\\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .label-description,\\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .monaco-highlighted-label,\\n.monaco-editor .peekview-widget .monaco-list-row.focused.selected .codicon {\\n  color: var(--theia-list-activeSelectionForeground) !important;\\n}\\n\\n.quick-input-titlebar {\\n  background-color: var(--theia-quickInputTitle-background);\\n}\\n\\n.quick-input-widget input {\\n  background-color: var(--theia-input-background) !important;\\n}\\n\\n.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused>.contents>.main .monaco-highlighted-label .highlight {\\n    color: var(--vscode-editorSuggestWidget-focusHighlightForeground) !important;\\n}\\n\\n.symbol-icon-center {\\n  align-self: center;\\n  margin-right: 4px;\\n}\\n\\n.monaco-inputbox.error > .ibwrapper > .input,\\n.monaco-inputbox.warning > .ibwrapper > .input,\\n.monaco-inputbox.info > .ibwrapper > .input {\\n    outline: 0 !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}