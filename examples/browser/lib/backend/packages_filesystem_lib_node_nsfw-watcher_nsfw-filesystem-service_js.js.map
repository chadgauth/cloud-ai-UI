{"version":3,"file":"packages_filesystem_lib_node_nsfw-watcher_nsfw-filesystem-service_js.js","mappings":"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","sources":["webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/shared/nsfw/index.js?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/filesystem/src/node/file-change-collection.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/filesystem/src/node/nsfw-watcher/nsfw-filesystem-service.ts?"],"sourcesContent":["module.exports = require('nsfw');\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { FileChange, FileChangeType } from '../common/filesystem-watcher-protocol';\n\n/**\n * A file change collection guarantees that only one change is reported for each URI.\n *\n * Changes are normalized according following rules:\n * - ADDED + ADDED => ADDED\n * - ADDED + UPDATED => ADDED\n * - ADDED + DELETED => [ADDED, DELETED]\n * - UPDATED + ADDED => UPDATED\n * - UPDATED + UPDATED => UPDATED\n * - UPDATED + DELETED => DELETED\n * - DELETED + ADDED => UPDATED\n * - DELETED + UPDATED => UPDATED\n * - DELETED + DELETED => DELETED\n */\nexport class FileChangeCollection {\n    protected readonly changes = new Map<string, FileChange[]>();\n\n    push(change: FileChange): void {\n        const changes = this.changes.get(change.uri) || [];\n        this.normalize(changes, change);\n        this.changes.set(change.uri, changes);\n    }\n\n    protected normalize(changes: FileChange[], change: FileChange): void {\n        let currentType;\n        let nextType: FileChangeType | [FileChangeType, FileChangeType] = change.type;\n        do {\n            const current = changes.pop();\n            currentType = current && current.type;\n            nextType = this.reduce(currentType, nextType);\n        } while (!Array.isArray(nextType) && currentType !== undefined && currentType !== nextType);\n\n        const uri = change.uri;\n        if (Array.isArray(nextType)) {\n            changes.push(...nextType.map(type => ({ uri, type })));\n        } else {\n            changes.push({ uri, type: nextType });\n        }\n    }\n\n    protected reduce(current: FileChangeType | undefined, change: FileChangeType): FileChangeType | [FileChangeType, FileChangeType] {\n        if (current === undefined) {\n            return change;\n        }\n        if (current === FileChangeType.ADDED) {\n            if (change === FileChangeType.DELETED) {\n                return [FileChangeType.ADDED, FileChangeType.DELETED];\n            }\n            return FileChangeType.ADDED;\n        }\n        if (change === FileChangeType.DELETED) {\n            return FileChangeType.DELETED;\n        }\n        return FileChangeType.UPDATED;\n    }\n\n    values(): FileChange[] {\n        return Array.from(this.changes.values()).reduce((acc, val) => acc.concat(val), []);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport nsfw = require('@theia/core/shared/nsfw');\nimport path = require('path');\nimport { promises as fsp } from 'fs';\nimport { IMinimatch, Minimatch } from 'minimatch';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport {\n    FileChangeType, FileSystemWatcherService, FileSystemWatcherServiceClient, WatchOptions\n} from '../../common/filesystem-watcher-protocol';\nimport { FileChangeCollection } from '../file-change-collection';\nimport { Deferred, timeout } from '@theia/core/lib/common/promise-util';\n\nexport interface NsfwWatcherOptions {\n    ignored: IMinimatch[]\n}\n\nexport const NsfwFileSystemWatcherServerOptions = Symbol('NsfwFileSystemWatcherServerOptions');\nexport interface NsfwFileSystemWatcherServerOptions {\n    verbose: boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    info: (message: string, ...args: any[]) => void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error: (message: string, ...args: any[]) => void;\n    nsfwOptions: nsfw.Options;\n}\n\n/**\n * This is a flag value passed around upon disposal.\n */\nexport const WatcherDisposal = Symbol('WatcherDisposal');\n\n/**\n * Because URIs can be watched by different clients, we'll track\n * how many are listening for a given URI.\n *\n * This component wraps the whole start/stop process given some\n * reference count.\n *\n * Once there are no more references the handle\n * will wait for some time before destroying its resources.\n */\nexport class NsfwWatcher {\n\n    protected static debugIdSequence = 0;\n\n    protected disposed = false;\n\n    /**\n     * Used for debugging to keep track of the watchers.\n     */\n    protected debugId = NsfwWatcher.debugIdSequence++;\n\n    /**\n     * When this field is set, it means the nsfw instance was successfully started.\n     */\n    protected nsfw: nsfw.NSFW | undefined;\n\n    /**\n     * When the ref count hits zero, we schedule this watch handle to be disposed.\n     */\n    protected deferredDisposalTimer: NodeJS.Timer | undefined;\n\n    /**\n     * This deferred only rejects with `WatcherDisposal` and never resolves.\n     */\n    protected readonly deferredDisposalDeferred = new Deferred<never>();\n\n    /**\n     * We count each reference made to this watcher, per client.\n     *\n     * We do this to know where to send events via the network.\n     *\n     * An entry should be removed when its value hits zero.\n     */\n    protected readonly refsPerClient = new Map<number, { value: number }>();\n\n    /**\n     * Ensures that events are processed in the order they are emitted,\n     * despite being processed async.\n     */\n    protected nsfwEventProcessingQueue: Promise<void> = Promise.resolve();\n\n    /**\n     * Resolves once this handle disposed itself and its resources. Never throws.\n     */\n    readonly whenDisposed: Promise<void> = this.deferredDisposalDeferred.promise.catch(() => undefined);\n\n    /**\n     * Promise that resolves when the watcher is fully started, or got disposed.\n     *\n     * Will reject if an error occurred while starting.\n     *\n     * @returns `true` if successfully started, `false` if disposed early.\n     */\n    readonly whenStarted: Promise<boolean>;\n\n    constructor(\n        /** Initial reference to this handle. */\n        initialClientId: number,\n        /** Filesystem path to be watched. */\n        readonly fsPath: string,\n        /** Watcher-specific options */\n        readonly watcherOptions: NsfwWatcherOptions,\n        /** Logging and Nsfw options */\n        protected readonly nsfwFileSystemWatchServerOptions: NsfwFileSystemWatcherServerOptions,\n        /** The client to forward events to. */\n        protected readonly fileSystemWatcherClient: FileSystemWatcherServiceClient,\n        /** Amount of time in ms to wait once this handle is not referenced anymore. */\n        protected readonly deferredDisposalTimeout = 10_000,\n    ) {\n        this.refsPerClient.set(initialClientId, { value: 1 });\n        this.whenStarted = this.start().then(() => true, error => {\n            if (error === WatcherDisposal) {\n                return false;\n            }\n            this._dispose();\n            this.fireError();\n            throw error;\n        });\n        this.debug('NEW', `initialClientId=${initialClientId}`);\n    }\n\n    addRef(clientId: number): void {\n        let refs = this.refsPerClient.get(clientId);\n        if (typeof refs === 'undefined') {\n            this.refsPerClient.set(clientId, refs = { value: 1 });\n        } else {\n            refs.value += 1;\n        }\n        const totalRefs = this.getTotalReferences();\n        // If it was zero before, 1 means we were revived:\n        const revived = totalRefs === 1;\n        if (revived) {\n            this.onRefsRevive();\n        }\n        this.debug('REF++', `clientId=${clientId}, clientRefs=${refs.value}, totalRefs=${totalRefs}. revived=${revived}`);\n    }\n\n    removeRef(clientId: number): void {\n        const refs = this.refsPerClient.get(clientId);\n        if (typeof refs === 'undefined') {\n            this.info('WARN REF--', `removed one too many reference: clientId=${clientId}`);\n            return;\n        }\n        refs.value -= 1;\n        // We must remove the key from `this.clientReferences` because\n        // we list active clients by reading the keys of this map.\n        if (refs.value === 0) {\n            this.refsPerClient.delete(clientId);\n        }\n        const totalRefs = this.getTotalReferences();\n        const dead = totalRefs === 0;\n        if (dead) {\n            this.onRefsReachZero();\n        }\n        this.debug('REF--', `clientId=${clientId}, clientRefs=${refs.value}, totalRefs=${totalRefs}, dead=${dead}`);\n    }\n\n    /**\n     * All clients with at least one active reference.\n     */\n    getClientIds(): number[] {\n        return Array.from(this.refsPerClient.keys());\n    }\n\n    /**\n     * Add the references for each client together.\n     */\n    getTotalReferences(): number {\n        let total = 0;\n        for (const refs of this.refsPerClient.values()) {\n            total += refs.value;\n        }\n        return total;\n    }\n\n    /**\n     * Returns true if at least one client listens to this handle.\n     */\n    isInUse(): boolean {\n        return this.refsPerClient.size > 0;\n    }\n\n    /**\n     * @throws with {@link WatcherDisposal} if this instance is disposed.\n     */\n    protected assertNotDisposed(): void {\n        if (this.disposed) {\n            throw WatcherDisposal;\n        }\n    }\n\n    /**\n     * When starting a watcher, we'll first check and wait for the path to exists\n     * before running an NSFW watcher.\n     */\n    protected async start(): Promise<void> {\n        while (await fsp.stat(this.fsPath).then(() => false, () => true)) {\n            await timeout(500);\n            this.assertNotDisposed();\n        }\n        this.assertNotDisposed();\n        const watcher = await this.createNsfw();\n        this.assertNotDisposed();\n        await watcher.start();\n        this.debug('STARTED', `disposed=${this.disposed}`);\n        // The watcher could be disposed while it was starting, make sure to check for this:\n        if (this.disposed) {\n            await this.stopNsfw(watcher);\n            throw WatcherDisposal;\n        }\n        this.nsfw = watcher;\n    }\n\n    /**\n     * Given a started nsfw instance, gracefully shut it down.\n     */\n    protected async stopNsfw(watcher: nsfw.NSFW): Promise<void> {\n        await watcher.stop()\n            .then(() => 'success=true', error => error)\n            .then(status => this.debug('STOPPED', status));\n    }\n\n    protected async createNsfw(): Promise<nsfw.NSFW> {\n        const fsPath = await fsp.realpath(this.fsPath);\n        return nsfw(fsPath, events => this.handleNsfwEvents(events), {\n            ...this.nsfwFileSystemWatchServerOptions.nsfwOptions,\n            // The errorCallback is called whenever NSFW crashes *while* watching.\n            // See https://github.com/atom/github/issues/342\n            errorCallback: error => {\n                console.error(`NSFW service error on \"${fsPath}\":`, error);\n                this._dispose();\n                this.fireError();\n                // Make sure to call user's error handling code:\n                if (this.nsfwFileSystemWatchServerOptions.nsfwOptions.errorCallback) {\n                    this.nsfwFileSystemWatchServerOptions.nsfwOptions.errorCallback(error);\n                }\n            },\n        });\n    }\n\n    protected handleNsfwEvents(events: nsfw.FileChangeEvent[]): void {\n        // Only process events if someone is listening.\n        if (this.isInUse()) {\n            // This callback is async, but nsfw won't wait for it to finish before firing the next one.\n            // We will use a lock/queue to make sure everything is processed in the order it arrives.\n            this.nsfwEventProcessingQueue = this.nsfwEventProcessingQueue.then(async () => {\n                const fileChangeCollection = new FileChangeCollection();\n                await Promise.all(events.map(async event => {\n                    if (event.action === nsfw.actions.RENAMED) {\n                        const [oldPath, newPath] = await Promise.all([\n                            this.resolveEventPath(event.directory, event.oldFile),\n                            this.resolveEventPath(event.newDirectory, event.newFile),\n                        ]);\n                        this.pushFileChange(fileChangeCollection, FileChangeType.DELETED, oldPath);\n                        this.pushFileChange(fileChangeCollection, FileChangeType.ADDED, newPath);\n                    } else {\n                        const filePath = await this.resolveEventPath(event.directory, event.file!);\n                        if (event.action === nsfw.actions.CREATED) {\n                            this.pushFileChange(fileChangeCollection, FileChangeType.ADDED, filePath);\n                        } else if (event.action === nsfw.actions.DELETED) {\n                            this.pushFileChange(fileChangeCollection, FileChangeType.DELETED, filePath);\n                        } else if (event.action === nsfw.actions.MODIFIED) {\n                            this.pushFileChange(fileChangeCollection, FileChangeType.UPDATED, filePath);\n                        }\n                    }\n                }));\n                const changes = fileChangeCollection.values();\n                // If all changes are part of the ignored files, the collection will be empty.\n                if (changes.length > 0) {\n                    this.fileSystemWatcherClient.onDidFilesChanged({\n                        clients: this.getClientIds(),\n                        changes,\n                    });\n                }\n            }, console.error);\n        }\n    }\n\n    protected async resolveEventPath(directory: string, file: string): Promise<string> {\n        // nsfw already resolves symlinks, the paths should be clean already:\n        return path.resolve(directory, file);\n    }\n\n    protected pushFileChange(changes: FileChangeCollection, type: FileChangeType, filePath: string): void {\n        if (!this.isIgnored(filePath)) {\n            const uri = FileUri.create(filePath).toString();\n            changes.push({ type, uri });\n        }\n    }\n\n    protected fireError(): void {\n        this.fileSystemWatcherClient.onError({\n            clients: this.getClientIds(),\n            uri: this.fsPath,\n        });\n    }\n\n    /**\n     * When references hit zero, we'll schedule disposal for a bit later.\n     *\n     * This allows new references to reuse this watcher instead of creating a new one.\n     *\n     * e.g. A frontend disconnects for a few milliseconds before reconnecting again.\n     */\n    protected onRefsReachZero(): void {\n        this.deferredDisposalTimer = setTimeout(() => this._dispose(), this.deferredDisposalTimeout);\n    }\n\n    /**\n     * If we get new references after hitting zero, let's unschedule our disposal and keep watching.\n     */\n    protected onRefsRevive(): void {\n        if (this.deferredDisposalTimer) {\n            clearTimeout(this.deferredDisposalTimer);\n            this.deferredDisposalTimer = undefined;\n        }\n    }\n\n    protected isIgnored(filePath: string): boolean {\n        return this.watcherOptions.ignored.length > 0\n            && this.watcherOptions.ignored.some(m => m.match(filePath));\n    }\n\n    /**\n     * Internal disposal mechanism.\n     */\n    protected async _dispose(): Promise<void> {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.deferredDisposalDeferred.reject(WatcherDisposal);\n            if (this.nsfw) {\n                this.stopNsfw(this.nsfw);\n                this.nsfw = undefined;\n            }\n            this.debug('DISPOSED');\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected info(prefix: string, ...params: any[]): void {\n        this.nsfwFileSystemWatchServerOptions.info(`${prefix} NsfwWatcher(${this.debugId} at \"${this.fsPath}\"):`, ...params);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected debug(prefix: string, ...params: any[]): void {\n        if (this.nsfwFileSystemWatchServerOptions.verbose) {\n            this.info(prefix, ...params);\n        }\n    }\n}\n\n/**\n * Each time a client makes a watchRequest, we generate a unique watcherId for it.\n *\n * This watcherId will map to this handle type which keeps track of the clientId that made the request.\n */\nexport interface NsfwWatcherHandle {\n    clientId: number;\n    watcher: NsfwWatcher;\n}\n\nexport class NsfwFileSystemWatcherService implements FileSystemWatcherService {\n\n    protected client: FileSystemWatcherServiceClient | undefined;\n\n    protected watcherId = 0;\n    protected readonly watchers = new Map<string, NsfwWatcher>();\n    protected readonly watcherHandles = new Map<number, NsfwWatcherHandle>();\n\n    protected readonly options: NsfwFileSystemWatcherServerOptions;\n\n    /**\n     * `this.client` is undefined until someone sets it.\n     */\n    protected readonly maybeClient: FileSystemWatcherServiceClient = {\n        onDidFilesChanged: event => this.client?.onDidFilesChanged(event),\n        onError: event => this.client?.onError(event),\n    };\n\n    constructor(options?: Partial<NsfwFileSystemWatcherServerOptions>) {\n        this.options = {\n            nsfwOptions: {},\n            verbose: false,\n            info: (message, ...args) => console.info(message, ...args),\n            error: (message, ...args) => console.error(message, ...args),\n            ...options\n        };\n    }\n\n    setClient(client: FileSystemWatcherServiceClient | undefined): void {\n        this.client = client;\n    }\n\n    /**\n     * A specific client requests us to watch a given `uri` according to some `options`.\n     *\n     * We internally re-use all the same `(uri, options)` pairs.\n     */\n    async watchFileChanges(clientId: number, uri: string, options?: WatchOptions): Promise<number> {\n        const resolvedOptions = this.resolveWatchOptions(options);\n        const watcherKey = this.getWatcherKey(uri, resolvedOptions);\n        let watcher = this.watchers.get(watcherKey);\n        if (watcher === undefined) {\n            const fsPath = FileUri.fsPath(uri);\n            watcher = this.createWatcher(clientId, fsPath, resolvedOptions);\n            watcher.whenDisposed.then(() => this.watchers.delete(watcherKey));\n            this.watchers.set(watcherKey, watcher);\n        } else {\n            watcher.addRef(clientId);\n        }\n        const watcherId = this.watcherId++;\n        this.watcherHandles.set(watcherId, { clientId, watcher });\n        watcher.whenDisposed.then(() => this.watcherHandles.delete(watcherId));\n        return watcherId;\n    }\n\n    protected createWatcher(clientId: number, fsPath: string, options: WatchOptions): NsfwWatcher {\n        const watcherOptions: NsfwWatcherOptions = {\n            ignored: options.ignored\n                .map(pattern => new Minimatch(pattern, { dot: true })),\n        };\n        return new NsfwWatcher(clientId, fsPath, watcherOptions, this.options, this.maybeClient);\n    }\n\n    async unwatchFileChanges(watcherId: number): Promise<void> {\n        const handle = this.watcherHandles.get(watcherId);\n        if (handle === undefined) {\n            console.warn(`tried to de-allocate a disposed watcher: watcherId=${watcherId}`);\n        } else {\n            this.watcherHandles.delete(watcherId);\n            handle.watcher.removeRef(handle.clientId);\n        }\n    }\n\n    /**\n     * Given some `URI` and some `WatchOptions`, generate a unique key.\n     */\n    protected getWatcherKey(uri: string, options: WatchOptions): string {\n        return [\n            uri,\n            options.ignored.slice(0).sort().join()  // use a **sorted copy** of `ignored` as part of the key\n        ].join();\n    }\n\n    /**\n     * Return fully qualified options.\n     */\n    protected resolveWatchOptions(options?: WatchOptions): WatchOptions {\n        return {\n            ignored: [],\n            ...options,\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected debug(message: string, ...params: any[]): void {\n        if (this.options.verbose) {\n            this.options.info(message, ...params);\n        }\n    }\n\n    dispose(): void {\n        // Singletons shouldn't be disposed...\n    }\n}\n"],"names":[],"sourceRoot":""}