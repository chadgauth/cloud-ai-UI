{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjGA,gFAAgF;AAChF,0CAA0C;AAC1C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;AAEhF,8HAAqE;AAA5D,8HAAa;AAAE,sIAAiB;AACzC,iIAAoD;AAA3C,iIAAc;AACvB,iIAAoD;AAA3C,iIAAc;AACvB,uIAAoH;AAA3G,uIAAgB;AACzB,2IAAsC;AACtC,mHAA6B;;;;;;;;;;;;;ACrB7B,gFAAgF;AAChF,0CAA0C;AAC1C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,uFAAiC;AACjC,iHAAqG;AAExF,qBAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAkBrD,MAAa,iBAAiB;IAE1B,YACW,mBAA2B;QAA3B,wBAAmB,GAAnB,mBAAmB,CAAQ;IAClC,CAAC;IAEL,4BAA4B,C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","sources":["webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/node_modules/@stroncium/procfs/lib/parsers|sync|/^\\.\\/.*$/?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-api-filter.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-http-client.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-mock-client.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-router-client.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-router-filters/abstract-reg-exp-filter.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-router-filters/extension-id-matches-filter.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-router-filters/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-router-filters/request-contains-filter.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/dev-packages/ovsx-client/src/ovsx-types.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/api-samples/src/common/vsx/sample-app-info.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/api-samples/src/common/vsx/sample-ovsx-client-factory.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/api-samples/src/node/api-samples-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/api-samples/src/node/sample-backend-app-info.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/api-samples/src/node/sample-backend-application-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/api-samples/src/node/sample-mock-open-vsx-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/browser/lib/backend/native-webpack-plugin/2023822-45938-4nuat4.j4gr5/bindings.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/browser/lib/backend/native-webpack-plugin/2023822-45938-4nuat4.j4gr5/ripgrep.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/browser/src-gen/backend/main.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/examples/browser/src-gen/backend/server.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/application-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/encoding-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/encodings.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/env-variables/env-variables-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/env-variables/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/i18n/localization-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/keytar-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/messaging/web-socket-channel.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/preferences/preference-schema.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/common/preferences/preference-scope.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/application-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/backend-application-config-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/backend-application-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/console-logger-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/env-variables/env-variables-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/env-variables/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/environment-utils.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/hosting/backend-application-hosts.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/hosting/backend-hosting-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/hosting/ws-origin-validator.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/i18n/i18n-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/i18n/localization-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/i18n/localization-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/i18n/localization-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/i18n/theia-localization-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/keytar-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/logger-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/logger-cli-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/main.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/messaging/connection-container-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/messaging/messaging-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/messaging/messaging-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/messaging/messaging-listeners.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/os-backend-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/performance/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/performance/measurement-backend-bindings.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/performance/node-stopwatch.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/request/backend-request-facade.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/request/backend-request-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/request/proxy-cli-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/src/node/ws-request-validators.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/shared/@theia/application-package/index.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/shared/@theia/application-package/lib/api/index.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/shared/@theia/application-package/lib/environment/index.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/shared/@theia/request/index.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/shared/express/index.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/core/shared/fuzzy/index.js?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/common/debug-adapter-contribution-registry.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/common/debug-model.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/common/debug-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/node/debug-adapter-factory.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/node/debug-adapter-session-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/node/debug-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/debug/src/node/debug-service-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/file-search/src/common/file-search-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/file-search/src/node/file-search-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/file-search/src/node/file-search-service-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/common/download/file-download-data.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/common/file-upload.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/common/filesystem-watcher-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/common/io.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/common/remote-file-system-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/disk-file-system-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/download/directory-archiver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/download/file-download-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/download/file-download-cache.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/download/file-download-endpoint.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/download/file-download-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/filesystem-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/filesystem-watcher-client.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/filesystem-watcher-dispatcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/node-file-upload-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/filesystem/src/node/nsfw-watcher/nsfw-options.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/common/git-model.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/common/git-prompt.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/common/git-watcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/common/git.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/common/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/dugite-git-prompt.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/dugite-git-watcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/dugite-git.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/env/git-env-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/env/git-env-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-exec-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-locator/git-locator-client.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-locator/git-locator-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-locator/git-locator-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-repository-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/git-repository-watcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/git/src/node/init/git-init.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/common/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/common/measurement-notification-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/extensions-metrics-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/measurement-metrics-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/metrics-backend-application-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/metrics-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/metrics-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/node-metrics-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/metrics/src/node/prometheus.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/mini-browser/src/common/mini-browser-endpoint.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/mini-browser/src/common/mini-browser-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/mini-browser/src/node/mini-browser-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/mini-browser/src/node/mini-browser-backend-security-warnings.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/mini-browser/src/node/mini-browser-endpoint.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/mini-browser/src/node/mini-browser-ws-validator.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/common/plugin-dev-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/node/hosted-instance-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/node/hosted-plugin-reader.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/node/hosted-plugin-uri-postprocessor.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/node/hosted-plugins-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/node/plugin-dev-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-dev/src/node/plugin-dev-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/common/plugin-vscode-environment.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/common/plugin-vscode-types.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/common/plugin-vscode-uri.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/local-vsix-file-plugin-deployer-resolver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/plugin-vscode-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/plugin-vscode-cli-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/plugin-vscode-deployer-participant.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/plugin-vscode-directory-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/plugin-vscode-file-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext-vscode/src/node/scanner-vscode.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/common/language-pack-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/hosted-plugin-cli-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/hosted-plugin-deployer-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/hosted-plugin-localization-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/hosted-plugin-process.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/hosted-plugin.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/metadata-scanner.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/plugin-ext-hosted-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/plugin-language-pack-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/plugin-reader.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/plugin-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/scanners/file-plugin-uri-factory.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/scanners/grammars-reader.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/scanners/plugin-uri-factory.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/hosted/node/scanners/scanner-theia.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/common/plugin-paths-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/common/plugin-theia-environment.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/common/webview-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/handlers/plugin-theia-directory-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/handlers/plugin-theia-file-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/paths/const.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/paths/plugin-paths-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-cli-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-directory-handler-context-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-entry-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-file-handler-context-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-proxy-entry-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-deployer-resolver-context-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-ext-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-github-resolver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-http-resolver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-localization-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-server-handler.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-theia-deployer-participant.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugin-uninstallation-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/plugins-key-value-storage.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/resolvers/local-directory-plugin-deployer-resolver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/resolvers/local-plugin-deployer-resolver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/temp-dir-util.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/main/node/webview-backend-security-warnings.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-ext/src/plugin-ext-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/common/metrics-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/metric-output/plugin-metrics-time-count.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/metric-output/plugin-metrics-time-sum.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/metric-string-generator.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/metrics-contributor.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/plugin-metrics-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/plugin-metrics-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/plugin-metrics/src/node/plugin-metrics.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/common/process-common-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/common/process-manager-types.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/common/shell-command-builder.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/common/shell-quoting.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/dev-null-stream.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/multi-ring-buffer.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/process-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/process-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/process.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/pseudo-pty.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/raw-process.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/task-terminal-process.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/terminal-process.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/process/src/node/utils.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/search-in-workspace/src/common/search-in-workspace-interface.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/search-in-workspace/src/node/ripgrep-search-in-workspace-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/search-in-workspace/src/node/search-in-workspace-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/problem-matcher-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/process/task-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/task-common-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/task-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/task-util.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/common/task-watcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/custom/custom-task-runner-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/custom/custom-task-runner-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/custom/custom-task-runner.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/custom/custom-task.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/process/process-task-runner-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/process/process-task-runner-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/process/process-task-runner.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/process/process-task.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-abstract-line-matcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-backend-application-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-line-matchers.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-manager.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-problem-collector.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-runner-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-runner.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/task/src/node/task.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/common/base-terminal-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/common/shell-terminal-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/common/terminal-common-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/common/terminal-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/common/terminal-watcher.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/base-terminal-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/buffering-stream.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/shell-process.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/shell-terminal-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/terminal-backend-contribution.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/terminal-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/terminal/src/node/terminal-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/common/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/common/ovsx-client-provider.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/common/vsx-environment.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/common/vsx-extension-uri.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/common/vsx-registry-common-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/node/vsx-cli.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/node/vsx-environment-impl.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/node/vsx-extension-resolver.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/vsx-registry/src/node/vsx-registry-backend-module.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/workspace/src/common/index.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/workspace/src/common/untitled-workspace-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/workspace/src/common/workspace-file-service.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/workspace/src/common/workspace-protocol.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/workspace/src/node/default-workspace-server.ts?","webpack:////Users/jeremywang/Documents/CloudAI/cloud-ai-UI/packages/workspace/src/node/workspace-backend-module.ts?","webpack:///external node-commonjs \"assert\"?","webpack:///external node-commonjs \"async_hooks\"?","webpack:///external node-commonjs \"buffer\"?","webpack:///external node-commonjs \"child_process\"?","webpack:///external node-commonjs \"cluster\"?","webpack:///external node-commonjs \"constants\"?","webpack:///external node-commonjs \"crypto\"?","webpack:///external node-commonjs \"dns\"?","webpack:///external node-commonjs \"events\"?","webpack:///external node-commonjs \"fs\"?","webpack:///external node-commonjs \"fs/promises\"?","webpack:///external node-commonjs \"http\"?","webpack:///external node-commonjs \"https\"?","webpack:///external node-commonjs \"module\"?","webpack:///external node-commonjs \"net\"?","webpack:///external node-commonjs \"os\"?","webpack:///external node-commonjs \"path\"?","webpack:///external node-commonjs \"perf_hooks\"?","webpack:///external node-commonjs \"pnpapi\"?","webpack:///external node-commonjs \"process\"?","webpack:///external node-commonjs \"punycode\"?","webpack:///external node-commonjs \"querystring\"?","webpack:///external node-commonjs \"readline\"?","webpack:///external node-commonjs \"stream\"?","webpack:///external node-commonjs \"string_decoder\"?","webpack:///external node-commonjs \"timers\"?","webpack:///external node-commonjs \"tls\"?","webpack:///external node-commonjs \"tty\"?","webpack:///external node-commonjs \"url\"?","webpack:///external node-commonjs \"util\"?","webpack:///external node-commonjs \"v8\"?","webpack:///external node-commonjs \"worker_threads\"?","webpack:///external node-commonjs \"zlib\"?","webpack:///webpack/bootstrap?","webpack:///webpack/runtime/chunk loaded?","webpack:///webpack/runtime/compat get default export?","webpack:///webpack/runtime/define property getters?","webpack:///webpack/runtime/ensure chunk?","webpack:///webpack/runtime/get javascript chunk filename?","webpack:///webpack/runtime/hasOwnProperty shorthand?","webpack:///webpack/runtime/make namespace object?","webpack:///webpack/runtime/node module decorator?","webpack:///webpack/runtime/publicPath?","webpack:///webpack/runtime/require chunk loading?","webpack:///webpack/runtime/startup chunk dependencies?","webpack:///webpack/before-startup?","webpack:///webpack/startup?","webpack:///webpack/after-startup?"],"sourcesContent":["var map = {\n\t\"./cgroups\": \"../../node_modules/@stroncium/procfs/lib/parsers/cgroups.js\",\n\t\"./cgroups.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/cgroups.js\",\n\t\"./config\": \"../../node_modules/@stroncium/procfs/lib/parsers/config.js\",\n\t\"./config.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/config.js\",\n\t\"./cpuinfo\": \"../../node_modules/@stroncium/procfs/lib/parsers/cpuinfo.js\",\n\t\"./cpuinfo.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/cpuinfo.js\",\n\t\"./devices\": \"../../node_modules/@stroncium/procfs/lib/parsers/devices.js\",\n\t\"./devices.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/devices.js\",\n\t\"./diskstats\": \"../../node_modules/@stroncium/procfs/lib/parsers/diskstats.js\",\n\t\"./diskstats.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/diskstats.js\",\n\t\"./filesystems\": \"../../node_modules/@stroncium/procfs/lib/parsers/filesystems.js\",\n\t\"./filesystems.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/filesystems.js\",\n\t\"./loadavg\": \"../../node_modules/@stroncium/procfs/lib/parsers/loadavg.js\",\n\t\"./loadavg.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/loadavg.js\",\n\t\"./meminfo\": \"../../node_modules/@stroncium/procfs/lib/parsers/meminfo.js\",\n\t\"./meminfo.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/meminfo.js\",\n\t\"./partitions\": \"../../node_modules/@stroncium/procfs/lib/parsers/partitions.js\",\n\t\"./partitions.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/partitions.js\",\n\t\"./processAutogroup\": \"../../node_modules/@stroncium/procfs/lib/parsers/processAutogroup.js\",\n\t\"./processAutogroup.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processAutogroup.js\",\n\t\"./processCgroups\": \"../../node_modules/@stroncium/procfs/lib/parsers/processCgroups.js\",\n\t\"./processCgroups.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processCgroups.js\",\n\t\"./processCmdline\": \"../../node_modules/@stroncium/procfs/lib/parsers/processCmdline.js\",\n\t\"./processCmdline.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processCmdline.js\",\n\t\"./processEnviron\": \"../../node_modules/@stroncium/procfs/lib/parsers/processEnviron.js\",\n\t\"./processEnviron.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processEnviron.js\",\n\t\"./processExe\": \"../../node_modules/@stroncium/procfs/lib/parsers/processExe.js\",\n\t\"./processExe.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processExe.js\",\n\t\"./processFd\": \"../../node_modules/@stroncium/procfs/lib/parsers/processFd.js\",\n\t\"./processFd.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processFd.js\",\n\t\"./processFdinfo\": \"../../node_modules/@stroncium/procfs/lib/parsers/processFdinfo.js\",\n\t\"./processFdinfo.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processFdinfo.js\",\n\t\"./processFds\": \"../../node_modules/@stroncium/procfs/lib/parsers/processFds.js\",\n\t\"./processFds.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processFds.js\",\n\t\"./processGidMap\": \"../../node_modules/@stroncium/procfs/lib/parsers/processGidMap.js\",\n\t\"./processGidMap.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processGidMap.js\",\n\t\"./processIo\": \"../../node_modules/@stroncium/procfs/lib/parsers/processIo.js\",\n\t\"./processIo.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processIo.js\",\n\t\"./processLimits\": \"../../node_modules/@stroncium/procfs/lib/parsers/processLimits.js\",\n\t\"./processLimits.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processLimits.js\",\n\t\"./processMountinfo\": \"../../node_modules/@stroncium/procfs/lib/parsers/processMountinfo.js\",\n\t\"./processMountinfo.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processMountinfo.js\",\n\t\"./processNetDev\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetDev.js\",\n\t\"./processNetDev.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetDev.js\",\n\t\"./processNetTcp4\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetTcp4.js\",\n\t\"./processNetTcp4.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetTcp4.js\",\n\t\"./processNetTcp6\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetTcp6.js\",\n\t\"./processNetTcp6.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetTcp6.js\",\n\t\"./processNetUdp4\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetUdp4.js\",\n\t\"./processNetUdp4.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetUdp4.js\",\n\t\"./processNetUdp6\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetUdp6.js\",\n\t\"./processNetUdp6.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetUdp6.js\",\n\t\"./processNetUnix\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetUnix.js\",\n\t\"./processNetUnix.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetUnix.js\",\n\t\"./processNetWireless\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetWireless.js\",\n\t\"./processNetWireless.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processNetWireless.js\",\n\t\"./processStat\": \"../../node_modules/@stroncium/procfs/lib/parsers/processStat.js\",\n\t\"./processStat.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processStat.js\",\n\t\"./processStatm\": \"../../node_modules/@stroncium/procfs/lib/parsers/processStatm.js\",\n\t\"./processStatm.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processStatm.js\",\n\t\"./processStatus\": \"../../node_modules/@stroncium/procfs/lib/parsers/processStatus.js\",\n\t\"./processStatus.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processStatus.js\",\n\t\"./processThreads\": \"../../node_modules/@stroncium/procfs/lib/parsers/processThreads.js\",\n\t\"./processThreads.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processThreads.js\",\n\t\"./processUidMap\": \"../../node_modules/@stroncium/procfs/lib/parsers/processUidMap.js\",\n\t\"./processUidMap.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processUidMap.js\",\n\t\"./processes\": \"../../node_modules/@stroncium/procfs/lib/parsers/processes.js\",\n\t\"./processes.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/processes.js\",\n\t\"./stat\": \"../../node_modules/@stroncium/procfs/lib/parsers/stat.js\",\n\t\"./stat.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/stat.js\",\n\t\"./swaps\": \"../../node_modules/@stroncium/procfs/lib/parsers/swaps.js\",\n\t\"./swaps.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/swaps.js\",\n\t\"./uptime\": \"../../node_modules/@stroncium/procfs/lib/parsers/uptime.js\",\n\t\"./uptime.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/uptime.js\",\n\t\"./utils\": \"../../node_modules/@stroncium/procfs/lib/parsers/utils.js\",\n\t\"./utils.js\": \"../../node_modules/@stroncium/procfs/lib/parsers/utils.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/@stroncium/procfs/lib/parsers sync recursive ^\\\\.\\\\/.*$\";","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { OVSXApiFilter, OVSXApiFilterImpl } from './ovsx-api-filter';\nexport { OVSXHttpClient } from './ovsx-http-client';\nexport { OVSXMockClient } from './ovsx-mock-client';\nexport { OVSXRouterClient, OVSXRouterConfig, OVSXRouterFilterFactory as FilterFactory } from './ovsx-router-client';\nexport * from './ovsx-router-filters';\nexport * from './ovsx-types';\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as semver from 'semver';\nimport { VSXAllVersions, VSXBuiltinNamespaces, VSXExtensionRaw, VSXSearchEntry } from './ovsx-types';\n\nexport const OVSXApiFilter = Symbol('OVSXApiFilter');\n/**\n * Filter various data types based on a pre-defined supported VS Code API version.\n */\nexport interface OVSXApiFilter {\n    supportedApiVersion: string;\n    /**\n     * Get the latest compatible extension version:\n     * - A builtin extension is fetched based on the extension version which matches the API.\n     * - An extension satisfies compatibility if its `engines.vscode` version is supported.\n     *\n     * @param extensionId the extension id.\n     * @returns the data for the latest compatible extension version if available, else `undefined`.\n     */\n    getLatestCompatibleExtension(extensions: VSXExtensionRaw[]): VSXExtensionRaw | undefined;\n    getLatestCompatibleVersion(searchEntry: VSXSearchEntry): VSXAllVersions | undefined;\n}\n\nexport class OVSXApiFilterImpl implements OVSXApiFilter {\n\n    constructor(\n        public supportedApiVersion: string\n    ) { }\n\n    getLatestCompatibleExtension(extensions: VSXExtensionRaw[]): VSXExtensionRaw | undefined {\n        if (extensions.length === 0) {\n            return;\n        } else if (this.isBuiltinNamespace(extensions[0].namespace.toLowerCase())) {\n            return extensions.find(extension => this.versionGreaterThanOrEqualTo(extension.version, this.supportedApiVersion));\n        } else {\n            return extensions.find(extension => this.supportedVscodeApiSatisfies(extension.engines?.vscode ?? '*'));\n        }\n    }\n\n    getLatestCompatibleVersion(searchEntry: VSXSearchEntry): VSXAllVersions | undefined {\n        function getLatestCompatibleVersion(predicate: (allVersions: VSXAllVersions) => boolean): VSXAllVersions | undefined {\n            if (searchEntry.allVersions) {\n                return searchEntry.allVersions.find(predicate);\n            }\n            // If the allVersions field is missing then try to use the\n            // searchEntry as VSXAllVersions and check if it's compatible:\n            if (predicate(searchEntry)) {\n                return searchEntry;\n            }\n        }\n        if (this.isBuiltinNamespace(searchEntry.namespace)) {\n            return getLatestCompatibleVersion(allVersions => this.versionGreaterThanOrEqualTo(allVersions.version, this.supportedApiVersion));\n        } else {\n            return getLatestCompatibleVersion(allVersions => this.supportedVscodeApiSatisfies(allVersions.engines?.vscode ?? '*'));\n        }\n    }\n\n    protected isBuiltinNamespace(namespace: string): boolean {\n        return VSXBuiltinNamespaces.is(namespace);\n    }\n\n    /**\n     * @returns `a >= b`\n     */\n    protected versionGreaterThanOrEqualTo(a: string, b: string): boolean {\n        const versionA = semver.clean(a);\n        const versionB = semver.clean(b);\n        if (!versionA || !versionB) {\n            return false;\n        }\n        return semver.lte(versionA, versionB);\n    }\n\n    protected supportedVscodeApiSatisfies(vscodeApiRange: string): boolean {\n        return semver.satisfies(this.supportedApiVersion, vscodeApiRange);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { OVSXClient, VSXQueryOptions, VSXQueryResult, VSXSearchOptions, VSXSearchResult } from './ovsx-types';\nimport { RequestContext, RequestService } from '@theia/request';\n\nexport class OVSXHttpClient implements OVSXClient {\n\n    /**\n     * @param requestService\n     * @returns factory that will cache clients based on the requested input URL.\n     */\n    static createClientFactory(requestService: RequestService): (url: string) => OVSXClient {\n        // eslint-disable-next-line no-null/no-null\n        const cachedClients: Record<string, OVSXClient> = Object.create(null);\n        return url => cachedClients[url] ??= new this(url, requestService);\n    }\n\n    constructor(\n        protected vsxRegistryUrl: string,\n        protected requestService: RequestService\n    ) { }\n\n    async search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        try {\n            return await this.requestJson(this.buildUrl('api/-/search', searchOptions));\n        } catch (err) {\n            return {\n                error: err?.message || String(err),\n                offset: -1,\n                extensions: []\n            };\n        }\n    }\n\n    async query(queryOptions?: VSXQueryOptions): Promise<VSXQueryResult> {\n        try {\n            return await this.requestJson(this.buildUrl('api/-/query', queryOptions));\n        } catch (error) {\n            console.warn(error);\n            return {\n                extensions: []\n            };\n        }\n    }\n\n    protected async requestJson<R>(url: string): Promise<R> {\n        return RequestContext.asJson<R>(await this.requestService.request({\n            url,\n            headers: { 'Accept': 'application/json' }\n        }));\n    }\n\n    protected buildUrl(url: string, query?: object): string {\n        return new URL(`${url}${this.buildQueryString(query)}`, this.vsxRegistryUrl).toString();\n    }\n\n    protected buildQueryString(searchQuery?: object): string {\n        if (!searchQuery) {\n            return '';\n        }\n        let queryString = '';\n        for (const [key, value] of Object.entries(searchQuery)) {\n            if (typeof value === 'string') {\n                queryString += `&${key}=${encodeURIComponent(value)}`;\n            } else if (typeof value === 'boolean' || typeof value === 'number') {\n                queryString += `&${key}=${value}`;\n            }\n        }\n        return queryString && '?' + queryString.slice(1);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ExtensionLike, OVSXClient, VSXExtensionRaw, VSXQueryOptions, VSXQueryResult, VSXSearchOptions, VSXSearchResult } from './ovsx-types';\n\n/**\n * Querying will only find exact matches.\n * Searching will try to find the query string in various fields.\n */\nexport class OVSXMockClient implements OVSXClient {\n\n    constructor(\n        public extensions: VSXExtensionRaw[] = []\n    ) { }\n\n    setExtensions(extensions: VSXExtensionRaw[]): this {\n        this.extensions = extensions;\n        return this;\n    }\n\n    /**\n     * @param baseUrl required to construct the URLs required by {@link VSXExtensionRaw}.\n     * @param ids list of ids to generate {@link VSXExtensionRaw} from.\n     */\n    setExtensionsFromIds(baseUrl: string, ids: string[]): this {\n        const now = Date.now();\n        const url = new OVSXMockClient.UrlBuilder(baseUrl);\n        this.extensions = ids.map((extension, i) => {\n            const [id, version = '0.0.1'] = extension.split('@', 2);\n            const [namespace, name] = id.split('.', 2);\n            return {\n                allVersions: {\n                    [version]: url.extensionUrl(namespace, name, `/${version}`)\n                },\n                displayName: name,\n                downloadCount: 0,\n                files: {\n                    download: url.extensionFileUrl(namespace, name, version, `/${id}-${version}.vsix`)\n                },\n                name,\n                namespace,\n                namespaceAccess: 'public',\n                namespaceUrl: url.namespaceUrl(namespace),\n                publishedBy: {\n                    loginName: 'mock'\n                },\n                reviewCount: 0,\n                reviewsUrl: url.extensionReviewsUrl(namespace, name),\n                timestamp: new Date(now - ids.length + i + 1).toISOString(),\n                version,\n                description: `Mock VS Code Extension for ${id}`\n            };\n        });\n        return this;\n    }\n\n    async query(queryOptions?: VSXQueryOptions): Promise<VSXQueryResult> {\n        return {\n            extensions: this.extensions\n                .filter(extension => typeof queryOptions === 'object' && (\n                    this.compare(queryOptions.extensionId, this.id(extension)) &&\n                    this.compare(queryOptions.extensionName, extension.name) &&\n                    this.compare(queryOptions.extensionVersion, extension.version) &&\n                    this.compare(queryOptions.namespaceName, extension.namespace)\n                ))\n        };\n    }\n\n    async search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        const query = searchOptions?.query;\n        const offset = searchOptions?.offset ?? 0;\n        const size = searchOptions?.size ?? 18;\n        const end = offset + size;\n        return {\n            offset,\n            extensions: this.extensions\n                .filter(extension => typeof query !== 'string' || (\n                    this.includes(query, this.id(extension)) ||\n                    this.includes(query, extension.description) ||\n                    this.includes(query, extension.displayName)\n                ))\n                .sort((a, b) => this.sort(a, b, searchOptions))\n                .filter((extension, i) => i >= offset && i < end)\n                .map(extension => ({\n                    downloadCount: extension.downloadCount,\n                    files: extension.files,\n                    name: extension.name,\n                    namespace: extension.namespace,\n                    timestamp: extension.timestamp,\n                    url: `${extension.namespaceUrl}/${extension.name}`,\n                    version: extension.version,\n                }))\n        };\n    }\n\n    protected id(extension: ExtensionLike): string {\n        return `${extension.namespace}.${extension.name}`;\n    }\n\n    /**\n     * Case sensitive.\n     */\n    protected compare(expected?: string, value?: string): boolean {\n        return expected === undefined || value === undefined || expected === value;\n    }\n\n    /**\n     * Case insensitive.\n     */\n    protected includes(needle: string, value?: string): boolean {\n        return value === undefined || value.toLowerCase().includes(needle.toLowerCase());\n    }\n\n    protected sort(a: VSXExtensionRaw, b: VSXExtensionRaw, searchOptions?: VSXSearchOptions): number {\n        let order: number = 0;\n        const sortBy = searchOptions?.sortBy ?? 'relevance';\n        const sortOrder = searchOptions?.sortOrder ?? 'desc';\n        if (sortBy === 'averageRating') {\n            order = (a.averageRating ?? -1) - (b.averageRating ?? -1);\n        } else if (sortBy === 'downloadCount') {\n            order = a.downloadCount - b.downloadCount;\n        } else if (sortBy === 'relevance') {\n            order = 0;\n        } else if (sortBy === 'timestamp') {\n            order = new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();\n        }\n        if (sortOrder === 'asc') {\n            order *= -1;\n        }\n        return order;\n    }\n}\nexport namespace OVSXMockClient {\n\n    /**\n     * URLs should respect the official OpenVSX API:\n     * https://open-vsx.org/swagger-ui/index.html\n     */\n    export class UrlBuilder {\n\n        constructor(\n            protected baseUrl: string\n        ) { }\n\n        url(path: string): string {\n            return this.baseUrl + path;\n        }\n\n        apiUrl(path: string): string {\n            return this.url(`/api${path}`);\n        }\n\n        namespaceUrl(namespace: string, path = ''): string {\n            return this.apiUrl(`/${namespace}${path}`);\n        }\n\n        extensionUrl(namespace: string, name: string, path = ''): string {\n            return this.apiUrl(`/${namespace}/${name}${path}`);\n        }\n\n        extensionReviewsUrl(namespace: string, name: string): string {\n            return this.apiUrl(`/${namespace}/${name}/reviews`);\n        }\n\n        extensionFileUrl(namespace: string, name: string, version: string, path = ''): string {\n            return this.apiUrl(`/${namespace}/${name}/${version}/file${path}`);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ExtensionLike, OVSXClient, OVSXClientProvider, VSXExtensionRaw, VSXQueryOptions, VSXQueryResult, VSXSearchEntry, VSXSearchOptions, VSXSearchResult } from './ovsx-types';\nimport type { MaybePromise } from './types';\n\nexport interface OVSXRouterFilter {\n    filterSearchOptions?(searchOptions?: VSXSearchOptions): MaybePromise<unknown>;\n    filterQueryOptions?(queryOptions?: VSXQueryOptions): MaybePromise<unknown>;\n    filterExtension?(extension: ExtensionLike): MaybePromise<unknown>;\n}\n\n/**\n * @param conditions key/value mapping of condition statements that rules may process\n * @param remainingKeys keys left to be processed, remove items from it when you handled them\n */\nexport type OVSXRouterFilterFactory = (conditions: Readonly<Record<string, unknown>>, remainingKeys: Set<string>) => MaybePromise<OVSXRouterFilter | undefined>;\n\n/**\n * Helper function to create factories that handle a single condition key.\n */\nexport function createFilterFactory(conditionKey: string, factory: (conditionValue: unknown) => OVSXRouterFilter | undefined): OVSXRouterFilterFactory {\n    return (conditions, remainingKeys) => {\n        if (conditionKey in conditions) {\n            const filter = factory(conditions[conditionKey]);\n            if (filter) {\n                remainingKeys.delete(conditionKey);\n                return filter;\n            }\n        }\n    };\n}\n\nexport interface OVSXRouterConfig {\n    /**\n     * Registry aliases that will be used for routing.\n     */\n    registries?: {\n        [alias: string]: string\n    }\n    /**\n     * The registry/ies to use by default.\n     */\n    use: string | string[]\n    /**\n     * Filters for the different phases of interfacing with a registry.\n     */\n    rules?: OVSXRouterRule[]\n}\n\nexport interface OVSXRouterRule {\n    [condition: string]: unknown\n    use?: string | string[] | null\n}\n\n/**\n * @internal\n */\nexport interface OVSXRouterParsedRule {\n    filters: OVSXRouterFilter[]\n    use: string[]\n}\n\n/**\n * Route and agglomerate queries according to {@link routerConfig}.\n * {@link ruleFactories} is the actual logic used to evaluate the config.\n * Each rule implementation will be ran sequentially over each configured rule.\n */\nexport class OVSXRouterClient implements OVSXClient {\n\n    static async FromConfig(routerConfig: OVSXRouterConfig, clientProvider: OVSXClientProvider, filterFactories: OVSXRouterFilterFactory[]): Promise<OVSXRouterClient> {\n        const rules = routerConfig.rules ? await this.ParseRules(routerConfig.rules, filterFactories, routerConfig.registries) : [];\n        return new this(\n            this.ParseUse(routerConfig.use, routerConfig.registries),\n            clientProvider,\n            rules\n        );\n    }\n\n    protected static async ParseRules(rules: OVSXRouterRule[], filterFactories: OVSXRouterFilterFactory[], aliases?: Record<string, string>): Promise<OVSXRouterParsedRule[]> {\n        return Promise.all(rules.map(async ({ use, ...conditions }) => {\n            const remainingKeys = new Set(Object.keys(conditions));\n            const filters = removeNullValues(await Promise.all(filterFactories.map(filterFactory => filterFactory(conditions, remainingKeys))));\n            if (remainingKeys.size > 0) {\n                throw new Error(`unknown conditions: ${Array.from(remainingKeys).join(', ')}`);\n            }\n            return {\n                filters,\n                use: this.ParseUse(use, aliases)\n            };\n        }));\n    }\n\n    protected static ParseUse(use: string | string[] | null | undefined, aliases?: Record<string, string>): string[] {\n        if (typeof use === 'string') {\n            return [alias(use)];\n        } else if (Array.isArray(use)) {\n            return use.map(alias);\n        } else {\n            return [];\n        }\n        function alias(aliasOrUri: string): string {\n            return aliases?.[aliasOrUri] ?? aliasOrUri;\n        }\n    }\n\n    constructor(\n        protected readonly useDefault: string[],\n        protected readonly clientProvider: OVSXClientProvider,\n        protected readonly rules: OVSXRouterParsedRule[],\n    ) { }\n\n    async search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        return this.runRules(\n            filter => filter.filterSearchOptions?.(searchOptions),\n            rule => rule.use.length > 0\n                ? this.mergedSearch(rule.use, searchOptions)\n                : this.emptySearchResult(searchOptions),\n            () => this.mergedSearch(this.useDefault, searchOptions)\n        );\n    }\n\n    async query(queryOptions: VSXQueryOptions = {}): Promise<VSXQueryResult> {\n        return this.runRules(\n            filter => filter.filterQueryOptions?.(queryOptions),\n            rule => rule.use.length > 0\n                ? this.mergedQuery(rule.use, queryOptions)\n                : this.emptyQueryResult(queryOptions),\n            () => this.mergedQuery(this.useDefault, queryOptions)\n        );\n    }\n\n    protected emptySearchResult(searchOptions?: VSXSearchOptions): VSXSearchResult {\n        return {\n            extensions: [],\n            offset: searchOptions?.offset ?? 0\n        };\n    }\n\n    protected emptyQueryResult(queryOptions?: VSXQueryOptions): VSXQueryResult {\n        return {\n            extensions: []\n        };\n    }\n\n    protected async mergedQuery(registries: string[], queryOptions?: VSXQueryOptions): Promise<VSXQueryResult> {\n        return this.mergeQueryResults(await createMapping(registries, async registry => (await this.clientProvider(registry)).query(queryOptions)));\n    }\n\n    protected async mergedSearch(registries: string[], searchOptions?: VSXSearchOptions): Promise<VSXSearchResult> {\n        return this.mergeSearchResults(await createMapping(registries, async registry => (await this.clientProvider(registry)).search(searchOptions)));\n    }\n\n    protected async mergeSearchResults(results: Map<string, VSXSearchResult>): Promise<VSXSearchResult> {\n        const filtering = [] as Promise<VSXSearchEntry[]>[];\n        results.forEach((result, sourceUri) => {\n            filtering.push(Promise\n                .all(result.extensions.map(extension => this.filterExtension(sourceUri, extension)))\n                .then(removeNullValues)\n            );\n        });\n        return {\n            extensions: interleave(await Promise.all(filtering)),\n            offset: Math.min(...Array.from(results.values(), result => result.offset))\n        };\n    }\n\n    protected async mergeQueryResults(results: Map<string, VSXQueryResult>): Promise<VSXQueryResult> {\n        const filtering = [] as Promise<VSXExtensionRaw | undefined>[];\n        results.forEach((result, sourceUri) => {\n            result.extensions.forEach(extension => filtering.push(this.filterExtension(sourceUri, extension)));\n        });\n        return {\n            extensions: removeNullValues(await Promise.all(filtering))\n        };\n    }\n\n    protected async filterExtension<T extends ExtensionLike>(sourceUri: string, extension: T): Promise<T | undefined> {\n        return this.runRules(\n            filter => filter.filterExtension?.(extension),\n            rule => rule.use.includes(sourceUri) ? extension : undefined,\n            () => extension\n        );\n    }\n\n    protected runRules<T>(runFilter: (filter: OVSXRouterFilter) => unknown, onRuleMatched: (rule: OVSXRouterParsedRule) => T): Promise<T | undefined>;\n    protected runRules<T, U>(runFilter: (filter: OVSXRouterFilter) => unknown, onRuleMatched: (rule: OVSXRouterParsedRule) => T, onNoRuleMatched: () => U): Promise<T | U>;\n    protected async runRules<T, U>(\n        runFilter: (filter: OVSXRouterFilter) => unknown,\n        onRuleMatched: (rule: OVSXRouterParsedRule) => T,\n        onNoRuleMatched?: () => U\n    ): Promise<T | U | undefined> {\n        for (const rule of this.rules) {\n            const results = removeNullValues(await Promise.all(rule.filters.map(filter => runFilter(filter))));\n            if (results.length > 0 && results.every(value => value)) {\n                return onRuleMatched(rule);\n            }\n        }\n        return onNoRuleMatched?.();\n    }\n}\n\nfunction nonNullable<T>(value: T | null | undefined): value is T {\n    // eslint-disable-next-line no-null/no-null\n    return typeof value !== 'undefined' && value !== null;\n}\n\nfunction removeNullValues<T>(values: (T | null | undefined)[]): T[] {\n    return values.filter(nonNullable);\n}\n\n/**\n * Create a map where the keys are each element from {@link values} and the\n * values are the result of a mapping function applied on the key.\n */\nasync function createMapping<T, U>(values: T[], map: (value: T, index: number) => MaybePromise<U>, thisArg?: unknown): Promise<Map<T, U>> {\n    return new Map(await Promise.all(values.map(async (value, index) => [value, await map.call(thisArg, value, index)] as [T, U])));\n}\n\n/**\n * @example\n * interleave([[1, 2, 3], [4, 5], [6, 7, 8]]) === [1, 4, 6, 2, 5, 7, 3, 8]\n */\nfunction interleave<T>(arrays: T[][]): T[] {\n    const interleaved: T[] = [];\n    const length = Math.max(...arrays.map(array => array.length));\n    for (let i = 0; i < length; i++) {\n        for (const array of arrays) {\n            if (i < array.length) {\n                interleaved.push(array[i]);\n            }\n        }\n    }\n    return interleaved;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport abstract class AbstractRegExpFilter {\n\n    constructor(\n        protected regExp: RegExp\n    ) { }\n\n    protected test(value: unknown): boolean {\n        return typeof value === 'string' && this.regExp.test(value);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { createFilterFactory, OVSXRouterFilter } from '../ovsx-router-client';\nimport { ExtensionLike } from '../ovsx-types';\nimport { AbstractRegExpFilter } from './abstract-reg-exp-filter';\n\nexport const ExtensionIdMatchesFilterFactory = createFilterFactory('ifExtensionIdMatches', ifExtensionIdMatches => {\n    if (typeof ifExtensionIdMatches !== 'string') {\n        throw new TypeError(`expected a string, got: ${typeof ifExtensionIdMatches}`);\n    }\n    return new ExtensionIdMatchesFilter(new RegExp(ifExtensionIdMatches, 'i'));\n});\n\nexport class ExtensionIdMatchesFilter extends AbstractRegExpFilter implements OVSXRouterFilter {\n    filterExtension(extension: ExtensionLike): boolean {\n        return this.test(ExtensionLike.id(extension));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { ExtensionIdMatchesFilterFactory } from './extension-id-matches-filter';\nexport { RequestContainsFilterFactory } from './request-contains-filter';\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { createFilterFactory, OVSXRouterFilter } from '../ovsx-router-client';\nimport { VSXQueryOptions, VSXSearchOptions } from '../ovsx-types';\nimport { AbstractRegExpFilter } from './abstract-reg-exp-filter';\n\nexport const RequestContainsFilterFactory = createFilterFactory('ifRequestContains', ifRequestContains => {\n    if (typeof ifRequestContains !== 'string') {\n        throw new TypeError(`expected a string, got: ${typeof ifRequestContains}`);\n    }\n    return new RequestContainsFilter(new RegExp(ifRequestContains, 'i'));\n});\n\nexport class RequestContainsFilter extends AbstractRegExpFilter implements OVSXRouterFilter {\n    filterSearchOptions(searchOptions?: VSXSearchOptions): boolean {\n        return !searchOptions || this.test(searchOptions.query) || this.test(searchOptions.category);\n    }\n    filterQueryOptions(queryOptions?: VSXQueryOptions): boolean {\n        return !queryOptions || Object.values(queryOptions).some(this.test, this);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MaybePromise } from './types';\n\nexport interface ExtensionLike {\n    name: string;\n    namespace: string;\n    version?: string;\n}\nexport namespace ExtensionLike {\n    export function id<T extends ExtensionLike>(extension: T): `${string}.${string}` {\n        return `${extension.namespace}.${extension.name}`;\n    }\n    export function idWithVersion<T extends ExtensionLike>(extension: T): `${string}.${string}@${string}` {\n        if (!extension.version) {\n            throw new Error(`no valid \"version\" value provided for \"${id(extension)}\"`);\n        }\n        return `${id(extension)}@${extension.version}`;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    export function fromId(id: string): ExtensionLike {\n        const [left, version] = id.split('@', 2);\n        const [namespace, name] = left.split('.', 2);\n        return {\n            name,\n            namespace,\n            version\n        };\n    }\n}\n\nexport interface OVSXClient {\n    /**\n     * GET https://openvsx.org/api/-/search\n     */\n    search(searchOptions?: VSXSearchOptions): Promise<VSXSearchResult>;\n    /**\n     * GET https://openvsx.org/api/-/query\n     *\n     * Fetch one or all versions of an extension.\n     */\n    query(queryOptions?: VSXQueryOptions): Promise<VSXQueryResult>;\n}\n\n/** @deprecated since 1.31.0 use {@link VSXSearchOptions} instead */\nexport type VSXSearchParam = VSXSearchOptions;\n/**\n * The possible options when performing a search.\n *\n * For available options, and default values consult the `swagger`: https://open-vsx.org/swagger-ui/index.html.\n *\n * Should be aligned with https://github.com/eclipse/openvsx/blob/b5694a712e07d266801394916bac30609e16d77b/server/src/main/java/org/eclipse/openvsx/RegistryAPI.java#L246-L266\n */\nexport interface VSXSearchOptions {\n    /**\n     * The query text for searching.\n     */\n    query?: string;\n    /**\n     * The extension category.\n     */\n    category?: string;\n    /**\n     * The maximum number of entries to return.\n     */\n    size?: number;\n    /**\n     * The number of entries to skip (usually a multiple of the page size).\n     */\n    offset?: number;\n    /**\n     * The sort order.\n     */\n    sortOrder?: 'asc' | 'desc';\n    /**\n     * The sort key.\n     */\n    sortBy?: 'averageRating' | 'downloadCount' | 'relevance' | 'timestamp';\n    /**\n     * By default an OpenVSX registry will return the last known version of\n     * extensions. Setting this field to `true` will have the registry specify\n     * the {@link VSXExtensionRaw.allVersions} field which references all known\n     * versions for each returned extension.\n     *\n     * @default false\n     */\n    includeAllVersions?: boolean;\n}\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/e8f64fe145fc05d2de1469735d50a7a90e400bc4/server/src/main/java/org/eclipse/openvsx/json/SearchResultJson.java\n */\nexport interface VSXSearchResult {\n    error?: string;\n    offset: number;\n    extensions: VSXSearchEntry[];\n}\n\n/** @deprecated since 1.31.0 use {@link VSXQueryOptions} instead */\nexport type VSXQueryParam = VSXQueryOptions;\n/**\n * The possible options when performing a search.\n *\n * For available options, and default values consult the `swagger`: https://open-vsx.org/swagger-ui/index.html.\n *\n * Should be aligned with https://github.com/eclipse/openvsx/blob/b5694a712e07d266801394916bac30609e16d77b/server/src/main/java/org/eclipse/openvsx/json/QueryParamJson.java#L18-L46\n */\nexport interface VSXQueryOptions {\n    namespaceName?: string;\n    extensionName?: string;\n    extensionVersion?: string;\n    extensionId?: string;\n    extensionUuid?: string;\n    namespaceUuid?: string;\n    includeAllVersions?: boolean;\n}\n\nexport interface VSXQueryResult {\n    extensions: VSXExtensionRaw[];\n}\n\n/**\n * This type describes the data as found in {@link VSXSearchEntry.allVersions}.\n *\n * Note that this type only represents one version of a given plugin, despite the name.\n */\nexport interface VSXAllVersions {\n    url: string;\n    version: string;\n    engines?: {\n        [version: string]: string;\n    };\n}\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/master/server/src/main/java/org/eclipse/openvsx/json/SearchEntryJson.java\n */\nexport interface VSXSearchEntry {\n    url: string;\n    files: {\n        download: string;\n        manifest?: string;\n        readme?: string;\n        license?: string;\n        icon?: string;\n    };\n    name: string;\n    namespace: string;\n    version: string;\n    timestamp: string;\n    averageRating?: number;\n    downloadCount: number;\n    displayName?: string;\n    description?: string;\n    /**\n     * May be undefined when {@link VSXSearchOptions.includeAllVersions} is\n     * `false` or `undefined`.\n     */\n    allVersions?: VSXAllVersions[];\n}\n\nexport type VSXExtensionNamespaceAccess = 'public' | 'restricted';\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/master/server/src/main/java/org/eclipse/openvsx/json/UserJson.java\n */\nexport interface VSXUser {\n    loginName: string;\n    homepage?: string;\n}\n\nexport interface VSXExtensionRawFiles {\n    download: string;\n    readme?: string;\n    license?: string;\n    icon?: string;\n}\n\n/**\n * Should be aligned with https://github.com/eclipse/openvsx/blob/master/server/src/main/java/org/eclipse/openvsx/json/ExtensionJson.java\n */\nexport interface VSXExtensionRaw {\n    error?: string;\n    namespaceUrl: string;\n    reviewsUrl: string;\n    name: string;\n    namespace: string;\n    publishedBy: VSXUser\n    namespaceAccess: VSXExtensionNamespaceAccess;\n    files: VSXExtensionRawFiles;\n    allVersions: {\n        [version: string]: string;\n    };\n    averageRating?: number;\n    downloadCount: number;\n    reviewCount: number;\n    version: string;\n    timestamp: string;\n    preview?: boolean;\n    displayName?: string;\n    description?: string;\n    categories?: string[];\n    tags?: string[];\n    license?: string;\n    homepage?: string;\n    repository?: string;\n    bugs?: string;\n    markdown?: string;\n    galleryColor?: string;\n    galleryTheme?: string;\n    qna?: string;\n    engines?: {\n        [engine: string]: string;\n    };\n}\n\nexport interface VSXResponseError extends Error {\n    statusCode: number;\n}\n\nexport namespace VSXResponseError {\n    export function is(error: unknown): error is VSXResponseError {\n        return !!error && typeof error === 'object' && typeof (error as VSXResponseError).statusCode === 'number';\n    }\n}\n\n/**\n * Builtin namespaces maintained by the framework.\n */\nexport namespace VSXBuiltinNamespaces {\n\n    /**\n     * Namespace for individual vscode builtin extensions.\n     */\n    export const VSCODE = 'vscode';\n\n    /**\n     * Namespace for vscode builtin extension packs.\n     * - corresponds to: https://github.com/eclipse-theia/vscode-builtin-extensions/blob/af9cfeb2ea23e1668a8340c1c2fb5afd56be07d7/src/create-extension-pack.js#L45\n     */\n    export const THEIA = 'eclipse-theia';\n\n    /**\n     * Determines if the extension namespace is a builtin maintained by the framework.\n     * @param namespace the extension namespace to verify.\n     */\n    export function is(namespace: string): boolean {\n        return namespace === VSCODE\n            || namespace === THEIA;\n    }\n}\n\nexport type OVSXClientProvider = (uri: string) => MaybePromise<OVSXClient>;\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport const SampleAppInfo = Symbol('SampleAppInfo') as symbol & interfaces.Abstract<SampleAppInfo>;\nexport interface SampleAppInfo {\n    getSelfOrigin(): Promise<string>;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { OVSXUrlResolver } from '@theia/vsx-registry/lib/common';\nimport { SampleAppInfo } from './sample-app-info';\n\nexport function rebindOVSXClientFactory(rebind: interfaces.Rebind): void {\n    // rebind the OVSX client factory so that we can replace patterns like \"${self}\" in the configs:\n    rebind(OVSXUrlResolver)\n        .toDynamicValue(ctx => {\n            const appInfo = ctx.container.get(SampleAppInfo);\n            const selfOrigin = appInfo.getSelfOrigin();\n            return async url => url.replace('${self}', await selfOrigin);\n        })\n        .inSingletonScope();\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { BackendApplicationContribution, BackendApplicationServer } from '@theia/core/lib/node';\nimport { SampleBackendApplicationServer } from './sample-backend-application-server';\nimport { SampleMockOpenVsxServer } from './sample-mock-open-vsx-server';\nimport { SampleAppInfo } from '../common/vsx/sample-app-info';\nimport { SampleBackendAppInfo } from './sample-backend-app-info';\nimport { rebindOVSXClientFactory } from '../common/vsx/sample-ovsx-client-factory';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    rebindOVSXClientFactory(rebind);\n    bind(SampleBackendAppInfo).toSelf().inSingletonScope();\n    bind(SampleAppInfo).toService(SampleBackendAppInfo);\n    bind(BackendApplicationContribution).toService(SampleBackendAppInfo);\n    // bind a mock/sample OpenVSX registry:\n    bind(BackendApplicationContribution).to(SampleMockOpenVsxServer).inSingletonScope();\n    if (process.env.SAMPLE_BACKEND_APPLICATION_SERVER) {\n        bind(BackendApplicationServer).to(SampleBackendApplicationServer).inSingletonScope();\n    }\n});\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { environment } from '@theia/core/lib/common';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { BackendApplicationCliContribution, BackendApplicationContribution } from '@theia/core/lib/node';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport * as net from 'net';\nimport { SampleAppInfo } from '../common/vsx/sample-app-info';\n\n@injectable()\nexport class SampleBackendAppInfo implements SampleAppInfo, BackendApplicationContribution {\n\n    protected addressDeferred = new Deferred<net.AddressInfo>();\n\n    @inject(BackendApplicationCliContribution)\n    protected backendCli: BackendApplicationCliContribution;\n\n    onStart(server: net.Server): void {\n        const address = server.address();\n        // eslint-disable-next-line no-null/no-null\n        if (typeof address === 'object' && address !== null) {\n            this.addressDeferred.resolve(address);\n        } else {\n            this.addressDeferred.resolve({\n                address: '127.0.0.1',\n                port: 3000,\n                family: '4'\n            });\n        }\n    }\n\n    async getSelfOrigin(): Promise<string> {\n        const { ssl } = this.backendCli;\n        const protocol = ssl ? 'https' : 'http';\n        const { address, port } = await this.addressDeferred.promise;\n        const hostname = environment.electron.is() ? 'localhost' : address;\n        return `${protocol}://${hostname}:${port}`;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { BackendApplicationServer } from '@theia/core/lib/node';\nimport express = require('@theia/core/shared/express');\n\n@injectable()\nexport class SampleBackendApplicationServer implements BackendApplicationServer {\n\n    configure(app: express.Application): void {\n        app.get('*', (req, res) => {\n            res.status(200).send('SampleBackendApplicationServer OK');\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport * as express from '@theia/core/shared/express';\nimport * as fs from 'fs';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { OVSXMockClient, VSXExtensionRaw } from '@theia/ovsx-client';\nimport * as path from 'path';\nimport { SampleAppInfo } from '../common/vsx/sample-app-info';\n\ntype VersionedId = `${string}.${string}@${string}`;\n\n/**\n * This class implements a very crude OpenVSX mock server for testing.\n *\n * See {@link configure}'s implementation for supported REST APIs.\n */\n@injectable()\nexport class SampleMockOpenVsxServer implements BackendApplicationContribution {\n\n    @inject(SampleAppInfo)\n    protected appInfo: SampleAppInfo;\n\n    get mockServerPath(): string {\n        return '/mock-open-vsx';\n    }\n\n    get pluginsDbPath(): string {\n        return '../../sample-plugins';\n    }\n\n    async configure(app: express.Application): Promise<void> {\n        const selfOrigin = await this.appInfo.getSelfOrigin();\n        const baseUrl = `${selfOrigin}${this.mockServerPath}`;\n        const pluginsDb = await this.findMockPlugins(this.pluginsDbPath, baseUrl);\n        const staticFileHandlers = new Map(Array.from(pluginsDb.entries(), ([key, value]) => [key, express.static(value.path)]));\n        const mockClient = new OVSXMockClient(Array.from(pluginsDb.values(), value => value.data));\n        app.use(\n            this.mockServerPath + '/api',\n            express.Router()\n                .get('/-/query', async (req, res) => {\n                    res.json(await mockClient.query(this.sanitizeQuery(req.query)));\n                })\n                .get('/-/search', async (req, res) => {\n                    res.json(await mockClient.search(this.sanitizeQuery(req.query)));\n                })\n                .get('/:namespace', async (req, res) => {\n                    const extensions = mockClient.extensions\n                        .filter(ext => req.params.namespace === ext.namespace)\n                        .map(ext => `${ext.namespaceUrl}/${ext.name}`);\n                    if (extensions.length === 0) {\n                        res.status(404).json({ error: `Namespace not found: ${req.params.namespace}` });\n                    } else {\n                        res.json({\n                            name: req.params.namespace,\n                            extensions\n                        });\n                    }\n                })\n                .get('/:namespace/:name', async (req, res) => {\n                    res.json(mockClient.extensions.find(ext => req.params.namespace === ext.namespace && req.params.name === ext.name));\n                })\n                .get('/:namespace/:name/reviews', async (req, res) => {\n                    res.json([]);\n                })\n                // implicitly GET/HEAD because of the express.static handlers\n                .use('/:namespace/:name/:version/file', async (req, res, next) => {\n                    const versionedId = this.getVersionedId(req.params.namespace, req.params.name, req.params.version);\n                    const staticFileHandler = staticFileHandlers.get(versionedId);\n                    if (!staticFileHandler) {\n                        return next();\n                    }\n                    staticFileHandler(req, res, next);\n                })\n        );\n    }\n\n    protected getVersionedId(namespace: string, name: string, version: string): VersionedId {\n        return `${namespace}.${name}@${version}`;\n    }\n\n    protected sanitizeQuery(query?: Record<string, unknown>): Record<string, string> {\n        return typeof query === 'object'\n            ? Object.fromEntries(Object.entries(query).filter(([key, value]) => typeof value === 'string') as [string, string][])\n            : {};\n    }\n\n    /**\n     * This method expects the following folder hierarchy: `pluginsDbPath/namespace/pluginName/pluginFiles...`\n     * @param pluginsDbPath where to look for plugins on the disk.\n     * @param baseUrl used when generating the URLs for {@link VSXExtensionRaw} properties.\n     */\n    protected async findMockPlugins(pluginsDbPath: string, baseUrl: string): Promise<Map<VersionedId, { path: string, data: VSXExtensionRaw }>> {\n        const url = new OVSXMockClient.UrlBuilder(baseUrl);\n        const result = new Map<VersionedId, { path: string, data: VSXExtensionRaw }>();\n        if (!await this.isDirectory(pluginsDbPath)) {\n            console.error(`ERROR: ${pluginsDbPath} is not a directory!`);\n            return result;\n        }\n        const namespaces = await fs.promises.readdir(pluginsDbPath);\n        await Promise.all(namespaces.map(async namespace => {\n            const namespacePath = path.join(pluginsDbPath, namespace);\n            if (!await this.isDirectory(namespacePath)) {\n                return;\n            }\n            const names = await fs.promises.readdir(namespacePath);\n            await Promise.all(names.map(async pluginName => {\n                const pluginPath = path.join(namespacePath, pluginName);\n                if (!await this.isDirectory(pluginPath)) {\n                    return;\n                }\n                const packageJsonPath = path.join(pluginPath, 'package.json');\n                const { name, version } = JSON.parse(await fs.promises.readFile(packageJsonPath, 'utf8'));\n                const versionedId = this.getVersionedId(namespace, name, version);\n                result.set(versionedId, {\n                    path: pluginPath,\n                    data: {\n                        allVersions: {},\n                        downloadCount: 0,\n                        files: {\n                            // the default generated name from vsce is NAME-VERSION.vsix\n                            download: url.extensionFileUrl(namespace, name, version, `/${name}-${version}.vsix`),\n                            icon: url.extensionFileUrl(namespace, name, version, '/icon128.png'),\n                            readme: url.extensionFileUrl(namespace, name, version, '/README.md')\n                        },\n                        name,\n                        namespace,\n                        namespaceAccess: 'public',\n                        namespaceUrl: url.namespaceUrl(namespace),\n                        publishedBy: {\n                            loginName: 'mock-open-vsx'\n                        },\n                        reviewCount: 0,\n                        reviewsUrl: url.extensionReviewsUrl(namespace, name),\n                        timestamp: new Date().toISOString(),\n                        version,\n                    }\n                });\n            }));\n        }));\n        return result;\n    }\n\n    protected async isDirectory(fsPath: string): Promise<boolean> {\n        return (await fs.promises.stat(fsPath)).isDirectory();\n    }\n}\n","module.exports = function (jsModule) {\n    switch (jsModule) {\n        case 'drivelist': return require('drivelist/build/Release/drivelist.node');\n    }\n    throw new Error(`unhandled module: \"${jsModule}\"`);\n}","\nconst path = require('path');\n\nexports.rgPath = path.join(__dirname, `./native/rg${process.platform === 'win32' ? '.exe' : ''}`);\n","// @ts-check\nconst { BackendApplicationConfigProvider } = require('@theia/core/lib/node/backend-application-config-provider');\nconst main = require('@theia/core/lib/node/main');\n\nBackendApplicationConfigProvider.set({\n    \"singleInstance\": false\n});\n\nconst serverModule = require('./server');\nconst serverAddress = main.start(serverModule());\n\nserverAddress.then(({ port, address, family }) => {\n    if (process && process.send) {\n        process.send({ port, address, family });\n    }\n});\n\nglobalThis.serverAddress = serverAddress;\n","// @ts-check\nrequire('reflect-metadata');\n\n// Erase the ELECTRON_RUN_AS_NODE variable from the environment, else Electron apps started using Theia will pick it up.\nif ('ELECTRON_RUN_AS_NODE' in process.env) {\n    delete process.env.ELECTRON_RUN_AS_NODE;\n}\n\nconst path = require('path');\nconst express = require('express');\nconst { Container } = require('inversify');\nconst { BackendApplication, BackendApplicationServer, CliManager } = require('@theia/core/lib/node');\nconst { backendApplicationModule } = require('@theia/core/lib/node/backend-application-module');\nconst { messagingBackendModule } = require('@theia/core/lib/node/messaging/messaging-backend-module');\nconst { loggerBackendModule } = require('@theia/core/lib/node/logger-backend-module');\n\nconst container = new Container();\ncontainer.load(backendApplicationModule);\ncontainer.load(messagingBackendModule);\ncontainer.load(loggerBackendModule);\n\nfunction defaultServeStatic(app) {\n    app.use(express.static(path.resolve(__dirname, '../../lib/frontend')))\n}\n\nfunction load(raw) {\n    return Promise.resolve(raw).then(\n        module => container.load(module.default)\n    );\n}\n\nasync function start(port, host, argv = process.argv) {\n    if (!container.isBound(BackendApplicationServer)) {\n        container.bind(BackendApplicationServer).toConstantValue({ configure: defaultServeStatic });\n    }\n    await container.get(CliManager).initializeCli(argv);\n    return container.get(BackendApplication).start(port, host);\n}\n\nmodule.exports = async (port, host, argv) => {\n    try {\n        await load(require('@theia/core/lib/node/i18n/i18n-backend-module'));\n        await load(require('@theia/core/lib/node/hosting/backend-hosting-module'));\n        await load(require('@theia/core/lib/node/request/backend-request-module'));\n        await load(require('@theia/filesystem/lib/node/filesystem-backend-module'));\n        await load(require('@theia/filesystem/lib/node/download/file-download-backend-module'));\n        await load(require('@theia/process/lib/common/process-common-module'));\n        await load(require('@theia/process/lib/node/process-backend-module'));\n        await load(require('@theia/workspace/lib/node/workspace-backend-module'));\n        await load(require('@theia/file-search/lib/node/file-search-backend-module'));\n        await load(require('@theia/search-in-workspace/lib/node/search-in-workspace-backend-module'));\n        await load(require('@theia/terminal/lib/node/terminal-backend-module'));\n        await load(require('@theia/task/lib/node/task-backend-module'));\n        await load(require('@theia/debug/lib/node/debug-backend-module'));\n        await load(require('@theia/plugin-ext/lib/plugin-ext-backend-module'));\n        await load(require('@theia/plugin-ext-vscode/lib/node/plugin-vscode-backend-module'));\n        await load(require('@theia/vsx-registry/lib/common/vsx-registry-common-module'));\n        await load(require('@theia/vsx-registry/lib/node/vsx-registry-backend-module'));\n        await load(require('@theia/api-samples/lib/node/api-samples-backend-module'));\n        await load(require('@theia/mini-browser/lib/node/mini-browser-backend-module'));\n        await load(require('@theia/git/lib/node/git-backend-module'));\n        await load(require('@theia/git/lib/node/env/git-env-module'));\n        await load(require('@theia/metrics/lib/node/metrics-backend-module'));\n        await load(require('@theia/plugin-dev/lib/node/plugin-dev-backend-module'));\n        await load(require('@theia/plugin-metrics/lib/node/plugin-metrics-backend-module'));\n        return await start(port, host, argv);\n    } catch (error) {\n        console.error('Failed to start the backend application:');\n        console.error(error);\n        process.exitCode = 1;\n        throw error;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { OS } from './os';\n\nexport const applicationPath = '/services/application';\n\nexport const ApplicationServer = Symbol('ApplicationServer');\n\nexport interface ApplicationServer {\n    getExtensionsInfos(): Promise<ExtensionInfo[]>;\n    getApplicationInfo(): Promise<ApplicationInfo | undefined>;\n    /**\n     * @deprecated since 1.25.0. Use `OS.backend.type()` instead.\n     */\n    getBackendOS(): Promise<OS.Type>;\n}\n\nexport interface ExtensionInfo {\n    name: string;\n    version: string;\n}\n\nexport interface ApplicationInfo {\n    name: string;\n    version: string;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/workbench/services/textfile/common/encoding.ts\n\n/* eslint-disable no-null/no-null */\n\nimport * as iconv from 'iconv-lite';\nimport { Buffer } from 'safer-buffer';\nimport { injectable } from 'inversify';\nimport { BinaryBuffer, BinaryBufferReadableStream, BinaryBufferReadable } from './buffer';\nimport { UTF8, UTF8_with_bom, UTF16be, UTF16le, UTF16be_BOM, UTF16le_BOM, UTF8_BOM } from './encodings';\nimport { newWriteableStream, ReadableStream, Readable } from './stream';\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512;   // number of bytes to look at to decide about a file being binary or not\nconst NO_ENCODING_GUESS_MIN_BYTES = 512;          // when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_ENCODING_GUESS_MIN_BYTES = 512 * 8;    // with auto guessing we want a lot more content to be read for guessing\nconst AUTO_ENCODING_GUESS_MAX_BYTES = 512 * 128;  // set an upper limit for the number of bytes we pass on to jschardet\n\n// we explicitly ignore a specific set of encodings from auto guessing\n// - ASCII: we never want this encoding (most UTF-8 files would happily detect as\n//          ASCII files and then you could not type non-ASCII characters anymore)\n// - UTF-16: we have our own detection logic for UTF-16\n// - UTF-32: we do not support this encoding in VSCode\nconst IGNORE_ENCODINGS = ['ascii', 'utf-16', 'utf-32'];\n\nexport interface ResourceEncoding {\n    encoding: string\n    hasBOM: boolean\n}\n\nexport interface DetectedEncoding {\n    encoding?: string\n    seemsBinary?: boolean\n}\n\nexport interface DecodeStreamOptions {\n    guessEncoding?: boolean;\n    minBytesRequiredForDetection?: number;\n\n    overwriteEncoding(detectedEncoding: string | undefined): Promise<string>;\n}\nexport interface DecodeStreamResult {\n    stream: ReadableStream<string>;\n    detected: DetectedEncoding;\n}\n\n@injectable()\nexport class EncodingService {\n\n    encode(value: string, options?: ResourceEncoding): BinaryBuffer {\n        let encoding = options?.encoding;\n        const addBOM = options?.hasBOM;\n        encoding = this.toIconvEncoding(encoding);\n        if (encoding === UTF8 && !addBOM) {\n            return BinaryBuffer.fromString(value);\n        }\n        const buffer = iconv.encode(value, encoding, { addBOM });\n        return BinaryBuffer.wrap(buffer);\n    }\n\n    decode(value: BinaryBuffer, encoding?: string): string {\n        const buffer = Buffer.from(value.buffer);\n        encoding = this.toIconvEncoding(encoding);\n        return iconv.decode(buffer, encoding);\n    }\n\n    exists(encoding: string): boolean {\n        encoding = this.toIconvEncoding(encoding);\n        return iconv.encodingExists(encoding);\n    }\n\n    toIconvEncoding(encoding?: string): string {\n        if (encoding === UTF8_with_bom || !encoding) {\n            return UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n        }\n        return encoding;\n    }\n\n    async toResourceEncoding(encoding: string, options: {\n        overwriteEncoding?: boolean,\n        read: (length: number) => Promise<Uint8Array>\n    }): Promise<ResourceEncoding> {\n        // Some encodings come with a BOM automatically\n        if (encoding === UTF16be || encoding === UTF16le || encoding === UTF8_with_bom) {\n            return { encoding, hasBOM: true };\n        }\n\n        // Ensure that we preserve an existing BOM if found for UTF8\n        // unless we are instructed to overwrite the encoding\n        const overwriteEncoding = options?.overwriteEncoding;\n        if (!overwriteEncoding && encoding === UTF8) {\n            try {\n                // stream here to avoid fetching the whole content on write\n                const buffer = await options.read(UTF8_BOM.length);\n                if (this.detectEncodingByBOMFromBuffer(Buffer.from(buffer), buffer.byteLength) === UTF8_with_bom) {\n                    return { encoding, hasBOM: true };\n                }\n            } catch (error) {\n                // ignore - file might not exist\n            }\n        }\n\n        return { encoding, hasBOM: false };\n    }\n\n    async detectEncoding(data: BinaryBuffer, autoGuessEncoding?: boolean): Promise<DetectedEncoding> {\n        const buffer = Buffer.from(data.buffer);\n        const bytesRead = data.byteLength;\n        // Always first check for BOM to find out about encoding\n        let encoding = this.detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n        // Detect 0 bytes to see if file is binary or UTF-16 LE/BEÏ\n        // unless we already know that this file has a UTF-16 encoding\n        let seemsBinary = false;\n        if (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n            let couldBeUTF16LE = true; // e.g. 0xAA 0x00\n            let couldBeUTF16BE = true; // e.g. 0x00 0xAA\n            let containsZeroByte = false;\n\n            // This is a simplified guess to detect UTF-16 BE or LE by just checking if\n            // the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n            // this would be the odd byte index and for UTF-16 BE the even one.\n            // Note: this can produce false positives (a binary file that uses a 2-byte\n            // encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n            // that is using 4 bytes to encode a character).\n            for (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n                const isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n                const isZeroByte = (buffer.readUInt8(i) === 0);\n\n                if (isZeroByte) {\n                    containsZeroByte = true;\n                }\n\n                // UTF-16 LE: expect e.g. 0xAA 0x00\n                if (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n                    couldBeUTF16LE = false;\n                }\n\n                // UTF-16 BE: expect e.g. 0x00 0xAA\n                if (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n                    couldBeUTF16BE = false;\n                }\n\n                // Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n                if (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n                    break;\n                }\n            }\n\n            // Handle case of 0-byte included\n            if (containsZeroByte) {\n                if (couldBeUTF16LE) {\n                    encoding = UTF16le;\n                } else if (couldBeUTF16BE) {\n                    encoding = UTF16be;\n                } else {\n                    seemsBinary = true;\n                }\n            }\n        }\n\n        // Auto guess encoding if configured\n        if (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n            const guessedEncoding = await this.guessEncodingByBuffer(buffer.slice(0, bytesRead));\n            return {\n                seemsBinary: false,\n                encoding: guessedEncoding\n            };\n        }\n\n        return { seemsBinary, encoding };\n    }\n\n    protected detectEncodingByBOMFromBuffer(buffer: Buffer, bytesRead: number): typeof UTF8_with_bom | typeof UTF16le | typeof UTF16be | undefined {\n        if (!buffer || bytesRead < UTF16be_BOM.length) {\n            return undefined;\n        }\n\n        const b0 = buffer.readUInt8(0);\n        const b1 = buffer.readUInt8(1);\n\n        // UTF-16 BE\n        if (b0 === UTF16be_BOM[0] && b1 === UTF16be_BOM[1]) {\n            return UTF16be;\n        }\n\n        // UTF-16 LE\n        if (b0 === UTF16le_BOM[0] && b1 === UTF16le_BOM[1]) {\n            return UTF16le;\n        }\n\n        if (bytesRead < UTF8_BOM.length) {\n            return undefined;\n        }\n\n        const b2 = buffer.readUInt8(2);\n\n        // UTF-8\n        if (b0 === UTF8_BOM[0] && b1 === UTF8_BOM[1] && b2 === UTF8_BOM[2]) {\n            return UTF8_with_bom;\n        }\n\n        return undefined;\n    }\n\n    protected async guessEncodingByBuffer(buffer: Buffer): Promise<string | undefined> {\n        const jschardet = await import('jschardet');\n\n        const guessed = jschardet.detect(buffer.slice(0, AUTO_ENCODING_GUESS_MAX_BYTES)); // ensure to limit buffer for guessing due to https://github.com/aadsm/jschardet/issues/53\n        if (!guessed || !guessed.encoding) {\n            return undefined;\n        }\n\n        const enc = guessed.encoding.toLowerCase();\n        if (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n            return undefined; // see comment above why we ignore some encodings\n        }\n\n        return this.toIconvEncoding(guessed.encoding);\n    }\n\n    decodeStream(source: BinaryBufferReadableStream, options: DecodeStreamOptions): Promise<DecodeStreamResult> {\n        const minBytesRequiredForDetection = options.minBytesRequiredForDetection ?? options.guessEncoding ? AUTO_ENCODING_GUESS_MIN_BYTES : NO_ENCODING_GUESS_MIN_BYTES;\n\n        return new Promise<DecodeStreamResult>((resolve, reject) => {\n            const target = newWriteableStream<string>(strings => strings.join(''));\n\n            const bufferedChunks: BinaryBuffer[] = [];\n            let bytesBuffered = 0;\n\n            let decoder: iconv.DecoderStream | undefined = undefined;\n\n            const createDecoder = async () => {\n                try {\n\n                    // detect encoding from buffer\n                    const detected = await this.detectEncoding(BinaryBuffer.concat(bufferedChunks), options.guessEncoding);\n\n                    // ensure to respect overwrite of encoding\n                    detected.encoding = await options.overwriteEncoding(detected.encoding);\n\n                    // decode and write buffered content\n                    decoder = iconv.getDecoder(this.toIconvEncoding(detected.encoding));\n                    const decoded = decoder.write(Buffer.from(BinaryBuffer.concat(bufferedChunks).buffer));\n                    target.write(decoded);\n\n                    bufferedChunks.length = 0;\n                    bytesBuffered = 0;\n\n                    // signal to the outside our detected encoding and final decoder stream\n                    resolve({\n                        stream: target,\n                        detected\n                    });\n                } catch (error) {\n                    reject(error);\n                }\n            };\n\n            // Stream error: forward to target\n            source.on('error', error => target.error(error));\n\n            // Stream data\n            source.on('data', async chunk => {\n\n                // if the decoder is ready, we just write directly\n                if (decoder) {\n                    target.write(decoder.write(Buffer.from(chunk.buffer)));\n                } else {\n                    bufferedChunks.push(chunk);\n                    bytesBuffered += chunk.byteLength;\n\n                    // buffered enough data for encoding detection, create stream\n                    if (bytesBuffered >= minBytesRequiredForDetection) {\n\n                        // pause stream here until the decoder is ready\n                        source.pause();\n\n                        await createDecoder();\n\n                        // resume stream now that decoder is ready but\n                        // outside of this stack to reduce recursion\n                        setTimeout(() => source.resume());\n                    }\n                }\n            });\n\n            // Stream end\n            source.on('end', async () => {\n\n                // we were still waiting for data to do the encoding\n                // detection. thus, wrap up starting the stream even\n                // without all the data to get things going\n                if (!decoder) {\n                    await createDecoder();\n                }\n\n                // end the target with the remainders of the decoder\n                target.end(decoder?.end());\n            });\n        });\n    }\n\n    encodeStream(value: string | Readable<string>, options?: ResourceEncoding): Promise<BinaryBuffer | BinaryBufferReadable>\n    encodeStream(value?: string | Readable<string>, options?: ResourceEncoding): Promise<BinaryBuffer | BinaryBufferReadable | undefined>;\n    async encodeStream(value: string | Readable<string> | undefined, options?: ResourceEncoding): Promise<BinaryBuffer | BinaryBufferReadable | undefined> {\n        let encoding = options?.encoding;\n        const addBOM = options?.hasBOM;\n        encoding = this.toIconvEncoding(encoding);\n        if (encoding === UTF8 && !addBOM) {\n            return value === undefined ? undefined : typeof value === 'string' ?\n                BinaryBuffer.fromString(value) : BinaryBufferReadable.fromReadable(value);\n        }\n\n        value = value || '';\n        const readable = typeof value === 'string' ? Readable.fromString(value) : value;\n        const encoder = iconv.getEncoder(encoding, { addBOM });\n\n        let bytesWritten = false;\n        let done = false;\n\n        return {\n            read(): BinaryBuffer | null {\n                if (done) {\n                    return null;\n                }\n\n                const chunk = readable.read();\n                if (typeof chunk !== 'string') {\n                    done = true;\n\n                    // If we are instructed to add a BOM but we detect that no\n                    // bytes have been written, we must ensure to return the BOM\n                    // ourselves so that we comply with the contract.\n                    if (!bytesWritten && addBOM) {\n                        switch (encoding) {\n                            case UTF8:\n                            case UTF8_with_bom:\n                                return BinaryBuffer.wrap(Uint8Array.from(UTF8_BOM));\n                            case UTF16be:\n                                return BinaryBuffer.wrap(Uint8Array.from(UTF16be_BOM));\n                            case UTF16le:\n                                return BinaryBuffer.wrap(Uint8Array.from(UTF16le_BOM));\n                        }\n                    }\n\n                    const leftovers = encoder.end();\n                    if (leftovers && leftovers.length > 0) {\n                        bytesWritten = true;\n                        return BinaryBuffer.wrap(leftovers);\n                    }\n\n                    return null;\n                }\n\n                bytesWritten = true;\n\n                return BinaryBuffer.wrap(encoder.write(chunk));\n            }\n        };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport const UTF16be_BOM = [0xFE, 0xFF];\nexport const UTF16le_BOM = [0xFF, 0xFE];\nexport const UTF8_BOM = [0xEF, 0xBB, 0xBF];\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const envVariablesPath = '/services/envs';\n\nexport const EnvVariablesServer = Symbol('EnvVariablesServer');\nexport interface EnvVariablesServer {\n    getExecPath(): Promise<string>\n    getVariables(): Promise<EnvVariable[]>\n    getValue(key: string): Promise<EnvVariable | undefined>\n    getConfigDirUri(): Promise<string>;\n    /**\n     * Resolves to a URI representing the current user's home directory.\n     */\n    getHomeDirUri(): Promise<string>;\n    /**\n     * Resolves to an array of URIs pointing to the available drives on the filesystem.\n     */\n    getDrives(): Promise<string[]>;\n}\n\nexport interface EnvVariable {\n    readonly name: string\n    readonly value: string | undefined\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './env-variables-protocol';\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Localization } from './localization';\n\nexport const LocalizationServerPath = '/localization-server';\n\nexport const LocalizationServer = Symbol('LocalizationServer');\n\nexport interface LocalizationServer {\n    loadLocalization(languageId: string): Promise<Localization>;\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const keytarServicePath = '/services/keytar';\n\nexport const KeytarService = Symbol('KeytarService');\nexport interface KeytarService {\n    setPassword(service: string, account: string, password: string): Promise<void>;\n    getPassword(service: string, account: string): Promise<string | undefined>;\n    deletePassword(service: string, account: string): Promise<boolean>;\n    findPassword(service: string): Promise<string | undefined>;\n    findCredentials(service: string): Promise<Array<{ account: string, password: string }>>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { WriteBuffer } from '../message-rpc';\nimport { Uint8ArrayReadBuffer, Uint8ArrayWriteBuffer } from '../message-rpc/uint8-array-message-buffer';\nimport { AbstractChannel } from '../message-rpc/channel';\nimport { Disposable } from '../disposable';\n\n/**\n * A channel that manages the main websocket connection between frontend and backend. All service channels\n * are reusing this main channel. (multiplexing). An {@link IWebSocket} abstraction is used to keep the implementation\n * independent of the actual websocket implementation and its execution context (backend vs. frontend).\n */\nexport class WebSocketChannel extends AbstractChannel {\n    static wsPath = '/services';\n\n    constructor(protected readonly socket: IWebSocket) {\n        super();\n        this.toDispose.push(Disposable.create(() => socket.close()));\n        socket.onClose((reason, code) => this.onCloseEmitter.fire({ reason, code }));\n        socket.onClose(() => this.close());\n        socket.onError(error => this.onErrorEmitter.fire(error));\n        socket.onMessage(data => this.onMessageEmitter.fire(() => {\n            // In the browser context socketIO receives binary messages as ArrayBuffers.\n            // So we have to convert them to a Uint8Array before delegating the message to the read buffer.\n            const buffer = data instanceof ArrayBuffer ? new Uint8Array(data) : data;\n            return new Uint8ArrayReadBuffer(buffer);\n        }));\n    }\n\n    getWriteBuffer(): WriteBuffer {\n        const result = new Uint8ArrayWriteBuffer();\n\n        result.onCommit(buffer => {\n            if (this.socket.isConnected()) {\n                this.socket.send(buffer);\n            }\n        });\n\n        return result;\n    }\n}\n\n/**\n * An abstraction that enables reuse of the `{@link WebSocketChannel} class in the frontend and backend\n * independent of the actual underlying socket implementation.\n */\nexport interface IWebSocket {\n    /**\n     * Sends the given message over the web socket in binary format.\n     * @param message The binary message.\n     */\n    send(message: Uint8Array): void;\n    /**\n     * Closes the websocket from the local side.\n     */\n    close(): void;\n    /**\n     * The connection state of the web socket.\n     */\n    isConnected(): boolean;\n    /**\n     * Listener callback to handle incoming messages.\n     * @param cb The callback.\n     */\n    onMessage(cb: (message: Uint8Array) => void): void;\n    /**\n     * Listener callback to handle socket errors.\n     * @param cb The callback.\n     */\n    onError(cb: (reason: any) => void): void;\n    /**\n     * Listener callback to handle close events (Remote side).\n     * @param cb The callback.\n     */\n    onClose(cb: (reason: string, code?: number) => void): void;\n}\n\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { JSONValue } from '@phosphor/coreutils';\nimport { IJSONSchema } from '../json-schema';\nimport { PreferenceScope } from './preference-scope';\nimport { isObject, isString } from '../types';\n\nexport interface PreferenceSchema {\n    [name: string]: any,\n    scope?: 'application' | 'window' | 'resource' | PreferenceScope,\n    overridable?: boolean;\n    properties: PreferenceSchemaProperties\n}\nexport namespace PreferenceSchema {\n    export function is(obj: unknown): obj is PreferenceSchema {\n        return isObject<PreferenceSchema>(obj) && PreferenceSchemaProperties.is(obj.properties);\n    }\n    export function getDefaultScope(schema: PreferenceSchema): PreferenceScope {\n        let defaultScope: PreferenceScope = PreferenceScope.Workspace;\n        if (!PreferenceScope.is(schema.scope)) {\n            defaultScope = PreferenceScope.fromString(<string>schema.scope) || PreferenceScope.Workspace;\n        } else {\n            defaultScope = schema.scope;\n        }\n        return defaultScope;\n    }\n}\n\nexport interface PreferenceSchemaProperties {\n    [name: string]: PreferenceSchemaProperty\n}\nexport namespace PreferenceSchemaProperties {\n    export function is(obj: unknown): obj is PreferenceSchemaProperties {\n        return isObject(obj);\n    }\n}\n\nexport interface PreferenceDataSchema {\n    [name: string]: any,\n    scope?: PreferenceScope,\n    properties: {\n        [name: string]: PreferenceDataProperty\n    }\n    patternProperties: {\n        [name: string]: PreferenceDataProperty\n    };\n}\n\nexport interface PreferenceItem extends IJSONSchema {\n    /**\n     * preference default value, if `undefined` then `default`\n     */\n    defaultValue?: JSONValue;\n    overridable?: boolean;\n    included?: boolean;\n    [key: string]: any;\n}\nexport interface PreferenceSchemaProperty extends PreferenceItem {\n    description?: string;\n    markdownDescription?: string;\n    scope?: 'application' | 'machine' | 'window' | 'resource' | 'language-overridable' | 'machine-overridable' | PreferenceScope;\n}\n\nexport interface PreferenceDataProperty extends PreferenceItem {\n    description?: string;\n    markdownDescription?: string;\n    scope?: PreferenceScope;\n    typeDetails?: any;\n}\nexport namespace PreferenceDataProperty {\n    export function fromPreferenceSchemaProperty(schemaProps: PreferenceSchemaProperty, defaultScope: PreferenceScope = PreferenceScope.Workspace): PreferenceDataProperty {\n        if (!schemaProps.scope) {\n            schemaProps.scope = defaultScope;\n        } else if (isString(schemaProps.scope)) {\n            return Object.assign(schemaProps, { scope: PreferenceScope.fromString(schemaProps.scope) || defaultScope });\n        }\n        return <PreferenceDataProperty>schemaProps;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport enum PreferenceScope {\n    Default,\n    User,\n    Workspace,\n    Folder\n}\n\nexport namespace PreferenceScope {\n    export function is(scope: unknown): scope is PreferenceScope {\n        return typeof scope === 'number' && getScopes().includes(scope);\n    }\n\n    /**\n     * @returns preference scopes from broadest to narrowest: Default -> Folder.\n     */\n    export function getScopes(): PreferenceScope[] {\n        return Object.values(PreferenceScope).filter(nameOrIndex => !isNaN(Number(nameOrIndex))) as PreferenceScope[];\n    }\n\n    /**\n     * @returns preference scopes from narrowest to broadest. Folder -> Default.\n     */\n    export function getReversedScopes(): PreferenceScope[] {\n        return getScopes().reverse();\n    }\n\n    export function getScopeNames(scope?: PreferenceScope): string[] {\n        const names: string[] = [];\n        const scopes = getScopes();\n        if (scope) {\n            for (const scopeIndex of scopes) {\n                if (scopeIndex <= scope) {\n                    names.push(PreferenceScope[scopeIndex]);\n                }\n            }\n        }\n        return names;\n    }\n\n    export function fromString(strScope: string): PreferenceScope | undefined {\n        switch (strScope) {\n            case 'application':\n                return PreferenceScope.User;\n            case 'window':\n                return PreferenceScope.Folder;\n            case 'resource':\n                return PreferenceScope.Folder;\n            case 'language-overridable':\n                return PreferenceScope.Folder;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from 'inversify';\nimport { ApplicationServer, ExtensionInfo, ApplicationInfo } from '../common/application-protocol';\nimport { ApplicationPackage } from '@theia/application-package';\nimport { OS } from '../common/os';\n\n@injectable()\nexport class ApplicationServerImpl implements ApplicationServer {\n\n    @inject(ApplicationPackage)\n    protected readonly applicationPackage: ApplicationPackage;\n\n    getExtensionsInfos(): Promise<ExtensionInfo[]> {\n        const extensions = this.applicationPackage.extensionPackages;\n        const infos: ExtensionInfo[] = extensions.map(extension => ({ name: extension.name, version: extension.version }));\n        return Promise.resolve(infos);\n    }\n\n    getApplicationInfo(): Promise<ApplicationInfo | undefined> {\n        const pck = this.applicationPackage.pck;\n        if (pck.name && pck.version) {\n            const name = pck.name;\n            const version = pck.version;\n\n            return Promise.resolve({ name, version });\n        }\n        return Promise.resolve(undefined);\n    }\n\n    async getBackendOS(): Promise<OS.Type> {\n        return OS.type();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { BackendApplicationConfig, deepmerge } from '@theia/application-package/lib/application-props';\n\nexport class BackendApplicationConfigProvider {\n\n    private static KEY = Symbol('BackendApplicationConfigProvider');\n\n    static get(): BackendApplicationConfig {\n        const config = BackendApplicationConfigProvider.doGet();\n        if (config === undefined) {\n            throw new Error('The configuration is not set. Did you call BackendApplicationConfigProvider#set?');\n        }\n        return config;\n    }\n\n    static set(config: BackendApplicationConfig.Partial): void {\n        if (BackendApplicationConfigProvider.doGet() !== undefined) {\n            throw new Error('The configuration is already set.');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const globalObject = global as any;\n        const key = BackendApplicationConfigProvider.KEY;\n        globalObject[key] = deepmerge(BackendApplicationConfig.DEFAULT, config);\n    }\n\n    private static doGet(): BackendApplicationConfig | undefined {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const globalObject = global as any;\n        const key = BackendApplicationConfigProvider.KEY;\n        return globalObject[key];\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, decorate, injectable } from 'inversify';\nimport { ApplicationPackage } from '@theia/application-package';\nimport { REQUEST_SERVICE_PATH } from '@theia/request';\nimport {\n    bindContributionProvider, MessageService, MessageClient, ConnectionHandler, RpcConnectionHandler,\n    CommandService, commandServicePath, messageServicePath, OSBackendProvider, OSBackendProviderPath\n} from '../common';\nimport { BackendApplication, BackendApplicationContribution, BackendApplicationCliContribution, BackendApplicationServer } from './backend-application';\nimport { CliManager, CliContribution } from './cli';\nimport { IPCConnectionProvider } from './messaging';\nimport { ApplicationServerImpl } from './application-server';\nimport { ApplicationServer, applicationPath } from '../common/application-protocol';\nimport { EnvVariablesServer, envVariablesPath } from './../common/env-variables';\nimport { EnvVariablesServerImpl } from './env-variables';\nimport { ConnectionContainerModule } from './messaging/connection-container-module';\nimport { QuickPickService, quickPickServicePath } from '../common/quick-pick-service';\nimport { WsRequestValidator, WsRequestValidatorContribution } from './ws-request-validators';\nimport { KeytarService, keytarServicePath } from '../common/keytar-protocol';\nimport { KeytarServiceImpl } from './keytar-server';\nimport { ContributionFilterRegistry, ContributionFilterRegistryImpl } from '../common/contribution-filter';\nimport { EnvironmentUtils } from './environment-utils';\nimport { ProcessUtils } from './process-utils';\nimport { ProxyCliContribution } from './request/proxy-cli-contribution';\nimport { bindNodeStopwatch, bindBackendStopwatchServer } from './performance';\nimport { OSBackendProviderImpl } from './os-backend-provider';\nimport { BackendRequestFacade } from './request/backend-request-facade';\nimport { FileSystemLocking, FileSystemLockingImpl } from './filesystem-locking';\n\ndecorate(injectable(), ApplicationPackage);\n\nconst commandConnectionModule = ConnectionContainerModule.create(({ bindFrontendService }) => {\n    bindFrontendService(commandServicePath, CommandService);\n});\n\nconst messageConnectionModule = ConnectionContainerModule.create(({ bind, bindFrontendService }) => {\n    bindFrontendService(messageServicePath, MessageClient);\n    bind(MessageService).toSelf().inSingletonScope();\n});\n\nconst quickPickConnectionModule = ConnectionContainerModule.create(({ bindFrontendService }) => {\n    bindFrontendService(quickPickServicePath, QuickPickService);\n});\n\nexport const backendApplicationModule = new ContainerModule(bind => {\n    bind(ConnectionContainerModule).toConstantValue(commandConnectionModule);\n    bind(ConnectionContainerModule).toConstantValue(messageConnectionModule);\n    bind(ConnectionContainerModule).toConstantValue(quickPickConnectionModule);\n\n    bind(CliManager).toSelf().inSingletonScope();\n    bindContributionProvider(bind, CliContribution);\n\n    bind(BackendApplicationCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(BackendApplicationCliContribution);\n\n    bind(BackendApplication).toSelf().inSingletonScope();\n    bindContributionProvider(bind, BackendApplicationContribution);\n    // Bind the BackendApplicationServer as a BackendApplicationContribution\n    // and fallback to an empty contribution if never bound.\n    bind(BackendApplicationContribution).toDynamicValue(ctx => {\n        if (ctx.container.isBound(BackendApplicationServer)) {\n            return ctx.container.get(BackendApplicationServer);\n        } else {\n            console.warn('no BackendApplicationServer is set, frontend might not be available');\n            return {};\n        }\n    }).inSingletonScope();\n\n    bind(IPCConnectionProvider).toSelf().inSingletonScope();\n\n    bind(ApplicationServerImpl).toSelf().inSingletonScope();\n    bind(ApplicationServer).toService(ApplicationServerImpl);\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(applicationPath, () =>\n            ctx.container.get(ApplicationServer)\n        )\n    ).inSingletonScope();\n\n    bind(EnvVariablesServer).to(EnvVariablesServerImpl).inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(envVariablesPath, () => {\n            const envVariablesServer = ctx.container.get<EnvVariablesServer>(EnvVariablesServer);\n            return envVariablesServer;\n        })\n    ).inSingletonScope();\n\n    bind(ApplicationPackage).toDynamicValue(({ container }) => {\n        const { projectPath } = container.get(BackendApplicationCliContribution);\n        return new ApplicationPackage({ projectPath });\n    }).inSingletonScope();\n\n    bind(WsRequestValidator).toSelf().inSingletonScope();\n    bindContributionProvider(bind, WsRequestValidatorContribution);\n    bind(KeytarService).to(KeytarServiceImpl).inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(keytarServicePath, () => ctx.container.get<KeytarService>(KeytarService))\n    ).inSingletonScope();\n\n    bind(ContributionFilterRegistry).to(ContributionFilterRegistryImpl).inSingletonScope();\n\n    bind(EnvironmentUtils).toSelf().inSingletonScope();\n    bind(ProcessUtils).toSelf().inSingletonScope();\n\n    bind(OSBackendProviderImpl).toSelf().inSingletonScope();\n    bind(OSBackendProvider).toService(OSBackendProviderImpl);\n    bind(ConnectionHandler).toDynamicValue(\n        ctx => new RpcConnectionHandler(OSBackendProviderPath, () => ctx.container.get(OSBackendProvider))\n    ).inSingletonScope();\n\n    bind(ProxyCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(ProxyCliContribution);\n\n    bind(BackendRequestFacade).toSelf().inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(\n        ctx => new RpcConnectionHandler(REQUEST_SERVICE_PATH, () => ctx.container.get(BackendRequestFacade))\n    ).inSingletonScope();\n\n    bindNodeStopwatch(bind);\n    bindBackendStopwatchServer(bind);\n\n    bind(FileSystemLocking).to(FileSystemLockingImpl).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { LoggerWatcher } from '../common/logger-watcher';\nimport { LogLevelCliContribution } from './logger-cli-contribution';\nimport { ILoggerServer, ILoggerClient, ConsoleLogger } from '../common/logger-protocol';\n\n@injectable()\nexport class ConsoleLoggerServer implements ILoggerServer {\n\n    protected client: ILoggerClient | undefined = undefined;\n\n    @inject(LoggerWatcher)\n    protected watcher: LoggerWatcher;\n\n    @inject(LogLevelCliContribution)\n    protected cli: LogLevelCliContribution;\n\n    @postConstruct()\n    protected init(): void {\n        for (const name of Object.keys(this.cli.logLevels)) {\n            this.setLogLevel(name, this.cli.logLevels[name]);\n        }\n    }\n\n    async setLogLevel(name: string, newLogLevel: number): Promise<void> {\n        const event = {\n            loggerName: name,\n            newLogLevel\n        };\n        if (this.client !== undefined) {\n            this.client.onLogLevelChanged(event);\n        }\n        this.watcher.fireLogLevelChanged(event);\n    }\n\n    async getLogLevel(name: string): Promise<number> {\n        return this.cli.logLevelFor(name);\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    async log(name: string, logLevel: number, message: string, params: any[]): Promise<void> {\n        const configuredLogLevel = await this.getLogLevel(name);\n        if (logLevel >= configuredLogLevel) {\n            ConsoleLogger.log(name, logLevel, message, params);\n        }\n    }\n\n    async child(name: string): Promise<void> {\n        this.setLogLevel(name, this.cli.logLevelFor(name));\n    }\n\n    dispose(): void { }\n\n    setClient(client: ILoggerClient | undefined): void {\n        this.client = client;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018-2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { join } from 'path';\nimport { homedir } from 'os';\nimport { injectable } from 'inversify';\nimport * as drivelist from 'drivelist';\nimport { EnvVariable, EnvVariablesServer } from '../../common/env-variables';\nimport { isWindows } from '../../common/os';\nimport { FileUri } from '../file-uri';\n\n@injectable()\nexport class EnvVariablesServerImpl implements EnvVariablesServer {\n\n    protected readonly envs: { [key: string]: EnvVariable } = {};\n    protected readonly homeDirUri = FileUri.create(homedir()).toString();\n    protected readonly configDirUri: Promise<string>;\n\n    constructor() {\n        this.configDirUri = this.createConfigDirUri();\n        this.configDirUri.then(configDirUri => console.log(`Configuration directory URI: '${configDirUri}'`));\n        const prEnv = process.env;\n        Object.keys(prEnv).forEach((key: string) => {\n            let keyName = key;\n            if (isWindows) {\n                keyName = key.toLowerCase();\n            }\n            this.envs[keyName] = { 'name': keyName, 'value': prEnv[key] };\n        });\n    }\n\n    protected async createConfigDirUri(): Promise<string> {\n        return FileUri.create(process.env.THEIA_CONFIG_DIR || join(homedir(), '.theia')).toString();\n    }\n\n    async getExecPath(): Promise<string> {\n        return process.execPath;\n    }\n\n    async getVariables(): Promise<EnvVariable[]> {\n        return Object.keys(this.envs).map(key => this.envs[key]);\n    }\n\n    async getValue(key: string): Promise<EnvVariable | undefined> {\n        if (isWindows) {\n            key = key.toLowerCase();\n        }\n        return this.envs[key];\n    }\n\n    getConfigDirUri(): Promise<string> {\n        return this.configDirUri;\n    }\n\n    async getHomeDirUri(): Promise<string> {\n        return this.homeDirUri;\n    }\n\n    async getDrives(): Promise<string[]> {\n        const uris: string[] = [];\n        const drives = await drivelist.list();\n        for (const drive of drives) {\n            for (const mountpoint of drive.mountpoints) {\n                if (this.filterHiddenPartitions(mountpoint.path)) {\n                    uris.push(FileUri.create(mountpoint.path).toString());\n                }\n            }\n        }\n        return uris;\n    }\n\n    /**\n     * Filters hidden and system partitions.\n     */\n    protected filterHiddenPartitions(path: string): boolean {\n        // OS X: This is your sleep-image. When your Mac goes to sleep it writes the contents of its memory to the hard disk. (https://bit.ly/2R6cztl)\n        if (path === '/private/var/vm') {\n            return false;\n        }\n        // Ubuntu: This system partition is simply the boot partition created when the computers mother board runs UEFI rather than BIOS. (https://bit.ly/2N5duHr)\n        if (path === '/boot/efi') {\n            return false;\n        }\n        return true;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './env-variables-server';\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class EnvironmentUtils {\n\n    /**\n     * Merge a given record of environment variables with the process environment variables.\n     * Empty string values will not be included in the final env.\n     * @param env desired environment to merge with `process.env`.\n     * @returns a normalized merged record of valid environment variables.\n     */\n    mergeProcessEnv(env: Record<string, string | null> = {}): Record<string, string> {\n        env = this.normalizeEnv(env);\n        // eslint-disable-next-line no-null/no-null\n        const mergedEnv: Record<string, string> = Object.create(null);\n        for (const [key, value] of Object.entries(this.normalizeEnv(process.env))) {\n            // Ignore keys from `process.env` that are overridden in `env`. Accept only non-empty strings.\n            if (!(key in env) && value) { mergedEnv[key] = value; }\n        }\n        for (const [key, value] of Object.entries(env)) {\n            // Accept only non-empty strings from the `env` object.\n            if (value) { mergedEnv[key] = value; }\n        }\n        return mergedEnv;\n    }\n\n    /**\n     * Normalize an environment record for a given OS.\n     *\n     * On Windows it will uppercase all keys.\n     *\n     * @param env Environment variables map to normalize.\n     * @param platform Platform to normalize for.\n     * @returns New object with normalized environment variables.\n     */\n    normalizeEnv<T>(env: Record<string, T>): Record<string, T> {\n        if (this.getPlatform() !== 'win32') {\n            return { ...env };\n        }\n        const normalized: Record<string, T> = {};\n        for (const [key, value] of Object.entries(env)) {\n            normalized[key.toLocaleUpperCase()] = value;\n        }\n        return normalized;\n    }\n\n    protected getPlatform(): NodeJS.Platform {\n        return process.platform;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct } from 'inversify';\n\n/**\n * **Important: This component is not bound on Electron.**\n *\n * Component handling the different hosts the Theia backend should be reachable at.\n *\n * Hosts should be set through the `THEIA_HOSTS` environment variable as a comma-separated list of hosts.\n *\n * If you do not set this variable, we'll consider that we don't know where the application is hosted at.\n */\n@injectable()\nexport class BackendApplicationHosts {\n\n    protected readonly _hosts = new Set<string>();\n    /**\n     * Set of domains that the application is supposed to be reachable at.\n     * If the set is empty it means that we don't know where we are hosted.\n     * You can check for this with `.hasKnownHosts()`.\n     */\n    get hosts(): ReadonlySet<string> {\n        return this._hosts;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const theiaHostsEnv = process.env['THEIA_HOSTS'];\n        if (theiaHostsEnv) {\n            theiaHostsEnv.split(',').forEach(host => {\n                const trimmed = host.trim();\n                if (trimmed.length > 0) {\n                    this._hosts.add(trimmed);\n                }\n            });\n        }\n    }\n\n    /**\n     * Do we know where we are hosted?\n     */\n    hasKnownHosts(): boolean {\n        return this._hosts.size > 0;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { WsRequestValidatorContribution } from '../ws-request-validators';\nimport { BackendApplicationHosts } from './backend-application-hosts';\nimport { WsOriginValidator } from './ws-origin-validator';\n\nexport default new ContainerModule(bind => {\n    bind(BackendApplicationHosts).toSelf().inSingletonScope();\n    bind(WsOriginValidator).toSelf().inSingletonScope();\n    bind(WsRequestValidatorContribution).toService(WsOriginValidator);\n});\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as http from 'http';\nimport { inject, injectable } from 'inversify';\nimport * as url from 'url';\nimport { WsRequestValidatorContribution } from '../ws-request-validators';\nimport { BackendApplicationHosts } from './backend-application-hosts';\n\n@injectable()\nexport class WsOriginValidator implements WsRequestValidatorContribution {\n\n    @inject(BackendApplicationHosts)\n    protected readonly backendApplicationHosts: BackendApplicationHosts;\n\n    allowWsUpgrade(request: http.IncomingMessage): boolean {\n        if (!this.backendApplicationHosts.hasKnownHosts() || !request.headers.origin) {\n            return true;\n        }\n        const origin = url.parse(request.headers.origin);\n        return this.backendApplicationHosts.hosts.has(origin.host!);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { localizationPath } from '../../common/i18n/localization';\nimport { LocalizationProvider } from './localization-provider';\nimport { ConnectionHandler, RpcConnectionHandler, bindContributionProvider } from '../../common';\nimport { LocalizationRegistry, LocalizationContribution } from './localization-contribution';\nimport { LocalizationServerImpl } from './localization-server';\nimport { TheiaLocalizationContribution } from './theia-localization-contribution';\nimport { LocalizationServer, LocalizationServerPath } from '../../common/i18n/localization-server';\nimport { BackendApplicationContribution } from '../backend-application';\n\nexport default new ContainerModule(bind => {\n    bind(LocalizationProvider).toSelf().inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(localizationPath, () => ctx.container.get(LocalizationProvider))\n    ).inSingletonScope();\n    bind(LocalizationRegistry).toSelf().inSingletonScope();\n    bindContributionProvider(bind, LocalizationContribution);\n    bind(LocalizationServerImpl).toSelf().inSingletonScope();\n    bind(LocalizationServer).toService(LocalizationServerImpl);\n    bind(BackendApplicationContribution).toService(LocalizationServerImpl);\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(LocalizationServerPath, () => ctx.container.get(LocalizationServer))\n    ).inSingletonScope();\n    bind(TheiaLocalizationContribution).toSelf().inSingletonScope();\n    bind(LocalizationContribution).toService(TheiaLocalizationContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from 'fs-extra';\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider, isObject } from '../../common';\nimport { LanguageInfo, Localization } from '../../common/i18n/localization';\nimport { LocalizationProvider } from './localization-provider';\n\nexport const LocalizationContribution = Symbol('LocalizationContribution');\n\nexport interface LocalizationContribution {\n    registerLocalizations(registry: LocalizationRegistry): Promise<void>;\n}\n\n@injectable()\nexport class LocalizationRegistry {\n\n    @inject(LocalizationProvider)\n    protected readonly localizationProvider: LocalizationProvider;\n\n    @inject(ContributionProvider) @named(LocalizationContribution)\n    protected readonly contributions: ContributionProvider<LocalizationContribution>;\n\n    async initialize(): Promise<void> {\n        await Promise.all(this.contributions.getContributions().map(\n            contribution => contribution.registerLocalizations(this)\n        ));\n    }\n\n    registerLocalization(localization: Localization): void {\n        this.localizationProvider.addLocalizations(localization);\n    }\n\n    registerLocalizationFromRequire(locale: string | LanguageInfo, required: unknown): void {\n        const translations = this.flattenTranslations(required);\n        this.registerLocalization(this.createLocalization(locale, translations));\n    }\n\n    async registerLocalizationFromFile(localizationPath: string, locale?: string | LanguageInfo): Promise<void> {\n        if (!locale) {\n            locale = this.identifyLocale(localizationPath);\n        }\n        if (!locale) {\n            throw new Error('Could not determine locale from path.');\n        }\n        const translationJson = await fs.readJson(localizationPath);\n        const translations = this.flattenTranslations(translationJson);\n        this.registerLocalization(this.createLocalization(locale, translations));\n    }\n\n    protected createLocalization(locale: string | LanguageInfo, translations: Record<string, string>): Localization {\n        let localization: Localization;\n        if (typeof locale === 'string') {\n            localization = {\n                languageId: locale,\n                translations\n            };\n        } else {\n            localization = {\n                ...locale,\n                translations\n            };\n        }\n        return localization;\n    }\n\n    protected flattenTranslations(localization: unknown): Record<string, string> {\n        if (isObject(localization)) {\n            const record: Record<string, string> = {};\n            for (const [key, value] of Object.entries(localization)) {\n                if (typeof value === 'string') {\n                    record[key] = value;\n                } else if (isObject(value)) {\n                    const flattened = this.flattenTranslations(value);\n                    for (const [flatKey, flatValue] of Object.entries(flattened)) {\n                        record[`${key}/${flatKey}`] = flatValue;\n                    }\n                }\n            }\n            return record;\n        } else {\n            return {};\n        }\n    }\n\n    protected identifyLocale(localizationPath: string): string | undefined {\n        const regex = /nls\\.(\\w+)\\.json$/i;\n        const match = regex.exec(localizationPath);\n        if (match) {\n            return match[1];\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\nimport { nls } from '../../common/nls';\nimport { LanguageInfo, Localization } from '../../common/i18n/localization';\n\n@injectable()\nexport class LocalizationProvider {\n\n    protected localizations: Localization[] = [];\n    protected currentLanguage = nls.defaultLocale;\n\n    addLocalizations(...localizations: Localization[]): void {\n        this.localizations.push(...localizations);\n    }\n\n    removeLocalizations(...localizations: Localization[]): void {\n        for (const localization of localizations) {\n            const index = this.localizations.indexOf(localization);\n            if (index >= 0) {\n                this.localizations.splice(index, 1);\n            }\n        }\n    }\n\n    setCurrentLanguage(languageId: string): void {\n        this.currentLanguage = languageId;\n    }\n\n    getCurrentLanguage(): string {\n        return this.currentLanguage;\n    }\n\n    getAvailableLanguages(all?: boolean): LanguageInfo[] {\n        const languageInfos = new Map<string, LanguageInfo>();\n        for (const localization of this.localizations.values()) {\n            if (all || localization.languagePack) {\n                const languageInfo = languageInfos.get(localization.languageId) ?? {\n                    languageId: localization.languageId\n                };\n                languageInfo.languageName ||= localization.languageName;\n                languageInfo.localizedLanguageName ||= localization.localizedLanguageName;\n                languageInfo.languagePack ||= localization.languagePack;\n                languageInfos.set(localization.languageId, languageInfo);\n            }\n        }\n        return Array.from(languageInfos.values()).sort((a, b) => a.languageId.localeCompare(b.languageId));\n    }\n\n    loadLocalization(languageId: string): Localization {\n        const merged: Localization = {\n            languageId,\n            translations: {}\n        };\n        for (const localization of this.localizations.filter(e => e.languageId === languageId)) {\n            merged.languageName ||= localization.languageName;\n            merged.localizedLanguageName ||= localization.localizedLanguageName;\n            merged.languagePack ||= localization.languagePack;\n            Object.assign(merged.translations, localization.translations);\n        }\n        return merged;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from 'inversify';\nimport { Localization } from 'src/common/i18n/localization';\nimport { LocalizationServer } from '../../common/i18n/localization-server';\nimport { nls } from '../../common/nls';\nimport { Deferred } from '../../common/promise-util';\nimport { BackendApplicationContribution } from '../backend-application';\nimport { LocalizationRegistry } from './localization-contribution';\nimport { LocalizationProvider } from './localization-provider';\n\n@injectable()\nexport class LocalizationServerImpl implements LocalizationServer, BackendApplicationContribution {\n\n    protected readonly initialized = new Deferred<void>();\n\n    @inject(LocalizationRegistry)\n    protected readonly localizationRegistry: LocalizationRegistry;\n\n    @inject(LocalizationProvider)\n    protected readonly localizationProvider: LocalizationProvider;\n\n    async initialize(): Promise<void> {\n        await this.localizationRegistry.initialize();\n        this.initialized.resolve();\n    }\n\n    waitForInitialization(): Promise<void> {\n        return this.initialized.promise;\n    }\n\n    async loadLocalization(languageId: string): Promise<Localization> {\n        await this.waitForInitialization();\n        languageId = this.localizationProvider.getAvailableLanguages().some(e => e.languageId === languageId) ? languageId : nls.defaultLocale;\n        this.localizationProvider.setCurrentLanguage(languageId);\n        return this.localizationProvider.loadLocalization(languageId);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\nimport { LocalizationContribution, LocalizationRegistry } from './localization-contribution';\n\n@injectable()\nexport class TheiaLocalizationContribution implements LocalizationContribution {\n    async registerLocalizations(registry: LocalizationRegistry): Promise<void> {\n        registry.registerLocalizationFromRequire('cs', require('../../../i18n/nls.cs.json'));\n        registry.registerLocalizationFromRequire('de', require('../../../i18n/nls.de.json'));\n        registry.registerLocalizationFromRequire('es', require('../../../i18n/nls.es.json'));\n        registry.registerLocalizationFromRequire('fr', require('../../../i18n/nls.fr.json'));\n        registry.registerLocalizationFromRequire('hu', require('../../../i18n/nls.hu.json'));\n        registry.registerLocalizationFromRequire('it', require('../../../i18n/nls.it.json'));\n        registry.registerLocalizationFromRequire('ja', require('../../../i18n/nls.ja.json'));\n        registry.registerLocalizationFromRequire('pl', require('../../../i18n/nls.pl.json'));\n        registry.registerLocalizationFromRequire('pt-br', require('../../../i18n/nls.pt-br.json'));\n        registry.registerLocalizationFromRequire('pt-pt', require('../../../i18n/nls.pt-pt.json'));\n        registry.registerLocalizationFromRequire('ru', require('../../../i18n/nls.ru.json'));\n        registry.registerLocalizationFromRequire('zh-cn', require('../../../i18n/nls.zh-cn.json'));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// code copied and modified from https://github.com/microsoft/vscode/blob/1.55.2/src/vs/platform/native/electron-main/nativeHostMainService.ts#L679-L771\n\nimport { KeytarService } from '../common/keytar-protocol';\nimport { injectable } from 'inversify';\nimport { isWindows } from '../common';\nimport * as keytar from 'keytar';\n\n@injectable()\nexport class KeytarServiceImpl implements KeytarService {\n    private static readonly MAX_PASSWORD_LENGTH = 2500;\n    private static readonly PASSWORD_CHUNK_SIZE = KeytarServiceImpl.MAX_PASSWORD_LENGTH - 100;\n\n    async setPassword(service: string, account: string, password: string): Promise<void> {\n        if (isWindows && password.length > KeytarServiceImpl.MAX_PASSWORD_LENGTH) {\n            let index = 0;\n            let chunk = 0;\n            let hasNextChunk = true;\n            while (hasNextChunk) {\n                const passwordChunk = password.substring(index, index + KeytarServiceImpl.PASSWORD_CHUNK_SIZE);\n                index += KeytarServiceImpl.PASSWORD_CHUNK_SIZE;\n                hasNextChunk = password.length - index > 0;\n\n                const content: ChunkedPassword = {\n                    content: passwordChunk,\n                    hasNextChunk: hasNextChunk\n                };\n\n                await keytar.setPassword(service, chunk ? `${account}-${chunk}` : account, JSON.stringify(content));\n                chunk++;\n            }\n\n        } else {\n            await keytar.setPassword(service, account, password);\n        }\n    }\n\n    deletePassword(service: string, account: string): Promise<boolean> {\n        return keytar.deletePassword(service, account);\n    }\n\n    async getPassword(service: string, account: string): Promise<string | undefined> {\n        const password = await keytar.getPassword(service, account);\n        if (password) {\n            try {\n                let { content, hasNextChunk }: ChunkedPassword = JSON.parse(password);\n                if (!content || !hasNextChunk) {\n                    return password;\n                }\n\n                let index = 1;\n                while (hasNextChunk) {\n                    const nextChunk = await keytar.getPassword(service, `${account}-${index++}`);\n                    const result: ChunkedPassword = JSON.parse(nextChunk!);\n                    content += result.content;\n                    hasNextChunk = result.hasNextChunk;\n                }\n\n                return content;\n            } catch {\n                return password;\n            }\n        }\n    }\n    async findPassword(service: string): Promise<string | undefined> {\n        const password = await keytar.findPassword(service);\n        if (password) {\n            return password;\n        }\n    }\n    async findCredentials(service: string): Promise<Array<{ account: string, password: string }>> {\n        return keytar.findCredentials(service);\n    }\n}\n\ninterface ChunkedPassword {\n    content: string;\n    hasNextChunk: boolean;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, Container, interfaces } from 'inversify';\nimport { ConnectionHandler, RpcConnectionHandler } from '../common/messaging';\nimport { ILogger, LoggerFactory, Logger, setRootLogger, LoggerName, rootLoggerName } from '../common/logger';\nimport { ILoggerServer, ILoggerClient, loggerPath, DispatchingLoggerClient } from '../common/logger-protocol';\nimport { ConsoleLoggerServer } from './console-logger-server';\nimport { LoggerWatcher } from '../common/logger-watcher';\nimport { BackendApplicationContribution } from './backend-application';\nimport { CliContribution } from './cli';\nimport { LogLevelCliContribution } from './logger-cli-contribution';\n\nexport function bindLogger(bind: interfaces.Bind, props?: {\n    onLoggerServerActivation?: (context: interfaces.Context, server: ILoggerServer) => void\n}): void {\n    bind(LoggerName).toConstantValue(rootLoggerName);\n    bind(ILogger).to(Logger).inSingletonScope().whenTargetIsDefault();\n    bind(LoggerWatcher).toSelf().inSingletonScope();\n    bind<ILoggerServer>(ILoggerServer).to(ConsoleLoggerServer).inSingletonScope().onActivation((context, server) => {\n        if (props && props.onLoggerServerActivation) {\n            props.onLoggerServerActivation(context, server);\n        }\n        return server;\n    });\n    bind(LogLevelCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(LogLevelCliContribution);\n    bind(LoggerFactory).toFactory(ctx =>\n        (name: string) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            child.bind(ILogger).to(Logger).inTransientScope();\n            child.bind(LoggerName).toConstantValue(name);\n            return child.get(ILogger);\n        }\n    );\n}\n\n/**\n * IMPORTANT: don't use in tests, since it overrides console\n */\nexport const loggerBackendModule = new ContainerModule(bind => {\n    bind(BackendApplicationContribution).toDynamicValue(ctx =>\n    ({\n        initialize(): void {\n            setRootLogger(ctx.container.get<ILogger>(ILogger));\n        }\n    }));\n\n    bind(DispatchingLoggerClient).toSelf().inSingletonScope();\n    bindLogger(bind, {\n        onLoggerServerActivation: ({ container }, server) => {\n            server.setClient(container.get(DispatchingLoggerClient));\n            server.setClient = () => {\n                throw new Error('use DispatchingLoggerClient');\n            };\n        }\n    });\n\n    bind(ConnectionHandler).toDynamicValue(({ container }) =>\n        new RpcConnectionHandler<ILoggerClient>(loggerPath, client => {\n            const dispatching = container.get(DispatchingLoggerClient);\n            dispatching.clients.add(client);\n            client.onDidCloseConnection(() => dispatching.clients.delete(client));\n            return container.get<ILoggerServer>(ILoggerServer);\n        })\n    ).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as yargs from 'yargs';\nimport { injectable } from 'inversify';\nimport { LogLevel } from '../common/logger';\nimport { CliContribution } from './cli';\nimport * as fs from 'fs-extra';\nimport * as nsfw from 'nsfw';\nimport { Event, Emitter } from '../common/event';\nimport * as path from 'path';\n\n/** Maps logger names to log levels.  */\nexport interface LogLevels {\n    [key: string]: LogLevel,\n}\n\n/**\n * Parses command line switches related to log levels, then watches the log\n * levels file (if specified) for changes.  This is the source of truth for\n * what the log level per logger should be.\n */\n@injectable()\nexport class LogLevelCliContribution implements CliContribution {\n\n    protected _logLevels: LogLevels = {};\n\n    /**\n     * Log level to use for loggers not specified in `logLevels`.\n     */\n    protected _defaultLogLevel: LogLevel = LogLevel.INFO;\n\n    protected logConfigChangedEvent: Emitter<void> = new Emitter<void>();\n\n    get defaultLogLevel(): LogLevel {\n        return this._defaultLogLevel;\n    }\n\n    get logLevels(): LogLevels {\n        return this._logLevels;\n    }\n\n    configure(conf: yargs.Argv): void {\n        conf.option('log-level', {\n            description: 'Sets the default log level',\n            choices: Array.from(LogLevel.strings.values()),\n            nargs: 1,\n        });\n\n        conf.option('log-config', {\n            description: 'Path to the JSON file specifying the configuration of various loggers',\n            type: 'string',\n            nargs: 1,\n        });\n    }\n\n    async setArguments(args: yargs.Arguments): Promise<void> {\n        if (args['log-level'] !== undefined && args['log-config'] !== undefined) {\n            throw new Error('--log-level and --log-config are mutually exclusive.');\n        }\n\n        if (args['log-level'] !== undefined) {\n            this._defaultLogLevel = this.readLogLevelString(args['log-level'] as string, 'Unknown log level passed to --log-level');\n        }\n\n        if (args['log-config'] !== undefined) {\n            let filename: string = args['log-config'] as string;\n            try {\n                filename = path.resolve(filename);\n\n                await this.slurpLogConfigFile(filename);\n                await this.watchLogConfigFile(filename);\n            } catch (e) {\n                console.error(`Error reading log config file ${filename}: ${e}`);\n            }\n        }\n    }\n\n    protected watchLogConfigFile(filename: string): Promise<void> {\n        return nsfw(filename, async (events: nsfw.FileChangeEvent[]) => {\n            try {\n                for (const event of events) {\n                    switch (event.action) {\n                        case nsfw.actions.CREATED:\n                        case nsfw.actions.MODIFIED:\n                            await this.slurpLogConfigFile(filename);\n                            this.logConfigChangedEvent.fire(undefined);\n                            break;\n                    }\n                }\n            } catch (e) {\n                console.error(`Error reading log config file ${filename}: ${e}`);\n            }\n        }).then((watcher: nsfw.NSFW) => {\n            watcher.start();\n        });\n    }\n\n    protected async slurpLogConfigFile(filename: string): Promise<void> {\n        try {\n            const content = await fs.readFile(filename, 'utf-8');\n            const data = JSON.parse(content);\n\n            let newDefaultLogLevel: LogLevel = LogLevel.INFO;\n\n            if ('defaultLevel' in data) {\n                newDefaultLogLevel = this.readLogLevelString(data['defaultLevel'], `Unknown default log level in ${filename}`);\n            }\n\n            const newLogLevels: { [key: string]: LogLevel } = {};\n\n            if ('levels' in data) {\n                const loggers = data['levels'];\n                for (const logger of Object.keys(loggers)) {\n                    const levelStr = loggers[logger];\n                    newLogLevels[logger] = this.readLogLevelString(levelStr, `Unknown log level for logger ${logger} in ${filename}`);\n                }\n            }\n\n            this._defaultLogLevel = newDefaultLogLevel;\n            this._logLevels = newLogLevels;\n\n            console.log(`Successfully read new log config from ${filename}.`);\n        } catch (e) {\n            throw new Error(`Error reading log config file ${filename}: ${e.message}`);\n        }\n    }\n\n    get onLogConfigChanged(): Event<void> {\n        return this.logConfigChangedEvent.event;\n    }\n\n    logLevelFor(loggerName: string): LogLevel {\n        const level = this._logLevels[loggerName];\n\n        if (level !== undefined) {\n            return level;\n        } else {\n            return this.defaultLogLevel;\n        }\n    }\n\n    /**\n     * Converts the string to a `LogLevel`. Throws an error if invalid.\n     */\n    protected readLogLevelString(levelStr: string, errMessagePrefix: string): LogLevel {\n        const level = LogLevel.fromString(levelStr);\n\n        if (level === undefined) {\n            throw new Error(`${errMessagePrefix}: \"${levelStr}\".`);\n        }\n\n        return level;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport { AddressInfo } from 'net';\nimport { checkParentAlive } from './messaging/ipc-protocol';\nimport { MaybePromise } from '../common/types';\n\ncheckParentAlive();\n\nprocess.on('unhandledRejection', (reason, promise) => {\n    throw reason;\n});\n\nexport async function start(serverModule: MaybePromise<http.Server | https.Server>): Promise<AddressInfo> {\n    const server = await serverModule;\n    return server.address() as AddressInfo;\n}\nexport default start;\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { interfaces, ContainerModule } from 'inversify';\nimport { RpcProxyFactory, ConnectionHandler, RpcConnectionHandler, RpcProxy } from '../../common';\n\nexport type BindFrontendService = <T extends object>(path: string, serviceIdentifier: interfaces.ServiceIdentifier<T>) => interfaces.BindingWhenOnSyntax<T>;\nexport type BindBackendService = <T extends object, C extends object = object>(\n    path: string, serviceIdentifier: interfaces.ServiceIdentifier<T>, onActivation?: (service: T, proxy: RpcProxy<C>) => T\n) => void;\nexport type ConnectionContainerModuleCallBack = (registry: {\n    bind: interfaces.Bind\n    unbind: interfaces.Unbind\n    isBound: interfaces.IsBound\n    rebind: interfaces.Rebind\n    bindFrontendService: BindFrontendService\n    bindBackendService: BindBackendService\n}) => void;\n\n/**\n * ### Connection Container Module\n *\n * It provides bindings which are scoped per a connection, e.g.\n * in order to allow backend services to access frontend service within the same connection.\n *\n * #### Binding a frontend service\n * ```ts\n * const myConnectionModule = ConnectionContainerModule.create(({ bindFrontendService }) => {\n *   bindFrontendService(myFrontendServicePath, MyFrontendService);\n * });\n *\n * export const myBackendApplicationModule = new ContainerModule(bind => {\n *   bind(ConnectionContainerModule).toConstantValue(myConnectionModule);\n * }\n * ```\n *\n * #### Exposing a backend service\n * ```ts\n * const myConnectionModule2 = ConnectionContainerModule.create(({ bind, bindBackendService }) => {\n *   bind(MyBackendService).toSelf().inSingletonScope();\n *   bindBackendService(myBackendServicePath, MyBackendService);\n * });\n *\n * export const myBackendApplicationModule2 = new ContainerModule(bind => {\n *   bind(ConnectionContainerModule).toConstantValue(myConnectionModule2);\n * }\n * ```\n *\n * #### Injecting a frontend service\n * ```ts\n * @injectable()\n * export class MyBackendService {\n *     @inject(MyFrontendService)\n *     protected readonly myFrontendService: MyFrontendService;\n * }\n * ```\n */\nexport const ConnectionContainerModule: symbol & { create(callback: ConnectionContainerModuleCallBack): ContainerModule } = Object.assign(Symbol('ConnectionContainerModule'), {\n    create(callback: ConnectionContainerModuleCallBack): ContainerModule {\n        return new ContainerModule((bind, unbind, isBound, rebind) => {\n            const bindFrontendService: BindFrontendService = (path, serviceIdentifier) => {\n                const serviceFactory = new RpcProxyFactory();\n                const service = serviceFactory.createProxy();\n                bind<ConnectionHandler>(ConnectionHandler).toConstantValue({\n                    path,\n                    onConnection: connection => serviceFactory.listen(connection)\n                });\n                return bind(serviceIdentifier).toConstantValue(service as any);\n            };\n            const bindBackendService: BindBackendService = (path, serviceIdentifier, onActivation) => {\n                bind(ConnectionHandler).toDynamicValue(context =>\n                    new RpcConnectionHandler<any>(path, proxy => {\n                        const service = context.container.get(serviceIdentifier);\n                        return onActivation ? onActivation(service, proxy) : service;\n                    })\n                ).inSingletonScope();\n            };\n            callback({ bind, unbind, isBound, rebind, bindFrontendService, bindBackendService });\n        });\n    }\n});\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { bindContributionProvider } from '../../common';\nimport { BackendApplicationContribution } from '../backend-application';\nimport { MessagingContribution, MessagingContainer } from './messaging-contribution';\nimport { ConnectionContainerModule } from './connection-container-module';\nimport { MessagingService } from './messaging-service';\nimport { MessagingListener, MessagingListenerContribution } from './messaging-listeners';\n\nexport const messagingBackendModule = new ContainerModule(bind => {\n    bindContributionProvider(bind, ConnectionContainerModule);\n    bindContributionProvider(bind, MessagingService.Contribution);\n    bind(MessagingService.Identifier).to(MessagingContribution).inSingletonScope();\n    bind(MessagingContribution).toDynamicValue(({ container }) => {\n        const child = container.createChild();\n        child.bind(MessagingContainer).toConstantValue(container);\n        return child.get(MessagingService.Identifier);\n    }).inSingletonScope();\n    bind(BackendApplicationContribution).toService(MessagingContribution);\n    bind(MessagingListener).toSelf().inSingletonScope();\n    bindContributionProvider(bind, MessagingListenerContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Server, Socket } from 'socket.io';\nimport { injectable, inject, named, postConstruct, interfaces, Container } from 'inversify';\nimport { ContributionProvider, ConnectionHandler, bindContributionProvider } from '../../common';\nimport { IWebSocket, WebSocketChannel } from '../../common/messaging/web-socket-channel';\nimport { BackendApplicationContribution } from '../backend-application';\nimport { MessagingService } from './messaging-service';\nimport { ConnectionContainerModule } from './connection-container-module';\nimport Route = require('route-parser');\nimport { WsRequestValidator } from '../ws-request-validators';\nimport { MessagingListener } from './messaging-listeners';\nimport { Channel, ChannelMultiplexer } from '../../common/message-rpc/channel';\n\nexport const MessagingContainer = Symbol('MessagingContainer');\n\n@injectable()\nexport class MessagingContribution implements BackendApplicationContribution, MessagingService {\n\n    @inject(MessagingContainer)\n    protected readonly container: interfaces.Container;\n\n    @inject(ContributionProvider) @named(ConnectionContainerModule)\n    protected readonly connectionModules: ContributionProvider<interfaces.ContainerModule>;\n\n    @inject(ContributionProvider) @named(MessagingService.Contribution)\n    protected readonly contributions: ContributionProvider<MessagingService.Contribution>;\n\n    @inject(WsRequestValidator)\n    protected readonly wsRequestValidator: WsRequestValidator;\n\n    @inject(MessagingListener)\n    protected readonly messagingListener: MessagingListener;\n\n    protected readonly wsHandlers = new MessagingContribution.ConnectionHandlers<Socket>();\n    protected readonly channelHandlers = new MessagingContribution.ConnectionHandlers<Channel>();\n\n    @postConstruct()\n    protected init(): void {\n        this.ws(WebSocketChannel.wsPath, (_, socket) => this.handleChannels(socket));\n        for (const contribution of this.contributions.getContributions()) {\n            contribution.configure(this);\n        }\n    }\n\n    wsChannel(spec: string, callback: (params: MessagingService.PathParams, channel: Channel) => void): void {\n        this.channelHandlers.push(spec, (params, channel) => callback(params, channel));\n    }\n\n    ws(spec: string, callback: (params: MessagingService.PathParams, socket: Socket) => void): void {\n        this.wsHandlers.push(spec, callback);\n    }\n\n    protected checkAliveTimeout = 30000; // 30 seconds\n    protected maxHttpBufferSize = 1e8; // 100 MB\n\n    onStart(server: http.Server | https.Server): void {\n        const socketServer = new Server(server, {\n            pingInterval: this.checkAliveTimeout,\n            pingTimeout: this.checkAliveTimeout * 2,\n            maxHttpBufferSize: this.maxHttpBufferSize\n        });\n        // Accept every namespace by using /.*/\n        socketServer.of(/.*/).on('connection', async socket => {\n            const request = socket.request;\n            // Socket.io strips the `origin` header of the incoming request\n            // We provide a `fix-origin` header in the `WebSocketConnectionProvider`\n            request.headers.origin = request.headers['fix-origin'] as string;\n            if (await this.allowConnect(socket.request)) {\n                this.handleConnection(socket);\n                this.messagingListener.onDidWebSocketUpgrade(socket.request, socket);\n            } else {\n                socket.disconnect(true);\n            }\n        });\n    }\n\n    protected handleConnection(socket: Socket): void {\n        const pathname = socket.nsp.name;\n        if (pathname && !this.wsHandlers.route(pathname, socket)) {\n            console.error('Cannot find a ws handler for the path: ' + pathname);\n        }\n    }\n\n    protected async allowConnect(request: http.IncomingMessage): Promise<boolean> {\n        try {\n            return this.wsRequestValidator.allowWsUpgrade(request);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    protected handleChannels(socket: Socket): void {\n        const socketChannel = new WebSocketChannel(this.toIWebSocket(socket));\n        const multiplexer = new ChannelMultiplexer(socketChannel);\n        const channelHandlers = this.getConnectionChannelHandlers(socket);\n        multiplexer.onDidOpenChannel(event => {\n            if (channelHandlers.route(event.id, event.channel)) {\n                console.debug(`Opening channel for service path '${event.id}'.`);\n                event.channel.onClose(() => console.debug(`Closing channel on service path '${event.id}'.`));\n            }\n        });\n    }\n\n    protected toIWebSocket(socket: Socket): IWebSocket {\n        return {\n            close: () => {\n                socket.removeAllListeners('disconnect');\n                socket.removeAllListeners('error');\n                socket.removeAllListeners('message');\n                socket.disconnect();\n            },\n            isConnected: () => socket.connected,\n            onClose: cb => socket.on('disconnect', reason => cb(reason)),\n            onError: cb => socket.on('error', error => cb(error)),\n            onMessage: cb => socket.on('message', data => cb(data)),\n            send: message => socket.emit('message', message)\n        };\n    }\n\n    protected createSocketContainer(socket: Socket): Container {\n        const connectionContainer: Container = this.container.createChild() as Container;\n        connectionContainer.bind(Socket).toConstantValue(socket);\n        return connectionContainer;\n    }\n\n    protected getConnectionChannelHandlers(socket: Socket): MessagingContribution.ConnectionHandlers<Channel> {\n        const connectionContainer = this.createSocketContainer(socket);\n        bindContributionProvider(connectionContainer, ConnectionHandler);\n        connectionContainer.load(...this.connectionModules.getContributions());\n        const connectionChannelHandlers = new MessagingContribution.ConnectionHandlers(this.channelHandlers);\n        const connectionHandlers = connectionContainer.getNamed<ContributionProvider<ConnectionHandler>>(ContributionProvider, ConnectionHandler);\n        for (const connectionHandler of connectionHandlers.getContributions(true)) {\n            connectionChannelHandlers.push(connectionHandler.path, (_, channel) => {\n                connectionHandler.onConnection(channel);\n            });\n        }\n        return connectionChannelHandlers;\n    }\n\n}\n\nexport namespace MessagingContribution {\n    export class ConnectionHandlers<T> {\n        protected readonly handlers: ((path: string, connection: T) => string | false)[] = [];\n\n        constructor(\n            protected readonly parent?: ConnectionHandlers<T>\n        ) { }\n\n        push(spec: string, callback: (params: MessagingService.PathParams, connection: T) => void): void {\n            const route = new Route(spec);\n            this.handlers.push((path, channel) => {\n                const params = route.match(path);\n                if (!params) {\n                    return false;\n                }\n                callback(params, channel);\n                return route.reverse(params);\n            });\n        }\n\n        route(path: string, connection: T): string | false {\n            for (const handler of this.handlers) {\n                try {\n                    const result = handler(path, connection);\n                    if (result) {\n                        return result;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n            if (this.parent) {\n                return this.parent.route(path, connection);\n            }\n            return false;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 MayStreet Inc. and others\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider, MaybePromise } from '../../common';\nimport { Socket } from 'socket.io';\n\nimport * as http from 'http';\n\n/**\n * Bind components to this symbol to subscribe to WebSocket events.\n */\nexport const MessagingListenerContribution = Symbol('MessagingListenerContribution');\nexport interface MessagingListenerContribution {\n    /**\n     * Function invoked when a HTTP connection is upgraded to a websocket.\n     *\n     * @param request The HTTP connection upgrade request received by the server.\n     * @param socket The WebSocket that the connection was upgraded to.\n     */\n    onDidWebSocketUpgrade(request: http.IncomingMessage, socket: Socket): MaybePromise<void>;\n}\n\n/**\n * Handler of Theia messaging system events, dispatching to MessagingListenerContribution instances.\n */\n@injectable()\nexport class MessagingListener {\n\n    @inject(ContributionProvider) @named(MessagingListenerContribution)\n    protected readonly messagingListenerContributions: ContributionProvider<MessagingListenerContribution>;\n\n    /**\n     * Notify all the subscribed `MessagingListenerContribution`s that the Websocket was upgraded.\n     */\n    async onDidWebSocketUpgrade(request: http.IncomingMessage, socket: Socket): Promise<void> {\n        await Promise.all(Array.from(this.messagingListenerContributions.getContributions(), async messagingListener => messagingListener.onDidWebSocketUpgrade(request, socket)));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\nimport { OS, OSBackendProvider } from '../common/os';\n\n@injectable()\nexport class OSBackendProviderImpl implements OSBackendProvider {\n    getBackendOS(): Promise<OS.Type> {\n        return Promise.resolve(OS.type());\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './node-stopwatch';\nexport * from './measurement-backend-bindings';\n","/********************************************************************************\n* Copyright (c) 2021 STMicroelectronics and others.\n*\n* This program and the accompanying materials are made available under the\n* terms of the Eclipse Public License 2.0 which is available at\n* http://www.eclipse.org/legal/epl-2.0.\n*\n* This Source Code may also be made available under the following Secondary\n* Licenses when the conditions for such availability set forth in the Eclipse\n* Public License v. 2.0 are satisfied: GNU General Public License, version 2\n* with the GNU Classpath Exception which is available at\n* https://www.gnu.org/software/classpath/license.html.\n*\n* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n*******************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    ConnectionHandler, DefaultBackendStopwatch, BackendStopwatch, RpcConnectionHandler,\n    Stopwatch, stopwatchPath\n} from '../../common';\nimport { NodeStopwatch } from './node-stopwatch';\n\nexport function bindNodeStopwatch(bind: interfaces.Bind): interfaces.BindingWhenOnSyntax<Stopwatch> {\n    return bind(Stopwatch).to(NodeStopwatch).inSingletonScope();\n}\n\nexport function bindBackendStopwatchServer(bind: interfaces.Bind): interfaces.BindingWhenOnSyntax<unknown> {\n    bind(ConnectionHandler).toDynamicValue(({ container }) =>\n        new RpcConnectionHandler<never>(stopwatchPath, () => container.get<BackendStopwatch>(BackendStopwatch))\n    ).inSingletonScope();\n\n    bind(DefaultBackendStopwatch).toSelf().inSingletonScope();\n    return bind(BackendStopwatch).to(DefaultBackendStopwatch).inSingletonScope();\n}\n","/********************************************************************************\n* Copyright (c) 2019, 2021 TypeFox, STMicroelectronics and others.\n*\n* This program and the accompanying materials are made available under the\n* terms of the Eclipse Public License 2.0 which is available at\n* http://www.eclipse.org/legal/epl-2.0.\n*\n* This Source Code may also be made available under the following Secondary\n* Licenses when the conditions for such availability set forth in the Eclipse\n* Public License v. 2.0 are satisfied: GNU General Public License, version 2\n* with the GNU Classpath Exception which is available at\n* https://www.gnu.org/software/classpath/license.html.\n*\n* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n*******************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { performance } from 'perf_hooks';\nimport { Measurement, MeasurementOptions, Stopwatch } from '../../common';\n\n@injectable()\nexport class NodeStopwatch extends Stopwatch {\n\n    constructor() {\n        super({\n            owner: 'backend',\n            now: () => performance.now(),\n        });\n    }\n\n    start(name: string, options?: MeasurementOptions): Measurement {\n        const startTime = performance.now();\n\n        return this.createMeasurement(name, () => {\n            const duration = performance.now() - startTime;\n            return { duration, startTime };\n        }, options);\n    }\n\n};\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { RequestConfiguration, RequestContext, RequestOptions, RequestService } from '@theia/request';\n\n@injectable()\nexport class BackendRequestFacade implements RequestService {\n\n    @inject(RequestService)\n    protected readonly requestService: RequestService;\n\n    configure(config: RequestConfiguration): Promise<void> {\n        return this.requestService.configure(config);\n    }\n\n    async request(options: RequestOptions): Promise<RequestContext> {\n        const context = await this.requestService.request(options);\n        return RequestContext.compress(context);\n    }\n\n    resolveProxy(url: string): Promise<string | undefined> {\n        return this.requestService.resolveProxy(url);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, decorate, injectable } from 'inversify';\nimport { RequestService } from '@theia/request';\nimport { NodeRequestService } from '@theia/request/lib/node-request-service';\n\ndecorate(injectable(), NodeRequestService);\n\nexport default new ContainerModule(bind => {\n    bind(RequestService).to(NodeRequestService).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { MaybePromise } from '../../common/types';\nimport { RequestConfiguration, RequestService } from '@theia/request';\nimport { Argv, Arguments } from 'yargs';\nimport { CliContribution } from '../cli';\n\nexport const ProxyUrl = 'proxy-url';\nexport const ProxyAuthorization = 'proxy-authorization';\nexport const StrictSSL = 'strict-ssl';\n\n@injectable()\nexport class ProxyCliContribution implements CliContribution {\n\n    @inject(RequestService)\n    protected readonly requestService: RequestService;\n\n    configure(conf: Argv): void {\n        conf.option(ProxyUrl, {\n            description: 'Sets the proxy URL for outgoing requests.',\n            type: 'string'\n        });\n        conf.option(ProxyAuthorization, {\n            description: 'Sets the proxy authorization header for outgoing requests.',\n            type: 'string'\n        });\n        conf.option(StrictSSL, {\n            description: 'Determines whether SSL is strictly set for outgoing requests.',\n            type: 'boolean'\n        });\n    }\n\n    setArguments(args: Arguments): MaybePromise<void> {\n        const proxyUrl = args[ProxyUrl];\n        const authorization = args[ProxyAuthorization];\n        const strictSSL = args[StrictSSL];\n        const config: RequestConfiguration = {};\n        if (typeof proxyUrl === 'string') {\n            config.proxyUrl = proxyUrl.trim();\n        }\n        if (typeof authorization === 'string') {\n            config.proxyAuthorization = authorization;\n        }\n        if (typeof strictSSL === 'boolean') {\n            config.strictSSL = strictSSL;\n        }\n        this.requestService.configure(config);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from 'inversify';\nimport * as http from 'http';\nimport { ContributionProvider, MaybePromise } from '../common';\n\n/**\n * Bind components to this symbol to filter WebSocket connections.\n */\nexport const WsRequestValidatorContribution = Symbol('RequestValidatorContribution');\nexport interface WsRequestValidatorContribution {\n    /**\n     * Return `false` to prevent the protocol upgrade from going through, blocking the WebSocket connection.\n     *\n     * @param request The HTTP connection upgrade request received by the server.\n     */\n    allowWsUpgrade(request: http.IncomingMessage): MaybePromise<boolean>;\n}\n\n/**\n * Central handler of `WsRequestValidatorContribution`.\n */\n@injectable()\nexport class WsRequestValidator {\n\n    @inject(ContributionProvider) @named(WsRequestValidatorContribution)\n    protected readonly requestValidators: ContributionProvider<WsRequestValidatorContribution>;\n\n    /**\n     * Ask all bound `WsRequestValidatorContributions` if the WebSocket connection should be allowed or not.\n     */\n    async allowWsUpgrade(request: http.IncomingMessage): Promise<boolean> {\n        return new Promise(async resolve => {\n            await Promise.all(Array.from(this.requestValidators.getContributions(), async validator => {\n                if (!await validator.allowWsUpgrade(request)) {\n                    resolve(false); // bail on first refusal\n                }\n            }));\n            resolve(true);\n        });\n    }\n}\n","module.exports = require('@theia/application-package');\n","module.exports = require('@theia/application-package/lib/api');\n","module.exports = require('@theia/application-package/lib/environment');\n","module.exports = require('@theia/request');\n","module.exports = require('express');\n","module.exports = require('fuzzy');\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ContributionProvider } from '@theia/core';\nimport { DebugConfiguration } from './debug-configuration';\nimport { DebuggerDescription, DebugError } from './debug-service';\n\nimport { DebugAdapterContribution, DebugAdapterExecutable, DebugAdapterSessionFactory } from './debug-model';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\n\n/**\n * Contributions registry.\n */\n@injectable()\nexport class DebugAdapterContributionRegistry {\n\n    @inject(ContributionProvider) @named(DebugAdapterContribution)\n    protected readonly contributions: ContributionProvider<DebugAdapterContribution>;\n    protected *getContributions(debugType: string): IterableIterator<DebugAdapterContribution> {\n        for (const contribution of this.contributions.getContributions()) {\n            if (contribution.type === debugType || contribution.type === '*' || debugType === '*') {\n                yield contribution;\n            }\n        }\n    }\n\n    /**\n     * Finds and returns an array of registered debug types.\n     * @returns An array of registered debug types\n     */\n    protected _debugTypes: string[] | undefined;\n    debugTypes(): string[] {\n        if (!this._debugTypes) {\n            const result = new Set<string>();\n            for (const contribution of this.contributions.getContributions()) {\n                result.add(contribution.type);\n            }\n            this._debugTypes = [...result];\n        }\n        return this._debugTypes;\n    }\n\n    async getDebuggersForLanguage(language: string): Promise<DebuggerDescription[]> {\n        const debuggers: DebuggerDescription[] = [];\n        for (const contribution of this.contributions.getContributions()) {\n            if (contribution.languages && contribution.label) {\n                const label = await contribution.label;\n                if (label && (await contribution.languages || []).indexOf(language) !== -1) {\n                    debuggers.push({\n                        type: contribution.type,\n                        label\n                    });\n                }\n            }\n        }\n        return debuggers;\n    }\n\n    /**\n     * Provides initial [debug configuration](#DebugConfiguration).\n     * @param debugType The registered debug type\n     * @returns An array of [debug configurations](#DebugConfiguration)\n     */\n    async provideDebugConfigurations(debugType: string, workspaceFolderUri?: string): Promise<DebugConfiguration[]> {\n        const configurations: DebugConfiguration[] = [];\n        for (const contribution of this.getContributions(debugType)) {\n            if (contribution.provideDebugConfigurations) {\n                try {\n                    const result = await contribution.provideDebugConfigurations(workspaceFolderUri);\n                    configurations.push(...result);\n                } catch (e) {\n                    console.error('provideDebugConfigurations failed:', e);\n                }\n            }\n        }\n        return configurations;\n    }\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes before variable substitution.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration.\n     */\n    async resolveDebugConfiguration(config: DebugConfiguration, workspaceFolderUri?: string): Promise<DebugConfiguration> {\n        let current = config;\n        for (const contribution of this.getContributions(config.type)) {\n            if (contribution.resolveDebugConfiguration) {\n                try {\n                    const next = await contribution.resolveDebugConfiguration(config, workspaceFolderUri);\n                    if (next) {\n                        current = next;\n                    } else {\n                        return current;\n                    }\n                } catch (e) {\n                    console.error('resolveDebugConfiguration failed:', e);\n                }\n            }\n        }\n        return current;\n    }\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes with substituted variables.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration.\n     */\n    async resolveDebugConfigurationWithSubstitutedVariables(config: DebugConfiguration, workspaceFolderUri?: string): Promise<DebugConfiguration> {\n        let current = config;\n        for (const contribution of this.getContributions(config.type)) {\n            if (contribution.resolveDebugConfigurationWithSubstitutedVariables) {\n                try {\n                    const next = await contribution.resolveDebugConfigurationWithSubstitutedVariables(config, workspaceFolderUri);\n                    if (next) {\n                        current = next;\n                    } else {\n                        return current;\n                    }\n                } catch (e) {\n                    console.error('resolveDebugConfigurationWithSubstitutedVariables failed:', e);\n                }\n            }\n        }\n        return current;\n    }\n\n    /**\n     * Provides schema attributes.\n     * @param debugType The registered debug type\n     * @returns Schema attributes for the given debug type\n     */\n    async getSchemaAttributes(debugType: string): Promise<IJSONSchema[]> {\n        const schemas: IJSONSchema[] = [];\n        for (const contribution of this.getContributions(debugType)) {\n            if (contribution.getSchemaAttributes) {\n                try {\n                    schemas.push(...await contribution.getSchemaAttributes());\n                } catch (e) {\n                    console.error('getSchemaAttributes failed:', e);\n                }\n            }\n        }\n        return schemas;\n    }\n    async getConfigurationSnippets(): Promise<IJSONSchemaSnippet[]> {\n        const schemas: IJSONSchemaSnippet[] = [];\n        for (const contribution of this.getContributions('*')) {\n            if (contribution.getConfigurationSnippets) {\n                try {\n                    schemas.push(...await contribution.getConfigurationSnippets());\n                } catch (e) {\n                    console.error('getConfigurationSnippets failed:', e);\n                }\n            }\n        }\n        return schemas;\n    }\n\n    /**\n     * Provides a [debug adapter executable](#DebugAdapterExecutable)\n     * based on [debug configuration](#DebugConfiguration) to launch a new debug adapter.\n     * @param config The resolved [debug configuration](#DebugConfiguration).\n     * @returns The [debug adapter executable](#DebugAdapterExecutable).\n     */\n    async provideDebugAdapterExecutable(config: DebugConfiguration): Promise<DebugAdapterExecutable> {\n        for (const contribution of this.getContributions(config.type)) {\n            if (contribution.provideDebugAdapterExecutable) {\n                const executable = await contribution.provideDebugAdapterExecutable(config);\n                if (executable) {\n                    return executable;\n                }\n            }\n        }\n        throw DebugError.NotFound(config.type);\n    }\n\n    /**\n     * Returns a [debug adapter session factory](#DebugAdapterSessionFactory).\n     * @param debugType The registered debug type\n     * @returns An [debug adapter session factory](#DebugAdapterSessionFactory)\n     */\n    debugAdapterSessionFactory(debugType: string): DebugAdapterSessionFactory | undefined {\n        for (const contribution of this.getContributions(debugType)) {\n            if (contribution.debugAdapterSessionFactory) {\n                return contribution.debugAdapterSessionFactory;\n            }\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Some entities copied and modified from https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts\n// Some entities copied and modified from https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/common/debug.ts\n\nimport { DebugConfiguration } from './debug-configuration';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { Event } from '@theia/core';\nimport { DebugChannel } from './debug-service';\n\n// FIXME: break down this file to debug adapter and debug adapter contribution (see Theia file naming conventions)\n\n/**\n * DebugAdapterSession symbol for DI.\n */\nexport const DebugAdapterSession = Symbol('DebugAdapterSession');\n\n/**\n * The debug adapter session. The debug adapter session manages the lifecycle of a\n * debug session: the debug session should be discarded if and only if the debug adapter\n * session is stopped.\n */\nexport interface DebugAdapterSession {\n    id: string;\n    parentSession?: DebugAdapterSession;\n    start(channel: DebugChannel): Promise<void>\n    stop(): Promise<void>\n}\n\n/**\n * DebugAdapterSessionFactory symbol for DI.\n */\nexport const DebugAdapterSessionFactory = Symbol('DebugAdapterSessionFactory');\n\n/**\n * The [debug session](#DebugSession) factory.\n */\nexport interface DebugAdapterSessionFactory {\n    get(sessionId: string, debugAdapter: DebugAdapter): DebugAdapterSession;\n}\n\n/**\n * Debug adapter executable for spawning.\n */\nexport interface DebugAdapterSpawnExecutable {\n    command: string;\n    args?: string[];\n}\n\n/**\n * Debug adapter executable for forking.\n */\nexport interface DebugAdapterForkExecutable {\n    modulePath: string;\n    execArgv?: string[];\n    args?: string[];\n}\n\n/**\n * Debug adapter executable.\n * Parameters to instantiate the debug adapter.\n *\n * In case of launching adapter the parameters contain a command and arguments. For instance:\n * {'command' : 'COMMAND_TO_LAUNCH_DEBUG_ADAPTER', args : [ { 'arg1', 'arg2' } ] }\n *\n * In case of forking the node process, contain the modulePath to fork. For instance:\n * {'modulePath' : 'NODE_COMMAND_TO_LAUNCH_DEBUG_ADAPTER', args : [ { 'arg1', 'arg2' } ] }\n */\nexport type DebugAdapterExecutable = DebugAdapterSpawnExecutable | DebugAdapterForkExecutable;\n\n/**\n * Implementers stand for the various types of debug adapters the system can talk to.\n * Creation of debug adapters is not covered in this interface, but handling communication\n * and the end of life is.\n */\n\nexport interface DebugAdapter {\n    /**\n     * A DAP protocol message has been received from the debug adapter\n     */\n    onMessageReceived: Event<string>;\n    /**\n     * Send a DAP message to the debug adapter\n     * @param message the JSON-encoded DAP message\n     */\n    send(message: string): void;\n    /**\n     * An error has occurred communicating with the debug adapter. This does not meant the debug adapter\n     * has terminated.\n     */\n    onError: Event<Error>;\n    /**\n     * The connection to the debug adapter has been lost. This signals the end of life for this\n     * debug adapter instance.\n     */\n    onClose: Event<void>;\n    /**\n     * Terminate the connection to the debug adapter.\n     */\n    stop(): Promise<void>;\n}\n\n/**\n * DebugAdapterFactory symbol for DI.\n */\nexport const DebugAdapterFactory = Symbol('DebugAdapterFactory');\n\n/**\n * Factory to start debug adapter.\n */\nexport interface DebugAdapterFactory {\n    start(executable: DebugAdapterExecutable): DebugAdapter;\n    connect(debugServerPort: number): DebugAdapter;\n}\n\n/**\n * DebugAdapterContribution symbol for DI.\n */\nexport const DebugAdapterContribution = Symbol('DebugAdapterContribution');\n\n/**\n * A contribution point for debug adapters.\n */\nexport interface DebugAdapterContribution {\n    /**\n     * The debug type. Should be a unique value among all debug adapters.\n     */\n    readonly type: string;\n\n    readonly label?: MaybePromise<string | undefined>;\n\n    readonly languages?: MaybePromise<string[] | undefined>;\n\n    /**\n     * The [debug adapter session](#DebugAdapterSession) factory.\n     * If a default implementation of the debug adapter session does not\n     * fit all needs it is possible to provide its own implementation using\n     * this factory. But it is strongly recommended to extend the default\n     * implementation if so.\n     */\n    debugAdapterSessionFactory?: DebugAdapterSessionFactory;\n\n    /**\n     * @returns The contributed configuration schema for this debug type.\n     */\n    getSchemaAttributes?(): MaybePromise<IJSONSchema[]>;\n\n    getConfigurationSnippets?(): MaybePromise<IJSONSchemaSnippet[]>;\n\n    /**\n     * Provides a [debug adapter executable](#DebugAdapterExecutable)\n     * based on [debug configuration](#DebugConfiguration) to launch a new debug adapter\n     * or to connect to existed one.\n     * @param config The resolved [debug configuration](#DebugConfiguration).\n     * @returns The [debug adapter executable](#DebugAdapterExecutable).\n     */\n    provideDebugAdapterExecutable?(config: DebugConfiguration): MaybePromise<DebugAdapterExecutable | undefined>;\n\n    /**\n     * Provides initial [debug configuration](#DebugConfiguration).\n     * @returns An array of [debug configurations](#DebugConfiguration).\n     */\n    provideDebugConfigurations?(workspaceFolderUri?: string): MaybePromise<DebugConfiguration[]>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes before variable substitution.\n     * @param config The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration.\n     */\n    resolveDebugConfiguration?(config: DebugConfiguration, workspaceFolderUri?: string): MaybePromise<DebugConfiguration | undefined>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes with substituted variables.\n     * @param config The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration.\n     */\n    resolveDebugConfigurationWithSubstitutedVariables?(config: DebugConfiguration, workspaceFolderUri?: string): MaybePromise<DebugConfiguration | undefined>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Channel, Disposable, Emitter, Event } from '@theia/core';\nimport { ApplicationError } from '@theia/core/lib/common/application-error';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\nimport { CommandIdVariables } from '@theia/variable-resolver/lib/common/variable-types';\nimport { DebugConfiguration } from './debug-configuration';\n\nexport interface DebuggerDescription {\n    type: string\n    label: string\n}\n\n/**\n * The WS endpoint path to the Debug service.\n */\nexport const DebugPath = '/services/debug';\n\n/**\n * DebugService symbol for DI.\n */\nexport const DebugService = Symbol('DebugService');\n\n/**\n * This service provides functionality to configure and to start a new debug adapter session.\n * The workflow is the following. If user wants to debug an application and\n * there is no debug configuration associated with the application then\n * the list of available providers is requested to create suitable debug configuration.\n * When configuration is chosen it is possible to alter the configuration\n * by filling in missing values or by adding/changing/removing attributes. For this purpose the\n * #resolveDebugConfiguration method is invoked. After that the debug adapter session will be started.\n */\nexport interface DebugService extends Disposable {\n    onDidChangeDebuggers?: Event<void>;\n\n    /**\n     * Finds and returns an array of registered debug types.\n     * @returns An array of registered debug types\n     */\n    debugTypes(): Promise<string[]>;\n\n    getDebuggersForLanguage(language: string): Promise<DebuggerDescription[]>;\n\n    /**\n     * Provide debugger contributed variables\n     * see \"variables\" at https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers\n     */\n    provideDebuggerVariables(debugType: string): Promise<CommandIdVariables>;\n\n    /**\n     * Provides the schema attributes.\n     * @param debugType The registered debug type\n     * @returns An JSON Schema describing the configuration attributes for the given debug type\n     */\n    getSchemaAttributes(debugType: string): Promise<IJSONSchema[]>;\n\n    getConfigurationSnippets(): Promise<IJSONSchemaSnippet[]>;\n\n    /**\n     * Provides initial [debug configuration](#DebugConfiguration).\n     * @param debugType The registered debug type\n     * @returns An array of [debug configurations](#DebugConfiguration)\n     */\n    provideDebugConfigurations(debugType: string, workspaceFolderUri: string | undefined): Promise<DebugConfiguration[]>;\n\n    /**\n     * @returns A Record of debug configuration provider types and a corresponding dynamic debug configurations array\n     */\n    provideDynamicDebugConfigurations?(folder?: string): Promise<Record<string, DebugConfiguration[]>>;\n\n    /**\n     * Provides a dynamic debug configuration matching the name and the provider debug type\n     */\n    fetchDynamicDebugConfiguration(name: string, type: string, folder?: string): Promise<DebugConfiguration | undefined>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes before variable substitution.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration, undefined or null.\n     */\n    resolveDebugConfiguration(\n        config: DebugConfiguration,\n        workspaceFolderUri: string | undefined\n    ): Promise<DebugConfiguration | undefined | null>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes with substituted variables.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration, undefined or null.\n     */\n    resolveDebugConfigurationWithSubstitutedVariables(\n        config: DebugConfiguration,\n        workspaceFolderUri: string | undefined\n    ): Promise<DebugConfiguration | undefined | null>;\n\n    /**\n     * Creates a new [debug adapter session](#DebugAdapterSession).\n     * @param config The resolved [debug configuration](#DebugConfiguration).\n     * @param workspaceFolderUri The workspace folder for this sessions or undefined when folderless\n     * @returns The identifier of the created [debug adapter session](#DebugAdapterSession).\n     */\n    createDebugSession(config: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<string>;\n\n    /**\n     * Stop a running session for the given session id.\n     */\n    terminateDebugSession(sessionId: string): Promise<void>;\n\n    /**\n     * Event handle to indicate when one or more dynamic debug configuration providers\n     * have been registered or unregistered.\n     */\n    onDidChangeDebugConfigurationProviders: Event<void>;\n}\n\n/**\n * The endpoint path to the debug adapter session.\n */\nexport const DebugAdapterPath = '/services/debug-adapter';\n\nexport namespace DebugError {\n    export const NotFound = ApplicationError.declare(-41000, (type: string) => ({\n        message: `'${type}' debugger type is not supported.`,\n        data: { type }\n    }));\n}\n\n/**\n * A closeable channel to send debug protocol messages over with error/close handling\n */\nexport interface DebugChannel {\n    send(content: string): void;\n    onMessage(cb: (message: string) => void): void;\n    onError(cb: (reason: unknown) => void): void;\n    onClose(cb: (code: number, reason: string) => void): void;\n    close(): void;\n}\n\n/**\n * A {@link DebugChannel} wrapper implementation that sends and receives messages to/from an underlying {@link Channel}.\n */\nexport class ForwardingDebugChannel implements DebugChannel {\n    private onMessageEmitter = new Emitter<string>();\n\n    constructor(private readonly underlyingChannel: Channel) {\n        this.underlyingChannel.onMessage(msg => this.onMessageEmitter.fire(msg().readString()));\n    }\n\n    send(content: string): void {\n        this.underlyingChannel.getWriteBuffer().writeString(content).commit();\n    }\n\n    onMessage(cb: (message: string) => void): void {\n        this.onMessageEmitter.event(cb);\n    }\n    onError(cb: (reason: unknown) => void): void {\n        this.underlyingChannel.onError(cb);\n    }\n    onClose(cb: (code: number, reason: string) => void): void {\n        this.underlyingChannel.onClose(event => cb(event.code ?? -1, event.reason));\n    }\n\n    close(): void {\n        this.underlyingChannel.close();\n        this.onMessageEmitter.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Some entities copied and modified from https://github.com/Microsoft/vscode-debugadapter-node/blob/master/adapter/src/protocol.ts\n\nimport * as net from 'net';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport {\n    RawProcessFactory,\n    ProcessManager,\n    RawProcess,\n    RawForkOptions,\n    RawProcessOptions\n} from '@theia/process/lib/node';\nimport {\n    DebugAdapterExecutable,\n    DebugAdapterSession,\n    DebugAdapterSessionFactory,\n    DebugAdapterFactory,\n    DebugAdapterForkExecutable,\n    DebugAdapter\n} from '../common/debug-model';\nimport { DebugAdapterSessionImpl } from '../common/debug-adapter-session';\nimport { environment } from '@theia/core/shared/@theia/application-package';\nimport { ProcessDebugAdapter, SocketDebugAdapter } from './stream-debug-adapter';\nimport { isObject } from '@theia/core/lib/common';\n\n/**\n * [DebugAdapterFactory](#DebugAdapterFactory) implementation based on\n * launching the debug adapter as separate process.\n */\n@injectable()\nexport class LaunchBasedDebugAdapterFactory implements DebugAdapterFactory {\n    @inject(RawProcessFactory)\n    protected readonly processFactory: RawProcessFactory;\n    @inject(ProcessManager)\n    protected readonly processManager: ProcessManager;\n\n    start(executable: DebugAdapterExecutable): DebugAdapter {\n        const process = this.childProcess(executable);\n\n        if (!process.process) {\n            throw new Error(`Could not start debug adapter process: ${JSON.stringify(executable)}`);\n        }\n\n        // FIXME: propagate onError + onExit\n        const provider = new ProcessDebugAdapter(process.process);\n        return provider;\n    }\n\n    private childProcess(executable: DebugAdapterExecutable): RawProcess {\n        const isForkOptions = (forkOptions: unknown): forkOptions is RawForkOptions =>\n            isObject(forkOptions) && 'modulePath' in forkOptions;\n\n        const processOptions: RawProcessOptions | RawForkOptions = { ...executable };\n        const options: { stdio: (string | number)[], env?: object, execArgv?: string[] } = { stdio: ['pipe', 'pipe', 2] };\n\n        if (isForkOptions(processOptions)) {\n            options.stdio.push('ipc');\n            options.env = environment.electron.runAsNodeEnv();\n            options.execArgv = (executable as DebugAdapterForkExecutable).execArgv;\n        }\n\n        processOptions.options = options;\n        return this.processFactory(processOptions);\n    }\n\n    connect(debugServerPort: number): DebugAdapter {\n        const socket = net.createConnection(debugServerPort);\n        // FIXME: propagate socket.on('error', ...) + socket.on('close', ...)\n\n        const provider = new SocketDebugAdapter(socket);\n        return provider;\n    }\n}\n\n/**\n * [DebugAdapterSessionFactory](#DebugAdapterSessionFactory) implementation.\n */\n@injectable()\nexport class DebugAdapterSessionFactoryImpl implements DebugAdapterSessionFactory {\n\n    get(sessionId: string, debugAdapter: DebugAdapter): DebugAdapterSession {\n        return new DebugAdapterSessionImpl(\n            sessionId,\n            debugAdapter\n        );\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { UUID } from '@theia/core/shared/@phosphor/coreutils';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MessagingService } from '@theia/core/lib/node/messaging/messaging-service';\n\nimport { DebugAdapterPath, ForwardingDebugChannel } from '../common/debug-service';\nimport { DebugConfiguration } from '../common/debug-configuration';\nimport { DebugAdapterSession, DebugAdapterSessionFactory, DebugAdapterFactory } from '../common/debug-model';\nimport { DebugAdapterContributionRegistry } from '../common/debug-adapter-contribution-registry';\n\n/**\n * Debug adapter session manager.\n */\n@injectable()\nexport class DebugAdapterSessionManager implements MessagingService.Contribution {\n    protected readonly sessions = new Map<string, DebugAdapterSession>();\n\n    @inject(DebugAdapterSessionFactory)\n    protected readonly debugAdapterSessionFactory: DebugAdapterSessionFactory;\n\n    @inject(DebugAdapterFactory)\n    protected readonly debugAdapterFactory: DebugAdapterFactory;\n\n    configure(service: MessagingService): void {\n        service.wsChannel(`${DebugAdapterPath}/:id`, ({ id }: { id: string }, wsChannel) => {\n            const session = this.find(id);\n            if (!session) {\n                wsChannel.close();\n                return;\n            }\n            session.start(new ForwardingDebugChannel(wsChannel));\n        });\n    }\n\n    /**\n     * Creates a new [debug adapter session](#DebugAdapterSession).\n     * @param config The [DebugConfiguration](#DebugConfiguration)\n     * @returns The debug adapter session\n     */\n    async create(config: DebugConfiguration, registry: DebugAdapterContributionRegistry): Promise<DebugAdapterSession> {\n        const sessionId = UUID.uuid4();\n\n        let communicationProvider;\n        if ('debugServer' in config) {\n            communicationProvider = this.debugAdapterFactory.connect(config.debugServer);\n        } else {\n            const executable = await registry.provideDebugAdapterExecutable(config);\n            communicationProvider = this.debugAdapterFactory.start(executable);\n        }\n\n        const sessionFactory = registry.debugAdapterSessionFactory(config.type) || this.debugAdapterSessionFactory;\n        const session = sessionFactory.get(sessionId, communicationProvider);\n        this.sessions.set(sessionId, session);\n\n        if (config.parentSession) {\n            const parentSession = this.sessions.get(config.parentSession.id);\n            if (parentSession) {\n                session.parentSession = parentSession;\n            }\n        }\n\n        return session;\n    }\n\n    /**\n     * Removes [debug adapter session](#DebugAdapterSession) from the list of the instantiated sessions.\n     * Is invoked when session is terminated and isn't needed anymore.\n     * @param sessionId The session identifier\n     */\n    remove(sessionId: string): void {\n        this.sessions.delete(sessionId);\n    }\n\n    /**\n     * Finds the debug adapter session by its id.\n     * Returning the value 'undefined' means the session isn't found.\n     * @param sessionId The session identifier\n     * @returns The debug adapter session\n     */\n    find(sessionId: string): DebugAdapterSession | undefined {\n        return this.sessions.get(sessionId);\n    }\n\n    /**\n     * Returns all instantiated debug adapter sessions.\n     * @returns An array of debug adapter sessions\n     */\n    getAll(): IterableIterator<DebugAdapterSession> {\n        return this.sessions.values();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { bindContributionProvider, ILogger } from '@theia/core/lib/common';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport {\n    DebugPath,\n    DebugService\n} from '../common/debug-service';\nimport {\n    LaunchBasedDebugAdapterFactory,\n    DebugAdapterSessionFactoryImpl\n} from './debug-adapter-factory';\nimport { MessagingService } from '@theia/core/lib/node/messaging/messaging-service';\nimport { ConnectionContainerModule } from '@theia/core/lib/node/messaging/connection-container-module';\nimport {\n    DebugAdapterContribution,\n    DebugAdapterSessionFactory,\n    DebugAdapterFactory\n} from '../common/debug-model';\nimport { DebugServiceImpl } from './debug-service-impl';\nimport { DebugAdapterContributionRegistry } from '../common/debug-adapter-contribution-registry';\nimport { DebugAdapterSessionManager } from './debug-adapter-session-manager';\n\nconst debugConnectionModule = ConnectionContainerModule.create(({ bind, bindBackendService }) => {\n    bindContributionProvider(bind, DebugAdapterContribution);\n    bind(DebugAdapterContributionRegistry).toSelf().inSingletonScope();\n\n    bind(DebugService).to(DebugServiceImpl).inSingletonScope();\n    bindBackendService(DebugPath, DebugService);\n});\n\nexport default new ContainerModule(bind => {\n    bind(ConnectionContainerModule).toConstantValue(debugConnectionModule);\n\n    bind(DebugAdapterSessionFactory).to(DebugAdapterSessionFactoryImpl).inSingletonScope();\n    bind(DebugAdapterFactory).to(LaunchBasedDebugAdapterFactory).inSingletonScope();\n    bind(DebugAdapterSessionManager).toSelf().inSingletonScope();\n    bind(MessagingService.Contribution).toService(DebugAdapterSessionManager);\n\n    bind(ILogger).toDynamicValue(({ container }) =>\n        container.get<ILogger>(ILogger).child('debug')\n    ).inSingletonScope().whenTargetNamed('debug');\n});\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { DebugConfiguration } from '../common/debug-configuration';\nimport { DebugService, DebuggerDescription } from '../common/debug-service';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\nimport { CommandIdVariables } from '@theia/variable-resolver/lib/common/variable-types';\nimport { DebugAdapterSessionManager } from './debug-adapter-session-manager';\nimport { DebugAdapterContributionRegistry } from '../common/debug-adapter-contribution-registry';\nimport { Event } from '@theia/core';\n\n/**\n * DebugService implementation.\n */\n@injectable()\nexport class DebugServiceImpl implements DebugService {\n\n    @inject(DebugAdapterSessionManager)\n    protected readonly sessionManager: DebugAdapterSessionManager;\n\n    @inject(DebugAdapterContributionRegistry)\n    protected readonly registry: DebugAdapterContributionRegistry;\n\n    get onDidChangeDebugConfigurationProviders(): Event<void> {\n        return Event.None;\n    }\n\n    dispose(): void {\n        this.terminateDebugSession();\n    }\n\n    async debugTypes(): Promise<string[]> {\n        return this.registry.debugTypes();\n    }\n\n    getDebuggersForLanguage(language: string): Promise<DebuggerDescription[]> {\n        return this.registry.getDebuggersForLanguage(language);\n    }\n\n    getSchemaAttributes(debugType: string): Promise<IJSONSchema[]> {\n        return this.registry.getSchemaAttributes(debugType);\n    }\n\n    getConfigurationSnippets(): Promise<IJSONSchemaSnippet[]> {\n        return this.registry.getConfigurationSnippets();\n    }\n\n    async provideDebuggerVariables(debugType: string): Promise<CommandIdVariables> {\n        // TODO: Support resolution of variables map through Theia extensions?\n        return {};\n    }\n\n    async provideDebugConfigurations(debugType: string, workspaceFolderUri?: string): Promise<DebugConfiguration[]> {\n        return this.registry.provideDebugConfigurations(debugType, workspaceFolderUri);\n    }\n    async provideDynamicDebugConfigurations(): Promise<Record<string, DebugConfiguration[]>> {\n        // TODO: Support dynamic debug configurations through Theia extensions?\n        return {};\n    }\n    fetchDynamicDebugConfiguration(name: string, type: string, folder?: string): Promise<DebugConfiguration | undefined> {\n        // TODO: Support dynamic debug configurations through Theia extensions?\n        return Promise.resolve(undefined);\n    }\n    async resolveDebugConfiguration(config: DebugConfiguration, workspaceFolderUri?: string): Promise<DebugConfiguration> {\n        return this.registry.resolveDebugConfiguration(config, workspaceFolderUri);\n    }\n    async resolveDebugConfigurationWithSubstitutedVariables(config: DebugConfiguration, workspaceFolderUri?: string): Promise<DebugConfiguration> {\n        return this.registry.resolveDebugConfigurationWithSubstitutedVariables(config, workspaceFolderUri);\n    }\n\n    protected readonly sessions = new Set<string>();\n    async createDebugSession(config: DebugConfiguration, _workspaceFolderUri?: string): Promise<string> {\n        const session = await this.sessionManager.create(config, this.registry);\n        this.sessions.add(session.id);\n        return session.id;\n    }\n\n    async terminateDebugSession(sessionId?: string): Promise<void> {\n        if (sessionId) {\n            await this.doStop(sessionId);\n        } else {\n            const promises: Promise<void>[] = [];\n            const sessions = [...this.sessions];\n            this.sessions.clear();\n            for (const session of sessions) {\n                promises.push((async () => {\n                    try {\n                        await this.doStop(session);\n                    } catch (e) {\n                        console.error('terminateDebugSession failed:', e);\n                    }\n                })());\n            }\n            await Promise.all(promises);\n        }\n    }\n    protected async doStop(sessionId: string): Promise<void> {\n        const debugSession = this.sessionManager.find(sessionId);\n        if (debugSession) {\n            this.sessionManager.remove(sessionId);\n            this.sessions.delete(sessionId);\n            await debugSession.stop();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CancellationToken } from '@theia/core';\n\nexport const fileSearchServicePath = '/services/search';\n\n/**\n * The JSON-RPC file search service interface.\n */\nexport interface FileSearchService {\n\n    /**\n     * finds files by a given search pattern.\n     * @return the matching file uris\n     */\n    find(searchPattern: string, options: FileSearchService.Options, cancellationToken?: CancellationToken): Promise<string[]>;\n\n}\n\nexport const FileSearchService = Symbol('FileSearchService');\nexport namespace FileSearchService {\n    export interface BaseOptions {\n        useGitIgnore?: boolean\n        includePatterns?: string[]\n        excludePatterns?: string[]\n    }\n    export interface RootOptions {\n        [rootUri: string]: BaseOptions\n    }\n    export interface Options extends BaseOptions {\n        rootUris?: string[]\n        rootOptions?: RootOptions\n        fuzzyMatch?: boolean\n        limit?: number\n    }\n}\n\nexport const WHITESPACE_QUERY_SEPARATOR = /\\s+/;\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ConnectionHandler, RpcConnectionHandler } from '@theia/core/lib/common';\nimport { FileSearchServiceImpl } from './file-search-service-impl';\nimport { fileSearchServicePath, FileSearchService } from '../common/file-search-service';\n\nexport default new ContainerModule(bind => {\n\n    bind(FileSearchService).to(FileSearchServiceImpl).inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(fileSearchServicePath, () =>\n            ctx.container.get(FileSearchService)\n        )\n    ).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as cp from 'child_process';\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport * as readline from 'readline';\nimport { rgPath } from '@vscode/ripgrep';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { CancellationTokenSource, CancellationToken, ILogger, isWindows } from '@theia/core';\nimport { RawProcessFactory } from '@theia/process/lib/node';\nimport { FileSearchService, WHITESPACE_QUERY_SEPARATOR } from '../common/file-search-service';\nimport * as path from 'path';\n\n@injectable()\nexport class FileSearchServiceImpl implements FileSearchService {\n\n    constructor(\n        @inject(ILogger) protected readonly logger: ILogger,\n        /** @deprecated since 1.7.0 */\n        @inject(RawProcessFactory) protected readonly rawProcessFactory: RawProcessFactory,\n    ) { }\n\n    async find(searchPattern: string, options: FileSearchService.Options, clientToken?: CancellationToken): Promise<string[]> {\n        const cancellationSource = new CancellationTokenSource();\n        if (clientToken) {\n            clientToken.onCancellationRequested(() => cancellationSource.cancel());\n        }\n        const token = cancellationSource.token;\n        const opts = {\n            fuzzyMatch: true,\n            limit: Number.MAX_SAFE_INTEGER,\n            useGitIgnore: true,\n            ...options\n        };\n\n        const roots: FileSearchService.RootOptions = options.rootOptions || {};\n        if (options.rootUris) {\n            for (const rootUri of options.rootUris) {\n                if (!roots[rootUri]) {\n                    roots[rootUri] = {};\n                }\n            }\n        }\n        // eslint-disable-next-line guard-for-in\n        for (const rootUri in roots) {\n            const rootOptions = roots[rootUri];\n            if (opts.includePatterns) {\n                const includePatterns = rootOptions.includePatterns || [];\n                rootOptions.includePatterns = [...includePatterns, ...opts.includePatterns];\n            }\n            if (opts.excludePatterns) {\n                const excludePatterns = rootOptions.excludePatterns || [];\n                rootOptions.excludePatterns = [...excludePatterns, ...opts.excludePatterns];\n            }\n            if (rootOptions.useGitIgnore === undefined) {\n                rootOptions.useGitIgnore = opts.useGitIgnore;\n            }\n        }\n\n        const exactMatches = new Set<string>();\n        const fuzzyMatches = new Set<string>();\n\n        if (isWindows) {\n            // Allow users on Windows to search for paths using either forwards or backwards slash\n            searchPattern = searchPattern.replace(/\\//g, '\\\\');\n        }\n\n        const patterns = searchPattern.toLocaleLowerCase().trim().split(WHITESPACE_QUERY_SEPARATOR);\n\n        await Promise.all(Object.keys(roots).map(async root => {\n            try {\n                const rootUri = new URI(root);\n                const rootPath = FileUri.fsPath(rootUri);\n                const rootOptions = roots[root];\n\n                await this.doFind(rootUri, rootOptions, candidate => {\n\n                    // Convert OS-native candidate path to a file URI string\n                    const fileUri = FileUri.create(path.resolve(rootPath, candidate)).toString();\n\n                    // Skip results that have already been matched.\n                    if (exactMatches.has(fileUri) || fuzzyMatches.has(fileUri)) {\n                        return;\n                    }\n\n                    // Determine if the candidate matches any of the patterns exactly or fuzzy\n                    const candidatePattern = candidate.toLocaleLowerCase();\n                    const patternExists = patterns.every(pattern => candidatePattern.indexOf(pattern) !== -1);\n                    if (patternExists) {\n                        exactMatches.add(fileUri);\n                    } else if (!searchPattern || searchPattern === '*') {\n                        exactMatches.add(fileUri);\n                    } else {\n                        const fuzzyPatternExists = patterns.every(pattern => fuzzy.test(pattern, candidate));\n                        if (opts.fuzzyMatch && fuzzyPatternExists) {\n                            fuzzyMatches.add(fileUri);\n                        }\n                    }\n\n                    // Preemptively terminate the search when the list of exact matches reaches the limit.\n                    if (exactMatches.size === opts.limit) {\n                        cancellationSource.cancel();\n                    }\n                }, token);\n            } catch (e) {\n                console.error('Failed to search:', root, e);\n            }\n        }));\n\n        if (clientToken && clientToken.isCancellationRequested) {\n            return [];\n        }\n        // Return the list of results limited by the search limit.\n        return [...exactMatches, ...fuzzyMatches].slice(0, opts.limit);\n    }\n\n    protected doFind(rootUri: URI, options: FileSearchService.BaseOptions, accept: (fileUri: string) => void, token: CancellationToken): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const cwd = FileUri.fsPath(rootUri);\n            const args = this.getSearchArgs(options);\n            const ripgrep = cp.spawn(rgPath, args, { cwd });\n            ripgrep.on('error', reject);\n            ripgrep.on('exit', (code, signal) => {\n                if (typeof code === 'number' && code !== 0) {\n                    reject(new Error(`\"${rgPath}\" exited with code: ${code}`));\n                } else if (typeof signal === 'string') {\n                    reject(new Error(`\"${rgPath}\" was terminated by signal: ${signal}`));\n                }\n            });\n            token.onCancellationRequested(() => {\n                ripgrep.kill(); // most likely sends a signal.\n                resolve(); // avoid rejecting for no good reason.\n            });\n            const lineReader = readline.createInterface({\n                input: ripgrep.stdout,\n                crlfDelay: Infinity,\n            });\n            lineReader.on('line', line => {\n                if (!token.isCancellationRequested) {\n                    accept(line);\n                }\n            });\n            lineReader.on('close', () => resolve());\n        });\n    }\n\n    protected getSearchArgs(options: FileSearchService.BaseOptions): string[] {\n        const args = ['--files', '--hidden', '--case-sensitive', '--no-require-git', '--no-config'];\n        if (options.includePatterns) {\n            for (const includePattern of options.includePatterns) {\n                if (includePattern) {\n                    args.push('--glob', includePattern);\n                }\n            }\n        }\n        if (options.excludePatterns) {\n            for (const excludePattern of options.excludePatterns) {\n                if (excludePattern) {\n                    args.push('--glob', `!${excludePattern}`);\n                }\n            }\n        }\n        if (options.useGitIgnore) {\n            // ripgrep follows `.gitignore` by default, but it doesn't exclude `.git`:\n            args.push('--glob', '!.git');\n        } else {\n            args.push('--no-ignore');\n        }\n        return args;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject } from '@theia/core/lib/common';\n\nexport interface FileDownloadData {\n    readonly uris: string[];\n}\n\nexport namespace FileDownloadData {\n    export function is(arg: unknown): arg is FileDownloadData {\n        return isObject(arg) && 'uris' in arg;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const HTTP_FILE_UPLOAD_PATH = '/file-upload';\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core';\nimport { FileChangeType } from './files';\nexport { FileChangeType };\n\nexport const FileSystemWatcherService = Symbol('FileSystemWatcherServer2');\n/**\n * Singleton implementation of the watch server.\n *\n * Since multiple clients all make requests to this service, we need to track those individually via a `clientId`.\n */\nexport interface FileSystemWatcherService extends RpcServer<FileSystemWatcherServiceClient> {\n    /**\n     * @param clientId arbitrary id used to identify a client.\n     * @param uri the path to watch.\n     * @param options optional parameters.\n     * @returns promise to a unique `number` handle for this request.\n     */\n    watchFileChanges(clientId: number, uri: string, options?: WatchOptions): Promise<number>;\n    /**\n     * @param watcherId handle mapping to a previous `watchFileChanges` request.\n     */\n    unwatchFileChanges(watcherId: number): Promise<void>;\n}\n\nexport interface FileSystemWatcherServiceClient {\n    /** Listen for change events emitted by the watcher. */\n    onDidFilesChanged(event: DidFilesChangedParams): void;\n    /** The watcher can crash in certain conditions. */\n    onError(event: FileSystemWatcherErrorParams): void;\n}\n\nexport interface DidFilesChangedParams {\n    /** Clients to route the events to. */\n    clients?: number[];\n    /** FileSystem changes that occurred. */\n    changes: FileChange[];\n}\n\nexport interface FileSystemWatcherErrorParams {\n    /** Clients to route the events to. */\n    clients: number[];\n    /** The uri that originated the error. */\n    uri: string;\n}\n\nexport const FileSystemWatcherServer = Symbol('FileSystemWatcherServer');\nexport interface FileSystemWatcherServer extends RpcServer<FileSystemWatcherClient> {\n    /**\n     * Start file watching for the given param.\n     * Resolve when watching is started.\n     * Return a watcher id.\n     */\n    watchFileChanges(uri: string, options?: WatchOptions): Promise<number>;\n\n    /**\n     * Stop file watching for the given id.\n     * Resolve when watching is stopped.\n     */\n    unwatchFileChanges(watcherId: number): Promise<void>;\n}\n\nexport interface FileSystemWatcherClient {\n    /**\n     * Notify when files under watched uris are changed.\n     */\n    onDidFilesChanged(event: DidFilesChangedParams): void;\n\n    /**\n     * Notify when unable to watch files because of Linux handle limit.\n     */\n    onError(): void;\n}\n\nexport interface WatchOptions {\n    ignored: string[];\n}\nexport interface FileChange {\n    uri: string;\n    type: FileChangeType;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/platform/files/common/io.ts\n\n/* eslint-disable max-len */\n\nimport URI from '@theia/core/lib/common/uri';\nimport { BinaryBuffer } from '@theia/core/lib/common//buffer';\nimport { CancellationToken, cancelled as canceled } from '@theia/core/lib/common/cancellation';\nimport { FileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, ensureFileSystemProviderError, createFileSystemProviderError, FileSystemProviderErrorCode } from './files';\nimport { WriteableStream, ErrorTransformer, DataTransformer } from '@theia/core/lib/common/stream';\n\nexport interface CreateReadStreamOptions extends FileReadStreamOptions {\n\n    /**\n     * The size of the buffer to use before sending to the stream.\n     */\n    bufferSize: number;\n\n    /**\n     * Allows to massage any possibly error that happens during reading.\n     */\n    errorTransformer?: ErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n    provider: FileSystemProviderWithOpenReadWriteCloseCapability,\n    resource: URI,\n    target: WriteableStream<T>,\n    transformer: DataTransformer<BinaryBuffer, T>,\n    options: CreateReadStreamOptions,\n    token: CancellationToken\n): Promise<void> {\n    let error: Error | undefined = undefined;\n\n    try {\n        await doReadFileIntoStream(provider, resource, target, transformer, options, token);\n    } catch (err) {\n        error = err;\n    } finally {\n        if (error && options.errorTransformer) {\n            error = options.errorTransformer(error);\n        }\n\n        target.end(error);\n    }\n}\n\nasync function doReadFileIntoStream<T>(provider: FileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: DataTransformer<BinaryBuffer, T>, options: CreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n    // Check for cancellation\n    throwIfCancelled(token);\n\n    // open handle through provider\n    const handle = await provider.open(resource, { create: false });\n\n    // Check for cancellation\n    throwIfCancelled(token);\n\n    try {\n        let totalBytesRead = 0;\n        let bytesRead = 0;\n        let allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n        let buffer = BinaryBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n        let posInFile = options && typeof options.position === 'number' ? options.position : 0;\n        let posInBuffer = 0;\n        do {\n            // read from source (handle) at current position (pos) into buffer (buffer) at\n            // buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n            bytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n            posInFile += bytesRead;\n            posInBuffer += bytesRead;\n            totalBytesRead += bytesRead;\n\n            if (typeof allowedRemainingBytes === 'number') {\n                allowedRemainingBytes -= bytesRead;\n            }\n\n            // when buffer full, create a new one and emit it through stream\n            if (posInBuffer === buffer.byteLength) {\n                await target.write(transformer(buffer));\n\n                buffer = BinaryBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n                posInBuffer = 0;\n            }\n        } while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n        // wrap up with last buffer (also respect maxBytes if provided)\n        if (posInBuffer > 0) {\n            let lastChunkLength = posInBuffer;\n            if (typeof allowedRemainingBytes === 'number') {\n                lastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n            }\n\n            target.write(transformer(buffer.slice(0, lastChunkLength)));\n        }\n    } catch (error) {\n        throw ensureFileSystemProviderError(error);\n    } finally {\n        await provider.close(handle);\n    }\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n    if (token.isCancellationRequested) {\n        throw canceled();\n    }\n\n    return true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: CreateReadStreamOptions): boolean {\n\n    // Return early if file is too large to load and we have configured limits\n    if (options?.limits) {\n        if (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n            throw createFileSystemProviderError('To open a file of this size, you need to restart and allow it to use more memory', FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n        }\n\n        if (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n            throw createFileSystemProviderError('File is too large to open', FileSystemProviderErrorCode.FileTooLarge);\n        }\n    }\n\n    return true;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport {\n    FileWriteOptions, FileOpenOptions, FileChangeType,\n    FileSystemProviderCapabilities, FileChange, Stat, FileOverwriteOptions, WatchOptions, FileType, FileSystemProvider, FileDeleteOptions,\n    hasOpenReadWriteCloseCapability, hasFileFolderCopyCapability, hasReadWriteCapability, hasAccessCapability,\n    FileSystemProviderError, FileSystemProviderErrorCode, FileUpdateOptions, hasUpdateCapability, FileUpdateResult, FileReadStreamOptions, hasFileReadStreamCapability\n} from './files';\nimport { RpcServer, RpcProxy, RpcProxyFactory } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { ApplicationError } from '@theia/core/lib/common/application-error';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport type { TextDocumentContentChangeEvent } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { newWriteableStream, ReadableStreamEvents } from '@theia/core/lib/common/stream';\nimport { CancellationToken, cancelled } from '@theia/core/lib/common/cancellation';\n\nexport const remoteFileSystemPath = '/services/remote-filesystem';\n\nexport const RemoteFileSystemServer = Symbol('RemoteFileSystemServer');\nexport interface RemoteFileSystemServer extends RpcServer<RemoteFileSystemClient> {\n    getCapabilities(): Promise<FileSystemProviderCapabilities>\n    stat(resource: string): Promise<Stat>;\n    access(resource: string, mode?: number): Promise<void>;\n    fsPath(resource: string): Promise<string>;\n    open(resource: string, opts: FileOpenOptions): Promise<number>;\n    close(fd: number): Promise<void>;\n    read(fd: number, pos: number, length: number): Promise<{ bytes: Uint8Array; bytesRead: number; }>;\n    readFileStream(resource: string, opts: FileReadStreamOptions, token: CancellationToken): Promise<number>;\n    readFile(resource: string): Promise<Uint8Array>;\n    write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n    writeFile(resource: string, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n    delete(resource: string, opts: FileDeleteOptions): Promise<void>;\n    mkdir(resource: string): Promise<void>;\n    readdir(resource: string): Promise<[string, FileType][]>;\n    rename(source: string, target: string, opts: FileOverwriteOptions): Promise<void>;\n    copy(source: string, target: string, opts: FileOverwriteOptions): Promise<void>;\n    watch(watcher: number, resource: string, opts: WatchOptions): Promise<void>;\n    unwatch(watcher: number): Promise<void>;\n    updateFile(resource: string, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult>;\n}\n\nexport interface RemoteFileChange {\n    readonly type: FileChangeType;\n    readonly resource: string;\n}\n\nexport interface RemoteFileStreamError extends Error {\n    code?: FileSystemProviderErrorCode\n}\n\nexport interface RemoteFileSystemClient {\n    notifyDidChangeFile(event: { changes: RemoteFileChange[] }): void;\n    notifyFileWatchError(): void;\n    notifyDidChangeCapabilities(capabilities: FileSystemProviderCapabilities): void;\n    onFileStreamData(handle: number, data: Uint8Array): void;\n    onFileStreamEnd(handle: number, error: RemoteFileStreamError | undefined): void;\n}\n\nexport const RemoteFileSystemProviderError = ApplicationError.declare(-33005,\n    (message: string, data: { code: FileSystemProviderErrorCode, name: string }, stack: string) =>\n        ({ message, data, stack })\n);\n\nexport class RemoteFileSystemProxyFactory<T extends object> extends RpcProxyFactory<T> {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected override serializeError(e: any): any {\n        if (e instanceof FileSystemProviderError) {\n            const { code, name } = e;\n            return super.serializeError(RemoteFileSystemProviderError(e.message, { code, name }, e.stack));\n        }\n        return super.serializeError(e);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected override deserializeError(capturedError: Error, e: any): any {\n        const error = super.deserializeError(capturedError, e);\n        if (RemoteFileSystemProviderError.is(error)) {\n            const fileOperationError = new FileSystemProviderError(error.message, error.data.code);\n            fileOperationError.name = error.data.name;\n            fileOperationError.stack = error.stack;\n            return fileOperationError;\n        }\n        return e;\n    }\n}\n\n/**\n * Frontend component.\n *\n * Wraps the remote filesystem provider living on the backend.\n */\n@injectable()\nexport class RemoteFileSystemProvider implements Required<FileSystemProvider>, Disposable {\n\n    private readonly onDidChangeFileEmitter = new Emitter<readonly FileChange[]>();\n    readonly onDidChangeFile = this.onDidChangeFileEmitter.event;\n\n    private readonly onFileWatchErrorEmitter = new Emitter<void>();\n    readonly onFileWatchError = this.onFileWatchErrorEmitter.event;\n\n    private readonly onDidChangeCapabilitiesEmitter = new Emitter<void>();\n    readonly onDidChangeCapabilities = this.onDidChangeCapabilitiesEmitter.event;\n\n    private readonly onFileStreamDataEmitter = new Emitter<[number, Uint8Array]>();\n    private readonly onFileStreamData = this.onFileStreamDataEmitter.event;\n\n    private readonly onFileStreamEndEmitter = new Emitter<[number, Error | FileSystemProviderError | undefined]>();\n    private readonly onFileStreamEnd = this.onFileStreamEndEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeFileEmitter,\n        this.onDidChangeCapabilitiesEmitter,\n        this.onFileStreamDataEmitter,\n        this.onFileStreamEndEmitter\n    );\n\n    protected watcherSequence = 0;\n    /**\n     * We'll track the currently allocated watchers, in order to re-allocate them\n     * with the same options once we reconnect to the backend after a disconnection.\n     */\n    protected readonly watchOptions = new Map<number, {\n        uri: string;\n        options: WatchOptions\n    }>();\n\n    private _capabilities: FileSystemProviderCapabilities = 0;\n    get capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n    protected readonly readyDeferred = new Deferred<void>();\n    readonly ready = this.readyDeferred.promise;\n\n    /**\n     * Wrapped remote filesystem.\n     */\n    @inject(RemoteFileSystemServer)\n    protected readonly server: RpcProxy<RemoteFileSystemServer>;\n\n    @postConstruct()\n    protected init(): void {\n        this.server.getCapabilities().then(capabilities => {\n            this._capabilities = capabilities;\n            this.readyDeferred.resolve();\n        }, this.readyDeferred.reject);\n        this.server.setClient({\n            notifyDidChangeFile: ({ changes }) => {\n                this.onDidChangeFileEmitter.fire(changes.map(event => ({ resource: new URI(event.resource), type: event.type })));\n            },\n            notifyFileWatchError: () => {\n                this.onFileWatchErrorEmitter.fire();\n            },\n            notifyDidChangeCapabilities: capabilities => this.setCapabilities(capabilities),\n            onFileStreamData: (handle, data) => this.onFileStreamDataEmitter.fire([handle, data]),\n            onFileStreamEnd: (handle, error) => this.onFileStreamEndEmitter.fire([handle, error])\n        });\n        const onInitialized = this.server.onDidOpenConnection(() => {\n            // skip reconnection on the first connection\n            onInitialized.dispose();\n            this.toDispose.push(this.server.onDidOpenConnection(() => this.reconnect()));\n        });\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected setCapabilities(capabilities: FileSystemProviderCapabilities): void {\n        this._capabilities = capabilities;\n        this.onDidChangeCapabilitiesEmitter.fire(undefined);\n    }\n\n    // --- forwarding calls\n\n    stat(resource: URI): Promise<Stat> {\n        return this.server.stat(resource.toString());\n    }\n\n    access(resource: URI, mode?: number): Promise<void> {\n        return this.server.access(resource.toString(), mode);\n    }\n\n    fsPath(resource: URI): Promise<string> {\n        return this.server.fsPath(resource.toString());\n    }\n\n    open(resource: URI, opts: FileOpenOptions): Promise<number> {\n        return this.server.open(resource.toString(), opts);\n    }\n\n    close(fd: number): Promise<void> {\n        return this.server.close(fd);\n    }\n\n    async read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n        const { bytes, bytesRead } = await this.server.read(fd, pos, length);\n\n        // copy back the data that was written into the buffer on the remote\n        // side. we need to do this because buffers are not referenced by\n        // pointer, but only by value and as such cannot be directly written\n        // to from the other process.\n        data.set(bytes.slice(0, bytesRead), offset);\n\n        return bytesRead;\n    }\n\n    async readFile(resource: URI): Promise<Uint8Array> {\n        const bytes = await this.server.readFile(resource.toString());\n        return bytes;\n    }\n\n    readFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n        const capturedError = new Error();\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const stream = newWriteableStream<Uint8Array>(data => BinaryBuffer.concat(data.map(data => BinaryBuffer.wrap(data))).buffer);\n        this.server.readFileStream(resource.toString(), opts, token).then(streamHandle => {\n            if (token.isCancellationRequested) {\n                stream.end(cancelled());\n                return;\n            }\n            const toDispose = new DisposableCollection(\n                token.onCancellationRequested(() => stream.end(cancelled())),\n                this.onFileStreamData(([handle, data]) => {\n                    if (streamHandle === handle) {\n                        stream.write(data);\n                    }\n                }),\n                this.onFileStreamEnd(([handle, error]) => {\n                    if (streamHandle === handle) {\n                        if (error) {\n                            const code = ('code' in error && error.code) || FileSystemProviderErrorCode.Unknown;\n                            const fileOperationError = new FileSystemProviderError(error.message, code);\n                            fileOperationError.name = error.name;\n                            const capturedStack = capturedError.stack || '';\n                            fileOperationError.stack = `${capturedStack}\\nCaused by: ${error.stack}`;\n                            stream.end(fileOperationError);\n                        } else {\n                            stream.end();\n                        }\n                    }\n                })\n            );\n            stream.on('end', () => toDispose.dispose());\n        }, error => stream.end(error));\n        return stream;\n    }\n\n    write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n        return this.server.write(fd, pos, data, offset, length);\n    }\n\n    writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n        return this.server.writeFile(resource.toString(), content, opts);\n    }\n\n    delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n        return this.server.delete(resource.toString(), opts);\n    }\n\n    mkdir(resource: URI): Promise<void> {\n        return this.server.mkdir(resource.toString());\n    }\n\n    readdir(resource: URI): Promise<[string, FileType][]> {\n        return this.server.readdir(resource.toString());\n    }\n\n    rename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n        return this.server.rename(resource.toString(), target.toString(), opts);\n    }\n\n    copy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n        return this.server.copy(resource.toString(), target.toString(), opts);\n    }\n\n    updateFile(resource: URI, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult> {\n        return this.server.updateFile(resource.toString(), changes, opts);\n    }\n\n    watch(resource: URI, options: WatchOptions): Disposable {\n        const watcherId = this.watcherSequence++;\n        const uri = resource.toString();\n        this.watchOptions.set(watcherId, { uri, options });\n        this.server.watch(watcherId, uri, options);\n        const toUnwatch = Disposable.create(() => {\n            this.watchOptions.delete(watcherId);\n            this.server.unwatch(watcherId);\n        });\n        this.toDispose.push(toUnwatch);\n        return toUnwatch;\n    }\n\n    /**\n     * When a frontend disconnects (e.g. bad connection) the backend resources will be cleared.\n     *\n     * This means that we need to re-allocate the watchers when a frontend reconnects.\n     */\n    protected reconnect(): void {\n        for (const [watcher, { uri, options }] of this.watchOptions.entries()) {\n            this.server.watch(watcher, uri, options);\n        }\n    }\n\n}\n\n/**\n * Backend component.\n *\n * JSON-RPC server exposing a wrapped file system provider remotely.\n */\n@injectable()\nexport class FileSystemProviderServer implements RemoteFileSystemServer {\n\n    private readonly BUFFER_SIZE = 64 * 1024;\n\n    /**\n     * Mapping of `watcherId` to a disposable watcher handle.\n     */\n    protected watchers = new Map<number, Disposable>();\n\n    protected readonly toDispose = new DisposableCollection();\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected client: RemoteFileSystemClient | undefined;\n    setClient(client: RemoteFileSystemClient | undefined): void {\n        this.client = client;\n    }\n\n    /**\n     * Wrapped file system provider.\n     */\n    @inject(FileSystemProvider)\n    protected readonly provider: FileSystemProvider & Partial<Disposable>;\n\n    @postConstruct()\n    protected init(): void {\n        if (this.provider.dispose) {\n            this.toDispose.push(Disposable.create(() => this.provider.dispose!()));\n        }\n        this.toDispose.push(this.provider.onDidChangeCapabilities(() => {\n            if (this.client) {\n                this.client.notifyDidChangeCapabilities(this.provider.capabilities);\n            }\n        }));\n        this.toDispose.push(this.provider.onDidChangeFile(changes => {\n            if (this.client) {\n                this.client.notifyDidChangeFile({\n                    changes: changes.map(({ resource, type }) => ({ resource: resource.toString(), type }))\n                });\n            }\n        }));\n        this.toDispose.push(this.provider.onFileWatchError(() => {\n            if (this.client) {\n                this.client.notifyFileWatchError();\n            }\n        }));\n    }\n\n    async getCapabilities(): Promise<FileSystemProviderCapabilities> {\n        return this.provider.capabilities;\n    }\n\n    stat(resource: string): Promise<Stat> {\n        return this.provider.stat(new URI(resource));\n    }\n\n    access(resource: string, mode?: number): Promise<void> {\n        if (hasAccessCapability(this.provider)) {\n            return this.provider.access(new URI(resource), mode);\n        }\n        throw new Error('not supported');\n    }\n\n    async fsPath(resource: string): Promise<string> {\n        if (hasAccessCapability(this.provider)) {\n            return this.provider.fsPath(new URI(resource));\n        }\n        throw new Error('not supported');\n    }\n\n    open(resource: string, opts: FileOpenOptions): Promise<number> {\n        if (hasOpenReadWriteCloseCapability(this.provider)) {\n            return this.provider.open(new URI(resource), opts);\n        }\n        throw new Error('not supported');\n    }\n\n    close(fd: number): Promise<void> {\n        if (hasOpenReadWriteCloseCapability(this.provider)) {\n            return this.provider.close(fd);\n        }\n        throw new Error('not supported');\n    }\n\n    async read(fd: number, pos: number, length: number): Promise<{ bytes: Uint8Array; bytesRead: number; }> {\n        if (hasOpenReadWriteCloseCapability(this.provider)) {\n            const buffer = BinaryBuffer.alloc(this.BUFFER_SIZE);\n            const bytes = buffer.buffer;\n            const bytesRead = await this.provider.read(fd, pos, bytes, 0, length);\n            return { bytes, bytesRead };\n        }\n        throw new Error('not supported');\n    }\n\n    write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n        if (hasOpenReadWriteCloseCapability(this.provider)) {\n            return this.provider.write(fd, pos, data, offset, length);\n        }\n        throw new Error('not supported');\n    }\n\n    async readFile(resource: string): Promise<Uint8Array> {\n        if (hasReadWriteCapability(this.provider)) {\n            return this.provider.readFile(new URI(resource));\n        }\n        throw new Error('not supported');\n    }\n\n    writeFile(resource: string, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n        if (hasReadWriteCapability(this.provider)) {\n            return this.provider.writeFile(new URI(resource), content, opts);\n        }\n        throw new Error('not supported');\n    }\n\n    delete(resource: string, opts: FileDeleteOptions): Promise<void> {\n        return this.provider.delete(new URI(resource), opts);\n    }\n\n    mkdir(resource: string): Promise<void> {\n        return this.provider.mkdir(new URI(resource));\n    }\n\n    readdir(resource: string): Promise<[string, FileType][]> {\n        return this.provider.readdir(new URI(resource));\n    }\n\n    rename(source: string, target: string, opts: FileOverwriteOptions): Promise<void> {\n        return this.provider.rename(new URI(source), new URI(target), opts);\n    }\n\n    copy(source: string, target: string, opts: FileOverwriteOptions): Promise<void> {\n        if (hasFileFolderCopyCapability(this.provider)) {\n            return this.provider.copy(new URI(source), new URI(target), opts);\n        }\n        throw new Error('not supported');\n    }\n\n    updateFile(resource: string, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult> {\n        if (hasUpdateCapability(this.provider)) {\n            return this.provider.updateFile(new URI(resource), changes, opts);\n        }\n        throw new Error('not supported');\n    }\n\n    async watch(requestedWatcherId: number, resource: string, opts: WatchOptions): Promise<void> {\n        if (this.watchers.has(requestedWatcherId)) {\n            throw new Error('watcher id is already allocated!');\n        }\n        const watcher = this.provider.watch(new URI(resource), opts);\n        this.watchers.set(requestedWatcherId, watcher);\n        this.toDispose.push(Disposable.create(() => this.unwatch(requestedWatcherId)));\n    }\n\n    async unwatch(watcherId: number): Promise<void> {\n        const watcher = this.watchers.get(watcherId);\n        if (watcher) {\n            this.watchers.delete(watcherId);\n            watcher.dispose();\n        }\n    }\n\n    protected readFileStreamSeq = 0;\n\n    async readFileStream(resource: string, opts: FileReadStreamOptions, token: CancellationToken): Promise<number> {\n        if (hasFileReadStreamCapability(this.provider)) {\n            const handle = this.readFileStreamSeq++;\n            const stream = this.provider.readFileStream(new URI(resource), opts, token);\n            stream.on('data', data => this.client?.onFileStreamData(handle, data));\n            stream.on('error', error => {\n                const code = error instanceof FileSystemProviderError ? error.code : undefined;\n                const { name, message, stack } = error;\n                this.client?.onFileStreamEnd(handle, { code, name, message, stack });\n            });\n            stream.on('end', () => this.client?.onFileStreamEnd(handle, undefined));\n            return handle;\n        }\n        throw new Error('not supported');\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/platform/files/node/diskFileSystemProvider.ts\n\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { basename, dirname, normalize, join } from 'path';\nimport { v4 } from 'uuid';\nimport * as os from 'os';\nimport * as fs from 'fs';\nimport {\n    mkdir, open, close, read, write, fdatasync, Stats,\n    lstat, stat, readdir, readFile, exists, chmod,\n    rmdir, unlink, rename, futimes, truncate\n} from 'fs';\nimport { promisify } from 'util';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path } from '@theia/core/lib/common/path';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { OS, isWindows } from '@theia/core/lib/common/os';\nimport { retry } from '@theia/core/lib/common/promise-util';\nimport {\n    FileSystemProviderWithFileReadWriteCapability, FileSystemProviderWithOpenReadWriteCloseCapability, FileSystemProviderWithFileFolderCopyCapability,\n    FileSystemProviderCapabilities,\n    Stat,\n    FileType,\n    FileWriteOptions,\n    createFileSystemProviderError,\n    FileSystemProviderErrorCode,\n    FileOpenOptions,\n    FileDeleteOptions,\n    FileOverwriteOptions,\n    FileSystemProviderError,\n    FileChange,\n    WatchOptions,\n    FileUpdateOptions, FileUpdateResult, FileReadStreamOptions, FilePermission\n} from '../common/files';\nimport { FileSystemWatcherServer } from '../common/filesystem-watcher-protocol';\nimport trash = require('trash');\nimport { TextDocumentContentChangeEvent } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { EncodingService } from '@theia/core/lib/common/encoding-service';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { ReadableStreamEvents, newWriteableStream } from '@theia/core/lib/common/stream';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { readFileIntoStream } from '../common/io';\nimport { Mode } from 'stat-mode';\n\nexport namespace DiskFileSystemProvider {\n    export interface StatAndLink {\n\n        // The stats of the file. If the file is a symbolic\n        // link, the stats will be of that target file and\n        // not the link itself.\n        // If the file is a symbolic link pointing to a non\n        // existing file, the stat will be of the link and\n        // the `dangling` flag will indicate this.\n        stat: fs.Stats;\n\n        // Will be provided if the resource is a symbolic link\n        // on disk. Use the `dangling` flag to find out if it\n        // points to a resource that does not exist on disk.\n        symbolicLink?: { dangling: boolean };\n    }\n}\n\n@injectable()\nexport class DiskFileSystemProvider implements Disposable,\n    FileSystemProviderWithFileReadWriteCapability,\n    FileSystemProviderWithOpenReadWriteCloseCapability,\n    FileSystemProviderWithFileFolderCopyCapability {\n\n    private readonly BUFFER_SIZE = 64 * 1024;\n\n    private readonly onDidChangeFileEmitter = new Emitter<readonly FileChange[]>();\n    readonly onDidChangeFile = this.onDidChangeFileEmitter.event;\n\n    private readonly onFileWatchErrorEmitter = new Emitter<void>();\n    readonly onFileWatchError = this.onFileWatchErrorEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeFileEmitter\n    );\n\n    @inject(FileSystemWatcherServer)\n    protected readonly watcher: FileSystemWatcherServer;\n\n    @inject(EncodingService)\n    protected readonly encodingService: EncodingService;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.watcher);\n        this.watcher.setClient({\n            onDidFilesChanged: params => this.onDidChangeFileEmitter.fire(params.changes.map(({ uri, type }) => ({\n                resource: new URI(uri),\n                type\n            }))),\n            onError: () => this.onFileWatchErrorEmitter.fire()\n        });\n    }\n\n    // #region File Capabilities\n\n    readonly onDidChangeCapabilities = Event.None;\n\n    protected _capabilities: FileSystemProviderCapabilities | undefined;\n    get capabilities(): FileSystemProviderCapabilities {\n        if (!this._capabilities) {\n            this._capabilities =\n                FileSystemProviderCapabilities.FileReadWrite |\n                FileSystemProviderCapabilities.FileOpenReadWriteClose |\n                FileSystemProviderCapabilities.FileReadStream |\n                FileSystemProviderCapabilities.FileFolderCopy |\n                FileSystemProviderCapabilities.Access |\n                FileSystemProviderCapabilities.Trash |\n                FileSystemProviderCapabilities.Update;\n\n            if (OS.type() === OS.Type.Linux) {\n                this._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n            }\n        }\n\n        return this._capabilities;\n    }\n\n    // #endregion\n\n    // #region File Metadata Resolving\n\n    async stat(resource: URI): Promise<Stat> {\n        try {\n            const { stat, symbolicLink } = await this.statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n            const mode = new Mode(stat);\n            return {\n                type: this.toType(stat, symbolicLink),\n                ctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n                mtime: stat.mtime.getTime(),\n                size: stat.size,\n                permissions: !mode.owner.write ? FilePermission.Readonly : undefined,\n            };\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    async access(resource: URI, mode?: number): Promise<void> {\n        try {\n            await promisify(fs.access)(this.toFilePath(resource), mode);\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    async fsPath(resource: URI): Promise<string> {\n        return FileUri.fsPath(resource);\n    }\n\n    protected async statLink(path: string): Promise<DiskFileSystemProvider.StatAndLink> {\n\n        // First stat the link\n        let lstats: Stats | undefined;\n        try {\n            lstats = await promisify(lstat)(path);\n\n            // Return early if the stat is not a symbolic link at all\n            if (!lstats.isSymbolicLink()) {\n                return { stat: lstats };\n            }\n        } catch (error) {\n            /* ignore - use stat() instead */\n        }\n\n        // If the stat is a symbolic link or failed to stat, use fs.stat()\n        // which for symbolic links will stat the target they point to\n        try {\n            const stats = await promisify(stat)(path);\n\n            return { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n        } catch (error) {\n\n            // If the link points to a non-existing file we still want\n            // to return it as result while setting dangling: true flag\n            if (error.code === 'ENOENT' && lstats) {\n                return { stat: lstats, symbolicLink: { dangling: true } };\n            }\n\n            throw error;\n        }\n    }\n\n    async readdir(resource: URI): Promise<[string, FileType][]> {\n        try {\n            const children = await promisify(fs.readdir)(this.toFilePath(resource));\n\n            const result: [string, FileType][] = [];\n            await Promise.all(children.map(async child => {\n                try {\n                    const stat = await this.stat(resource.resolve(child));\n                    result.push([child, stat.type]);\n                } catch (error) {\n                    console.trace(error); // ignore errors for individual entries that can arise from permission denied\n                }\n            }));\n\n            return result;\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    private toType(entry: Stats, symbolicLink?: { dangling: boolean }): FileType {\n        // Signal file type by checking for file / directory, except:\n        // - symbolic links pointing to non-existing files are FileType.Unknown\n        // - files that are neither file nor directory are FileType.Unknown\n        let type: FileType;\n        if (symbolicLink?.dangling) {\n            type = FileType.Unknown;\n        } else if (entry.isFile()) {\n            type = FileType.File;\n        } else if (entry.isDirectory()) {\n            type = FileType.Directory;\n        } else {\n            type = FileType.Unknown;\n        }\n\n        // Always signal symbolic link as file type additionally\n        if (symbolicLink) {\n            type |= FileType.SymbolicLink;\n        }\n\n        return type;\n    }\n\n    // #endregion\n\n    // #region File Reading/Writing\n\n    async readFile(resource: URI): Promise<Uint8Array> {\n        try {\n            const filePath = this.toFilePath(resource);\n\n            return await promisify(readFile)(filePath);\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    readFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n        const stream = newWriteableStream<Uint8Array>(data => BinaryBuffer.concat(data.map(data => BinaryBuffer.wrap(data))).buffer);\n\n        readFileIntoStream(this, resource, stream, data => data.buffer, {\n            ...opts,\n            bufferSize: this.BUFFER_SIZE\n        }, token);\n\n        return stream;\n    }\n\n    async writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n        let handle: number | undefined = undefined;\n        try {\n            const filePath = this.toFilePath(resource);\n\n            // Validate target unless { create: true, overwrite: true }\n            if (!opts.create || !opts.overwrite) {\n                const fileExists = await promisify(exists)(filePath);\n                if (fileExists) {\n                    if (!opts.overwrite) {\n                        throw createFileSystemProviderError('File already exists', FileSystemProviderErrorCode.FileExists);\n                    }\n                } else {\n                    if (!opts.create) {\n                        throw createFileSystemProviderError('File does not exist', FileSystemProviderErrorCode.FileNotFound);\n                    }\n                }\n            }\n\n            // Open\n            handle = await this.open(resource, { create: true });\n\n            // Write content at once\n            await this.write(handle, 0, content, 0, content.byteLength);\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        } finally {\n            if (typeof handle === 'number') {\n                await this.close(handle);\n            }\n        }\n    }\n\n    private mapHandleToPos: Map<number, number> = new Map();\n\n    private writeHandles: Set<number> = new Set();\n    private canFlush: boolean = true;\n\n    async open(resource: URI, opts: FileOpenOptions): Promise<number> {\n        try {\n            const filePath = this.toFilePath(resource);\n\n            let flags: string | undefined = undefined;\n            if (opts.create) {\n                if (isWindows && await promisify(exists)(filePath)) {\n                    try {\n                        // On Windows and if the file exists, we use a different strategy of saving the file\n                        // by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n                        // (see https://github.com/Microsoft/vscode/issues/931) and prevent removing alternate data streams\n                        // (see https://github.com/Microsoft/vscode/issues/6363)\n                        await promisify(truncate)(filePath, 0);\n\n                        // After a successful truncate() the flag can be set to 'r+' which will not truncate.\n                        flags = 'r+';\n                    } catch (error) {\n                        console.trace(error);\n                    }\n                }\n\n                // we take opts.create as a hint that the file is opened for writing\n                // as such we use 'w' to truncate an existing or create the\n                // file otherwise. we do not allow reading.\n                if (!flags) {\n                    flags = 'w';\n                }\n            } else {\n                // otherwise we assume the file is opened for reading\n                // as such we use 'r' to neither truncate, nor create\n                // the file.\n                flags = 'r';\n            }\n\n            const handle = await promisify(open)(filePath, flags);\n\n            // remember this handle to track file position of the handle\n            // we init the position to 0 since the file descriptor was\n            // just created and the position was not moved so far (see\n            // also http://man7.org/linux/man-pages/man2/open.2.html -\n            // \"The file offset is set to the beginning of the file.\")\n            this.mapHandleToPos.set(handle, 0);\n\n            // remember that this handle was used for writing\n            if (opts.create) {\n                this.writeHandles.add(handle);\n            }\n\n            return handle;\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    async close(fd: number): Promise<void> {\n        try {\n\n            // remove this handle from map of positions\n            this.mapHandleToPos.delete(fd);\n\n            // if a handle is closed that was used for writing, ensure\n            // to flush the contents to disk if possible.\n            if (this.writeHandles.delete(fd) && this.canFlush) {\n                try {\n                    await promisify(fdatasync)(fd);\n                } catch (error) {\n                    // In some exotic setups it is well possible that node fails to sync\n                    // In that case we disable flushing and log the error to our logger\n                    this.canFlush = false;\n                    console.error(error);\n                }\n            }\n\n            return await promisify(close)(fd);\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    async read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n        const normalizedPos = this.normalizePos(fd, pos);\n\n        let bytesRead: number | null = null;\n        try {\n            const result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n            if (typeof result === 'number') {\n                bytesRead = result; // node.d.ts fail\n            } else {\n                bytesRead = result.bytesRead;\n            }\n\n            return bytesRead;\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        } finally {\n            this.updatePos(fd, normalizedPos, bytesRead);\n        }\n    }\n\n    private normalizePos(fd: number, pos: number): number | null {\n\n        // when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n        // rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n        // call that in some cases can even fail (e.g. when opening a file over FTP -\n        // see https://github.com/microsoft/vscode/issues/73884).\n        //\n        // as such, we compare the passed in position argument with our last known\n        // position for the file descriptor and use \"null\" if they match.\n        if (pos === this.mapHandleToPos.get(fd)) {\n            return null;\n        }\n\n        return pos;\n    }\n\n    private updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n        const lastKnownPos = this.mapHandleToPos.get(fd);\n        if (typeof lastKnownPos === 'number') {\n\n            // pos !== null signals that previously a position was used that is\n            // not null. node.js documentation explains, that in this case\n            // the internal file pointer is not moving and as such we do not move\n            // our position pointer.\n            //\n            // Docs: \"If position is null, data will be read from the current file position,\n            // and the file position will be updated. If position is an integer, the file position\n            // will remain unchanged.\"\n            if (typeof pos === 'number') {\n                // do not modify the position\n            } else if (typeof bytesLength === 'number') {\n                this.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n            } else {\n                this.mapHandleToPos.delete(fd);\n            }\n        }\n    }\n\n    async write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n        // we know at this point that the file to write to is truncated and thus empty\n        // if the write now fails, the file remains empty. as such we really try hard\n        // to ensure the write succeeds by retrying up to three times.\n        return retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n    }\n\n    private async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n        const normalizedPos = this.normalizePos(fd, pos);\n\n        let bytesWritten: number | null = null;\n        try {\n            const result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n            if (typeof result === 'number') {\n                bytesWritten = result; // node.d.ts fail\n            } else {\n                bytesWritten = result.bytesWritten;\n            }\n\n            return bytesWritten;\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        } finally {\n            this.updatePos(fd, normalizedPos, bytesWritten);\n        }\n    }\n\n    // #endregion\n\n    // #region Move/Copy/Delete/Create Folder\n\n    async mkdir(resource: URI): Promise<void> {\n        try {\n            await promisify(mkdir)(this.toFilePath(resource));\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    async delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n        try {\n            const filePath = this.toFilePath(resource);\n\n            await this.doDelete(filePath, opts);\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    protected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n        if (!opts.useTrash) {\n            if (opts.recursive) {\n                await this.rimraf(filePath);\n            } else {\n                await promisify(unlink)(filePath);\n            }\n        } else {\n            await trash(filePath);\n        }\n    }\n\n    protected rimraf(path: string): Promise<void> {\n        if (new Path(path).isRoot) {\n            throw new Error('rimraf - will refuse to recursively delete root');\n        }\n        return this.rimrafMove(path);\n    }\n\n    protected async rimrafMove(path: string): Promise<void> {\n        try {\n            const pathInTemp = join(os.tmpdir(), v4());\n            try {\n                await promisify(rename)(path, pathInTemp);\n            } catch (error) {\n                return this.rimrafUnlink(path); // if rename fails, delete without tmp dir\n            }\n\n            // Delete but do not return as promise\n            this.rimrafUnlink(pathInTemp);\n        } catch (error) {\n            if (error.code !== 'ENOENT') {\n                throw error;\n            }\n        }\n    }\n\n    protected async rimrafUnlink(path: string): Promise<void> {\n        try {\n            const stat = await promisify(lstat)(path);\n\n            // Folder delete (recursive) - NOT for symbolic links though!\n            if (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n                // Children\n                const children = await promisify(readdir)(path);\n                await Promise.all(children.map(child => this.rimrafUnlink(join(path, child))));\n\n                // Folder\n                await promisify(rmdir)(path);\n            } else {\n\n                // chmod as needed to allow for unlink\n                const mode = stat.mode;\n                if (!(mode & 128)) { // 128 === 0200\n                    await promisify(chmod)(path, mode | 128);\n                }\n\n                return promisify(unlink)(path);\n            }\n        } catch (error) {\n            if (error.code !== 'ENOENT') {\n                throw error;\n            }\n        }\n    }\n\n    async rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n        const fromFilePath = this.toFilePath(from);\n        const toFilePath = this.toFilePath(to);\n\n        if (fromFilePath === toFilePath) {\n            return; // simulate node.js behaviour here and do a no-op if paths match\n        }\n\n        try {\n\n            // Ensure target does not exist\n            await this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n            // Move\n            await this.move(fromFilePath, toFilePath);\n        } catch (error) {\n\n            // rewrite some typical errors that can happen especially around symlinks\n            // to something the user can better understand\n            if (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n                error = new Error(`Unable to move '${basename(fromFilePath)}' into '${basename(dirname(toFilePath))}' (${error.toString()}).`);\n            }\n\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    protected async move(source: string, target: string): Promise<void> {\n        if (source === target) {\n            return Promise.resolve();\n        }\n\n        async function updateMtime(path: string): Promise<void> {\n            const stat = await promisify(lstat)(path);\n            if (stat.isDirectory() || stat.isSymbolicLink()) {\n                return Promise.resolve(); // only for files\n            }\n\n            const fd = await promisify(open)(path, 'a');\n            try {\n                await promisify(futimes)(fd, stat.atime, new Date());\n            } catch (error) {\n                // ignore\n            }\n\n            return promisify(close)(fd);\n        }\n\n        try {\n            await promisify(rename)(source, target);\n            await updateMtime(target);\n        } catch (error) {\n\n            // In two cases we fallback to classic copy and delete:\n            //\n            // 1.) The EXDEV error indicates that source and target are on different devices\n            // In this case, fallback to using a copy() operation as there is no way to\n            // rename() between different devices.\n            //\n            // 2.) The user tries to rename a file/folder that ends with a dot. This is not\n            // really possible to move then, at least on UNC devices.\n            if (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n                await this.doCopy(source, target);\n                await this.rimraf(source);\n                await updateMtime(target);\n            } else {\n                throw error;\n            }\n        }\n    }\n\n    async copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n        const fromFilePath = this.toFilePath(from);\n        const toFilePath = this.toFilePath(to);\n\n        if (fromFilePath === toFilePath) {\n            return; // simulate node.js behaviour here and do a no-op if paths match\n        }\n\n        try {\n\n            // Ensure target does not exist\n            await this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n            // Copy\n            await this.doCopy(fromFilePath, toFilePath);\n        } catch (error) {\n\n            // rewrite some typical errors that can happen especially around symlinks\n            // to something the user can better understand\n            if (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n                error = new Error(`Unable to copy '${basename(fromFilePath)}' into '${basename(dirname(toFilePath))}' (${error.toString()}).`);\n            }\n\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    private async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n        const isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n        const fromFilePath = this.toFilePath(from);\n        const toFilePath = this.toFilePath(to);\n\n        let isSameResourceWithDifferentPathCase = false;\n        if (!isPathCaseSensitive) {\n            isSameResourceWithDifferentPathCase = fromFilePath.toLowerCase() === toFilePath.toLowerCase();\n        }\n\n        if (isSameResourceWithDifferentPathCase && mode === 'copy') {\n            throw createFileSystemProviderError(\"'File cannot be copied to same path with different path case\", FileSystemProviderErrorCode.FileExists);\n        }\n\n        // handle existing target (unless this is a case change)\n        if (!isSameResourceWithDifferentPathCase && await promisify(exists)(toFilePath)) {\n            if (!overwrite) {\n                throw createFileSystemProviderError('File at target already exists', FileSystemProviderErrorCode.FileExists);\n            }\n\n            // Delete target\n            await this.delete(to, { recursive: true, useTrash: false });\n        }\n    }\n\n    protected async doCopy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n        const copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n        const fileStat = await promisify(stat)(source);\n        if (!fileStat.isDirectory()) {\n            return this.doCopyFile(source, target, fileStat.mode & 511);\n        }\n\n        if (copiedSources[source]) {\n            return Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n        }\n\n        copiedSources[source] = true; // remember as copied\n\n        // Create folder\n        await this.mkdirp(target, fileStat.mode & 511);\n\n        // Copy each file recursively\n        const files = await promisify(readdir)(source);\n        for (let i = 0; i < files.length; i++) {\n            const file = files[i];\n            await this.doCopy(join(source, file), join(target, file), copiedSources);\n        }\n    }\n\n    protected async mkdirp(path: string, mode?: number): Promise<void> {\n        const mkdir = async () => {\n            try {\n                await promisify(fs.mkdir)(path, mode);\n            } catch (error) {\n\n                // ENOENT: a parent folder does not exist yet\n                if (error.code === 'ENOENT') {\n                    throw error;\n                }\n\n                // Any other error: check if folder exists and\n                // return normally in that case if its a folder\n                let targetIsFile = false;\n                try {\n                    const fileStat = await promisify(fs.stat)(path);\n                    targetIsFile = !fileStat.isDirectory();\n                } catch (statError) {\n                    throw error; // rethrow original error if stat fails\n                }\n\n                if (targetIsFile) {\n                    throw new Error(`'${path}' exists and is not a directory.`);\n                }\n            }\n        };\n\n        // stop at root\n        if (path === dirname(path)) {\n            return;\n        }\n\n        try {\n            await mkdir();\n        } catch (error) {\n\n            // ENOENT: a parent folder does not exist yet, continue\n            // to create the parent folder and then try again.\n            if (error.code === 'ENOENT') {\n                await this.mkdirp(dirname(path), mode);\n\n                return mkdir();\n            }\n\n            // Any other error\n            throw error;\n        }\n    }\n\n    protected doCopyFile(source: string, target: string, mode: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const reader = fs.createReadStream(source);\n            const writer = fs.createWriteStream(target, { mode });\n\n            let finished = false;\n            const finish = (error?: Error) => {\n                if (!finished) {\n                    finished = true;\n\n                    // in error cases, pass to callback\n                    if (error) {\n                        return reject(error);\n                    }\n\n                    // we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n                    fs.chmod(target, mode, error => error ? reject(error) : resolve());\n                }\n            };\n\n            // handle errors properly\n            reader.once('error', error => finish(error));\n            writer.once('error', error => finish(error));\n\n            // we are done (underlying fd has been closed)\n            writer.once('close', () => finish());\n\n            // start piping\n            reader.pipe(writer);\n        });\n    }\n\n    // #endregion\n\n    // #region File Watching\n\n    watch(resource: URI, opts: WatchOptions): Disposable {\n        const watcherService = this.watcher;\n        /**\n         * Disposable handle. Can be disposed early (before the watcher is allocated.)\n         */\n        const handle = {\n            disposed: false,\n            watcherId: undefined as number | undefined,\n            dispose(): void {\n                if (this.disposed) {\n                    return;\n                }\n                if (this.watcherId !== undefined) {\n                    watcherService.unwatchFileChanges(this.watcherId);\n                }\n                this.disposed = true;\n            },\n        };\n        watcherService.watchFileChanges(resource.toString(), {\n            // Convert from `files.WatchOptions` to internal `watcher-protocol.WatchOptions`:\n            ignored: opts.excludes\n        }).then(watcherId => {\n            if (handle.disposed) {\n                watcherService.unwatchFileChanges(watcherId);\n            } else {\n                handle.watcherId = watcherId;\n            }\n        });\n        this.toDispose.push(handle);\n        return handle;\n    }\n\n    // #endregion\n\n    async updateFile(resource: URI, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult> {\n        try {\n            const content = await this.readFile(resource);\n            const decoded = this.encodingService.decode(BinaryBuffer.wrap(content), opts.readEncoding);\n            const newContent = TextDocument.update(TextDocument.create('', '', 1, decoded), changes, 2).getText();\n            const encoding = await this.encodingService.toResourceEncoding(opts.writeEncoding, {\n                overwriteEncoding: opts.overwriteEncoding,\n                read: async length => {\n                    const fd = await this.open(resource, { create: false });\n                    try {\n                        const data = new Uint8Array(length);\n                        await this.read(fd, 0, data, 0, length);\n                        return data;\n                    } finally {\n                        await this.close(fd);\n                    }\n                }\n            });\n            const encoded = this.encodingService.encode(newContent, encoding);\n            await this.writeFile(resource, encoded.buffer, { create: false, overwrite: true });\n            const stat = await this.stat(resource);\n            return Object.assign(stat, { encoding: encoding.encoding });\n        } catch (error) {\n            throw this.toFileSystemProviderError(error);\n        }\n    }\n\n    // #region Helpers\n\n    protected toFilePath(resource: URI): string {\n        return normalize(FileUri.fsPath(resource));\n    }\n\n    private toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n        if (error instanceof FileSystemProviderError) {\n            return error; // avoid double conversion\n        }\n\n        let code: FileSystemProviderErrorCode;\n        switch (error.code) {\n            case 'ENOENT':\n                code = FileSystemProviderErrorCode.FileNotFound;\n                break;\n            case 'EISDIR':\n                code = FileSystemProviderErrorCode.FileIsADirectory;\n                break;\n            case 'ENOTDIR':\n                code = FileSystemProviderErrorCode.FileNotADirectory;\n                break;\n            case 'EEXIST':\n                code = FileSystemProviderErrorCode.FileExists;\n                break;\n            case 'EPERM':\n            case 'EACCES':\n                code = FileSystemProviderErrorCode.NoPermissions;\n                break;\n            default:\n                code = FileSystemProviderErrorCode.Unknown;\n        }\n\n        return createFileSystemProviderError(error, code);\n    }\n\n    // #endregion\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { pack } from 'tar-fs';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\n\n@injectable()\nexport class DirectoryArchiver {\n\n    async archive(inputPath: string, outputPath: string, entries?: string[]): Promise<void> {\n        return new Promise<void>(async (resolve, reject) => {\n            pack(inputPath, { entries }).pipe(fs.createWriteStream(outputPath)).on('finish', () => resolve()).on('error', e => reject(e));\n        });\n    }\n\n    async findCommonParents(uris: URI[]): Promise<Map<string, string[]>> {\n        const map = new Map<string, string[]>();\n        for (const uri of uris) {\n            // 1. Get the container if not the URI is not a directory.\n            const containerUri = (await this.isDir(uri)) ? uri : uri.parent;\n            let containerUriStr = this.toUriString(containerUri);\n            // 2. If the container already registered, just append the current URI to it.\n            if (map.has(containerUriStr)) {\n                map.set(containerUriStr, [...map.get(containerUriStr)!, this.toUriString(uri)]);\n            } else {\n                // 3. Try to find the longest container URI that we can use.\n                // When we have `/A/B/` and `/A/C` and a file `A/B/C/D.txt` then we need to find `/A/B`. The longest URIs come first.\n                for (const knownContainerUri of Array.from(map.keys()).sort((left, right) => right.length - left.length)) {\n                    if (uri.toString().startsWith(knownContainerUri)) {\n                        containerUriStr = knownContainerUri;\n                        break;\n                    }\n                }\n                const entries = map.get(containerUriStr) || [];\n                entries.push(this.toUriString(uri));\n                map.set(containerUriStr, entries);\n            }\n            // 4. Collapse the hierarchy by finding the closest common parents for the entries, if any.\n            let collapsed = false;\n            collapseLoop: while (!collapsed) {\n                const knownContainerUris = Array.from(map.keys()).sort((left, right) => right.length - left.length);\n                if (knownContainerUris.length > 1) {\n                    for (let i = 0; i < knownContainerUris.length; i++) {\n                        for (let j = i + 1; j < knownContainerUris.length; j++) {\n                            const left = knownContainerUris[i];\n                            const right = knownContainerUris[j];\n                            const commonParent = this.closestCommonParentUri(new URI(left), new URI(right));\n                            if (commonParent && !commonParent.path.isRoot) {\n                                const leftEntries = map.get(left) || [];\n                                const rightEntries = map.get(right) || [];\n                                map.delete(left);\n                                map.delete(right);\n                                map.set(this.toUriString(commonParent), [...leftEntries, ...rightEntries]);\n                                break collapseLoop;\n                            }\n                        }\n                    }\n                }\n                collapsed = true;\n            }\n        }\n        return map;\n    }\n\n    protected closestCommonParentUri(left: URI, right: URI): URI | undefined {\n        if (left.scheme !== right.scheme) {\n            return undefined;\n        }\n        const allLeft = left.allLocations;\n        const allRight = right.allLocations;\n        for (const leftUri of allLeft) {\n            for (const rightUri of allRight) {\n                if (this.equal(leftUri, rightUri)) {\n                    return leftUri;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected async isDir(uri: URI): Promise<boolean> {\n        try {\n            const stat = await fs.stat(FileUri.fsPath(uri));\n            return stat.isDirectory();\n        } catch {\n            return false;\n        }\n    }\n\n    protected equal(left: URI | URI[], right: URI | URI[]): boolean {\n        if (Array.isArray(left) && Array.isArray(right)) {\n            if (left === right) {\n                return true;\n            }\n            if (left.length !== right.length) {\n                return false;\n            }\n            return left.map(this.toUriString).sort().toString() === right.map(this.toUriString).sort().toString();\n        } else if (left instanceof URI && right instanceof URI) {\n            return this.toUriString(left) === this.toUriString(right);\n        }\n        return false;\n    }\n\n    protected toUriString(uri: URI): string {\n        const raw = uri.toString();\n        return raw.endsWith('/') ? raw.slice(0, -1) : raw;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { FileDownloadEndpoint } from './file-download-endpoint';\nimport { FileDownloadHandler, SingleFileDownloadHandler, MultiFileDownloadHandler, DownloadLinkHandler } from './file-download-handler';\nimport { DirectoryArchiver } from './directory-archiver';\nimport { FileDownloadCache } from './file-download-cache';\n\nexport default new ContainerModule(bind => {\n    bind(FileDownloadEndpoint).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(FileDownloadEndpoint);\n    bind(FileDownloadCache).toSelf().inSingletonScope();\n    bind(FileDownloadHandler).to(SingleFileDownloadHandler).inSingletonScope().whenTargetNamed(FileDownloadHandler.SINGLE);\n    bind(FileDownloadHandler).to(MultiFileDownloadHandler).inSingletonScope().whenTargetNamed(FileDownloadHandler.MULTI);\n    bind(FileDownloadHandler).to(DownloadLinkHandler).inSingletonScope().whenTargetNamed(FileDownloadHandler.DOWNLOAD_LINK);\n    bind(DirectoryArchiver).toSelf().inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Bitsler and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport * as rimraf from 'rimraf';\n\nexport interface DownloadStorageItem {\n    file: string;\n    root?: string;\n    size: number;\n    remove: boolean;\n    expire?: number;\n}\n\n@injectable()\nexport class FileDownloadCache {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n    protected readonly downloads = new Map<string, DownloadStorageItem>();\n    protected readonly expireTimeInMinutes: number = 1;\n\n    addDownload(id: string, downloadInfo: DownloadStorageItem): void {\n        downloadInfo.file = encodeURIComponent(downloadInfo.file);\n        if (downloadInfo.root) {\n            downloadInfo.root = encodeURIComponent(downloadInfo.root);\n        }\n        // expires in 1 minute enough for parallel connections to be connected.\n        downloadInfo.expire = Date.now() + (this.expireTimeInMinutes * 600000);\n        this.downloads.set(id, downloadInfo);\n    }\n\n    getDownload(id: string): DownloadStorageItem | undefined {\n        this.expireDownloads();\n        const downloadInfo = this.downloads.get(id);\n        if (downloadInfo) {\n\n            downloadInfo.file = decodeURIComponent(downloadInfo.file);\n            if (downloadInfo.root) {\n                downloadInfo.root = decodeURIComponent(downloadInfo.root);\n            }\n        }\n        return downloadInfo;\n    }\n\n    deleteDownload(id: string): void {\n        const downloadInfo = this.downloads.get(id);\n        if (downloadInfo && downloadInfo.remove) {\n            this.deleteRecursively(downloadInfo.root || downloadInfo.file);\n        }\n        this.downloads.delete(id);\n    }\n\n    values(): { [key: string]: DownloadStorageItem } {\n        this.expireDownloads();\n        return [...this.downloads.entries()].reduce((downloads, [key, value]) => ({ ...downloads, [key]: value }), {});\n    }\n\n    protected deleteRecursively(pathToDelete: string): void {\n        rimraf(pathToDelete, error => {\n            if (error) {\n                this.logger.warn(`An error occurred while deleting the temporary data from the disk. Cannot clean up: ${pathToDelete}.`, error);\n            }\n        });\n    }\n\n    protected expireDownloads(): void {\n        const time = Date.now();\n        for (const [id, download] of this.downloads.entries()) {\n            if (download.expire && download.expire <= time) {\n                this.deleteDownload(id);\n            }\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as url from 'url';\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { json } from 'body-parser';\nimport { Application, Router } from '@theia/core/shared/express';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { FileDownloadHandler } from './file-download-handler';\n\n@injectable()\nexport class FileDownloadEndpoint implements BackendApplicationContribution {\n\n    protected static PATH = '/files';\n\n    @inject(FileDownloadHandler)\n    @named(FileDownloadHandler.SINGLE)\n    protected readonly singleFileDownloadHandler: FileDownloadHandler;\n\n    @inject(FileDownloadHandler)\n    @named(FileDownloadHandler.MULTI)\n    protected readonly multiFileDownloadHandler: FileDownloadHandler;\n\n    @inject(FileDownloadHandler)\n    @named(FileDownloadHandler.DOWNLOAD_LINK)\n    protected readonly downloadLinkHandler: FileDownloadHandler;\n\n    configure(app: Application): void {\n        const router = Router();\n        router.get('/download', (request, response) => this.downloadLinkHandler.handle(request, response));\n        router.get('/', (request, response) => this.singleFileDownloadHandler.handle(request, response));\n        router.put('/', (request, response) => this.multiFileDownloadHandler.handle(request, response));\n        // Content-Type: application/json\n        app.use(json());\n        app.use(FileDownloadEndpoint.PATH, router);\n        app.get('/file', (request, response) => {\n            const uri = url.parse(request.url).query;\n            if (!uri) {\n                response.status(400).send('invalid uri');\n                return;\n            }\n            const fsPath = FileUri.fsPath(decodeURIComponent(uri));\n            response.sendFile(fsPath);\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as os from 'os';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { v4 } from 'uuid';\nimport { Request, Response } from '@theia/core/shared/express';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { OK, BAD_REQUEST, METHOD_NOT_ALLOWED, NOT_FOUND, INTERNAL_SERVER_ERROR, REQUESTED_RANGE_NOT_SATISFIABLE, PARTIAL_CONTENT } from 'http-status-codes';\nimport URI from '@theia/core/lib/common/uri';\nimport { isEmpty } from '@theia/core/lib/common/objects';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { DirectoryArchiver } from './directory-archiver';\nimport { FileDownloadData } from '../../common/download/file-download-data';\nimport { FileDownloadCache, DownloadStorageItem } from './file-download-cache';\n\ninterface PrepareDownloadOptions {\n    filePath: string;\n    downloadId: string;\n    remove: boolean;\n    root?: string;\n}\n\n@injectable()\nexport abstract class FileDownloadHandler {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(DirectoryArchiver)\n    protected readonly directoryArchiver: DirectoryArchiver;\n\n    @inject(FileDownloadCache)\n    protected readonly fileDownloadCache: FileDownloadCache;\n\n    public abstract handle(request: Request, response: Response): Promise<void>;\n\n    /**\n     * Prepares the file and the link for download\n     */\n    protected async prepareDownload(request: Request, response: Response, options: PrepareDownloadOptions): Promise<void> {\n        const name = path.basename(options.filePath);\n        try {\n            await fs.access(options.filePath, fs.constants.R_OK);\n            const stat = await fs.stat(options.filePath);\n            this.fileDownloadCache.addDownload(options.downloadId, { file: options.filePath, remove: options.remove, size: stat.size, root: options.root });\n            // do not send filePath but instead use the downloadId\n            const data = { name, id: options.downloadId };\n            response.status(OK).send(data).end();\n        } catch (e) {\n            this.handleError(response, e, INTERNAL_SERVER_ERROR);\n        }\n    }\n\n    protected async download(request: Request, response: Response, downloadInfo: DownloadStorageItem, id: string): Promise<void> {\n        const filePath = downloadInfo.file;\n        const statSize = downloadInfo.size;\n        // this sets the content-disposition and content-type automatically\n        response.attachment(filePath);\n        try {\n            await fs.access(filePath, fs.constants.R_OK);\n            response.setHeader('Accept-Ranges', 'bytes');\n            // parse range header and combine multiple ranges\n            const range = this.parseRangeHeader(request.headers['range'], statSize);\n            if (!range) {\n                response.setHeader('Content-Length', statSize);\n                this.streamDownload(OK, response, fs.createReadStream(filePath), id);\n            } else {\n                const rangeStart = range.start;\n                const rangeEnd = range.end;\n                if (rangeStart >= statSize || rangeEnd >= statSize) {\n                    response.setHeader('Content-Range', `bytes */${statSize}`);\n                    // Return the 416 'Requested Range Not Satisfiable'.\n                    response.status(REQUESTED_RANGE_NOT_SATISFIABLE).end();\n                    return;\n                }\n                response.setHeader('Content-Range', `bytes ${rangeStart}-${rangeEnd}/${statSize}`);\n                response.setHeader('Content-Length', rangeStart === rangeEnd ? 0 : (rangeEnd - rangeStart + 1));\n                response.setHeader('Cache-Control', 'no-cache');\n                this.streamDownload(PARTIAL_CONTENT, response, fs.createReadStream(filePath, { start: rangeStart, end: rangeEnd }), id);\n            }\n        } catch (e) {\n            this.fileDownloadCache.deleteDownload(id);\n            this.handleError(response, e, INTERNAL_SERVER_ERROR);\n        }\n    }\n    /**\n     * Streams the file and pipe it to the Response to avoid any OOM issues\n     */\n    protected streamDownload(status: number, response: Response, stream: fs.ReadStream, id: string): void {\n        response.status(status);\n        stream.on('error', error => {\n            this.fileDownloadCache.deleteDownload(id);\n            this.handleError(response, error, INTERNAL_SERVER_ERROR);\n        });\n        response.on('error', error => {\n            this.fileDownloadCache.deleteDownload(id);\n            this.handleError(response, error, INTERNAL_SERVER_ERROR);\n        });\n        response.on('close', () => {\n            stream.destroy();\n        });\n        stream.pipe(response);\n    }\n    protected parseRangeHeader(range: string | string[] | undefined, statSize: number): { start: number, end: number } | undefined {\n        if (!range || range.length === 0 || Array.isArray(range)) {\n            return;\n        }\n        const index = range.indexOf('=');\n        if (index === -1) {\n            return;\n        }\n        const rangeType = range.slice(0, index);\n        if (rangeType !== 'bytes') {\n            return;\n        }\n        const [start, end] = range.slice(index + 1).split('-').map(r => parseInt(r, 10));\n        return {\n            start: isNaN(start) ? 0 : start,\n            end: (isNaN(end) || end > statSize - 1) ? (statSize - 1) : end\n        };\n    }\n    protected async archive(inputPath: string, outputPath: string = path.join(os.tmpdir(), v4()), entries?: string[]): Promise<string> {\n        await this.directoryArchiver.archive(inputPath, outputPath, entries);\n        return outputPath;\n    }\n\n    protected async createTempDir(downloadId: string = v4()): Promise<string> {\n        const outputPath = path.join(os.tmpdir(), downloadId);\n        await fs.mkdir(outputPath);\n        return outputPath;\n    }\n\n    protected async handleError(response: Response, reason: string | Error, status: number = INTERNAL_SERVER_ERROR): Promise<void> {\n        this.logger.error(reason);\n        response.status(status).send('Unable to download file.').end();\n    }\n\n}\n\nexport namespace FileDownloadHandler {\n    export const SINGLE: symbol = Symbol('single');\n    export const MULTI: symbol = Symbol('multi');\n    export const DOWNLOAD_LINK: symbol = Symbol('download');\n}\n\n@injectable()\nexport class DownloadLinkHandler extends FileDownloadHandler {\n\n    async handle(request: Request, response: Response): Promise<void> {\n        const { method, query } = request;\n        if (method !== 'GET' && method !== 'HEAD') {\n            this.handleError(response, `Unexpected HTTP method. Expected GET got '${method}' instead.`, METHOD_NOT_ALLOWED);\n            return;\n        }\n        if (query === undefined || query.id === undefined || typeof query.id !== 'string') {\n            this.handleError(response, `Cannot access the 'id' query from the request. The query was: ${JSON.stringify(query)}.`, BAD_REQUEST);\n            return;\n        }\n        const cancelDownload = query.cancel;\n        const downloadInfo = this.fileDownloadCache.getDownload(query.id);\n        if (!downloadInfo) {\n            this.handleError(response, `Cannot find the file from the request. The query was: ${JSON.stringify(query)}.`, NOT_FOUND);\n            return;\n        }\n        // allow head request to determine the content length for parallel downloaders\n        if (method === 'HEAD') {\n            response.setHeader('Content-Length', downloadInfo.size);\n            response.status(OK).end();\n            return;\n        }\n        if (!cancelDownload) {\n            this.download(request, response, downloadInfo, query.id);\n        } else {\n            this.logger.info('Download', query.id, 'has been cancelled');\n            this.fileDownloadCache.deleteDownload(query.id);\n        }\n    }\n}\n\n@injectable()\nexport class SingleFileDownloadHandler extends FileDownloadHandler {\n\n    async handle(request: Request, response: Response): Promise<void> {\n        const { method, body, query } = request;\n        if (method !== 'GET') {\n            this.handleError(response, `Unexpected HTTP method. Expected GET got '${method}' instead.`, METHOD_NOT_ALLOWED);\n            return;\n        }\n        if (body !== undefined && !isEmpty(body)) {\n            this.handleError(response, `The request body must either undefined or empty when downloading a single file. The body was: ${JSON.stringify(body)}.`, BAD_REQUEST);\n            return;\n        }\n        if (query === undefined || query.uri === undefined || typeof query.uri !== 'string') {\n            this.handleError(response, `Cannot access the 'uri' query from the request. The query was: ${JSON.stringify(query)}.`, BAD_REQUEST);\n            return;\n        }\n        const uri = new URI(query.uri).toString(true);\n        const filePath = FileUri.fsPath(uri);\n\n        let stat: fs.Stats;\n        try {\n            stat = await fs.stat(filePath);\n        } catch {\n            this.handleError(response, `The file does not exist. URI: ${uri}.`, NOT_FOUND);\n            return;\n        }\n        try {\n            const downloadId = v4();\n            const options: PrepareDownloadOptions = { filePath, downloadId, remove: false };\n            if (!stat.isDirectory()) {\n                await this.prepareDownload(request, response, options);\n            } else {\n                const outputRootPath = await this.createTempDir(downloadId);\n                const outputPath = path.join(outputRootPath, `${path.basename(filePath)}.tar`);\n                await this.archive(filePath, outputPath);\n                options.filePath = outputPath;\n                options.remove = true;\n                options.root = outputRootPath;\n                await this.prepareDownload(request, response, options);\n            }\n        } catch (e) {\n            this.handleError(response, e, INTERNAL_SERVER_ERROR);\n        }\n    }\n\n}\n\n@injectable()\nexport class MultiFileDownloadHandler extends FileDownloadHandler {\n\n    async handle(request: Request, response: Response): Promise<void> {\n        const { method, body } = request;\n        if (method !== 'PUT') {\n            this.handleError(response, `Unexpected HTTP method. Expected PUT got '${method}' instead.`, METHOD_NOT_ALLOWED);\n            return;\n        }\n        if (body === undefined) {\n            this.handleError(response, 'The request body must be defined when downloading multiple files.', BAD_REQUEST);\n            return;\n        }\n        if (!FileDownloadData.is(body)) {\n            this.handleError(response, `Unexpected body format. Cannot extract the URIs from the request body. Body was: ${JSON.stringify(body)}.`, BAD_REQUEST);\n            return;\n        }\n        if (body.uris.length === 0) {\n            this.handleError(response, `Insufficient body format. No URIs were defined by the request body. Body was: ${JSON.stringify(body)}.`, BAD_REQUEST);\n            return;\n        }\n        for (const uri of body.uris) {\n            try {\n                await fs.access(FileUri.fsPath(uri));\n            } catch {\n                this.handleError(response, `The file does not exist. URI: ${uri}.`, NOT_FOUND);\n                return;\n            }\n        }\n        try {\n            const downloadId = v4();\n            const outputRootPath = await this.createTempDir(downloadId);\n            const distinctUris = Array.from(new Set(body.uris.map(uri => new URI(uri))));\n            const tarPaths = [];\n            // We should have one key in the map per FS drive.\n            for (const [rootUri, uris] of (await this.directoryArchiver.findCommonParents(distinctUris)).entries()) {\n                const rootPath = FileUri.fsPath(rootUri);\n                const entries = uris.map(FileUri.fsPath).map(p => path.relative(rootPath, p));\n                const outputPath = path.join(outputRootPath, `${path.basename(rootPath)}.tar`);\n                await this.archive(rootPath, outputPath, entries);\n                tarPaths.push(outputPath);\n            }\n            const options: PrepareDownloadOptions = { filePath: '', downloadId, remove: true, root: outputRootPath };\n            if (tarPaths.length === 1) {\n                // tslint:disable-next-line:whitespace\n                const [outputPath,] = tarPaths;\n                options.filePath = outputPath;\n                await this.prepareDownload(request, response, options);\n            } else {\n                // We need to tar the tars.\n                const outputPath = path.join(outputRootPath, `theia-archive-${Date.now()}.tar`);\n                options.filePath = outputPath;\n                await this.archive(outputRootPath, outputPath, tarPaths.map(p => path.relative(outputRootPath, p)));\n                await this.prepareDownload(request, response, options);\n            }\n        } catch (e) {\n            this.handleError(response, e, INTERNAL_SERVER_ERROR);\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { ConnectionHandler, RpcConnectionHandler, ILogger } from '@theia/core/lib/common';\nimport { FileSystemWatcherServer, FileSystemWatcherService } from '../common/filesystem-watcher-protocol';\nimport { FileSystemWatcherServerClient } from './filesystem-watcher-client';\nimport { NsfwFileSystemWatcherService, NsfwFileSystemWatcherServerOptions } from './nsfw-watcher/nsfw-filesystem-service';\nimport { NodeFileUploadService } from './node-file-upload-service';\nimport { NsfwOptions } from './nsfw-watcher/nsfw-options';\nimport { DiskFileSystemProvider } from './disk-file-system-provider';\nimport {\n    remoteFileSystemPath, RemoteFileSystemServer, RemoteFileSystemClient, FileSystemProviderServer, RemoteFileSystemProxyFactory\n} from '../common/remote-file-system-provider';\nimport { FileSystemProvider } from '../common/files';\nimport { EncodingService } from '@theia/core/lib/common/encoding-service';\nimport { BackendApplicationContribution, IPCConnectionProvider } from '@theia/core/lib/node';\nimport { RpcProxyFactory, ConnectionErrorHandler } from '@theia/core';\nimport { FileSystemWatcherServiceDispatcher } from './filesystem-watcher-dispatcher';\n\nexport const NSFW_SINGLE_THREADED = process.argv.includes('--no-cluster');\nexport const NSFW_WATCHER_VERBOSE = process.argv.includes('--nsfw-watcher-verbose');\n\nexport const NsfwFileSystemWatcherServiceProcessOptions = Symbol('NsfwFileSystemWatcherServiceProcessOptions');\n/**\n * Options to control the way the `NsfwFileSystemWatcherService` process is spawned.\n */\nexport interface NsfwFileSystemWatcherServiceProcessOptions {\n    /**\n     * Path to the script that will run the `NsfwFileSystemWatcherService` in a new process.\n     */\n    entryPoint: string;\n}\n\nexport default new ContainerModule(bind => {\n    bind(EncodingService).toSelf().inSingletonScope();\n    bindFileSystemWatcherServer(bind);\n    bind(DiskFileSystemProvider).toSelf();\n    bind(FileSystemProvider).toService(DiskFileSystemProvider);\n    bind(FileSystemProviderServer).toSelf();\n    bind(RemoteFileSystemServer).toService(FileSystemProviderServer);\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler<RemoteFileSystemClient>(remoteFileSystemPath, client => {\n            const server = ctx.container.get<RemoteFileSystemServer>(RemoteFileSystemServer);\n            server.setClient(client);\n            client.onDidCloseConnection(() => server.dispose());\n            return server;\n        }, RemoteFileSystemProxyFactory)\n    ).inSingletonScope();\n    bind(NodeFileUploadService).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(NodeFileUploadService);\n});\n\nexport function bindFileSystemWatcherServer(bind: interfaces.Bind): void {\n    bind<NsfwOptions>(NsfwOptions).toConstantValue({});\n\n    bind(FileSystemWatcherServiceDispatcher).toSelf().inSingletonScope();\n\n    bind(FileSystemWatcherServerClient).toSelf();\n    bind(FileSystemWatcherServer).toService(FileSystemWatcherServerClient);\n\n    bind<NsfwFileSystemWatcherServiceProcessOptions>(NsfwFileSystemWatcherServiceProcessOptions).toDynamicValue(ctx => ({\n        entryPoint: path.join(__dirname, 'nsfw-watcher'),\n    })).inSingletonScope();\n    bind<NsfwFileSystemWatcherServerOptions>(NsfwFileSystemWatcherServerOptions).toDynamicValue(ctx => {\n        const logger = ctx.container.get<ILogger>(ILogger);\n        const nsfwOptions = ctx.container.get<NsfwOptions>(NsfwOptions);\n        return {\n            nsfwOptions,\n            verbose: NSFW_WATCHER_VERBOSE,\n            info: (message, ...args) => logger.info(message, ...args),\n            error: (message, ...args) => logger.error(message, ...args),\n        };\n    }).inSingletonScope();\n\n    bind<FileSystemWatcherService>(FileSystemWatcherService).toDynamicValue(\n        ctx => NSFW_SINGLE_THREADED\n            ? createNsfwFileSystemWatcherService(ctx)\n            : spawnNsfwFileSystemWatcherServiceProcess(ctx)\n    ).inSingletonScope();\n}\n\n/**\n * Run the watch server in the current process.\n */\nexport function createNsfwFileSystemWatcherService(ctx: interfaces.Context): FileSystemWatcherService {\n    const options = ctx.container.get<NsfwFileSystemWatcherServerOptions>(NsfwFileSystemWatcherServerOptions);\n    const dispatcher = ctx.container.get<FileSystemWatcherServiceDispatcher>(FileSystemWatcherServiceDispatcher);\n    const server = new NsfwFileSystemWatcherService(options);\n    server.setClient(dispatcher);\n    return server;\n}\n\n/**\n * Run the watch server in a child process.\n * Return a proxy forwarding calls to the child process.\n */\nexport function spawnNsfwFileSystemWatcherServiceProcess(ctx: interfaces.Context): FileSystemWatcherService {\n    const options = ctx.container.get<NsfwFileSystemWatcherServiceProcessOptions>(NsfwFileSystemWatcherServiceProcessOptions);\n    const dispatcher = ctx.container.get<FileSystemWatcherServiceDispatcher>(FileSystemWatcherServiceDispatcher);\n    const serverName = 'nsfw-watcher';\n    const logger = ctx.container.get<ILogger>(ILogger);\n    const nsfwOptions = ctx.container.get<NsfwOptions>(NsfwOptions);\n    const ipcConnectionProvider = ctx.container.get<IPCConnectionProvider>(IPCConnectionProvider);\n    const proxyFactory = new RpcProxyFactory<FileSystemWatcherService>();\n    const serverProxy = proxyFactory.createProxy();\n    // We need to call `.setClient` before listening, else the JSON-RPC calls won't go through.\n    serverProxy.setClient(dispatcher);\n    const args: string[] = [\n        `--nsfwOptions=${JSON.stringify(nsfwOptions)}`\n    ];\n    if (NSFW_WATCHER_VERBOSE) {\n        args.push('--verbose');\n    }\n    ipcConnectionProvider.listen({\n        serverName,\n        entryPoint: options.entryPoint,\n        errorHandler: new ConnectionErrorHandler({\n            serverName,\n            logger,\n        }),\n        env: process.env,\n        args,\n    }, connection => proxyFactory.listen(connection));\n    return serverProxy;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { FileSystemWatcherServer, WatchOptions, FileSystemWatcherClient, FileSystemWatcherService } from '../common/filesystem-watcher-protocol';\nimport { FileSystemWatcherServiceDispatcher } from './filesystem-watcher-dispatcher';\n\nexport const NSFW_WATCHER = 'nsfw-watcher';\n\n/**\n * Wraps the NSFW singleton service for each frontend.\n */\n@injectable()\nexport class FileSystemWatcherServerClient implements FileSystemWatcherServer {\n\n    protected static clientIdSequence = 0;\n\n    /**\n     * Track allocated watcherIds to de-allocate on disposal.\n     */\n    protected watcherIds = new Set<number>();\n\n    /**\n     * @todo make this number precisely map to one specific frontend.\n     */\n    protected readonly clientId = FileSystemWatcherServerClient.clientIdSequence++;\n\n    @inject(FileSystemWatcherServiceDispatcher)\n    protected readonly watcherDispatcher: FileSystemWatcherServiceDispatcher;\n\n    @inject(FileSystemWatcherService)\n    protected readonly watcherService: FileSystemWatcherService;\n\n    async watchFileChanges(uri: string, options?: WatchOptions): Promise<number> {\n        const watcherId = await this.watcherService.watchFileChanges(this.clientId, uri, options);\n        this.watcherIds.add(watcherId);\n        return watcherId;\n    }\n\n    async unwatchFileChanges(watcherId: number): Promise<void> {\n        this.watcherIds.delete(watcherId);\n        return this.watcherService.unwatchFileChanges(watcherId);\n    }\n\n    setClient(client: FileSystemWatcherClient | undefined): void {\n        if (client !== undefined) {\n            this.watcherDispatcher.registerClient(this.clientId, client);\n        } else {\n            this.watcherDispatcher.unregisterClient(this.clientId);\n        }\n    }\n\n    dispose(): void {\n        this.setClient(undefined);\n        for (const watcherId of this.watcherIds) {\n            this.unwatchFileChanges(watcherId);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport {\n    FileSystemWatcherClient, FileSystemWatcherServiceClient,\n    DidFilesChangedParams, FileSystemWatcherErrorParams\n} from '../common/filesystem-watcher-protocol';\n\n/**\n * This component routes watch events to the right clients.\n */\n@injectable()\nexport class FileSystemWatcherServiceDispatcher implements FileSystemWatcherServiceClient {\n\n    /**\n     * Mapping of `clientId` to actual clients.\n     */\n    protected readonly clients = new Map<number, FileSystemWatcherClient>();\n\n    onDidFilesChanged(event: DidFilesChangedParams): void {\n        for (const client of this.iterRegisteredClients(event.clients)) {\n            client.onDidFilesChanged(event);\n        }\n    }\n\n    onError(event: FileSystemWatcherErrorParams): void {\n        for (const client of this.iterRegisteredClients(event.clients)) {\n            client.onError();\n        }\n    }\n\n    /**\n     * Listen for events targeted at `clientId`.\n     */\n    registerClient(clientId: number, client: FileSystemWatcherClient): void {\n        if (this.clients.has(clientId)) {\n            console.warn(`FileSystemWatcherServer2Dispatcher: a client was already registered! clientId=${clientId}`);\n        }\n        this.clients.set(clientId, client);\n    }\n\n    unregisterClient(clientId: number): void {\n        if (!this.clients.has(clientId)) {\n            console.warn(`FileSystemWatcherServer2Dispatcher: tried to remove unknown client! clientId=${clientId}`);\n        }\n        this.clients.delete(clientId);\n    }\n\n    /**\n     * Only yield registered clients for the given `clientIds`.\n     *\n     * If clientIds is empty, will return all clients.\n     */\n    protected *iterRegisteredClients(clientIds?: number[]): Iterable<FileSystemWatcherClient> {\n        if (!Array.isArray(clientIds) || clientIds.length === 0) {\n            // If we receive an event targeted to \"no client\",\n            // interpret that as notifying all clients:\n            yield* this.clients.values();\n        } else {\n            for (const clientId of clientIds) {\n                const client = this.clients.get(clientId);\n                if (client !== undefined) {\n                    yield client;\n                }\n            }\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport multer = require('multer');\nimport path = require('path');\nimport os = require('os');\nimport express = require('@theia/core/shared/express');\nimport fs = require('@theia/core/shared/fs-extra');\nimport { BackendApplicationContribution, FileUri } from '@theia/core/lib/node';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { HTTP_FILE_UPLOAD_PATH } from '../common/file-upload';\n\n@injectable()\nexport class NodeFileUploadService implements BackendApplicationContribution {\n    private static readonly UPLOAD_DIR = 'theia_upload';\n\n    async configure(app: express.Application): Promise<void> {\n        const [dest, http_path] = await Promise.all([\n            this.getTemporaryUploadDest(),\n            this.getHttpFileUploadPath()\n        ]);\n        console.debug(`HTTP file upload URL path: ${http_path}`);\n        console.debug(`Backend file upload cache path: ${dest}`);\n        app.post(\n            http_path,\n            // `multer` handles `multipart/form-data` containing our file to upload.\n            multer({ dest }).single('file'),\n            (request, response, next) => this.handleFileUpload(request, response)\n        );\n    }\n\n    /**\n     * @returns URL path on which to accept file uploads.\n     */\n    protected async getHttpFileUploadPath(): Promise<string> {\n        return HTTP_FILE_UPLOAD_PATH;\n    }\n\n    /**\n     * @returns Path to a folder where to temporarily store uploads.\n     */\n    protected async getTemporaryUploadDest(): Promise<string> {\n        return path.join(os.tmpdir(), NodeFileUploadService.UPLOAD_DIR);\n    }\n\n    protected async handleFileUpload(request: express.Request, response: express.Response): Promise<void> {\n        const fields = request.body;\n        if (!request.file || typeof fields !== 'object' || typeof fields.uri !== 'string') {\n            response.sendStatus(400); // bad request\n            return;\n        }\n        try {\n            const target = FileUri.fsPath(fields.uri);\n            if (!fields.leaveInTemp) {\n                await fs.move(request.file.path, target, { overwrite: true });\n            } else {\n                // leave the file where it is, just rename it to its original name\n                fs.rename(request.file.path, request.file.path.replace(request.file.filename, request.file.originalname));\n            }\n            response.status(200).send(target); // ok\n        } catch (error) {\n            console.error(error);\n            response.sendStatus(500); // internal server error\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as nsfw from '@theia/core/shared/nsfw';\n\n/**\n * Inversify service identifier allowing extensions to override options passed to nsfw by the file watcher.\n */\nexport const NsfwOptions = Symbol('NsfwOptions');\nexport type NsfwOptions = nsfw.Options;\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Path, nls, isObject } from '@theia/core';\n\nexport interface WorkingDirectoryStatus {\n\n    /**\n     * `true` if the repository exists, otherwise `false`.\n     */\n    readonly exists: boolean;\n\n    /**\n     * An array of changed files.\n     */\n    readonly changes: GitFileChange[];\n\n    /**\n     * The optional name of the branch. Can be absent.\n     */\n    readonly branch?: string;\n\n    /**\n     * The name of the upstream branch. Optional.\n     */\n    readonly upstreamBranch?: string;\n\n    /**\n     * Wraps the `ahead` and `behind` numbers.\n     */\n    readonly aheadBehind?: { ahead: number, behind: number };\n\n    /**\n     * The hash string of the current HEAD.\n     */\n    readonly currentHead?: string;\n\n    /**\n     * `true` if a limit was specified and reached during get `git status`, so this result is not complete. Otherwise, (including `undefined`) is complete.\n     */\n    readonly incomplete?: boolean;\n\n}\n\nexport namespace WorkingDirectoryStatus {\n\n    /**\n     * `true` if the directory statuses are deep equal, otherwise `false`.\n     */\n    export function equals(left: WorkingDirectoryStatus | undefined, right: WorkingDirectoryStatus | undefined): boolean {\n        if (left && right) {\n            return left.exists === right.exists\n                && left.branch === right.branch\n                && left.upstreamBranch === right.upstreamBranch\n                && left.currentHead === right.currentHead\n                && (left.aheadBehind ? left.aheadBehind.ahead : -1) === (right.aheadBehind ? right.aheadBehind.ahead : -1)\n                && (left.aheadBehind ? left.aheadBehind.behind : -1) === (right.aheadBehind ? right.aheadBehind.behind : -1)\n                && left.changes.length === right.changes.length\n                && !!left.incomplete === !!right.incomplete\n                && JSON.stringify(left) === JSON.stringify(right);\n        } else {\n            return left === right;\n        }\n    }\n\n}\n\n/**\n * Enumeration of states that a file resource can have in the working directory.\n */\nexport enum GitFileStatus {\n    'New',\n    'Copied',\n    'Modified',\n    'Renamed',\n    'Deleted',\n    'Conflicted',\n}\n\nexport namespace GitFileStatus {\n\n    /**\n     * Compares the statuses based on the natural order of the enumeration.\n     */\n    export const statusCompare = (left: GitFileStatus, right: GitFileStatus): number => left - right;\n\n    /**\n     * Returns with human readable representation of the Git file status argument. If the `staged` argument is `undefined`,\n     * it will be treated as `false`.\n     */\n    export const toString = (status: GitFileStatus, staged?: boolean): string => {\n        switch (status) {\n            case GitFileStatus.New: return !!staged ? nls.localize('theia/git/added', 'Added') : nls.localize('theia/git/unstaged', 'Unstaged');\n            case GitFileStatus.Renamed: return nls.localize('theia/git/renamed', 'Renamed');\n            case GitFileStatus.Copied: return nls.localize('theia/git/copied', 'Copied');\n            // eslint-disable-next-line @theia/localization-check\n            case GitFileStatus.Modified: return nls.localize('vscode.git/repository/modified', 'Modified');\n            // eslint-disable-next-line @theia/localization-check\n            case GitFileStatus.Deleted: return nls.localize('vscode.git/repository/deleted', 'Deleted');\n            case GitFileStatus.Conflicted: return nls.localize('theia/git/conflicted', 'Conflicted');\n            default: throw new Error(`Unexpected Git file stats: ${status}.`);\n        }\n    };\n\n    /**\n     * Returns with the human readable abbreviation of the Git file status argument. `staged` argument defaults to `false`.\n     */\n    export const toAbbreviation = (status: GitFileStatus, staged?: boolean): string => {\n        switch (status) {\n            case GitFileStatus.New: return !!staged ? 'A' : 'U';\n            case GitFileStatus.Renamed: return 'R';\n            case GitFileStatus.Copied: return 'C';\n            case GitFileStatus.Modified: return 'M';\n            case GitFileStatus.Deleted: return 'D';\n            case GitFileStatus.Conflicted: return 'C';\n            default: throw new Error(`Unexpected Git file stats: ${status}.`);\n        }\n    };\n\n    /**\n     * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/extensions/git/src/repository.ts#L197\n     */\n    export function getColor(status: GitFileStatus, staged?: boolean): string {\n        switch (status) {\n            case GitFileStatus.New: {\n                if (!staged) {\n                    return 'var(--theia-gitDecoration-untrackedResourceForeground)';\n                }\n                return 'var(--theia-gitDecoration-addedResourceForeground)';\n            }\n            case GitFileStatus.Renamed: return 'var(--theia-gitDecoration-untrackedResourceForeground)';\n            case GitFileStatus.Copied: // Fall through.\n            case GitFileStatus.Modified: return 'var(--theia-gitDecoration-modifiedResourceForeground)';\n            case GitFileStatus.Deleted: return 'var(--theia-gitDecoration-deletedResourceForeground)';\n            case GitFileStatus.Conflicted: return 'var(--theia-gitDecoration-conflictingResourceForeground)';\n        }\n    }\n\n    export function toStrikethrough(status: GitFileStatus): boolean {\n        return status === GitFileStatus.Deleted;\n    }\n\n}\n\n/**\n * Representation of an individual file change in the working directory.\n */\nexport interface GitFileChange {\n\n    /**\n     * The current URI of the changed file resource.\n     */\n    readonly uri: string;\n\n    /**\n     * The file status.\n     */\n    readonly status: GitFileStatus;\n\n    /**\n     * The previous URI of the changed URI. Can be absent if the file is new, or just changed and so on.\n     */\n    readonly oldUri?: string;\n\n    /**\n     * `true` if the file is staged or committed, `false` if not staged. If absent, it means not staged.\n     */\n    readonly staged?: boolean;\n\n}\n\n/**\n * An object encapsulating the changes to a committed file.\n */\nexport interface CommittedFileChange extends GitFileChange {\n\n    /**\n     * A commit SHA or some other identifier that ultimately dereferences to a commit.\n     * This is the pointer to the `after` version of this change. For instance, the parent of this\n     * commit will contain the `before` (or nothing, if the file change represents a new file).\n     */\n    readonly commitish: string;\n\n}\n\n/**\n * Bare minimum representation of a local Git clone.\n */\nexport interface Repository {\n\n    /**\n     * The FS URI of the local clone.\n     */\n    readonly localUri: string;\n\n}\n\nexport namespace Repository {\n    export function equal(repository: Repository | undefined, repository2: Repository | undefined): boolean {\n        if (repository && repository2) {\n            return repository.localUri === repository2.localUri;\n        }\n        return repository === repository2;\n    }\n    export function is(repository: unknown): repository is Repository {\n        return isObject(repository) && 'localUri' in repository;\n    }\n    export function relativePath(repository: Repository | URI, uri: URI | string): Path | undefined {\n        const repositoryUri = new URI(Repository.is(repository) ? repository.localUri : String(repository));\n        return repositoryUri.relative(new URI(String(uri)));\n    }\n}\n\n/**\n * Representation of a Git remote.\n */\nexport interface Remote {\n\n    /**\n     * The name of the remote.\n     */\n    readonly name: string,\n\n    /**\n     * The remote fetch url.\n     */\n    readonly fetch: string,\n\n    /**\n     * The remote git url.\n     */\n    readonly push: string,\n\n}\n\n/**\n * The branch type. Either local or remote.\n * The order matters.\n */\nexport enum BranchType {\n\n    /**\n     * The local branch type.\n     */\n    Local = 0,\n\n    /**\n     * The remote branch type.\n     */\n    Remote = 1\n\n}\n\n/**\n * Representation of a Git branch.\n */\nexport interface Branch {\n\n    /**\n     * The short name of the branch. For instance; `master`.\n     */\n    readonly name: string;\n\n    /**\n     * The remote-prefixed upstream name. For instance; `origin/master`.\n     */\n    readonly upstream?: string;\n\n    /**\n     * The type of branch. Could be either [local](BranchType.Local) or [remote](BranchType.Remote).\n     */\n    readonly type: BranchType;\n\n    /**\n     * The commit associated with this branch.\n     */\n    readonly tip: Commit;\n\n    /**\n     * The name of the remote of the upstream.\n     */\n    readonly remote?: string;\n\n    /**\n     * The name of the branch's upstream without the remote prefix.\n     */\n    readonly upstreamWithoutRemote?: string;\n\n    /**\n     * The name of the branch without the remote prefix. If the branch is a local\n     * branch, this is the same as its `name`.\n     */\n    readonly nameWithoutRemote: string;\n\n}\n\n/**\n * Representation of a Git tag.\n */\nexport interface Tag {\n\n    /**\n     * The name of the tag.\n     */\n    readonly name: string;\n}\n\n/**\n * A Git commit.\n */\nexport interface Commit {\n\n    /**\n     * The commit SHA.\n     */\n    readonly sha: string;\n\n    /**\n     * The first line of the commit message.\n     */\n    readonly summary: string;\n\n    /**\n     * The commit message without the first line and CR.\n     */\n    readonly body?: string;\n\n    /**\n     * Information about the author of this commit. It includes name, email and date.\n     */\n    readonly author: CommitIdentity;\n\n    /**\n     * The SHAs for the parents of the commit.\n     */\n    readonly parentSHAs?: string[];\n\n}\n\n/**\n * Representation of a Git commit, plus the changes that were performed in that particular commit.\n */\nexport interface CommitWithChanges extends Commit {\n\n    /**\n     * The date when the commit was authored (ISO format).\n     */\n    readonly authorDateRelative: string;\n\n    /**\n     * The file changes in the commit.\n     */\n    readonly fileChanges: GitFileChange[];\n}\n\n/**\n * A tuple of name, email, and a date for the author or commit info in a commit.\n */\nexport interface CommitIdentity {\n\n    /**\n     * The name for the commit.\n     */\n    readonly name: string;\n\n    /**\n     * The email address for the user who did the commit.\n     */\n    readonly email: string;\n\n    /**\n     * The date of the commit in ISO format.\n     */\n    readonly timestamp: string;\n\n}\n\n/**\n * The result of shelling out to Git.\n */\nexport interface GitResult {\n\n    /**\n     * The standard output from Git.\n     */\n    readonly stdout: string;\n\n    /**\n     * The standard error output from Git.\n     */\n    readonly stderr: string;\n\n    /**\n     * The exit code of the Git process.\n     */\n    readonly exitCode: number;\n\n}\n\n/**\n * StashEntry\n */\nexport interface StashEntry {\n    readonly id: string;\n    readonly message: string;\n}\n\n/**\n * The Git errors which can be parsed from failed Git commands.\n */\nexport enum GitError {\n    SSHKeyAuditUnverified = 0,\n    SSHAuthenticationFailed = 1,\n    SSHPermissionDenied = 2,\n    HTTPSAuthenticationFailed = 3,\n    RemoteDisconnection = 4,\n    HostDown = 5,\n    RebaseConflicts = 6,\n    MergeConflicts = 7,\n    HTTPSRepositoryNotFound = 8,\n    SSHRepositoryNotFound = 9,\n    PushNotFastForward = 10,\n    BranchDeletionFailed = 11,\n    DefaultBranchDeletionFailed = 12,\n    RevertConflicts = 13,\n    EmptyRebasePatch = 14,\n    NoMatchingRemoteBranch = 15,\n    NoExistingRemoteBranch = 16,\n    NothingToCommit = 17,\n    NoSubmoduleMapping = 18,\n    SubmoduleRepositoryDoesNotExist = 19,\n    InvalidSubmoduleSHA = 20,\n    LocalPermissionDenied = 21,\n    InvalidMerge = 22,\n    InvalidRebase = 23,\n    NonFastForwardMergeIntoEmptyHead = 24,\n    PatchDoesNotApply = 25,\n    BranchAlreadyExists = 26,\n    BadRevision = 27,\n    NotAGitRepository = 28,\n    CannotMergeUnrelatedHistories = 29,\n    LFSAttributeDoesNotMatch = 30,\n    BranchRenameFailed = 31,\n    PathDoesNotExist = 32,\n    InvalidObjectName = 33,\n    OutsideRepository = 34,\n    LockFileAlreadyExists = 35,\n    NoMergeToAbort = 36,\n    LocalChangesOverwritten = 37,\n    UnresolvedConflicts = 38,\n    GPGFailedToSignData = 39,\n    ConflictModifyDeletedInBranch = 40,\n    // GitHub-specific error codes\n    PushWithFileSizeExceedingLimit = 41,\n    HexBranchNameRejected = 42,\n    ForcePushRejected = 43,\n    InvalidRefLength = 44,\n    ProtectedBranchRequiresReview = 45,\n    ProtectedBranchForcePush = 46,\n    ProtectedBranchDeleteRejected = 47,\n    ProtectedBranchRequiredStatus = 48,\n    PushWithPrivateEmail = 49,\n    // End of GitHub-specific error codes\n    ConfigLockFileAlreadyExists = 50,\n    RemoteAlreadyExists = 51,\n    TagAlreadyExists = 52,\n    MergeWithLocalChanges = 53,\n    RebaseWithLocalChanges = 54,\n    MergeCommitNoMainlineOption = 55,\n    UnsafeDirectory = 56,\n    PathExistsButNotInRef = 57\n}\n\nexport interface GitFileBlame {\n    readonly uri: string;\n    readonly commits: Commit[];\n    readonly lines: CommitLine[];\n}\n\nexport interface CommitLine {\n    readonly sha: string;\n    readonly line: number;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { RpcProxy, RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\n\nexport const GitPromptServer = Symbol('GitPromptServer');\nexport interface GitPromptServer extends RpcServer<GitPromptClient> {\n}\n\nexport const GitPromptServerProxy = Symbol('GitPromptServerProxy');\nexport interface GitPromptServerProxy extends RpcProxy<GitPromptServer> {\n}\n\n@injectable()\nexport class GitPrompt implements GitPromptClient, Disposable {\n\n    @inject(GitPromptServer)\n    protected readonly server: GitPromptServer;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.server.setClient(this);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async ask(question: GitPrompt.Question): Promise<GitPrompt.Answer> {\n        return GitPrompt.Failure.create('Interactive Git prompt is not supported in the browser.');\n    }\n\n}\n\nexport namespace GitPrompt {\n\n    /**\n     * Unique WS endpoint path for the Git prompt service.\n     */\n    export const WS_PATH = 'services/git-prompt';\n\n    export interface Question {\n        readonly text: string;\n        readonly details?: string;\n        readonly password?: boolean;\n    }\n\n    export interface Answer {\n        readonly type: Answer.Type;\n    }\n\n    export interface Success {\n        readonly type: Answer.Type.SUCCESS;\n        readonly result: string | boolean;\n    }\n\n    export namespace Success {\n\n        export function is(answer: Answer): answer is Success {\n            return answer.type === Answer.Type.SUCCESS\n                && 'result' in answer\n                && ((typeof (answer as Success).result) === 'string' || (typeof (answer as Success).result) === 'boolean');\n        }\n\n        export function create(result: string | boolean): Success {\n            return {\n                type: Answer.Type.SUCCESS,\n                result\n            };\n        }\n\n    }\n\n    export interface Cancel extends Answer {\n        readonly type: Answer.Type.CANCEL;\n    }\n\n    export namespace Cancel {\n\n        export function is(answer: Answer): answer is Cancel {\n            return answer.type === Answer.Type.CANCEL;\n        }\n\n        export function create(): Cancel {\n            return {\n                type: Answer.Type.CANCEL\n            };\n        }\n\n    }\n\n    export interface Failure extends Answer {\n        readonly type: Answer.Type.FAILURE;\n        readonly error: string | Error;\n    }\n\n    export namespace Failure {\n\n        export function is(answer: Answer): answer is Failure {\n            return answer.type === Answer.Type.FAILURE\n                && 'error' in answer\n                && ((typeof (answer as Failure).error) === 'string' || (answer as Failure).error instanceof Error);\n        }\n\n        export function create(error: string | Error): Failure {\n            return {\n                type: Answer.Type.FAILURE,\n                error\n            };\n        }\n\n    }\n\n    export namespace Answer {\n\n        export enum Type {\n\n            SUCCESS,\n            CANCEL,\n            FAILURE\n\n        }\n\n    }\n\n}\n\nexport const GitPromptClient = Symbol('GitPromptClient');\nexport interface GitPromptClient {\n\n    ask(question: GitPrompt.Question): Promise<GitPrompt.Answer>;\n\n    // TODO: implement `confirm` with boolean return type.\n    // TODO: implement `select` with possible answers.\n\n}\n\n/**\n * Note: This implementation is not reconnecting.\n * Git prompting is not supported in the browser. In electron, there's no need to reconnect.\n */\n@injectable()\nexport class GitPromptServerImpl implements GitPromptServer {\n\n    @inject(GitPromptServerProxy)\n    protected readonly proxy: GitPromptServerProxy;\n\n    setClient(client: GitPromptClient): void {\n        this.proxy.setClient(client);\n    }\n\n    dispose(): void {\n        this.proxy.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { RpcServer, RpcProxy, isObject } from '@theia/core';\nimport { Repository, WorkingDirectoryStatus } from './git-model';\nimport { Disposable, DisposableCollection, Emitter, Event } from '@theia/core/lib/common';\n\n/**\n * An event representing a `Git` status change in one of the watched local working directory.\n */\nexport interface GitStatusChangeEvent {\n\n    /**\n     * The source `Git` repository where the event belongs to.\n     */\n    readonly source: Repository;\n\n    /**\n     * The new working directory state.\n     */\n    readonly status: WorkingDirectoryStatus;\n\n    /**\n     * The previous working directory state, if any.\n     */\n    readonly oldStatus?: WorkingDirectoryStatus;\n\n}\n\nexport namespace GitStatusChangeEvent {\n\n    /**\n     * `true` if the argument is a `GitStatusEvent`, otherwise `false`.\n     * @param event the argument to check whether it is a Git status change event or not.\n     */\n    export function is(event: unknown): event is GitStatusChangeEvent {\n        return isObject(event) && ('source' in event) && ('status' in event);\n    }\n\n}\n\n/**\n * Client watcher for `Git`.\n */\nexport interface GitWatcherClient {\n\n    /**\n     * Invoked with the event that encapsulates the status change in the repository.\n     */\n    onGitChanged(event: GitStatusChangeEvent): Promise<void>;\n\n}\n\n/**\n * The symbol of the Git watcher backend for DI.\n */\nexport const GitWatcherServer = Symbol('GitWatcherServer');\n\n/**\n * Service representation communicating between the backend and the frontend.\n */\nexport interface GitWatcherServer extends RpcServer<GitWatcherClient> {\n\n    /**\n     * Watches status changes in the given repository.\n     */\n    watchGitChanges(repository: Repository): Promise<number>;\n\n    /**\n     * De-registers any previously added watchers identified by the unique `watcher` argument. If the watcher cannot be found\n     * with its unique ID, the request will be rejected.\n     */\n    unwatchGitChanges(watcher: number): Promise<void>;\n\n}\n\nexport const GitWatcherServerProxy = Symbol('GitWatcherServerProxy');\nexport type GitWatcherServerProxy = RpcProxy<GitWatcherServer>;\n\n@injectable()\nexport class ReconnectingGitWatcherServer implements GitWatcherServer {\n\n    private watcherSequence = 1;\n    private readonly watchParams = new Map<number, Repository>();\n    private readonly localToRemoteWatcher = new Map<number, number>();\n\n    constructor(\n        @inject(GitWatcherServerProxy) private readonly proxy: GitWatcherServerProxy\n    ) {\n        this.proxy.onDidOpenConnection(() => this.reconnect());\n    }\n\n    async watchGitChanges(repository: Repository): Promise<number> {\n        const watcher = this.watcherSequence++;\n        this.watchParams.set(watcher, repository);\n        return this.doWatchGitChanges([watcher, repository]);\n    }\n\n    async unwatchGitChanges(watcher: number): Promise<void> {\n        this.watchParams.delete(watcher);\n        const remote = this.localToRemoteWatcher.get(watcher);\n        if (remote) {\n            this.localToRemoteWatcher.delete(remote);\n            return this.proxy.unwatchGitChanges(remote);\n        } else {\n            throw new Error(`No Git watchers were registered with ID: ${watcher}.`);\n        }\n    }\n\n    dispose(): void {\n        this.proxy.dispose();\n    }\n\n    setClient(client: GitWatcherClient): void {\n        this.proxy.setClient(client);\n    }\n\n    private reconnect(): void {\n        [...this.watchParams.entries()].forEach(entry => this.doWatchGitChanges(entry));\n    }\n\n    private async doWatchGitChanges(entry: [number, Repository]): Promise<number> {\n        const [watcher, repository] = entry;\n        const remote = await this.proxy.watchGitChanges(repository);\n        this.localToRemoteWatcher.set(watcher, remote);\n        return watcher;\n    }\n}\n\n/**\n * Unique WS endpoint path to the Git watcher service.\n */\nexport const GitWatcherPath = '/services/git-watcher';\n\n@injectable()\nexport class GitWatcher implements GitWatcherClient, Disposable {\n\n    private readonly toDispose: DisposableCollection;\n    private readonly onGitEventEmitter: Emitter<GitStatusChangeEvent>;\n\n    constructor(\n        @inject(GitWatcherServer) private readonly server: GitWatcherServer\n    ) {\n        this.toDispose = new DisposableCollection();\n        this.onGitEventEmitter = new Emitter<GitStatusChangeEvent>();\n\n        this.toDispose.push(this.onGitEventEmitter);\n        this.server.setClient({ onGitChanged: e => this.onGitChanged(e) });\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get onGitEvent(): Event<GitStatusChangeEvent> {\n        return this.onGitEventEmitter.event;\n    }\n\n    async onGitChanged(event: GitStatusChangeEvent): Promise<void> {\n        this.onGitEventEmitter.fire(event);\n    }\n\n    async watchGitChanges(repository: Repository): Promise<Disposable> {\n        const watcher = await this.server.watchGitChanges(repository);\n        const toDispose = new DisposableCollection();\n        toDispose.push(Disposable.create(() => this.server.unwatchGitChanges(watcher)));\n        return toDispose;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ChildProcess } from 'child_process';\nimport { Disposable, isObject } from '@theia/core';\nimport {\n    Repository, WorkingDirectoryStatus, Branch, GitResult, GitError, GitFileStatus,\n    GitFileChange, CommitWithChanges, GitFileBlame, Remote as RemoteModel, StashEntry\n} from './git-model';\n\n/**\n * The WS endpoint path to the Git service.\n */\nexport const GitPath = '/services/git';\n\n/**\n * Git symbol for DI.\n */\nexport const Git = Symbol('Git');\n\nexport namespace Git {\n\n    /**\n     * Options for various Git commands.\n     */\n    export namespace Options {\n\n        /**\n         * Refinements for the `git branch` command.\n         */\n        export namespace BranchCommand {\n\n            /**\n             * Option for listing branches in a Git repository.\n             */\n            export interface List {\n\n                /**\n                 * The type of the branches that has to be listed. If not\n                 *  - `current` returns with the name of the currently active branch.\n                 *  - `local` lists all locally available branch names.\n                 *  - `remote` for listing all remote branches. One might has to perform a `git fetch` to integrate all the remote branches.\n                 *  - `all` lists all remote and local branches including the currently active one.\n                 */\n                readonly type: 'current' | 'local' | 'remote' | 'all';\n\n            }\n\n            /**\n             * Option for creating a new branch.\n             */\n            export interface Create {\n\n                /**\n                 * The desired name of the new branch.\n                 */\n                readonly toCreate: string;\n\n                /**\n                 * The new branch head will point to this commit. It may be given as a branch name, a commit-id, or a tag.\n                 * If this option is omitted, the current `HEAD` will be used instead.\n                 */\n                readonly startPoint?: string;\n\n            }\n\n            /**\n             * Option for deleting a branch. The branch must be fully merged in its upstream branch, or in `HEAD` if no upstream was set.\n             */\n            export interface Delete {\n\n                /**\n                 * The name of the branch to delete.\n                 */\n                readonly toDelete: string;\n\n                /**\n                 * When set to `true`, then allows deleting the branch irrespective of its merged status. `false` by default.\n                 */\n                readonly force?: boolean;\n\n                /**\n                 * When set to `true` then deletes the remote-tracking branches as well. It is `false` by default.\n                 */\n                readonly remote?: boolean;\n\n            }\n\n            /**\n             * Option for renaming an existing branch.\n             */\n            export interface Rename {\n\n                /**\n                 * The desired new name of the branch.\n                 */\n                readonly newName: string;\n\n                /**\n                 * The name of the branch to rename. If not given, then the currently active branch will be renamed.\n                 */\n                readonly oldName?: string;\n\n                /**\n                 * If set to `true`, the allows renaming the branch even if the new branch name already exists. It is `false` by default.\n                 */\n                readonly force?: boolean;\n\n            }\n\n        }\n\n        /**\n         * Git clone options.\n         */\n        export interface Clone {\n\n            /**\n             * The desired destination path (given as a URI) for the cloned repository.\n             * If the path does not exist it will be created. Cloning into an existing\n             * directory is only allowed if the directory is empty.\n             */\n            readonly localUri: string;\n\n            /**\n             * The branch to checkout after the clone has completed. If not given,\n             * the default branch will will be the current one which is usually the `master`.\n             */\n            readonly branch?: string;\n\n        }\n\n        /**\n         * Git repositories options.\n         */\n        export interface Repositories {\n\n            /**\n             * The maximum count of repositories to look up, should be greater than 0.\n             * Undefined to look up all repositories.\n             */\n            readonly maxCount?: number;\n\n        }\n\n        /**\n         * Further refinements for unstaging files from either from the index or from the working-tree. Alternatively, resetting both.\n         */\n        export interface Unstage {\n\n            /**\n             * What to reset; the state of the index, the working-tree, or both. If not given, `all` will be used.\n             */\n            readonly reset?: 'index' | 'working-tree' | 'all';\n\n            /**\n             * The treeish to reset to. Defaults to `HEAD`.\n             */\n            readonly treeish?: string;\n\n        }\n\n        /**\n         * Options for further `git checkout` refinements.\n         */\n        export namespace Checkout {\n\n            /**\n             * Options for checking out branches.\n             */\n            export interface CheckoutBranch {\n\n                /**\n                 * Branch to checkout; if it refers to a branch, then that branch is checked out.\n                 * Otherwise, if it refers to a valid commit, your `HEAD` becomes \"detached\" and you are no\n                 * longer on any branch.\n                 */\n                readonly branch: string;\n\n                /**\n                 * When switching branches, proceed even if the index or the working tree differs from `HEAD`.\n                 * This is used to throw away local changes.\n                 */\n                readonly force?: boolean;\n\n                /**\n                 * When switching branches, if you have local modifications to one or more files that are different\n                 * between the current branch and the branch to which you are switching, the command refuses to\n                 * switch branches in order to preserve your modifications in context. However, with this option,\n                 * a three-way merge between the current branch, your working tree contents, and the new branch is done,\n                 * and you will be on the new branch.\n                 */\n                readonly merge?: boolean;\n\n                /**\n                 * The name for the new local branch.\n                 */\n                readonly newBranch?: string;\n\n            }\n\n            /**\n             * Options for checking out files from the working tree.\n             *\n             *  - When trying to revert a resource to the state of the index, set `paths`.\n             *  - When trying to revert the state of a resource to the repository `HEAD`, then set `paths` and `treeish` to `HEAD`.\n             *  - If you would like to check out the state of a file from the `HEAD` of a branch, set `treeish` to `nameOfTheBranch`.\n             *  - And if you would like to check out a historical revision of a branch, set `treeish` to `nameOfTheBranch~2` which will be\n             *      two commits before the most recent one on the desired branch.\n             */\n            export interface WorkingTreeFile {\n\n                /**\n                 * This is used to restore modified or deleted paths to their original contents from the index or replace\n                 * paths with the contents from a named tree-ish (most often a commit-ish).\n                 *\n                 * One can specify a regular expression for the paths, in such cases, it must be escaped with single-quotes.\n                 * For instance checking out a `Hello.ts` file will be simply `\"Hello.ts\"`, if one would like to checkout\n                 * all TS files, then this for should be used: ```ts\n                 * const options = {\n                 *   paths: `'*.ts'`\n                 * }\n                 * ```.\n                 */\n                readonly paths: string | string[];\n\n                /**\n                 * When checking out paths from the index, do not fail upon unmerged entries; instead, unmerged\n                 * entries are ignored.\n                 */\n                readonly force?: boolean;\n\n                /**\n                 * When checking out paths from the index, this option lets you recreate the conflicted merge in the\n                 * specified paths.\n                 */\n                readonly merge?: boolean;\n\n                /**\n                 * Tree to checkout from. If not specified, the index will be used. `git checkout -- ./fileName.ext`.\n                 * If you want to get the state from the repository ,use `HEAD` which will be equivalent with `git checkout HEAD -- ./fileName.ext`.\n                 */\n                readonly treeish?: string;\n\n            }\n\n        }\n\n        /**\n         * Options for the `git commit` command refinement.\n         */\n        export interface Commit {\n\n            /**\n             * If `true` replaces the tip of the current branch by creating a new commit.\n             * The recorded tree is prepared as usual, and the message from the original commit is used as the starting point, instead of an empty message,\n             * when no other message is specified. The new commit has the same parents and author as the current one. Defaults to `false`.\n             */\n            readonly amend?: boolean;\n\n            /**\n             * Adds the `Signed-off-by` line by the committer at the end of the commit log message. `false` by default.\n             */\n            readonly signOff?: boolean;\n\n        }\n\n        /**\n         * Options for further refining the `git show` command.\n         */\n        export interface Show {\n\n            /**\n             * The desired encoding which should be used when retrieving the file content.\n             * `utf8` should be used for text content and `binary` for blobs. The default one is `utf8`.\n             */\n            readonly encoding?: 'utf8' | 'binary';\n\n            /**\n             * A commit SHA or some other identifier that ultimately dereferences to a commit/tree.\n             * `HEAD` is the local `HEAD`, and `index` is the the staged. If not specified,\n             * then `index` will be used instead. But this can be `HEAD~2` or `ed14ef1~1` where `ed14ef1` is a commit hash.\n             */\n            readonly commitish?: 'index' | string;\n\n        }\n\n        /**\n         * Options for further refining the `git stash` command.\n         */\n        export interface Stash {\n            /**\n             * The kind of stash action.\n             */\n            readonly action?: 'push' | 'apply' | 'pop' | 'list' | 'drop' | 'clear';\n\n            /**\n             * The stash id.\n             * This is an optional argument for actions of kind 'apply', 'pop' and 'drop'.\n             */\n            readonly id?: string;\n\n            /**\n             * The stash message.\n             * This is an optional argument for the `push` action.\n             */\n            readonly message?: string;\n        }\n\n        /**\n         * Options for the `git fetch` command.\n         */\n        export interface Fetch {\n\n            /**\n             * The name of the remote to fetch from. If not given, then the default remote will be used. Defaults to the `origin`.\n             */\n            readonly remote?: string;\n\n        }\n\n        /**\n         * Further refinements for the `git push` command.\n         */\n        export interface Push {\n\n            /**\n             * The name of the remote to push to. If not given, then the default remote will be used. It is the `origin` by default.\n             */\n            readonly remote?: string;\n\n            /**\n             * The name of the local branch to push. If not given, then the currently active branch will be used instead.\n             */\n            readonly localBranch?: string;\n\n            /**\n             * The name of the remote branch to push to. If not given then the changes will be pushed to the remote branch associated with the\n             * local branch.\n             *\n             * `git push <remote> <localBranch>:<remoteBranch>`\n             */\n            readonly remoteBranch?: string;\n\n            /**\n             * Set upstream for every branch that is up to date or successfully pushed,\n             * add upstream (tracking) reference, used by argument-less git-pull and other commands.\n             */\n            readonly setUpstream?: boolean;\n\n            /**\n             * Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.\n             * This flag disables these checks, and can cause the remote repository to lose commits; use it with care.\n             */\n            readonly force?: boolean;\n\n        }\n\n        /**\n         * Options for the `git pull` command.\n         */\n        export interface Pull {\n\n            /**\n             * The name of the remote to pull from. If not given, then the default remote will be used. Defaults to the `origin`.\n             */\n            readonly remote?: string;\n\n            /**\n             * The name of the branch to pull form. This is required when one performs a `git pull` from a remote which is not\n             * the default remote tracking of the currently active branch.\n             */\n            readonly branch?: string;\n\n            /**\n             * When true, rebase the current branch on top of the upstream branch after fetching.\n             */\n            readonly rebase?: boolean\n\n        }\n\n        /**\n         * Additional technical rectifications for the `git reset` command.\n         */\n        export interface Reset {\n\n            /**\n             * The `git reset` mode. The followings are supported:\n             *  - `hard`,\n             *  - `sort`, or\n             *  - `mixed`.\n             *\n             * Those correspond to the consecutive `--hard`, `--soft`, and `--mixed` Git options.\n             */\n            readonly mode: 'hard' | 'soft' | 'mixed';\n\n            /**\n             * The reference to reset to. By default, resets to `HEAD`.\n             */\n            readonly ref?: string;\n\n        }\n\n        /**\n         * Additional options for the `git merge` command.\n         */\n        export interface Merge {\n\n            /**\n             * The name of the branch that should be merged into the current branch.\n             */\n            readonly branch: string;\n\n        }\n\n        /**\n         * A set of configuration options that can be passed when executing a low-level Git command.\n         */\n        export interface Execution {\n\n            /**\n             * The exit codes which indicate success to the caller. Unexpected exit codes will be logged and an\n             * error thrown. Defaults to `0` if `undefined`.\n             */\n            readonly successExitCodes?: ReadonlyArray<number>;\n\n            /**\n             * The Git errors which are expected by the caller. Unexpected errors will\n             * be logged and an error thrown.\n             */\n            readonly expectedErrors?: ReadonlyArray<GitError>;\n\n            /**\n             * An optional collection of key-value pairs which will be\n             * set as environment variables before executing the Git\n             * process.\n             */\n            readonly env?: Object;\n\n            /**\n             * An optional string which will be written to the child process\n             * stdin stream immediately after spawning the process.\n             */\n            readonly stdin?: string;\n\n            /**\n             * The encoding to use when writing to `stdin`, if the `stdin`\n             * parameter is a string.\n             */\n            readonly stdinEncoding?: string;\n\n            /**\n             * The size the output buffer to allocate to the spawned process. Set this\n             * if you are anticipating a large amount of output.\n             *\n             * If not specified, this will be 10MB (10485760 bytes) which should be\n             * enough for most Git operations.\n             */\n            readonly maxBuffer?: number;\n\n            /**\n             * An optional callback which will be invoked with the child\n             * process instance after spawning the Git process.\n             *\n             * Note that if the `stdin` parameter was specified the `stdin`\n             * stream will be closed by the time this callback fires.\n             *\n             * Defining this property could make the `exec` function invocation **non-client** compatible.\n             */\n            readonly processCallback?: (process: ChildProcess) => void;\n\n            /**\n             * The name for the command based on its caller's context.\n             * This could be used only for performance measurements and debugging. It has no runtime behavior effects.\n             */\n            readonly name?: string;\n\n        }\n\n        /**\n         * Range that is used for representing to individual commitish when calculating either `git log` or `git diff`.\n         */\n        export interface Range {\n\n            /**\n             * The last revision that should be included among the result running this query. Here, the revision can be a tag, a commitish,\n             * or even an expression (`HEAD~3`). For more details to specify the revision, see [here](https://git-scm.com/docs/gitrevisions#_specifying_revisions).\n             */\n            readonly toRevision?: string;\n\n            /**\n             * Either the from revision (`string`) or a positive integer that is equivalent to the `~` suffix, which means the commit object that is the `fromRevision`<sup>th</sup>\n             * generation ancestor of the named, `toRevision` commit object, following only the first parents. If not specified, equivalent to `origin..toRevision`.\n             */\n            readonly fromRevision?: number | string;\n\n        }\n\n        /**\n         * Optional configuration for the `git diff` command.\n         */\n        export interface Diff {\n\n            /**\n             * The Git revision range that will be used when calculating the diff.\n             */\n            readonly range?: Range;\n\n            /**\n             * The URI of the resource in the repository to get the diff. Can be an individual file or a directory.\n             */\n            readonly uri?: string;\n\n        }\n\n        /**\n         * Optional configuration for the `git log` command.\n         */\n        export interface Log extends Diff {\n\n            /**\n             * The name of the branch to run the `git log` command. If not specified, then the currently active branch will be used.\n             */\n            readonly branch?: string;\n\n            /**\n             * Limits the number of commits. Also known as `-n` or `--number. If not specified, or not a positive integer, then will be ignored, and the returning list\n             * of commits will not be limited.\n             */\n            readonly maxCount?: number;\n\n            /**\n             * Decides whether the commit hash should be the abbreviated version.\n             */\n            readonly shortSha?: boolean;\n        }\n\n        /**\n         * Optional configuration for the `git blame` command.\n         */\n        export interface Blame {\n            /**\n             * Dirty state content.\n             */\n            readonly content?: string;\n        }\n\n        /**\n         * Further refinements for the `git ls-files`.\n         */\n        export interface LsFiles {\n\n            /**\n             * If any the file does not appear in the index, treat this as an error that results in the error code 1.\n             */\n            readonly errorUnmatch?: true;\n\n        }\n\n        /**\n         * Options for the `git remote` command.\n         */\n        export interface Remote {\n\n            /**\n             * Be more verbose and get remote url for `fetch` and `push` actions.\n             */\n            readonly verbose?: true,\n\n        }\n\n        /**\n         * Options for the `git rev-parse` command.\n         */\n        export interface RevParse {\n\n            /**\n             * The reference to parse.\n             */\n            readonly ref: string;\n\n        }\n\n    }\n}\n\n/**\n * Provides basic functionality for Git.\n */\nexport interface Git extends Disposable {\n\n    /**\n     * Clones a remote repository into the desired local location.\n     *\n     * @param remoteUrl the URL of the remote.\n     * @param options the clone options.\n     */\n    clone(remoteUrl: string, options: Git.Options.Clone): Promise<Repository>;\n\n    /**\n     * Resolves to an array of repositories discovered in the workspace given with the workspace root URI.\n     */\n    repositories(workspaceRootUri: string, options: Git.Options.Repositories): Promise<Repository[]>;\n\n    /**\n     * Returns with the working directory status of the given Git repository.\n     *\n     * @param the repository to get the working directory status from.\n     */\n    status(repository: Repository): Promise<WorkingDirectoryStatus>;\n\n    /**\n     * Stages the given file or files in the working clone. The invocation will be rejected if\n     * any files (given with their file URIs) is not among the changed files.\n     *\n     * @param repository the repository to stage the files.\n     * @param uri one or multiple file URIs to stage in the working clone.\n     */\n    add(repository: Repository, uri: string | string[]): Promise<void>;\n\n    /**\n     * Removes the given file or files among the staged files in the working clone. The invocation will be rejected if\n     * any files (given with their file URIs) is not among the staged files.\n     *\n     * @param repository the repository to where the staged files have to be removed from.\n     * @param uri one or multiple file URIs to unstage in the working clone. If the array is empty, all the changed files will be staged.\n     * @param options optional refinements for the the unstaging operation.\n     */\n    unstage(repository: Repository, uri: string | string[], options?: Git.Options.Unstage): Promise<void>;\n\n    /**\n     * Returns with the currently active branch, or `undefined` if the current branch is in detached mode.\n     *\n     * @param the repository where the current branch has to be queried.\n     * @param options the type of the branch, which is always the `current`.\n     */\n    branch(repository: Repository, options: { type: 'current' }): Promise<Branch | undefined>;\n\n    /**\n     * Returns with an array of branches.\n     *\n     * @param the repository where the branches has to be queried.\n     * @param options the type of the branch, which is either the `local`, the `remote`, or `all` of them.\n     */\n    branch(repository: Repository, options: { type: 'local' | 'remote' | 'all' }): Promise<Branch[]>;\n\n    /**\n     * Creates, renames, and deletes a branch.\n     *\n     * @param the repository where the branch modification has to be performed.\n     * @param options further Git command refinements for the branch modification.\n     */\n    /* eslint-disable @typescript-eslint/indent */\n    branch(repository: Repository, options:\n        Git.Options.BranchCommand.Create |\n        Git.Options.BranchCommand.Rename |\n        Git.Options.BranchCommand.Delete\n    ): Promise<void>;\n    /* eslint-enable @typescript-eslint/indent */\n\n    /**\n     * Switches branches or restores working tree files.\n     *\n     * @param repository the repository to where the `git checkout` has to be performed.\n     * @param options further checkout options.\n     */\n    checkout(repository: Repository, options: Git.Options.Checkout.CheckoutBranch | Git.Options.Checkout.WorkingTreeFile): Promise<void>;\n\n    /**\n     * Commits the changes of all staged files in the working directory.\n     *\n     * @param repository the repository where the staged changes has to be committed.\n     * @param message the optional commit message.\n     */\n    commit(repository: Repository, message?: string, options?: Git.Options.Commit): Promise<void>;\n\n    /**\n     * Fetches branches and/or tags (collectively, `refs`) from the repository, along with the objects necessary to complete their histories.\n     * The remotely-tracked branches will be updated too.\n     *\n     * @param repository the repository to fetch from.\n     * @param options optional options for `git fetch` refinement.\n     */\n    fetch(repository: Repository, options?: Git.Options.Fetch): Promise<void>;\n\n    /**\n     * Updates the `refs` using local `refs`, while sending objects necessary to complete the given `refs` by pushing\n     * all committed changed from the local Git repository to the `remote` one.\n     *\n     * @param repository the repository to push to.\n     * @param options optional refinements for the `git push` command.\n     */\n    push(repository: Repository, options?: Git.Options.Push): Promise<void>;\n\n    /**\n     * Fetches from and integrates with another repository. It incorporates changes from a repository into the current branch.\n     * In its default mode, `git pull` is shorthand for `git fetch` followed by `git merge FETCH_HEAD`.\n     *\n     * @param repository the repository to pull from.\n     * @param options optional refinements for the `git pull` command.\n     */\n    pull(repository: Repository, options?: Git.Options.Pull): Promise<void>;\n\n    /**\n     * Resets the current `HEAD` of the entire working directory to the specified state.\n     *\n     * @param repository the repository which state has to be reset.\n     * @param options further clarifying the `git reset` command.\n     */\n    reset(repository: Repository, options: Git.Options.Reset): Promise<void>;\n\n    /**\n     * Merges the given branch into the currently active branch.\n     *\n     * @param repository the repository to merge from.\n     * @param options `git merge` command refinements.\n     */\n    merge(repository: Repository, options: Git.Options.Merge): Promise<void>;\n\n    /**\n     * Retrieves and shows the content of a resource from the repository at a given reference, commit, or tree.\n     * Resolves to a promise that will produce a string containing the contents of the file or an error if the file does not exists in the given revision.\n     *\n     * @param repository the repository to get the file content from.\n     * @param uri the URI of the file who's content has to be retrieved and shown.\n     * @param options the options for further refining the `git show`.\n     */\n    show(repository: Repository, uri: string, options?: Git.Options.Show): Promise<string>;\n\n    /**\n     * The default `git stash` command. Equivalent to `git stash push`. If the `message` is not defined, the Git default *WIP on branchname* will be used instead.\n     */\n    stash(repository: Repository, options?: Readonly<{ action?: 'push', message?: string }>): Promise<void>;\n\n    /**\n     * Resolves to an array of stashed entries that you currently have. Same as `git stash list`.\n     */\n    stash(repository: Repository, options: Readonly<{ action: 'list' }>): Promise<StashEntry[]>;\n\n    /**\n     * Removes all the stash entries.\n     */\n    stash(repository: Repository, options: Readonly<{ action: 'clear' }>): Promise<void>;\n\n    /**\n     * Performs stash actions depending on given action option.\n     * pop:\n     * Removes a single stashed state from the stash list and applies it on top of the current working tree state.\n     * The single stashed state is identified by the optional `id`. If the `id` is not defined the latest stash will be popped.\n     *\n     * apply:\n     * Like `git stash pop`, but does not remove the state from the stash list.\n     *\n     * drop:\n     * Removes a single stash entry from the list of stash entries. When the `id` is not given, it removes the latest one.\n     */\n    stash(repository: Repository, options: Readonly<{ action: 'apply' | 'pop' | 'drop', id?: string }>): Promise<void>;\n\n    /**\n     * It resolves to an array of configured remotes names for the given repository.\n     *\n     * @param repository the repository to get the remote names.\n     */\n    remote(repository: Repository): Promise<string[]>;\n\n    /**\n     * It resolves to an array of configured remote objects for the given Git action.\n     *\n     * @param repository the repository to get the remote objects.\n     * @param options `git remote` command refinements.\n     */\n    remote(repository: Repository, options: { verbose: true }): Promise<RemoteModel[]>;\n\n    /**\n     * Executes the Git command and resolves to the result. If an executed Git command exits with a code that is not in the `successExitCodes` or an error not in `expectedErrors`,\n     * a `GitError` will be thrown.\n     *\n     * @param repository the repository where one can execute the command. (Although the repository path is not necessarily mandatory for each Git commands,\n     * such as `git config -l`, or `git --version`, we treat the repository as a required argument to have a symmetric API.)\n     * @param args the array of arguments for Git.\n     * @param options options can be used to tweaked additional configurations for the low-level command execution.\n     */\n    exec(repository: Repository, args: string[], options?: Git.Options.Execution): Promise<GitResult>;\n\n    /**\n     * Shows the difference between content pairs in the working tree, commits, or index.\n     *\n     * @param repository the repository where where the diff has to be calculated.\n     * @param options optional configuration for further refining the `git diff` command execution.\n     */\n    diff(repository: Repository, options?: Git.Options.Diff): Promise<GitFileChange[]>;\n\n    /**\n     * Returns a list with commits and their respective file changes.\n     *\n     * @param repository the repository where the log has to be calculated.\n     * @param options optional configuration for further refining the `git log` command execution.\n     */\n    log(repository: Repository, options?: Git.Options.Log): Promise<CommitWithChanges[]>;\n\n    /**\n     * Returns the commit SHA of the given ref if the ref exists, or returns 'undefined' if the\n     * given ref does not exist.\n     *\n     * @param repository the repository where the ref may be found.\n     * @param options configuration containing the ref and optionally other properties for further refining the `git rev-parse` command execution.\n     */\n    revParse(repository: Repository, options: Git.Options.RevParse): Promise<string | undefined>;\n\n    /**\n     * Returns the annotations of each line in the given file.\n     *\n     * @param repository the repository which contains the given file.\n     * @param uri the URI of the file to get the annotations for.\n     * @param options more options refining the `git blame`.\n     */\n    blame(repository: Repository, uri: string, options?: Git.Options.Blame): Promise<GitFileBlame | undefined>;\n\n    /**\n     * Resolves to `true` if the file is managed by the Git repository. Otherwise, `false`.\n     */\n    lsFiles(repository: Repository, uri: string, options: { errorUnmatch: true }): Promise<boolean>;\n    /**\n     * Shows information about files in the index and the working tree\n     *\n     * @param repository the repository where the `git lf-files` has to be executed.\n     * @param uri the URI of the file to check.\n     * @param options further options for the command executions.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    lsFiles(repository: Repository, uri: string, options?: Git.Options.LsFiles): Promise<any>;\n\n}\n\n/**\n * Contains a set of utility functions for {@link Git}.\n */\nexport namespace GitUtils {\n\n    /**\n     * `true` if the argument is an option for renaming an existing branch in the repository.\n     */\n    export function isBranchRename(arg: unknown): arg is Git.Options.BranchCommand.Rename {\n        return isObject(arg) && 'newName' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for deleting an existing branch in the repository.\n     */\n    export function isBranchDelete(arg: unknown): arg is Git.Options.BranchCommand.Delete {\n        return isObject(arg) && 'toDelete' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for creating a new branch in the repository.\n     */\n    export function isBranchCreate(arg: unknown): arg is Git.Options.BranchCommand.Create {\n        return isObject(arg) && 'toCreate' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for listing the branches in a repository.\n     */\n    export function isBranchList(arg: unknown): arg is Git.Options.BranchCommand.List {\n        return isObject(arg) && 'type' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for checking out a new local branch.\n     */\n    export function isBranchCheckout(arg: unknown): arg is Git.Options.Checkout.CheckoutBranch {\n        return isObject(arg) && 'branch' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for checking out a working tree file.\n     */\n    export function isWorkingTreeFileCheckout(arg: unknown): arg is Git.Options.Checkout.WorkingTreeFile {\n        return isObject(arg) && 'paths' in arg;\n    }\n\n    /**\n     * The error code for when the path to a repository doesn't exist.\n     */\n    const RepositoryDoesNotExistErrorCode = 'repository-does-not-exist-error';\n\n    /**\n     * `true` if the argument is an error indicating the absence of a local Git repository.\n     * Otherwise, `false`.\n     */\n    export function isRepositoryDoesNotExistError(error: unknown): boolean {\n        // TODO this is odd here.This piece of code is already implementation specific, so this should go to the Git API.\n        // But how can we ensure that the `any` type error is serializable?\n        if (error instanceof Error && ('code' in error)) {\n            return (error as { code: string }).code === RepositoryDoesNotExistErrorCode;\n        }\n        return false;\n    }\n\n    /**\n     * Maps the raw status text from Git to a Git file status enumeration.\n     */\n    export function mapStatus(rawStatus: string): GitFileStatus {\n        const status = rawStatus.trim();\n\n        if (status === 'M') {\n            return GitFileStatus.Modified;\n        } // modified\n        if (status === 'A') {\n            return GitFileStatus.New;\n        } // added\n        if (status === 'D') {\n            return GitFileStatus.Deleted;\n        } // deleted\n        if (status === 'R') {\n            return GitFileStatus.Renamed;\n        } // renamed\n        if (status === 'C') {\n            return GitFileStatus.Copied;\n        } // copied\n\n        // git log -M --name-status will return a RXXX - where XXX is a percentage\n        if (status.match(/R[0-9]+/)) {\n            return GitFileStatus.Renamed;\n        }\n\n        // git log -C --name-status will return a CXXX - where XXX is a percentage\n        if (status.match(/C[0-9]+/)) {\n            return GitFileStatus.Copied;\n        }\n\n        return GitFileStatus.Modified;\n    }\n\n    /**\n     * `true` if the argument is a raw Git status with similarity percentage. Otherwise, `false`.\n     */\n    export function isSimilarityStatus(rawStatus: string): boolean {\n        return !!rawStatus.match(/R[0-9][0-9][0-9]/) || !!rawStatus.match(/C[0-9][0-9][0-9]/);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './git';\nexport * from './git-model';\nexport * from './git-watcher';\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { GitPromptServer, GitPromptClient, GitPrompt } from '../common/git-prompt';\n\n@injectable()\nexport class DugiteGitPromptServer implements GitPromptServer, GitPromptClient {\n\n    protected client: GitPromptClient | undefined;\n\n    dispose(): void {\n    }\n\n    setClient(client: GitPromptClient | undefined): void {\n        this.client = client;\n    }\n\n    async ask(question: GitPrompt.Question): Promise<GitPrompt.Answer> {\n        if (this.client) {\n            return this.client.ask(question);\n        }\n        return GitPrompt.Failure.create('Not yet available.');\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { DisposableCollection, Disposable } from '@theia/core';\nimport { Repository } from '../common';\nimport { GitWatcherServer, GitWatcherClient } from '../common/git-watcher';\nimport { GitRepositoryManager } from './git-repository-manager';\n\n@injectable()\nexport class DugiteGitWatcherServer implements GitWatcherServer {\n\n    protected client: GitWatcherClient | undefined;\n\n    protected watcherSequence = 1;\n    protected readonly watchers = new Map<number, Disposable>();\n    protected readonly subscriptions = new Map<string, DisposableCollection>();\n\n    constructor(\n        @inject(GitRepositoryManager) protected readonly manager: GitRepositoryManager\n    ) { }\n\n    dispose(): void {\n        for (const watcher of this.watchers.values()) {\n            watcher.dispose();\n        }\n        this.watchers.clear();\n        this.subscriptions.clear();\n    }\n\n    async watchGitChanges(repository: Repository): Promise<number> {\n        const reference = await this.manager.getWatcher(repository);\n        const watcher = reference.object;\n\n        const repositoryUri = repository.localUri;\n        let subscriptions = this.subscriptions.get(repositoryUri);\n        if (subscriptions === undefined) {\n            const unsubscribe = watcher.onGitStatusChanged(e => {\n                if (this.client) {\n                    this.client.onGitChanged(e);\n                }\n            });\n            subscriptions = new DisposableCollection();\n            subscriptions.onDispose(() => {\n                unsubscribe.dispose();\n                this.subscriptions.delete(repositoryUri);\n            });\n            this.subscriptions.set(repositoryUri, subscriptions);\n        }\n\n        watcher.watch();\n        subscriptions.push(reference);\n        const watcherId = this.watcherSequence++;\n        this.watchers.set(watcherId, reference);\n        return watcherId;\n    }\n\n    async unwatchGitChanges(watcher: number): Promise<void> {\n        const disposable = this.watchers.get(watcher);\n        if (disposable) {\n            disposable.dispose();\n            this.watchers.delete(watcher);\n        } else {\n            throw new Error(`No Git watchers were registered with ID: ${watcher}.`);\n        }\n    }\n\n    setClient(client?: GitWatcherClient): void {\n        this.client = client;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as Path from 'path';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { git } from 'dugite-extra/lib/core/git';\nimport { push } from 'dugite-extra/lib/command/push';\nimport { pull } from 'dugite-extra/lib/command/pull';\nimport { clone } from 'dugite-extra/lib/command/clone';\nimport { fetch } from 'dugite-extra/lib/command/fetch';\nimport { stash } from 'dugite-extra/lib/command/stash';\nimport { merge } from 'dugite-extra/lib/command/merge';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { getStatus } from 'dugite-extra/lib/command/status';\nimport { createCommit } from 'dugite-extra/lib/command/commit';\nimport { stage, unstage } from 'dugite-extra/lib/command/stage';\nimport { reset, GitResetMode } from 'dugite-extra/lib/command/reset';\nimport { getTextContents, getBlobContents } from 'dugite-extra/lib/command/show';\nimport { checkoutBranch, checkoutPaths } from 'dugite-extra/lib/command/checkout';\nimport { createBranch, deleteBranch, renameBranch, listBranch } from 'dugite-extra/lib/command/branch';\nimport { IStatusResult, IAheadBehind, AppFileStatus, WorkingDirectoryStatus as DugiteStatus, FileChange as DugiteFileChange } from 'dugite-extra/lib/model/status';\nimport { Branch as DugiteBranch } from 'dugite-extra/lib/model/branch';\nimport { Commit as DugiteCommit, CommitIdentity as DugiteCommitIdentity } from 'dugite-extra/lib/model/commit';\nimport { ILogger } from '@theia/core';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport * as strings from '@theia/core/lib/common/strings';\nimport {\n    Git, GitUtils, Repository, WorkingDirectoryStatus, GitFileChange, GitFileStatus, Branch, Commit,\n    CommitIdentity, GitResult, CommitWithChanges, GitFileBlame, CommitLine, GitError, Remote, StashEntry\n} from '../common';\nimport { GitRepositoryManager } from './git-repository-manager';\nimport { GitLocator } from './git-locator/git-locator-protocol';\nimport { GitExecProvider } from './git-exec-provider';\nimport { GitEnvProvider } from './env/git-env-provider';\nimport { GitInit } from './init/git-init';\n\n/**\n * Parsing and converting raw Git output into Git model instances.\n */\n@injectable()\nexport abstract class OutputParser<T> {\n\n    /** This is the `NUL` delimiter. Equals `%x00`. */\n    static readonly LINE_DELIMITER = '\\0';\n\n    abstract parse(repositoryUri: string, raw: string, delimiter?: string): T[];\n    abstract parse(repositoryUri: string, items: string[]): T[];\n    abstract parse(repositoryUri: string, input: string | string[], delimiter?: string): T[];\n\n    protected toUri(repositoryUri: string, pathSegment: string): string {\n        return FileUri.create(Path.join(FileUri.fsPath(repositoryUri), pathSegment)).toString();\n    }\n\n    protected split(input: string | string[], delimiter: string): string[] {\n        return (Array.isArray(input) ? input : input.split(delimiter)).filter(item => item && item.length > 0);\n    }\n\n}\n\n/**\n * Status parser for converting raw Git `--name-status` output into file change objects.\n */\n@injectable()\nexport class NameStatusParser extends OutputParser<GitFileChange> {\n\n    parse(repositoryUri: string, input: string | string[], delimiter: string = OutputParser.LINE_DELIMITER): GitFileChange[] {\n        const items = this.split(input, delimiter);\n        const changes: GitFileChange[] = [];\n        let index = 0;\n        while (index < items.length) {\n            const rawStatus = items[index];\n            const status = GitUtils.mapStatus(rawStatus);\n            if (GitUtils.isSimilarityStatus(rawStatus)) {\n                const uri = this.toUri(repositoryUri, items[index + 2]);\n                const oldUri = this.toUri(repositoryUri, items[index + 1]);\n                changes.push({\n                    status,\n                    uri,\n                    oldUri,\n                    staged: true\n                });\n                index = index + 3;\n            } else {\n                const uri = this.toUri(repositoryUri, items[index + 1]);\n                changes.push({\n                    status,\n                    uri,\n                    staged: true\n                });\n                index = index + 2;\n            }\n        }\n        return changes;\n    }\n\n}\n\n/**\n * Built-in Git placeholders for tuning the `--format` option for `git diff` or `git log`.\n */\nexport enum CommitPlaceholders {\n    HASH = '%H',\n    SHORT_HASH = '%h',\n    AUTHOR_EMAIL = '%aE',\n    AUTHOR_NAME = '%aN',\n    AUTHOR_DATE = '%aI',\n    AUTHOR_RELATIVE_DATE = '%ar',\n    SUBJECT = '%s',\n    BODY = '%b'\n}\n\n/**\n * Parser for converting raw, Git commit details into `CommitWithChanges` instances.\n */\n@injectable()\nexport class CommitDetailsParser extends OutputParser<CommitWithChanges> {\n\n    static readonly ENTRY_DELIMITER = '\\x01';\n    static readonly COMMIT_CHUNK_DELIMITER = '\\x02';\n    static readonly DEFAULT_PLACEHOLDERS = [\n        CommitPlaceholders.HASH,\n        CommitPlaceholders.AUTHOR_EMAIL,\n        CommitPlaceholders.AUTHOR_NAME,\n        CommitPlaceholders.AUTHOR_DATE,\n        CommitPlaceholders.AUTHOR_RELATIVE_DATE,\n        CommitPlaceholders.SUBJECT,\n        CommitPlaceholders.BODY];\n\n    @inject(NameStatusParser)\n    protected readonly nameStatusParser: NameStatusParser;\n\n    parse(repositoryUri: string, input: string | string[], delimiter: string = CommitDetailsParser.COMMIT_CHUNK_DELIMITER): CommitWithChanges[] {\n        const chunks = this.split(input, delimiter);\n        const changes: CommitWithChanges[] = [];\n        for (const chunk of chunks) {\n            const [sha, email, name, timestamp, authorDateRelative, summary, body, rawChanges] = chunk.trim().split(CommitDetailsParser.ENTRY_DELIMITER);\n            const fileChanges = this.nameStatusParser.parse(repositoryUri, (rawChanges || '').trim());\n            changes.push({\n                sha,\n                author: { timestamp, email, name },\n                authorDateRelative,\n                summary,\n                body,\n                fileChanges\n            });\n        }\n        return changes;\n    }\n\n    getFormat(...placeholders: CommitPlaceholders[]): string {\n        return '%x02' + placeholders.join('%x01') + '%x01';\n    }\n\n}\n\n@injectable()\nexport class GitBlameParser {\n\n    async parse(fileUri: string, gitBlameOutput: string, commitBody: (sha: string) => Promise<string>): Promise<GitFileBlame | undefined> {\n        if (!gitBlameOutput) {\n            return undefined;\n        }\n        const parsedEntries = this.parseEntries(gitBlameOutput);\n        return this.createFileBlame(fileUri, parsedEntries, commitBody);\n    }\n\n    protected parseEntries(rawOutput: string): GitBlameParser.Entry[] {\n        const result: GitBlameParser.Entry[] = [];\n        let current: GitBlameParser.Entry | undefined;\n        for (const line of strings.split(rawOutput, '\\n')) {\n            if (current === undefined) {\n                current = {};\n            }\n            if (GitBlameParser.pumpEntry(current, line)) {\n                result.push(current);\n                current = undefined;\n            }\n        }\n        return result;\n    }\n\n    protected async createFileBlame(uri: string, blameEntries: GitBlameParser.Entry[], commitBody: (sha: string) => Promise<string>): Promise<GitFileBlame> {\n        const commits = new Map<string, Commit>();\n        const lines: CommitLine[] = [];\n        for (const entry of blameEntries) {\n            const sha = entry.sha!;\n            let commit = commits.get(sha);\n            if (!commit) {\n                commit = <Commit>{\n                    sha,\n                    author: {\n                        name: entry.author,\n                        email: entry.authorMail,\n                        timestamp: entry.authorTime ? new Date(entry.authorTime * 1000).toISOString() : '',\n                    },\n                    summary: entry.summary,\n                    body: await commitBody(sha)\n                };\n                commits.set(sha, commit);\n            }\n            const lineCount = entry.lineCount!;\n            for (let lineOffset = 0; lineOffset < lineCount; lineOffset++) {\n                const line = <CommitLine>{\n                    sha,\n                    line: entry.line! + lineOffset\n                };\n                lines[line.line] = line;\n            }\n        }\n        const fileBlame = <GitFileBlame>{ uri, commits: Array.from(commits.values()), lines };\n        return fileBlame;\n    }\n\n}\n\nexport namespace GitBlameParser {\n    export interface Entry {\n        fileName?: string,\n        sha?: string,\n        previousSha?: string,\n        line?: number,\n        lineCount?: number,\n        author?: string,\n        authorMail?: string,\n        authorTime?: number,\n        summary?: string,\n    }\n\n    export function isUncommittedSha(sha: string | undefined): boolean {\n        return (sha || '').startsWith('0000000');\n    }\n\n    export function pumpEntry(entry: Entry, outputLine: string): boolean {\n        const parts = outputLine.split(' ');\n        if (parts.length < 2) {\n            return false;\n        }\n        const uncommitted = isUncommittedSha(entry.sha);\n        const firstPart = parts[0];\n        if (entry.sha === undefined) {\n            entry.sha = firstPart;\n            entry.line = parseInt(parts[2], 10) - 1; // to zero based\n            entry.lineCount = parseInt(parts[3], 10);\n        } else if (firstPart === 'author') {\n            entry.author = uncommitted ? 'You' : parts.slice(1).join(' ');\n        } else if (firstPart === 'author-mail') {\n            const rest = parts.slice(1).join(' ');\n            const matches = rest.match(/(<(.*)>)/);\n            entry.authorMail = matches ? matches[2] : rest;\n        } else if (firstPart === 'author-time') {\n            entry.authorTime = parseInt(parts[1], 10);\n        } else if (firstPart === 'summary') {\n            let summary = parts.slice(1).join(' ');\n            if (summary.startsWith('\"') && summary.endsWith('\"')) {\n                summary = summary.substring(1, summary.length - 1);\n            }\n            entry.summary = uncommitted ? 'uncommitted' : summary;\n        } else if (firstPart === 'previous') {\n            entry.previousSha = parts[1];\n        } else if (firstPart === 'filename') {\n            entry.fileName = parts.slice(1).join(' ');\n            return true;\n        }\n        return false;\n    }\n\n}\n\n/**\n * `dugite-extra` based Git implementation.\n */\n@injectable()\nexport class DugiteGit implements Git {\n\n    protected readonly limit = 1000;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(GitLocator)\n    protected readonly locator: GitLocator;\n\n    @inject(GitRepositoryManager)\n    protected readonly manager: GitRepositoryManager;\n\n    @inject(NameStatusParser)\n    protected readonly nameStatusParser: NameStatusParser;\n\n    @inject(CommitDetailsParser)\n    protected readonly commitDetailsParser: CommitDetailsParser;\n\n    @inject(GitBlameParser)\n    protected readonly blameParser: GitBlameParser;\n\n    @inject(GitExecProvider)\n    protected readonly execProvider: GitExecProvider;\n\n    @inject(GitEnvProvider)\n    protected readonly envProvider: GitEnvProvider;\n\n    @inject(GitInit)\n    protected readonly gitInit: GitInit;\n\n    protected ready: Deferred<void> = new Deferred();\n    protected gitEnv: Deferred<Object> = new Deferred();\n\n    @postConstruct()\n    protected init(): void {\n        this.envProvider.getEnv().then(env => this.gitEnv.resolve(env));\n        this.gitInit.init()\n            .catch(err => {\n                this.logger.error('An error occurred during the Git initialization.', err);\n                this.ready.resolve();\n            })\n            .then(() => this.ready.resolve());\n    }\n\n    dispose(): void {\n        this.locator.dispose();\n        this.execProvider.dispose();\n        this.gitInit.dispose();\n    }\n\n    async clone(remoteUrl: string, options: Git.Options.Clone): Promise<Repository> {\n        await this.ready.promise;\n        const { localUri, branch } = options;\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        await clone(remoteUrl, this.getFsPath(localUri), { branch }, { exec, env });\n        return { localUri };\n    }\n\n    async repositories(workspaceRootUri: string, options: Git.Options.Repositories): Promise<Repository[]> {\n        await this.ready.promise;\n        const workspaceRootPath = this.getFsPath(workspaceRootUri);\n        const repositories: Repository[] = [];\n        const containingPath = await this.resolveContainingPath(workspaceRootPath);\n        if (containingPath) {\n            repositories.push({\n                localUri: this.getUri(containingPath)\n            });\n        }\n        const maxCount = typeof options.maxCount === 'number' ? options.maxCount - repositories.length : undefined;\n        if (typeof maxCount === 'number' && maxCount <= 0) {\n            return repositories;\n        }\n        for (const repositoryPath of await this.locator.locate(workspaceRootPath, {\n            maxCount\n        })) {\n            if (containingPath !== repositoryPath) {\n                repositories.push({\n                    localUri: this.getUri(repositoryPath)\n                });\n            }\n        }\n        return repositories;\n    }\n\n    async status(repository: Repository): Promise<WorkingDirectoryStatus> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        const dugiteStatus = await getStatus(repositoryPath, true, this.limit, { exec, env });\n        return this.mapStatus(dugiteStatus, repository);\n    }\n\n    async add(repository: Repository, uri: string | string[]): Promise<void> {\n        await this.ready.promise;\n        const paths = (Array.isArray(uri) ? uri : [uri]).map(FileUri.fsPath);\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        return this.manager.run(repository, () =>\n            stage(this.getFsPath(repository), paths, { exec, env })\n        );\n    }\n\n    async unstage(repository: Repository, uri: string | string[], options?: Git.Options.Unstage): Promise<void> {\n        await this.ready.promise;\n        const paths = (Array.isArray(uri) ? uri : [uri]).map(FileUri.fsPath);\n        const treeish = options && options.treeish ? options.treeish : undefined;\n        const where = options && options.reset ? options.reset : undefined;\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        return this.manager.run(repository, () =>\n            unstage(this.getFsPath(repository), paths, treeish, where, { exec, env })\n        );\n    }\n\n    async branch(repository: Repository, options: { type: 'current' }): Promise<Branch | undefined>;\n    async branch(repository: Repository, options: { type: 'local' | 'remote' | 'all' }): Promise<Branch[]>;\n    async branch(repository: Repository, options: Git.Options.BranchCommand.Create | Git.Options.BranchCommand.Rename | Git.Options.BranchCommand.Delete): Promise<void>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async branch(repository: any, options: any): Promise<void | undefined | Branch | Branch[]> {\n        await this.ready.promise;\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        const repositoryPath = this.getFsPath(repository);\n        if (GitUtils.isBranchList(options)) {\n            if (options.type === 'current') {\n                const currentBranch = await listBranch(repositoryPath, options.type, { exec, env });\n                return currentBranch ? this.mapBranch(currentBranch) : undefined;\n            }\n            const branches = await listBranch(repositoryPath, options.type, { exec, env });\n            return Promise.all(branches.map(branch => this.mapBranch(branch)));\n        }\n        return this.manager.run(repository, () => {\n            if (GitUtils.isBranchCreate(options)) {\n                return createBranch(repositoryPath, options.toCreate, { startPoint: options.startPoint }, { exec, env });\n            }\n            if (GitUtils.isBranchRename(options)) {\n                return renameBranch(repositoryPath, options.newName, options.newName, { force: !!options.force }, { exec, env });\n            }\n            if (GitUtils.isBranchDelete(options)) {\n                return deleteBranch(repositoryPath, options.toDelete, { force: !!options.force, remote: !!options.remote }, { exec, env });\n            }\n            return this.fail(repository, `Unexpected git branch options: ${options}.`);\n        });\n    }\n\n    async checkout(repository: Repository, options: Git.Options.Checkout.CheckoutBranch | Git.Options.Checkout.WorkingTreeFile): Promise<void> {\n        await this.ready.promise;\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        return this.manager.run(repository, () => {\n            const repositoryPath = this.getFsPath(repository);\n            if (GitUtils.isBranchCheckout(options)) {\n                return checkoutBranch(repositoryPath, options.branch, { exec, env });\n            }\n            if (GitUtils.isWorkingTreeFileCheckout(options)) {\n                const paths = (Array.isArray(options.paths) ? options.paths : [options.paths]).map(FileUri.fsPath);\n                return checkoutPaths(repositoryPath, paths, { exec, env });\n            }\n            return this.fail(repository, `Unexpected git checkout options: ${options}.`);\n        });\n    }\n\n    async commit(repository: Repository, message?: string, options?: Git.Options.Commit): Promise<void> {\n        await this.ready.promise;\n        const signOff = options && options.signOff;\n        const amend = options && options.amend;\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        return this.manager.run(repository, () =>\n            createCommit(this.getFsPath(repository), message || '', signOff, amend, { exec, env })\n        );\n    }\n\n    async fetch(repository: Repository, options?: Git.Options.Fetch): Promise<void> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const r = await this.getDefaultRemote(repositoryPath, options ? options.remote : undefined);\n        if (r) {\n            const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n            return this.manager.run(repository, () =>\n                fetch(repositoryPath, r!, { exec, env })\n            );\n        }\n        this.fail(repository, 'No remote repository specified. Please, specify either a URL or a remote name from which new revisions should be fetched.');\n    }\n\n    async push(repository: Repository, { remote, localBranch, remoteBranch, setUpstream, force }: Git.Options.Push = {}): Promise<void> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const currentRemote = await this.getDefaultRemote(repositoryPath, remote);\n        if (currentRemote === undefined) {\n            this.fail(repository, 'No configured push destination.');\n        }\n        const branch = await this.getCurrentBranch(repositoryPath, localBranch);\n        const branchName = typeof branch === 'string' ? branch : branch.name;\n        if (setUpstream || force) {\n            const args = ['push'];\n            if (force) {\n                args.push('--force');\n            }\n            if (setUpstream) {\n                args.push('--set-upstream');\n            }\n            if (currentRemote) {\n                args.push(currentRemote);\n            }\n            args.push(branchName + (remoteBranch ? `:${remoteBranch}` : ''));\n            await this.exec(repository, args);\n        } else {\n            const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n            return this.manager.run(repository, () =>\n                push(repositoryPath, currentRemote!, branchName, remoteBranch, { exec, env })\n            );\n        }\n    }\n\n    async pull(repository: Repository, { remote, branch, rebase }: Git.Options.Pull = {}): Promise<void> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const currentRemote = await this.getDefaultRemote(repositoryPath, remote);\n        if (currentRemote === undefined) {\n            this.fail(repository, 'No remote repository specified. Please, specify either a URL or a remote name from which new revisions should be fetched.');\n        }\n        if (rebase) {\n            const args = ['pull'];\n            if (rebase) {\n                args.push('-r');\n            }\n            if (currentRemote) {\n                args.push(currentRemote);\n            }\n            if (branch) {\n                args.push(branch);\n            }\n            await this.exec(repository, args);\n        } else {\n            const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n            return this.manager.run(repository, () => pull(repositoryPath, currentRemote!, branch, { exec, env }));\n        }\n    }\n\n    async reset(repository: Repository, options: Git.Options.Reset): Promise<void> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const mode = this.getResetMode(options.mode);\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        return this.manager.run(repository, () =>\n            reset(repositoryPath, mode, options.ref ? options.ref : 'HEAD', { exec, env })\n        );\n    }\n\n    async merge(repository: Repository, options: Git.Options.Merge): Promise<void> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        return this.manager.run(repository, () =>\n            merge(repositoryPath, options.branch, { exec, env })\n        );\n    }\n\n    async show(repository: Repository, uri: string, options?: Git.Options.Show): Promise<string> {\n        await this.ready.promise;\n        const encoding = options ? options.encoding || 'utf8' : 'utf8';\n        const commitish = this.getCommitish(options);\n        const repositoryPath = this.getFsPath(repository);\n        const path = this.getFsPath(uri);\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        if (encoding === 'binary') {\n            return (await getBlobContents(repositoryPath, commitish, path, { exec, env })).toString();\n        }\n        return (await getTextContents(repositoryPath, commitish, path, { exec, env })).toString();\n    }\n\n    async stash(repository: Repository, options?: Readonly<{ action?: 'push', message?: string }>): Promise<void>;\n    async stash(repository: Repository, options: Readonly<{ action: 'list' }>): Promise<StashEntry[]>;\n    async stash(repository: Repository, options: Readonly<{ action: 'clear' }>): Promise<void>;\n    async stash(repository: Repository, options: Readonly<{ action: 'apply' | 'pop' | 'drop', id?: string }>): Promise<void>;\n    async stash(repository: Repository, options?: Git.Options.Stash): Promise<StashEntry[] | void> {\n        const repositoryPath: string = this.getFsPath(repository);\n        try {\n            if (!options || (options && !options.action)) {\n                await stash.push(repositoryPath, options ? options.message : undefined);\n                return;\n            }\n            switch (options.action) {\n                case 'push':\n                    await stash.push(repositoryPath, options.message);\n                    break;\n                case 'apply':\n                    await stash.apply(repositoryPath, options.id);\n                    break;\n                case 'pop':\n                    await stash.pop(repositoryPath, options.id);\n                    break;\n                case 'list':\n                    const stashList = await stash.list(repositoryPath);\n                    const stashes: StashEntry[] = [];\n                    stashList.forEach(stashItem => {\n                        const splitIndex = stashItem.indexOf(':');\n                        stashes.push({\n                            id: stashItem.substring(0, splitIndex),\n                            message: stashItem.substring(splitIndex + 1)\n                        });\n                    });\n                    return stashes;\n                case 'drop':\n                    await stash.drop(repositoryPath, options.id);\n                    break;\n            }\n        } catch (err) {\n            this.fail(repository, err);\n        }\n    }\n\n    async remote(repository: Repository): Promise<string[]>;\n    async remote(repository: Repository, options: { verbose: true }): Promise<Remote[]>;\n    async remote(repository: Repository, options?: Git.Options.Remote): Promise<string[] | Remote[]> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        const remotes = await this.getRemotes(repositoryPath);\n        const names = remotes.map(a => a.name);\n        return (options && options.verbose === true) ? remotes : names;\n    }\n\n    async exec(repository: Repository, args: string[], options?: Git.Options.Execution): Promise<GitResult> {\n        await this.ready.promise;\n        const repositoryPath = this.getFsPath(repository);\n        return this.manager.run(repository, async () => {\n            const name = options && options.name ? options.name : '';\n            const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n            let opts = {};\n            if (options) {\n                opts = {\n                    ...options\n                };\n                if (options.successExitCodes) {\n                    opts = { ...opts, successExitCodes: new Set(options.successExitCodes) };\n                }\n                if (options.expectedErrors) {\n                    opts = { ...opts, expectedErrors: new Set(options.expectedErrors) };\n                }\n            }\n            opts = {\n                ...opts,\n                exec,\n                env\n            };\n            return git(args, repositoryPath, name, opts);\n        });\n    }\n\n    async diff(repository: Repository, options?: Git.Options.Diff): Promise<GitFileChange[]> {\n        await this.ready.promise;\n        const args = ['diff', '--name-status', '-C', '-M', '-z'];\n        args.push(this.mapRange((options || {}).range));\n        if (options && options.uri) {\n            const relativePath = Path.relative(this.getFsPath(repository), this.getFsPath(options.uri));\n            args.push(...['--', relativePath !== '' ? relativePath : '.']);\n        }\n        const result = await this.exec(repository, args);\n        return this.nameStatusParser.parse(repository.localUri, result.stdout.trim());\n    }\n\n    async log(repository: Repository, options?: Git.Options.Log): Promise<CommitWithChanges[]> {\n        await this.ready.promise;\n        // If remaining commits should be calculated by the backend, then run `git rev-list --count ${fromRevision | HEAD~fromRevision}`.\n        // How to use `mailmap` to map authors: https://www.kernel.org/pub/software/scm/git/docs/git-shortlog.html.\n        const args = ['log'];\n        if (options && options.branch) {\n            args.push(options.branch);\n        }\n        const range = this.mapRange((options || {}).range);\n        args.push(...[range, '-C', '-M', '-m', '--first-parent']);\n        const maxCount = options && options.maxCount ? options.maxCount : 0;\n        if (Number.isInteger(maxCount) && maxCount > 0) {\n            args.push(...['-n', `${maxCount}`]);\n        }\n        const placeholders: CommitPlaceholders[] =\n            options && options.shortSha ?\n                [CommitPlaceholders.SHORT_HASH, ...CommitDetailsParser.DEFAULT_PLACEHOLDERS.slice(1)] : CommitDetailsParser.DEFAULT_PLACEHOLDERS;\n        args.push(...['--name-status', '--date=unix', `--format=${this.commitDetailsParser.getFormat(...placeholders)}`, '-z', '--']);\n        if (options && options.uri) {\n            const file = Path.relative(this.getFsPath(repository), this.getFsPath(options.uri)) || '.';\n            args.push(...[file]);\n        }\n\n        const successExitCodes = [0, 128];\n        let result = await this.exec(repository, args, { successExitCodes });\n        if (result.exitCode !== 0) {\n            // Note that if no range specified then the 'to revision' defaults to HEAD\n            const rangeInvolvesHead = !options || !options.range || options.range.toRevision === 'HEAD';\n            const repositoryHasNoHead = !await this.revParse(repository, { ref: 'HEAD' });\n            // The 'log' command could potentially be valid when no HEAD if the revision range does not involve HEAD */\n            if (rangeInvolvesHead && repositoryHasNoHead) {\n                // The range involves HEAD but there is no HEAD.  'no head' most likely means a newly created repository with\n                // no commits, but could potentially have commits with no HEAD.  This is effectively an empty repository.\n                return [];\n            }\n            // Either the range did not involve HEAD or HEAD exists.  The error must be something else,\n            // so re-run but this time we don't ignore the error.\n            result = await this.exec(repository, args);\n        }\n\n        return this.commitDetailsParser.parse(\n            repository.localUri, result.stdout.trim()\n                .split(CommitDetailsParser.COMMIT_CHUNK_DELIMITER)\n                .filter(item => item && item.length > 0));\n    }\n\n    async revParse(repository: Repository, options: Git.Options.RevParse): Promise<string | undefined> {\n        const ref = options.ref;\n        const successExitCodes = [0, 128];\n        const result = await this.exec(repository, ['rev-parse', ref], { successExitCodes });\n        if (result.exitCode === 0) {\n            return result.stdout; // sha\n        }\n    }\n\n    async blame(repository: Repository, uri: string, options?: Git.Options.Blame): Promise<GitFileBlame | undefined> {\n        await this.ready.promise;\n        const args = ['blame', '--root', '--incremental'];\n        const file = Path.relative(this.getFsPath(repository), this.getFsPath(uri));\n        const repositoryPath = this.getFsPath(repository);\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        const status = await getStatus(repositoryPath, true, this.limit, { exec, env });\n        const isUncommitted = (change: DugiteFileChange) => change.status === AppFileStatus.New && change.path === file;\n        const changes = status.workingDirectory.files;\n        if (changes.some(isUncommitted)) {\n            return undefined;\n        }\n        const stdin = options ? options.content : undefined;\n        if (stdin) {\n            args.push('--contents', '-');\n        }\n        const gitResult = await this.exec(repository, [...args, '--', file], { stdin });\n        const output = gitResult.stdout.trim();\n        const commitBodyReader = async (sha: string) => {\n            if (GitBlameParser.isUncommittedSha(sha)) {\n                return '';\n            }\n            const revResult = await this.exec(repository, ['rev-list', '--format=%B', '--max-count=1', sha]);\n            const revOutput = revResult.stdout;\n            let nl = revOutput.indexOf('\\n');\n            if (nl > 0) {\n                nl = revOutput.indexOf('\\n', nl + 1);\n            }\n            return revOutput.substring(Math.max(0, nl)).trim();\n        };\n        const blame = await this.blameParser.parse(uri, output, commitBodyReader);\n        return blame;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async lsFiles(repository: Repository, uri: string, options?: Git.Options.LsFiles): Promise<any> {\n        await this.ready.promise;\n        const args = ['ls-files'];\n        const relativePath = Path.relative(this.getFsPath(repository), this.getFsPath(uri));\n        const file = (relativePath === '') ? '.' : relativePath;\n        if (options && options.errorUnmatch) {\n            args.push('--error-unmatch', file);\n            const successExitCodes = [0, 1];\n            const expectedErrors = [GitError.OutsideRepository];\n            const result = await this.exec(repository, args, { successExitCodes, expectedErrors });\n            const { exitCode } = result;\n            return exitCode === 0;\n        }\n    }\n\n    private getCommitish(options?: Git.Options.Show): string {\n        if (options && options.commitish) {\n            return 'index' === options.commitish ? '' : options.commitish;\n        }\n        return '';\n    }\n\n    // TODO: akitta what about symlinks? What if the workspace root is a symlink?\n    // Maybe, we should use `--show-cdup` here instead of `--show-toplevel` because `show-toplevel` dereferences symlinks.\n    private async resolveContainingPath(repositoryPath: string): Promise<string | undefined> {\n        await this.ready.promise;\n        // Do not log an error if we are not contained in a Git repository. Treat exit code 128 as a success too.\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        const options = { successExitCodes: new Set([0, 128]), exec, env };\n        const result = await git(['rev-parse', '--show-toplevel'], repositoryPath, 'rev-parse', options);\n        const out = result.stdout;\n        if (out && out.length !== 0) {\n            try {\n                const realpath = await fs.realpath(out.trim());\n                return realpath;\n            } catch (e) {\n                this.logger.error(e);\n                return undefined;\n            }\n        }\n        return undefined;\n    }\n\n    private async getRemotes(repositoryPath: string): Promise<Remote[]> {\n        await this.ready.promise;\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        const result = await git(['remote', '-v'], repositoryPath, 'remote', { exec, env });\n        const out = result.stdout || '';\n        const results = out.trim().match(/\\S+/g);\n        if (results) {\n            const values: Remote[] = [];\n            for (let i = 0; i < results.length; i += 6) {\n                values.push({ name: results[i], fetch: results[i + 1], push: results[i + 4] });\n            }\n            return values;\n        } else {\n            return [];\n        }\n    }\n\n    private async getDefaultRemote(repositoryPath: string, remote?: string): Promise<string | undefined> {\n        if (remote === undefined) {\n            const remotes = await this.getRemotes(repositoryPath);\n            const name = remotes.map(a => a.name);\n            return name.shift();\n        }\n        return remote;\n    }\n\n    private async getCurrentBranch(repositoryPath: string, localBranch?: string): Promise<Branch | string> {\n        await this.ready.promise;\n        if (localBranch !== undefined) {\n            return localBranch;\n        }\n        const [exec, env] = await Promise.all([this.execProvider.exec(), this.gitEnv.promise]);\n        const branch = await listBranch(repositoryPath, 'current', { exec, env });\n        if (branch === undefined) {\n            return this.fail(repositoryPath, 'No current branch.');\n        }\n        if (Array.isArray(branch)) {\n            return this.fail(repositoryPath, `Implementation error. Listing branch with the 'current' flag must return with single value. Was: ${branch}`);\n        }\n        return this.mapBranch(branch);\n    }\n\n    private getResetMode(mode: 'hard' | 'soft' | 'mixed'): GitResetMode {\n        switch (mode) {\n            case 'hard': return GitResetMode.Hard;\n            case 'soft': return GitResetMode.Soft;\n            case 'mixed': return GitResetMode.Mixed;\n            default: throw new Error(`Unexpected Git reset mode: ${mode}.`);\n        }\n    }\n\n    private async mapBranch(toMap: DugiteBranch): Promise<Branch> {\n        const tip = await this.mapTip(toMap.tip);\n        return {\n            name: toMap.name,\n            nameWithoutRemote: toMap.nameWithoutRemote,\n            remote: toMap.remote,\n            type: toMap.type,\n            upstream: toMap.upstream,\n            upstreamWithoutRemote: toMap.upstreamWithoutRemote,\n            tip\n        };\n    }\n\n    private async mapTip(toMap: DugiteCommit): Promise<Commit> {\n        const author = await this.mapCommitIdentity(toMap.author);\n        return {\n            author,\n            body: toMap.body,\n            parentSHAs: [...toMap.parentSHAs],\n            sha: toMap.sha,\n            summary: toMap.summary\n        };\n    }\n\n    private async mapCommitIdentity(toMap: DugiteCommitIdentity): Promise<CommitIdentity> {\n        return {\n            timestamp: toMap.date.toISOString(),\n            email: toMap.email,\n            name: toMap.name,\n        };\n    }\n\n    private async mapStatus(toMap: IStatusResult, repository: Repository): Promise<WorkingDirectoryStatus> {\n        const repositoryPath = this.getFsPath(repository);\n        const [aheadBehind, changes] = await Promise.all([this.mapAheadBehind(toMap.branchAheadBehind), this.mapFileChanges(toMap.workingDirectory, repositoryPath)]);\n        return {\n            exists: toMap.exists,\n            branch: toMap.currentBranch,\n            upstreamBranch: toMap.currentUpstreamBranch,\n            aheadBehind,\n            changes,\n            currentHead: toMap.currentTip,\n            incomplete: toMap.incomplete\n        };\n    }\n\n    private async mapAheadBehind(toMap: IAheadBehind | undefined): Promise<{ ahead: number, behind: number } | undefined> {\n        return toMap ? { ...toMap } : undefined;\n    }\n\n    private async mapFileChanges(toMap: DugiteStatus, repositoryPath: string): Promise<GitFileChange[]> {\n        return Promise.all(toMap.files\n            .filter(file => !this.isNestedGitRepository(file))\n            .map(file => this.mapFileChange(file, repositoryPath))\n        );\n    }\n\n    private isNestedGitRepository(fileChange: DugiteFileChange): boolean {\n        return fileChange.path.endsWith('/');\n    }\n\n    private async mapFileChange(toMap: DugiteFileChange, repositoryPath: string): Promise<GitFileChange> {\n        const [uri, status, oldUri] = await Promise.all([\n            this.getUri(Path.join(repositoryPath, toMap.path)),\n            this.mapFileStatus(toMap.status),\n            toMap.oldPath ? this.getUri(Path.join(repositoryPath, toMap.oldPath)) : undefined\n        ]);\n        return {\n            uri,\n            status,\n            oldUri,\n            staged: toMap.staged\n        };\n    }\n\n    private mapFileStatus(toMap: AppFileStatus): GitFileStatus {\n        switch (toMap) {\n            case AppFileStatus.Conflicted: return GitFileStatus.Conflicted;\n            case AppFileStatus.Copied: return GitFileStatus.Copied;\n            case AppFileStatus.Deleted: return GitFileStatus.Deleted;\n            case AppFileStatus.Modified: return GitFileStatus.Modified;\n            case AppFileStatus.New: return GitFileStatus.New;\n            case AppFileStatus.Renamed: return GitFileStatus.Renamed;\n            default: throw new Error(`Unexpected application file status: ${toMap}`);\n        }\n    }\n\n    private mapRange(toMap: Git.Options.Range | undefined): string {\n        let range = 'HEAD';\n        if (toMap) {\n            if (typeof toMap.fromRevision === 'number') {\n                const toRevision = toMap.toRevision || 'HEAD';\n                range = `${toRevision}~${toMap.fromRevision}..${toRevision}`;\n            } else if (typeof toMap.fromRevision === 'string') {\n                range = `${toMap.fromRevision}${toMap.toRevision ? '..' + toMap.toRevision : ''}`;\n            } else if (toMap.toRevision) {\n                range = toMap.toRevision;\n            }\n        }\n        return range;\n    }\n\n    private getFsPath(repository: Repository | string): string {\n        const uri = typeof repository === 'string' ? repository : repository.localUri;\n        return FileUri.fsPath(uri);\n    }\n\n    private getUri(path: string): string {\n        return FileUri.create(path).toString();\n    }\n\n    private fail(repository: Repository | string, message?: string): never {\n        const p = typeof repository === 'string' ? repository : repository.localUri;\n        const m = message ? `${message} ` : '';\n        throw new Error(`${m}[${p}]`);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { GitEnvProvider, DefaultGitEnvProvider } from './git-env-provider';\n\nexport default new ContainerModule(bind => {\n    bind(DefaultGitEnvProvider).toSelf().inSingletonScope();\n    bind(GitEnvProvider).toService(DefaultGitEnvProvider);\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\n\n/**\n * Provides an additional environment object when executing every single Git command.\n */\nexport const GitEnvProvider = Symbol('GitEnvProvider');\nexport interface GitEnvProvider extends Disposable {\n\n    /**\n     * The additional environment object that will be set before executing every single Git command.\n     */\n    getEnv(): Promise<Object>;\n\n}\n\n/**\n * The default Git environment provider. Does nothing.\n */\n@injectable()\nexport class DefaultGitEnvProvider implements GitEnvProvider {\n\n    protected toDispose = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        // NOOP\n    }\n\n    async getEnv(): Promise<Object> {\n        return {};\n    }\n\n    dispose(): void {\n        if (!this.toDispose.disposed) {\n            this.toDispose.dispose();\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, Container, interfaces } from '@theia/core/shared/inversify';\nimport { Git, GitPath } from '../common/git';\nimport { GitWatcherPath, GitWatcherClient, GitWatcherServer } from '../common/git-watcher';\nimport { DugiteGit, OutputParser, NameStatusParser, CommitDetailsParser, GitBlameParser } from './dugite-git';\nimport { DugiteGitWatcherServer } from './dugite-git-watcher';\nimport { ConnectionHandler, RpcConnectionHandler, ILogger } from '@theia/core/lib/common';\nimport { GitRepositoryManager } from './git-repository-manager';\nimport { GitRepositoryWatcherFactory, GitRepositoryWatcherOptions, GitRepositoryWatcher } from './git-repository-watcher';\nimport { GitLocator } from './git-locator/git-locator-protocol';\nimport { GitLocatorClient } from './git-locator/git-locator-client';\nimport { GitLocatorImpl } from './git-locator/git-locator-impl';\nimport { GitExecProvider } from './git-exec-provider';\nimport { GitPromptServer, GitPromptClient, GitPrompt } from '../common/git-prompt';\nimport { DugiteGitPromptServer } from './dugite-git-prompt';\nimport { ConnectionContainerModule } from '@theia/core/lib/node/messaging/connection-container-module';\nimport { DefaultGitInit, GitInit } from './init/git-init';\n\nconst SINGLE_THREADED = process.argv.indexOf('--no-cluster') !== -1;\n\nexport interface GitBindingOptions {\n    readonly bindManager: (binding: interfaces.BindingToSyntax<{}>) => interfaces.BindingWhenOnSyntax<{}>;\n}\n\nexport namespace GitBindingOptions {\n    export const Default: GitBindingOptions = {\n        bindManager(binding: interfaces.BindingToSyntax<{}>): interfaces.BindingWhenOnSyntax<{}> {\n            return binding.to(GitRepositoryManager).inSingletonScope();\n        }\n    };\n}\n\nexport function bindGit(bind: interfaces.Bind, bindingOptions: GitBindingOptions = GitBindingOptions.Default): void {\n    bindingOptions.bindManager(bind(GitRepositoryManager));\n    bind(GitRepositoryWatcherFactory).toFactory(ctx => (options: GitRepositoryWatcherOptions) => {\n        // GitRepositoryWatcherFactory is injected into the singleton GitRepositoryManager only.\n        // GitRepositoryWatcher instances created there should be able to access the (singleton) Git.\n        const child = new Container({ defaultScope: 'Singleton' });\n        child.parent = ctx.container;\n        child.bind(GitRepositoryWatcher).toSelf();\n        child.bind(GitRepositoryWatcherOptions).toConstantValue(options);\n        return child.get(GitRepositoryWatcher);\n    });\n    if (SINGLE_THREADED) {\n        bind(GitLocator).toDynamicValue(ctx => {\n            const logger = ctx.container.get<ILogger>(ILogger);\n            return new GitLocatorImpl({\n                info: (message, ...args) => logger.info(message, ...args),\n                error: (message, ...args) => logger.error(message, ...args)\n            });\n        });\n    } else {\n        bind(GitLocator).to(GitLocatorClient);\n    }\n    bind(OutputParser).toSelf().inSingletonScope();\n    bind(NameStatusParser).toSelf().inSingletonScope();\n    bind(CommitDetailsParser).toSelf().inSingletonScope();\n    bind(GitBlameParser).toSelf().inSingletonScope();\n    bind(GitExecProvider).toSelf().inSingletonScope();\n    bind(DugiteGit).toSelf().inSingletonScope();\n    bind(Git).toService(DugiteGit);\n    bind(DefaultGitInit).toSelf();\n    bind(GitInit).toService(DefaultGitInit);\n    bind(ConnectionContainerModule).toConstantValue(gitConnectionModule);\n}\n\nconst gitConnectionModule = ConnectionContainerModule.create(({ bind, bindBackendService }) => {\n    // DugiteGit is bound in singleton scope; each connection should use a proxy for that.\n    const GitProxy = Symbol('GitProxy');\n    bind(GitProxy).toDynamicValue(ctx => new Proxy(ctx.container.get(DugiteGit), {}));\n    bindBackendService(GitPath, GitProxy);\n});\n\nexport function bindRepositoryWatcher(bind: interfaces.Bind): void {\n    bind(DugiteGitWatcherServer).toSelf();\n    bind(GitWatcherServer).toService(DugiteGitWatcherServer);\n}\n\nexport function bindPrompt(bind: interfaces.Bind): void {\n    bind(DugiteGitPromptServer).toSelf().inSingletonScope();\n    bind(GitPromptServer).toDynamicValue(context => context.container.get(DugiteGitPromptServer));\n}\n\nexport default new ContainerModule(bind => {\n    bindGit(bind);\n\n    bindRepositoryWatcher(bind);\n    bind(ConnectionHandler).toDynamicValue(context =>\n        new RpcConnectionHandler<GitWatcherClient>(GitWatcherPath, client => {\n            const server = context.container.get<GitWatcherServer>(GitWatcherServer);\n            server.setClient(client);\n            client.onDidCloseConnection(() => server.dispose());\n            return server;\n        })\n    ).inSingletonScope();\n\n    bindPrompt(bind);\n    bind(ConnectionHandler).toDynamicValue(context =>\n        new RpcConnectionHandler<GitPromptClient>(GitPrompt.WS_PATH, client => {\n            const server = context.container.get<GitPromptServer>(GitPromptServer);\n            server.setClient(client);\n            client.onDidCloseConnection(() => server.dispose());\n            return server;\n        })\n    ).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Disposable, MaybePromise } from '@theia/core/';\nimport { IGitExecutionOptions } from 'dugite-extra/lib/core/git';\n\n/**\n * Provides an execution function that will be used to perform the Git commands.\n * This is the default, `NOOP`, provider and always resoles to `undefined`.\n *\n * If you would like to use, for instance, Git over SSH, you could rebind this default provider and have something like this:\n * ```typescript\n * @injectable()\n * export class GitSshExecProvider extends GitExecProvider {\n *\n *     // eslint-disable-next-line @typescript-eslint/no-explicit-any\n *     protected deferred = new Deferred<any>();\n *\n *     @postConstruct()\n *     protected init(): void {\n *         this.doInit();\n *     }\n *\n *     protected async doInit(): Promise<void> {\n *         const connection = await new SSH().connect({\n *             host: 'your-host',\n *             username: 'your-username',\n *             password: 'your-password'\n *         });\n *         const { stdout } = await connection.execCommand('which git');\n *         process.env.LOCAL_GIT_PATH = stdout.trim();\n *         this.deferred.resolve(connection);\n *     }\n *\n *     async exec(): Promise<IGitExecutionOptions.ExecFunc> {\n *         const connection = await this.deferred.promise;\n *         const gitPath = process.env.LOCAL_GIT_PATH;\n *         if (!gitPath) {\n *             throw new Error(\"The 'LOCAL_GIT_PATH' must be set.\");\n *         }\n *         return async (\n *             args: string[],\n *             options: { cwd: string, stdin?: string },\n *             callback: (error: Error | null, stdout: string, stderr: string) => void) => {\n *\n *             const command = `${gitPath} ${args.join(' ')}`;\n *             const { stdout, stderr, code } = await connection.execCommand(command, options);\n *             // eslint-disable-next-line no-null/no-null\n *             let error: Error | null = null;\n *             if (code) {\n *                 error = new Error(stderr || `Unknown error when executing the Git command. ${args}.`);\n *                 // eslint-disable-next-line @typescript-eslint/no-explicit-any\n *                 (error as any).code = code;\n *             }\n *             callback(error, stdout, stderr);\n *         };\n *     }\n *\n *     dispose(): void {\n *         super.dispose();\n *         // Dispose your connection.\n *         this.deferred.promise.then(connection => {\n *             if (connection && 'dispose' in connection && typeof connection.dispose === 'function') {\n *                 connection.dispose();\n *             }\n *         });\n *     }\n *\n * }\n * ```\n */\n@injectable()\nexport class GitExecProvider implements Disposable {\n\n    /**\n     * Provides a function that will be used to execute the Git commands. If resolves to `undefined`, then\n     * the embedded Git executable will be used from [dugite](https://github.com/desktop/dugite).\n     */\n    exec(): MaybePromise<IGitExecutionOptions.ExecFunc | undefined> {\n        return undefined;\n    }\n\n    dispose(): void {\n        // NOOP\n    }\n\n}\n\nexport { IGitExecutionOptions };\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as paths from 'path';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { RpcProxyFactory, DisposableCollection } from '@theia/core';\nimport { IPCConnectionProvider } from '@theia/core/lib/node';\nimport { GitLocator, GitLocateOptions } from './git-locator-protocol';\n\n@injectable()\nexport class GitLocatorClient implements GitLocator {\n\n    protected readonly toDispose = new DisposableCollection();\n\n    @inject(IPCConnectionProvider)\n    protected readonly ipcConnectionProvider: IPCConnectionProvider;\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    locate(path: string, options: GitLocateOptions): Promise<string[]> {\n        return new Promise((resolve, reject) => {\n            const toStop = this.ipcConnectionProvider.listen({\n                serverName: 'git-locator',\n                entryPoint: paths.join(__dirname, 'git-locator-host'),\n            }, async connection => {\n                const proxyFactory = new RpcProxyFactory<GitLocator>();\n                const remote = proxyFactory.createProxy();\n                proxyFactory.listen(connection);\n                try {\n                    resolve(await remote.locate(path, options));\n                } catch (e) {\n                    reject(e);\n                } finally {\n                    toStop.dispose();\n                }\n            });\n            this.toDispose.push(toStop);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { GitLocator, GitLocateOptions } from './git-locator-protocol';\n\nexport type FindGitRepositories = (path: string, progressCb: (repos: string[]) => void) => Promise<string[]>;\nconst findGitRepositories: FindGitRepositories = require('find-git-repositories');\n\nexport interface GitLocateContext {\n    maxCount: number\n    readonly visited: Map<string, boolean>\n}\n\nexport class GitLocatorImpl implements GitLocator {\n\n    protected readonly options: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        info: (message: string, ...args: any[]) => void\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        error: (message: string, ...args: any[]) => void\n    };\n\n    constructor(options?: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        info?: (message: string, ...args: any[]) => void\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        error?: (message: string, ...args: any[]) => void\n    }) {\n        this.options = {\n            info: (message, ...args) => console.info(message, ...args),\n            error: (message, ...args) => console.error(message, ...args),\n            ...options\n        };\n    }\n\n    dispose(): void {\n    }\n\n    async locate(basePath: string, options: GitLocateOptions): Promise<string[]> {\n        return this.doLocate(basePath, {\n            maxCount: typeof options.maxCount === 'number' ? options.maxCount : -1,\n            visited: new Map<string, boolean>()\n        });\n    }\n\n    protected async doLocate(basePath: string, context: GitLocateContext): Promise<string[]> {\n        const realBasePath = await fs.realpath(basePath);\n        if (context.visited.has(realBasePath)) {\n            return [];\n        }\n        context.visited.set(realBasePath, true);\n        try {\n            const stat = await fs.stat(realBasePath);\n            if (!stat.isDirectory()) {\n                return [];\n            }\n            const progress: string[] = [];\n            const paths = await findGitRepositories(realBasePath, repositories => {\n                progress.push(...repositories);\n                if (context.maxCount >= 0 && progress.length >= context.maxCount) {\n                    return progress.slice(0, context.maxCount).map(GitLocatorImpl.map);\n                }\n            });\n            if (context.maxCount >= 0 && paths.length >= context.maxCount) {\n                return await Promise.all(paths.slice(0, context.maxCount).map(GitLocatorImpl.map));\n            }\n            const repositoryPaths = await Promise.all(paths.map(GitLocatorImpl.map));\n            return this.locateFrom(\n                newContext => this.generateNested(repositoryPaths, newContext),\n                context,\n                repositoryPaths\n            );\n        } catch (e) {\n            return [];\n        }\n    }\n\n    protected * generateNested(repositoryPaths: string[], context: GitLocateContext): IterableIterator<Promise<string[]>> {\n        for (const repository of repositoryPaths) {\n            yield this.locateNested(repository, context);\n        }\n    }\n    protected locateNested(repositoryPath: string, context: GitLocateContext): Promise<string[]> {\n        return new Promise<string[]>(resolve => {\n            fs.readdir(repositoryPath, async (err, files) => {\n                if (err) {\n                    this.options.error(err.message, err);\n                    resolve([]);\n                } else {\n                    resolve(this.locateFrom(\n                        newContext => this.generateRepositories(repositoryPath, files, newContext),\n                        context\n                    ));\n                }\n            });\n        });\n    }\n\n    protected * generateRepositories(repositoryPath: string, files: string[], context: GitLocateContext): IterableIterator<Promise<string[]>> {\n        for (const file of files) {\n            if (file !== '.git') {\n                yield this.doLocate(path.join(repositoryPath, file), {\n                    ...context\n                });\n            }\n        }\n    }\n\n    protected async locateFrom(\n        generator: (context: GitLocateContext) => IterableIterator<Promise<string[]>>, parentContext: GitLocateContext, initial?: string[]\n    ): Promise<string[]> {\n        const result: string[] = [];\n        if (initial) {\n            result.push(...initial);\n        }\n        const context = {\n            ...parentContext,\n            maxCount: parentContext.maxCount - result.length\n        };\n        for (const locateRepositories of generator(context)) {\n            const repositories = await locateRepositories;\n            result.push(...repositories);\n            if (context.maxCount >= 0) {\n                if (result.length >= context.maxCount) {\n                    return result.slice(0, context.maxCount);\n                }\n                context.maxCount -= repositories.length;\n            }\n        }\n        return result;\n    }\n\n    static async map(repository: string): Promise<string> {\n        return fs.realpath(path.dirname(repository));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable } from '@theia/core';\n\nexport interface GitLocateOptions {\n    readonly maxCount?: number;\n}\n\nexport const GitLocator = Symbol('GitLocator');\nexport interface GitLocator extends Disposable {\n\n    /**\n     * Resolves to the repository paths under the given absolute path.\n     */\n    locate(path: string, options: GitLocateOptions): Promise<string[]>;\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ReferenceCollection, Reference } from '@theia/core';\nimport { Repository } from '../common';\nimport { GitRepositoryWatcher, GitRepositoryWatcherFactory } from './git-repository-watcher';\n\n@injectable()\nexport class GitRepositoryManager {\n\n    @inject(GitRepositoryWatcherFactory)\n    protected readonly watcherFactory: GitRepositoryWatcherFactory;\n    protected readonly watchers = new ReferenceCollection<Repository, GitRepositoryWatcher>(\n        repository => this.watcherFactory({ repository })\n    );\n\n    run<T>(repository: Repository, op: () => Promise<T>): Promise<T> {\n        const result = op();\n        result.then(() => this.sync(repository).catch(e => console.log(e)));\n\n        return result;\n    }\n\n    getWatcher(repository: Repository): Promise<Reference<GitRepositoryWatcher>> {\n        return this.watchers.acquire(repository);\n    }\n\n    protected async sync(repository: Repository): Promise<void> {\n        const reference = await this.getWatcher(repository);\n        const watcher = reference.object;\n        // dispose the reference once the next sync cycle is actually completed\n        watcher.sync().then(() => reference.dispose());\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Disposable, Event, Emitter, ILogger } from '@theia/core';\nimport { Git, Repository, WorkingDirectoryStatus, GitUtils } from '../common';\nimport { GitStatusChangeEvent } from '../common/git-watcher';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\nexport const GitRepositoryWatcherFactory = Symbol('GitRepositoryWatcherFactory');\nexport type GitRepositoryWatcherFactory = (options: GitRepositoryWatcherOptions) => GitRepositoryWatcher;\n\n@injectable()\nexport class GitRepositoryWatcherOptions {\n    readonly repository: Repository;\n}\n\n@injectable()\nexport class GitRepositoryWatcher implements Disposable {\n\n    protected readonly onGitStatusChangedEmitter = new Emitter<GitStatusChangeEvent>();\n    readonly onGitStatusChanged: Event<GitStatusChangeEvent> = this.onGitStatusChangedEmitter.event;\n\n    @inject(Git)\n    protected readonly git: Git;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(GitRepositoryWatcherOptions)\n    protected readonly options: GitRepositoryWatcherOptions;\n\n    @postConstruct()\n    protected init(): void {\n        this.spinTheLoop();\n    }\n\n    watch(): void {\n        if (this.watching) {\n            console.debug('Repository watcher is already active.');\n            return;\n        }\n        this.watching = true;\n        this.sync();\n    }\n\n    protected syncWorkPromises: Deferred<void>[] = [];\n    sync(): Promise<void> {\n        if (this.idle) {\n            if (this.interruptIdle) {\n                this.interruptIdle();\n            }\n        } else {\n            this.skipNextIdle = true;\n        }\n        const result = new Deferred<void>();\n        this.syncWorkPromises.push(result);\n        return result.promise;\n    }\n\n    protected disposed = false;\n    dispose(): void {\n        if (!this.disposed) {\n            this.disposed = true;\n            if (this.idle) {\n                if (this.interruptIdle) {\n                    this.interruptIdle();\n                }\n            }\n        }\n    }\n\n    protected watching = false;\n    protected idle = true;\n    protected interruptIdle: (() => void) | undefined;\n    protected skipNextIdle = false;\n    protected async spinTheLoop(): Promise<void> {\n        while (!this.disposed) {\n\n            // idle\n            if (this.skipNextIdle) {\n                this.skipNextIdle = false;\n            } else {\n                const idleTimeout = this.watching ? 5000 : /* super long */ 1000 * 60 * 60 * 24;\n                await new Promise<void>(resolve => {\n                    const id = setTimeout(resolve, idleTimeout);\n                    this.interruptIdle = () => { clearTimeout(id); resolve(); };\n                }).then(() => {\n                    this.interruptIdle = undefined;\n                });\n            }\n\n            // work\n            await this.syncStatus();\n            this.syncWorkPromises.splice(0, this.syncWorkPromises.length).forEach(d => d.resolve());\n        }\n    }\n\n    protected status: WorkingDirectoryStatus | undefined;\n    protected async syncStatus(): Promise<void> {\n        try {\n            const source = this.options.repository;\n            const oldStatus = this.status;\n            const newStatus = await this.git.status(source);\n            if (!WorkingDirectoryStatus.equals(newStatus, oldStatus)) {\n                this.status = newStatus;\n                this.onGitStatusChangedEmitter.fire({ source, status: newStatus, oldStatus });\n            }\n        } catch (error) {\n            if (!GitUtils.isRepositoryDoesNotExistError(error)) {\n                const { localUri } = this.options.repository;\n                this.logger.error('Error occurred while synchronizing the status of the repository.', localUri, error);\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport findGit from 'find-git-exec';\nimport { dirname } from 'path';\nimport { pathExists } from '@theia/core/shared/fs-extra';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { MessageService } from '@theia/core';\n\n/**\n * Initializer hook for Git.\n */\nexport const GitInit = Symbol('GitInit');\nexport interface GitInit extends Disposable {\n\n    /**\n     * Called before `Git` is ready to be used in Theia. Git operations cannot be executed before the returning promise is not resolved or rejected.\n     */\n    init(): Promise<void>;\n\n}\n\n/**\n * The default initializer. It is used in the browser.\n *\n * Configures the Git extension to use the Git executable from the `PATH`.\n */\n@injectable()\nexport class DefaultGitInit implements GitInit {\n\n    protected readonly toDispose = new DisposableCollection();\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(MessageService)\n    protected readonly messages: MessageService;\n\n    async init(): Promise<void> {\n        const { env } = process;\n        try {\n            const { execPath, path, version } = await findGit();\n            if (!!execPath && !!path && !!version) {\n                // https://github.com/desktop/dugite/issues/111#issuecomment-323222834\n                // Instead of the executable path, we need the root directory of Git.\n                const dir = dirname(dirname(path));\n                const [execPathOk, pathOk, dirOk] = await Promise.all([pathExists(execPath), pathExists(path), pathExists(dir)]);\n                if (execPathOk && pathOk && dirOk) {\n                    if (typeof env.LOCAL_GIT_DIRECTORY !== 'undefined' && env.LOCAL_GIT_DIRECTORY !== dir) {\n                        this.logger.error(`Misconfigured env.LOCAL_GIT_DIRECTORY: ${env.LOCAL_GIT_DIRECTORY}. dir was: ${dir}`);\n                        this.messages.error('The LOCAL_GIT_DIRECTORY env variable was already set to a different value.', { timeout: 0 });\n                        return;\n                    }\n                    if (typeof env.GIT_EXEC_PATH !== 'undefined' && env.GIT_EXEC_PATH !== execPath) {\n                        this.logger.error(`Misconfigured env.GIT_EXEC_PATH: ${env.GIT_EXEC_PATH}. execPath was: ${execPath}`);\n                        this.messages.error('The GIT_EXEC_PATH env variable was already set to a different value.', { timeout: 0 });\n                        return;\n                    }\n                    process.env.LOCAL_GIT_DIRECTORY = dir;\n                    process.env.GIT_EXEC_PATH = execPath;\n                    this.logger.info(`Using Git [${version}] from the PATH. (${path})`);\n                    return;\n                }\n            }\n            this.messages.error('Could not find Git on the PATH.', { timeout: 0 });\n        } catch (err) {\n            this.logger.error(err);\n            this.messages.error('An unexpected error occurred when locating the Git executable.', { timeout: 0 });\n        }\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './measurement-notification-service';\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MeasurementResult } from '@theia/core';\n\nexport const measurementNotificationServicePath = '/services/measurement-notification';\n\nexport const MeasurementNotificationService = Symbol('MeasurementNotificationService');\nexport interface MeasurementNotificationService {\n    /**\n     * Notify the backend when a fronted stopwatch provides a new measurement.\n     * @param frontendId The unique id associated with the frontend that sends the notification\n     * @param result The new measurement result\n     */\n    onFrontendMeasurement(frontendId: string, result: MeasurementResult): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MetricsContribution } from './metrics-contribution';\nimport { ApplicationPackage } from '@theia/core/shared/@theia/application-package';\nimport { PROMETHEUS_REGEXP, toPrometheusValidName } from './prometheus';\n\nconst metricsName = 'theia_extension_version';\n\n@injectable()\nexport class ExtensionMetricsContribution implements MetricsContribution {\n    private metrics: string = '';\n\n    @inject(ApplicationPackage)\n    protected readonly applicationPackage: ApplicationPackage;\n\n    getMetrics(): string {\n        return this.metrics;\n    }\n\n    startCollecting(): void {\n        let latestMetrics = '';\n        const installedExtensions = this.applicationPackage.extensionPackages;\n        latestMetrics += `# HELP ${metricsName} Theia extension version info.\\n`;\n        latestMetrics += `# TYPE ${metricsName} gauge\\n`;\n        installedExtensions.forEach(extensionInfo => {\n            let extensionName = extensionInfo.name;\n            if (!PROMETHEUS_REGEXP.test(extensionName)) {\n                extensionName = toPrometheusValidName(extensionName);\n            }\n\n            const metricsValue = metricsName + `{extension=\"${extensionName}\",version=\"${extensionInfo.version}\"} 1`;\n            latestMetrics += metricsValue + '\\n';\n        });\n\n        this.metrics = latestMetrics;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable, } from '@theia/core/shared/inversify';\nimport { MetricsContribution } from './metrics-contribution';\nimport { LogLevel, MeasurementResult, Stopwatch } from '@theia/core';\nimport { MeasurementNotificationService } from '../common';\nimport { LogLevelCliContribution } from '@theia/core/lib/node/logger-cli-contribution';\n\nconst backendId = 'backend';\nconst metricsName = 'theia_measurements';\n\n@injectable()\nexport class MeasurementMetricsBackendContribution implements MetricsContribution, MeasurementNotificationService {\n    @inject(Stopwatch)\n    protected backendStopwatch: Stopwatch;\n\n    @inject(LogLevelCliContribution)\n    protected logLevelCli: LogLevelCliContribution;\n\n    protected metrics = '';\n    protected frontendCounters = new Map<string, string>();\n\n    startCollecting(): void {\n        if (this.logLevelCli.defaultLogLevel !== LogLevel.DEBUG) {\n            return;\n        }\n        this.metrics += `# HELP ${metricsName} Theia stopwatch measurement results.\\n`;\n        this.metrics += `# TYPE ${metricsName} gauge\\n`;\n        this.backendStopwatch.storedMeasurements.forEach(result => this.onBackendMeasurement(result));\n        this.backendStopwatch.onDidAddMeasurementResult(result => this.onBackendMeasurement(result));\n    }\n\n    getMetrics(): string {\n        return this.metrics;\n    }\n\n    protected appendMetricsValue(id: string, result: MeasurementResult): void {\n        const { name, elapsed, startTime, owner } = result;\n        const labels: string = `id=\"${id}\", name=\"${name}\", startTime=\"${startTime}\", owner=\"${owner}\"`;\n        const metricsValue = `${metricsName}{${labels}} ${elapsed}`;\n        this.metrics += (metricsValue + '\\n');\n    }\n\n    protected onBackendMeasurement(result: MeasurementResult): void {\n        this.appendMetricsValue(backendId, result);\n    }\n\n    protected createFrontendCounterId(frontendId: string): string {\n        const counterId = `frontend-${this.frontendCounters.size + 1}`;\n        this.frontendCounters.set(frontendId, counterId);\n        return counterId;\n    }\n\n    protected toCounterId(frontendId: string): string {\n        return this.frontendCounters.get(frontendId) ?? this.createFrontendCounterId(frontendId);\n    }\n\n    onFrontendMeasurement(frontendId: string, result: MeasurementResult): void {\n        this.appendMetricsValue(this.toCounterId(frontendId), result);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as express from '@theia/core/shared/express';\nimport { ContributionProvider } from '@theia/core/lib/common';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { MetricsContribution } from './metrics-contribution';\n\n@injectable()\nexport class MetricsBackendApplicationContribution implements BackendApplicationContribution {\n    constructor(\n        @inject(ContributionProvider) @named(MetricsContribution)\n        protected readonly metricsProviders: ContributionProvider<MetricsContribution>\n    ) {\n    }\n\n    configure(app: express.Application): void {\n        app.get('/metrics', (req, res) => {\n            const lastMetrics = this.fetchMetricsFromProviders();\n            res.send(lastMetrics);\n        });\n    }\n\n    onStart(server: http.Server | https.Server): void {\n        this.metricsProviders.getContributions().forEach(contribution => {\n            contribution.startCollecting();\n        });\n    }\n\n    fetchMetricsFromProviders(): string {\n        return this.metricsProviders.getContributions().reduce((total, contribution) =>\n            total += contribution.getMetrics() + '\\n', '');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { ConnectionHandler, RpcConnectionHandler, bindContributionProvider } from '@theia/core/lib/common';\nimport { MetricsContribution } from './metrics-contribution';\nimport { NodeMetricsContribution } from './node-metrics-contribution';\nimport { ExtensionMetricsContribution } from './extensions-metrics-contribution';\nimport { MetricsBackendApplicationContribution } from './metrics-backend-application-contribution';\nimport { measurementNotificationServicePath } from '../common';\nimport { MeasurementMetricsBackendContribution } from './measurement-metrics-contribution';\n\nexport default new ContainerModule(bind => {\n    bindContributionProvider(bind, MetricsContribution);\n    bind(MetricsContribution).to(NodeMetricsContribution).inSingletonScope();\n    bind(MetricsContribution).to(ExtensionMetricsContribution).inSingletonScope();\n\n    bind(MeasurementMetricsBackendContribution).toSelf().inSingletonScope();\n    bind(MetricsContribution).toService(MeasurementMetricsBackendContribution);\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(measurementNotificationServicePath,\n            () => ctx.container.get(MeasurementMetricsBackendContribution)));\n\n    bind(BackendApplicationContribution).to(MetricsBackendApplicationContribution).inSingletonScope();\n\n});\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nexport const MetricsContribution = Symbol('MetricsContribution');\nexport interface MetricsContribution {\n    startCollecting(): void;\n    getMetrics(): string;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as prom from 'prom-client';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MetricsContribution } from './metrics-contribution';\n\n@injectable()\nexport class NodeMetricsContribution implements MetricsContribution {\n    getMetrics(): string {\n        return prom.register.metrics().toString();\n    }\n\n    startCollecting(): void {\n        const collectDefaultMetrics = prom.collectDefaultMetrics;\n\n        // Probe every 5th second.\n        collectDefaultMetrics({ timeout: 5000 });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport function toPrometheusValidName(name: string): string {\n    /* Make sure that start of name is valid and respect [a-zA-Z_:] */\n    const validFirstCharString = name.replace(/(^[^a-zA-Z_:]+)/gi, '');\n    /* Make sure that rest of the name respect [a-zA-Z0-9_:]* */\n    const validPrometheusName = validFirstCharString.replace(/([^a-zA-Z0-9_:])/gi, '_');\n    return validPrometheusName;\n}\n\nexport const PROMETHEUS_REGEXP = /^[a-zA-Z_:][a-zA-Z0-9_:]*/;\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * The mini-browser can now serve content on its own host/origin.\n *\n * The virtual host can be configured with this `THEIA_MINI_BROWSER_HOST_PATTERN`\n * environment variable. `{{hostname}}` represents the current host, and `{{uuid}}`\n * will be replace by a random uuid value.\n */\nexport namespace MiniBrowserEndpoint {\n    export const PATH = '/mini-browser';\n    export const HOST_PATTERN_ENV = 'THEIA_MINI_BROWSER_HOST_PATTERN';\n    export const HOST_PATTERN_DEFAULT = '{{uuid}}.mini-browser.{{hostname}}';\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const MiniBrowserServicePath = '/services/mini-browser-service';\nexport const MiniBrowserService = Symbol('MiniBrowserService');\nexport interface MiniBrowserService {\n\n    /**\n     * Resolves to an array of file extensions - priority pairs supported by the `Mini Browser`.\n     *\n     * The file extensions start without the leading dot (`.`) and should be treated in a case-insensitive way. This means,\n     * if the `Mini Browser` supports `['jpg']`, then it can open the `MyPicture.JPG` file.\n     */\n    supportedFileExtensions(): Promise<Readonly<{ extension: string, priority: number }>[]>;\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { ConnectionHandler, RpcConnectionHandler } from '@theia/core/lib/common';\nimport { MiniBrowserService, MiniBrowserServicePath } from '../common/mini-browser-service';\nimport { MiniBrowserEndpoint, MiniBrowserEndpointHandler, HtmlHandler, ImageHandler, PdfHandler, SvgHandler } from './mini-browser-endpoint';\nimport { WsRequestValidatorContribution } from '@theia/core/lib/node/ws-request-validators';\nimport { MiniBrowserWsRequestValidator } from './mini-browser-ws-validator';\nimport { MiniBrowserBackendSecurityWarnings } from './mini-browser-backend-security-warnings';\n\nexport default new ContainerModule(bind => {\n    bind(MiniBrowserEndpoint).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(MiniBrowserEndpoint);\n    bind(MiniBrowserWsRequestValidator).toSelf().inSingletonScope();\n    bind(WsRequestValidatorContribution).toService(MiniBrowserWsRequestValidator);\n    bind(MiniBrowserService).toService(MiniBrowserEndpoint);\n    bind(ConnectionHandler).toDynamicValue(context => new RpcConnectionHandler(MiniBrowserServicePath, () => context.container.get(MiniBrowserService))).inSingletonScope();\n    bindContributionProvider(bind, MiniBrowserEndpointHandler);\n    bind(MiniBrowserEndpointHandler).to(HtmlHandler).inSingletonScope();\n    bind(MiniBrowserEndpointHandler).to(ImageHandler).inSingletonScope();\n    bind(MiniBrowserEndpointHandler).to(PdfHandler).inSingletonScope();\n    bind(MiniBrowserEndpointHandler).to(SvgHandler).inSingletonScope();\n    bind(MiniBrowserBackendSecurityWarnings).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(MiniBrowserBackendSecurityWarnings);\n});\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { BackendApplicationConfigProvider } from '@theia/core/lib/node/backend-application-config-provider';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MiniBrowserEndpoint } from '../common/mini-browser-endpoint';\n\n@injectable()\nexport class MiniBrowserBackendSecurityWarnings implements BackendApplicationContribution {\n\n    initialize(): void {\n        this.checkHostPattern();\n    }\n\n    protected async checkHostPattern(): Promise<void> {\n        if (BackendApplicationConfigProvider.get()['warnOnPotentiallyInsecureHostPattern'] === false) {\n            return;\n        }\n        const envHostPattern = process.env[MiniBrowserEndpoint.HOST_PATTERN_ENV];\n        if (envHostPattern && envHostPattern !== MiniBrowserEndpoint.HOST_PATTERN_DEFAULT) {\n            console.warn(`\\\nMINI BROWSER SECURITY WARNING\n\n    Changing the @theia/mini-browser host pattern can lead to security vulnerabilities.\n        Current pattern: \"${envHostPattern}\"\n    Please read @theia/mini-browser/README.md for more information.\n`\n            );\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nconst vhost = require('vhost');\nimport express = require('@theia/core/shared/express');\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { lookup } from 'mime-types';\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { Application, Request, Response } from '@theia/core/shared/express';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { MiniBrowserService } from '../common/mini-browser-service';\nimport { MiniBrowserEndpoint as MiniBrowserEndpointNS } from '../common/mini-browser-endpoint';\n\n/**\n * The return type of the `FileSystem#resolveContent` method.\n */\nexport interface FileStatWithContent {\n\n    /**\n     * The file stat.\n     */\n    readonly stat: fs.Stats & { uri: string };\n\n    /**\n     * The content of the file as a UTF-8 encoded string.\n     */\n    readonly content: string;\n\n}\n\n/**\n * Endpoint handler contribution for the `MiniBrowserEndpoint`.\n */\nexport const MiniBrowserEndpointHandler = Symbol('MiniBrowserEndpointHandler');\nexport interface MiniBrowserEndpointHandler {\n\n    /**\n     * Returns with or resolves to the file extensions supported by the current `mini-browser` endpoint handler.\n     * The file extension must not start with the leading `.` (dot). For instance; `'html'` or `['jpg', 'jpeg']`.\n     * The file extensions are case insensitive.\n     */\n    supportedExtensions(): MaybePromise<string | string[]>;\n\n    /**\n     * Returns a number representing the priority between all the available handlers for the same file extension.\n     */\n    priority(): number;\n\n    /**\n     * Responds back to the sender.\n     */\n    respond(statWithContent: FileStatWithContent, response: Response): MaybePromise<Response>;\n\n}\n\n@injectable()\nexport class MiniBrowserEndpoint implements BackendApplicationContribution, MiniBrowserService {\n\n    private attachRequestHandlerPromise: Promise<void>;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(ContributionProvider)\n    @named(MiniBrowserEndpointHandler)\n    protected readonly contributions: ContributionProvider<MiniBrowserEndpointHandler>;\n\n    protected readonly handlers: Map<string, MiniBrowserEndpointHandler> = new Map();\n\n    configure(app: Application): void {\n        this.attachRequestHandlerPromise = this.attachRequestHandler(app);\n    }\n\n    async onStart(): Promise<void> {\n        await Promise.all(Array.from(this.getContributions(), async handler => {\n            const extensions = await handler.supportedExtensions();\n            for (const extension of (Array.isArray(extensions) ? extensions : [extensions]).map(e => e.toLocaleLowerCase())) {\n                const existingHandler = this.handlers.get(extension);\n                if (!existingHandler || handler.priority > existingHandler.priority) {\n                    this.handlers.set(extension, handler);\n                }\n            }\n        }));\n        await this.attachRequestHandlerPromise;\n    }\n\n    async supportedFileExtensions(): Promise<Readonly<{ extension: string, priority: number }>[]> {\n        return Array.from(this.handlers.entries(), ([extension, handler]) => ({ extension, priority: handler.priority() }));\n    }\n\n    protected async attachRequestHandler(app: Application): Promise<void> {\n        const miniBrowserApp = express();\n        miniBrowserApp.get('*', async (request, response) => this.response(await this.getUri(request), response));\n        app.use(MiniBrowserEndpointNS.PATH, vhost(await this.getVirtualHostRegExp(), miniBrowserApp));\n    }\n\n    protected async response(uri: string, response: Response): Promise<Response> {\n        const exists = await fs.pathExists(FileUri.fsPath(uri));\n        if (!exists) {\n            return this.missingResourceHandler()(uri, response);\n        }\n        const statWithContent = await this.readContent(uri);\n        try {\n            if (!statWithContent.stat.isDirectory()) {\n                const extension = uri.split('.').pop();\n                if (!extension) {\n                    return this.defaultHandler()(statWithContent, response);\n                }\n                const handler = this.handlers.get(extension.toString().toLocaleLowerCase());\n                if (!handler) {\n                    return this.defaultHandler()(statWithContent, response);\n                }\n                return handler.respond(statWithContent, response);\n            }\n        } catch (e) {\n            return this.errorHandler()(e, uri, response);\n        }\n        return this.defaultHandler()(statWithContent, response);\n    }\n\n    protected getContributions(): MiniBrowserEndpointHandler[] {\n        return this.contributions.getContributions();\n    }\n\n    protected getUri(request: Request): MaybePromise<string> {\n        return FileUri.create(request.path).toString(true);\n    }\n\n    protected async readContent(uri: string): Promise<FileStatWithContent> {\n        const fsPath = FileUri.fsPath(uri);\n        const [stat, content] = await Promise.all([fs.stat(fsPath), fs.readFile(fsPath, 'utf8')]);\n        return { stat: Object.assign(stat, { uri }), content };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected errorHandler(): (error: any, uri: string, response: Response) => MaybePromise<Response> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return async (error: any, uri: string, response: Response) => {\n            const details = error.toString ? error.toString() : error;\n            this.logger.error(`Error occurred while handling request for ${uri}. Details: ${details}`);\n            if (error instanceof Error) {\n                let message = error.message;\n                if (error.stack) {\n                    message += `\\n${error.stack}`;\n                }\n                this.logger.error(message);\n            } else if (typeof error === 'string') {\n                this.logger.error(error);\n            } else {\n                this.logger.error(`${error}`);\n            }\n            return response.send(500);\n        };\n    }\n\n    protected missingResourceHandler(): (uri: string, response: Response) => MaybePromise<Response> {\n        return async (uri: string, response: Response) => {\n            this.logger.error(`Cannot handle missing resource. URI: ${uri}.`);\n            return response.sendStatus(404);\n        };\n    }\n\n    protected defaultHandler(): (statWithContent: FileStatWithContent, response: Response) => MaybePromise<Response> {\n        return async (statWithContent: FileStatWithContent, response: Response) => {\n            const { content } = statWithContent;\n            const mimeType = lookup(FileUri.fsPath(statWithContent.stat.uri));\n            if (!mimeType) {\n                this.logger.warn(`Cannot handle unexpected resource. URI: ${statWithContent.stat.uri}.`);\n                response.contentType('application/octet-stream');\n            } else {\n                response.contentType(mimeType);\n            }\n            return response.send(content);\n        };\n    }\n\n    protected async getVirtualHostRegExp(): Promise<RegExp> {\n        const pattern = process.env[MiniBrowserEndpointNS.HOST_PATTERN_ENV] || MiniBrowserEndpointNS.HOST_PATTERN_DEFAULT;\n        const vhostRe = pattern\n            .replace(/\\./g, '\\\\.')\n            .replace('{{uuid}}', '.+')\n            .replace('{{hostname}}', '.+');\n        return new RegExp(vhostRe, 'i');\n    }\n}\n\n// See `EditorManager#canHandle`.\nconst CODE_EDITOR_PRIORITY = 100;\n\n/**\n * Endpoint handler contribution for HTML files.\n */\n@injectable()\nexport class HtmlHandler implements MiniBrowserEndpointHandler {\n\n    supportedExtensions(): string[] {\n        return ['html', 'xhtml', 'htm'];\n    }\n\n    priority(): number {\n        // Prefer Code Editor over Mini Browser\n        // https://github.com/eclipse-theia/theia/issues/2051\n        return 1;\n    }\n\n    respond(statWithContent: FileStatWithContent, response: Response): MaybePromise<Response> {\n        response.contentType('text/html');\n        return response.send(statWithContent.content);\n    }\n\n}\n\n/**\n * Handler for JPG resources.\n */\n@injectable()\nexport class ImageHandler implements MiniBrowserEndpointHandler {\n\n    supportedExtensions(): string[] {\n        return ['jpg', 'jpeg', 'png', 'bmp', 'gif'];\n    }\n\n    priority(): number {\n        return CODE_EDITOR_PRIORITY + 1;\n    }\n\n    respond(statWithContent: FileStatWithContent, response: Response): MaybePromise<Response> {\n        fs.readFile(FileUri.fsPath(statWithContent.stat.uri), (error, data) => {\n            if (error) {\n                throw error;\n            }\n            response.contentType('image/jpeg');\n            response.send(data);\n        });\n        return response;\n    }\n\n}\n\n/**\n * PDF endpoint handler.\n */\n@injectable()\nexport class PdfHandler implements MiniBrowserEndpointHandler {\n\n    supportedExtensions(): string {\n        return 'pdf';\n    }\n\n    priority(): number {\n        return CODE_EDITOR_PRIORITY + 1;\n    }\n\n    respond(statWithContent: FileStatWithContent, response: Response): MaybePromise<Response> {\n        // https://stackoverflow.com/questions/11598274/display-pdf-in-browser-using-express-js\n        const encodeRFC5987ValueChars = (input: string) =>\n            encodeURIComponent(input).\n                // Note that although RFC3986 reserves \"!\", RFC5987 does not, so we do not need to escape it.\n                replace(/['()]/g, escape). // i.e., %27 %28 %29\n                replace(/\\*/g, '%2A').\n                // The following are not required for percent-encoding per RFC5987, so we can allow for a little better readability over the wire: |`^.\n                replace(/%(?:7C|60|5E)/g, unescape);\n\n        const fileName = FileUri.create(statWithContent.stat.uri).path.base;\n        fs.readFile(FileUri.fsPath(statWithContent.stat.uri), (error, data) => {\n            if (error) {\n                throw error;\n            }\n            // Change `inline` to `attachment` if you would like to force downloading the PDF instead of previewing in the browser.\n            response.setHeader('Content-disposition', `inline; filename*=UTF-8''${encodeRFC5987ValueChars(fileName)}`);\n            response.contentType('application/pdf');\n            response.send(data);\n        });\n        return response;\n    }\n\n}\n\n/**\n * Endpoint contribution for SVG resources.\n */\n@injectable()\nexport class SvgHandler implements MiniBrowserEndpointHandler {\n\n    supportedExtensions(): string {\n        return 'svg';\n    }\n\n    priority(): number {\n        return 1;\n    }\n\n    respond(statWithContent: FileStatWithContent, response: Response): MaybePromise<Response> {\n        response.contentType('image/svg+xml');\n        return response.send(statWithContent.content);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { WsRequestValidatorContribution } from '@theia/core/lib/node/ws-request-validators';\nimport * as http from 'http';\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as url from 'url';\nimport { MiniBrowserEndpoint } from '../common/mini-browser-endpoint';\n\n/**\n * Prevents explicit WebSocket connections from the mini-browser virtual host.\n */\n@injectable()\nexport class MiniBrowserWsRequestValidator implements WsRequestValidatorContribution {\n\n    protected miniBrowserHostRe: RegExp;\n\n    protected serveSameOrigin: boolean = false;\n\n    @postConstruct()\n    protected init(): void {\n        const pattern = process.env[MiniBrowserEndpoint.HOST_PATTERN_ENV] || MiniBrowserEndpoint.HOST_PATTERN_DEFAULT;\n        if (pattern === '{{hostname}}') {\n            this.serveSameOrigin = true;\n        }\n        const vhostRe = pattern\n            .replace(/\\./g, '\\\\.')\n            .replace('{{uuid}}', '.+')\n            .replace('{{hostname}}', '.+');\n        this.miniBrowserHostRe = new RegExp(vhostRe, 'i');\n    }\n\n    async allowWsUpgrade(request: http.IncomingMessage): Promise<boolean> {\n        if (request.headers.origin && !this.serveSameOrigin) {\n            const origin = url.parse(request.headers.origin);\n            if (origin.host && this.miniBrowserHostRe.test(origin.host)) {\n                // If the origin comes from the WebViews, refuse:\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { PluginMetadata } from '@theia/plugin-ext/lib/common/plugin-protocol';\n\nexport const pluginDevServicePath = '/services/plugin-dev';\nexport const PluginDevServer = Symbol('PluginDevServer');\nexport interface PluginDevServer extends RpcServer<PluginDevClient> {\n    getHostedPlugin(): Promise<PluginMetadata | undefined>;\n    runHostedPluginInstance(uri: string): Promise<string>;\n    runDebugHostedPluginInstance(uri: string, debugConfig: PluginDebugConfiguration): Promise<string>;\n    terminateHostedPluginInstance(): Promise<void>;\n    isHostedPluginInstanceRunning(): Promise<boolean>;\n    getHostedPluginInstanceURI(): Promise<string>;\n    getHostedPluginURI(): Promise<string>;\n\n    runWatchCompilation(uri: string): Promise<void>;\n    stopWatchCompilation(uri: string): Promise<void>;\n    isWatchCompilationRunning(uri: string): Promise<boolean>;\n\n    isPluginValid(uri: string): Promise<boolean>;\n}\n\nexport interface PluginDevClient {\n}\n\nexport interface PluginDebugConfiguration {\n    debugMode?: string;\n    pluginLocation?: string;\n    debugPort?: string;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RequestOptions, RequestService } from '@theia/core/shared/@theia/request';\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport * as cp from 'child_process';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as net from 'net';\nimport * as path from 'path';\nimport URI from '@theia/core/lib/common/uri';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { HostedPluginUriPostProcessor, HostedPluginUriPostProcessorSymbolName } from './hosted-plugin-uri-postprocessor';\nimport { environment, isWindows } from '@theia/core';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { LogType } from '@theia/plugin-ext/lib/common/types';\nimport { HostedPluginSupport } from '@theia/plugin-ext/lib/hosted/node/hosted-plugin';\nimport { MetadataScanner } from '@theia/plugin-ext/lib/hosted/node/metadata-scanner';\nimport { PluginDebugConfiguration } from '../common/plugin-dev-protocol';\nimport { HostedPluginProcess } from '@theia/plugin-ext/lib/hosted/node/hosted-plugin-process';\nimport { isENOENT } from '@theia/plugin-ext/lib/common/errors';\n\nconst DEFAULT_HOSTED_PLUGIN_PORT = 3030;\n\nexport const HostedInstanceManager = Symbol('HostedInstanceManager');\n\n/**\n * Is responsible for running and handling separate Theia instance with given plugin.\n */\nexport interface HostedInstanceManager {\n    /**\n     * Checks whether hosted instance is run.\n     */\n    isRunning(): boolean;\n\n    /**\n     * Runs specified by the given uri plugin in separate Theia instance.\n     *\n     * @param pluginUri uri to the plugin source location\n     * @param port port on which new instance of Theia should be run. Optional.\n     * @returns uri where new Theia instance is run\n     */\n    run(pluginUri: URI, port?: number): Promise<URI>;\n\n    /**\n     * Runs specified by the given uri plugin  with debug in separate Theia instance.\n     * @param pluginUri uri to the plugin source location\n     * @param debugConfig debug configuration\n     * @returns uri where new Theia instance is run\n     */\n    debug(pluginUri: URI, debugConfig: PluginDebugConfiguration): Promise<URI>;\n\n    /**\n     * Terminates hosted plugin instance.\n     * Throws error if instance is not running.\n     */\n    terminate(): void;\n\n    /**\n     * Returns uri where hosted instance is run.\n     * Throws error if instance is not running.\n     */\n    getInstanceURI(): URI;\n\n    /**\n     * Returns uri where plugin loaded into hosted instance is located.\n     * Throws error if instance is not running.\n     */\n    getPluginURI(): URI;\n\n    /**\n     * Checks whether given uri points to a valid plugin.\n     *\n     * @param uri uri to the plugin source location\n     */\n    isPluginValid(uri: URI): Promise<boolean>;\n}\n\nconst HOSTED_INSTANCE_START_TIMEOUT_MS = 30000;\nconst THEIA_INSTANCE_REGEX = /.*Theia app listening on (.*).*\\./;\nconst PROCESS_OPTIONS = {\n    cwd: process.cwd(),\n    env: { ...process.env }\n};\n\n@injectable()\nexport abstract class AbstractHostedInstanceManager implements HostedInstanceManager {\n    protected hostedInstanceProcess: cp.ChildProcess;\n    protected isPluginRunning: boolean = false;\n    protected instanceUri: URI;\n    protected pluginUri: URI;\n    protected instanceOptions: Omit<RequestOptions, 'url'>;\n\n    @inject(HostedPluginSupport)\n    protected readonly hostedPluginSupport: HostedPluginSupport;\n\n    @inject(MetadataScanner)\n    protected readonly metadata: MetadataScanner;\n\n    @inject(HostedPluginProcess)\n    protected readonly hostedPluginProcess: HostedPluginProcess;\n\n    @inject(RequestService)\n    protected readonly request: RequestService;\n\n    isRunning(): boolean {\n        return this.isPluginRunning;\n    }\n\n    async run(pluginUri: URI, port?: number): Promise<URI> {\n        return this.doRun(pluginUri, port);\n    }\n\n    async debug(pluginUri: URI, debugConfig: PluginDebugConfiguration): Promise<URI> {\n        return this.doRun(pluginUri, undefined, debugConfig);\n    }\n\n    private async doRun(pluginUri: URI, port?: number, debugConfig?: PluginDebugConfiguration): Promise<URI> {\n        if (this.isPluginRunning) {\n            this.hostedPluginSupport.sendLog({ data: 'Hosted plugin instance is already running.', type: LogType.Info });\n            throw new Error('Hosted instance is already running.');\n        }\n\n        let command: string[];\n        let processOptions: cp.SpawnOptions;\n        if (pluginUri.scheme === 'file') {\n            processOptions = { ...PROCESS_OPTIONS };\n            // get filesystem path that work cross operating systems\n            processOptions.env!.HOSTED_PLUGIN = FileUri.fsPath(pluginUri.toString());\n\n            // Disable all the other plugins on this instance\n            processOptions.env!.THEIA_PLUGINS = '';\n            command = await this.getStartCommand(port, debugConfig);\n        } else {\n            throw new Error('Not supported plugin location: ' + pluginUri.toString());\n        }\n\n        this.instanceUri = await this.postProcessInstanceUri(await this.runHostedPluginTheiaInstance(command, processOptions));\n        this.pluginUri = pluginUri;\n        // disable redirect to grab the release\n        this.instanceOptions = {\n            followRedirects: 0\n        };\n        this.instanceOptions = await this.postProcessInstanceOptions(this.instanceOptions);\n        await this.checkInstanceUriReady();\n\n        return this.instanceUri;\n    }\n\n    terminate(): void {\n        if (this.isPluginRunning && !!this.hostedInstanceProcess.pid) {\n            this.hostedPluginProcess.killProcessTree(this.hostedInstanceProcess.pid);\n            this.hostedPluginSupport.sendLog({ data: 'Hosted instance has been terminated', type: LogType.Info });\n            this.isPluginRunning = false;\n        } else {\n            throw new Error('Hosted plugin instance is not running.');\n        }\n    }\n\n    getInstanceURI(): URI {\n        if (this.isPluginRunning) {\n            return this.instanceUri;\n        }\n        throw new Error('Hosted plugin instance is not running.');\n    }\n\n    getPluginURI(): URI {\n        if (this.isPluginRunning) {\n            return this.pluginUri;\n        }\n        throw new Error('Hosted plugin instance is not running.');\n    }\n\n    /**\n     * Checks that the `instanceUri` is responding before exiting method\n     */\n    public async checkInstanceUriReady(): Promise<void> {\n        return new Promise<void>((resolve, reject) => this.pingLoop(60, resolve, reject));\n    }\n\n    /**\n     * Start a loop to ping, if ping is OK return immediately, else start a new ping after 1second. We iterate for the given amount of loops provided in remainingCount\n     * @param remainingCount the number of occurrence to check\n     * @param resolve resolve function if ok\n     * @param reject reject function if error\n     */\n    private async pingLoop(remainingCount: number,\n        resolve: (value?: void | PromiseLike<void> | undefined | Error) => void,\n        reject: (value?: void | PromiseLike<void> | undefined | Error) => void): Promise<void> {\n        const isOK = await this.ping();\n        if (isOK) {\n            resolve();\n        } else {\n            if (remainingCount > 0) {\n                setTimeout(() => this.pingLoop(--remainingCount, resolve, reject), 1000);\n            } else {\n                reject(new Error('Unable to ping the remote server'));\n            }\n        }\n    }\n\n    /**\n     * Ping the plugin URI (checking status of the head)\n     */\n    private async ping(): Promise<boolean> {\n        try {\n            const url = this.instanceUri.toString();\n            // Wait that the status is OK\n            const response = await this.request.request({ url, type: 'HEAD', ...this.instanceOptions });\n            return response.res.statusCode === 200;\n        } catch {\n            return false;\n        }\n    }\n\n    async isPluginValid(uri: URI): Promise<boolean> {\n        const pckPath = path.join(FileUri.fsPath(uri), 'package.json');\n        try {\n            const pck = await fs.readJSON(pckPath);\n            this.metadata.getScanner(pck);\n            return true;\n        } catch (err) {\n            if (!isENOENT(err)) {\n                console.error(err);\n            }\n            return false;\n        }\n    }\n\n    protected async getStartCommand(port?: number, debugConfig?: PluginDebugConfiguration): Promise<string[]> {\n\n        const processArguments = process.argv;\n        let command: string[];\n        if (environment.electron.is()) {\n            command = ['yarn', 'theia', 'start'];\n        } else {\n            command = processArguments.filter((arg, index, args) => {\n                // remove --port=X and --port X arguments if set\n                // remove --plugins arguments\n                if (arg.startsWith('--port') || args[index - 1] === '--port') {\n                    return;\n                } else {\n                    return arg;\n                }\n\n            });\n        }\n        if (process.env.HOSTED_PLUGIN_HOSTNAME) {\n            command.push('--hostname=' + process.env.HOSTED_PLUGIN_HOSTNAME);\n        }\n        if (port) {\n            await this.validatePort(port);\n            command.push('--port=' + port);\n        }\n\n        if (debugConfig) {\n            command.push(`--hosted-plugin-${debugConfig.debugMode || 'inspect'}=0.0.0.0${debugConfig.debugPort ? ':' + debugConfig.debugPort : ''}`);\n        }\n        return command;\n    }\n\n    protected async postProcessInstanceUri(uri: URI): Promise<URI> {\n        return uri;\n    }\n\n    protected async postProcessInstanceOptions(options: Omit<RequestOptions, 'url'>): Promise<Omit<RequestOptions, 'url'>> {\n        return options;\n    }\n\n    protected runHostedPluginTheiaInstance(command: string[], options: cp.SpawnOptions): Promise<URI> {\n        this.isPluginRunning = true;\n        return new Promise((resolve, reject) => {\n            let started = false;\n            const outputListener = (data: string | Buffer) => {\n                const line = data.toString();\n                const match = THEIA_INSTANCE_REGEX.exec(line);\n                if (match) {\n                    this.hostedInstanceProcess.stdout!.removeListener('data', outputListener);\n                    started = true;\n                    resolve(new URI(match[1]));\n                }\n            };\n\n            if (isWindows) {\n                // Has to be set for running on windows (electron).\n                // See also: https://github.com/nodejs/node/issues/3675\n                options.shell = true;\n            }\n\n            this.hostedInstanceProcess = cp.spawn(command.shift()!, command, options);\n            this.hostedInstanceProcess.on('error', () => { this.isPluginRunning = false; });\n            this.hostedInstanceProcess.on('exit', () => { this.isPluginRunning = false; });\n            this.hostedInstanceProcess.stdout!.addListener('data', outputListener);\n\n            this.hostedInstanceProcess.stdout!.addListener('data', data => {\n                this.hostedPluginSupport.sendLog({ data: data.toString(), type: LogType.Info });\n            });\n            this.hostedInstanceProcess.stderr!.addListener('data', data => {\n                this.hostedPluginSupport.sendLog({ data: data.toString(), type: LogType.Error });\n            });\n\n            setTimeout(() => {\n                if (!started) {\n                    this.terminate();\n                    this.isPluginRunning = false;\n                    reject(new Error('Timeout.'));\n                }\n            }, HOSTED_INSTANCE_START_TIMEOUT_MS);\n        });\n    }\n\n    protected async validatePort(port: number): Promise<void> {\n        if (port < 1 || port > 65535) {\n            throw new Error('Port value is incorrect.');\n        }\n\n        if (! await this.isPortFree(port)) {\n            throw new Error('Port ' + port + ' is already in use.');\n        }\n    }\n\n    protected isPortFree(port: number): Promise<boolean> {\n        return new Promise(resolve => {\n            const server = net.createServer();\n            server.listen(port, '0.0.0.0');\n            server.on('error', () => {\n                resolve(false);\n            });\n            server.on('listening', () => {\n                server.close();\n                resolve(true);\n            });\n        });\n    }\n\n}\n\n@injectable()\nexport class NodeHostedPluginRunner extends AbstractHostedInstanceManager {\n    @inject(ContributionProvider) @named(Symbol.for(HostedPluginUriPostProcessorSymbolName))\n    protected readonly uriPostProcessors: ContributionProvider<HostedPluginUriPostProcessor>;\n\n    protected override async postProcessInstanceUri(uri: URI): Promise<URI> {\n        for (const uriPostProcessor of this.uriPostProcessors.getContributions()) {\n            uri = await uriPostProcessor.processUri(uri);\n        }\n        return uri;\n    }\n\n    protected override async postProcessInstanceOptions(options: object): Promise<object> {\n        for (const uriPostProcessor of this.uriPostProcessors.getContributions()) {\n            options = await uriPostProcessor.processOptions(options);\n        }\n        return options;\n    }\n\n    protected override async getStartCommand(port?: number, debugConfig?: PluginDebugConfiguration): Promise<string[]> {\n        if (!port) {\n            port = process.env.HOSTED_PLUGIN_PORT ?\n                Number(process.env.HOSTED_PLUGIN_PORT) :\n                (debugConfig?.debugPort ? Number(debugConfig.debugPort) : DEFAULT_HOSTED_PLUGIN_PORT);\n        }\n        return super.getStartCommand(port, debugConfig);\n    }\n}\n\n@injectable()\nexport class ElectronNodeHostedPluginRunner extends AbstractHostedInstanceManager {\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { HostedPluginReader as PluginReaderHosted } from '@theia/plugin-ext/lib/hosted/node/plugin-reader';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { PluginMetadata } from '@theia/plugin-ext/lib/common/plugin-protocol';\nimport { PluginDeployerEntryImpl } from '@theia/plugin-ext/lib/main/node/plugin-deployer-entry-impl';\nimport { HostedPluginDeployerHandler } from '@theia/plugin-ext/lib/hosted/node/hosted-plugin-deployer-handler';\n\n@injectable()\nexport class HostedPluginReader implements BackendApplicationContribution {\n\n    @inject(PluginReaderHosted)\n    protected pluginReader: PluginReaderHosted;\n\n    private readonly hostedPlugin = new Deferred<PluginMetadata | undefined>();\n\n    @inject(HostedPluginDeployerHandler)\n    protected deployerHandler: HostedPluginDeployerHandler;\n\n    async initialize(): Promise<void> {\n        this.pluginReader.getPluginMetadata(process.env.HOSTED_PLUGIN)\n            .then(this.hostedPlugin.resolve.bind(this.hostedPlugin));\n\n        const pluginPath = process.env.HOSTED_PLUGIN;\n        if (pluginPath) {\n            const hostedPlugin = new PluginDeployerEntryImpl('Hosted Plugin', pluginPath!, pluginPath);\n            hostedPlugin.storeValue('isUnderDevelopment', true);\n            const hostedMetadata = await this.hostedPlugin.promise;\n            if (hostedMetadata!.model.entryPoint && hostedMetadata!.model.entryPoint.backend) {\n                this.deployerHandler.deployBackendPlugins([hostedPlugin]);\n            }\n\n            if (hostedMetadata!.model.entryPoint && hostedMetadata!.model.entryPoint.frontend) {\n                this.deployerHandler.deployFrontendPlugins([hostedPlugin]);\n            }\n        }\n    }\n\n    async getPlugin(): Promise<PluginMetadata | undefined> {\n        return this.hostedPlugin.promise;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\n// We export symbol name instead of symbol itself here because we need to provide\n// a contribution point to which any extensions could contribute.\n// In case of just symbols, symbol inside an extension won't be the same as here\n// even if the extension imports this module.\n// To solve this problem we should provide global symbol. So right way to use the contribution point is:\n// ...\n// bind(Symbol.for(HostedPluginUriPostProcessorSymbolName)).to(AContribution);\n// ...\nexport const HostedPluginUriPostProcessorSymbolName = 'HostedPluginUriPostProcessor';\n\nexport interface HostedPluginUriPostProcessor {\n    processUri(uri: URI): Promise<URI>;\n    processOptions(options: object): Promise<object>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport * as cp from 'child_process';\nimport * as processTree from 'ps-tree';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { FileUri } from '@theia/core/lib/node';\nimport { HostedPluginSupport } from '@theia/plugin-ext/lib/hosted/node/hosted-plugin';\nimport { LogType } from '@theia/plugin-ext/lib/common/types';\n\nexport const HostedPluginsManager = Symbol('HostedPluginsManager');\n\nexport interface HostedPluginsManager {\n\n    /**\n     * Runs watcher script to recompile plugin on any changes along given path.\n     *\n     * @param uri uri to plugin root folder.\n     */\n    runWatchCompilation(uri: string): Promise<void>;\n\n    /**\n     * Stops watcher script.\n     *\n     * @param uri uri to plugin root folder.\n     */\n    stopWatchCompilation(uri: string): Promise<void>;\n\n    /**\n     * Checks if watcher script to recompile plugin is running.\n     *\n     * @param uri uri to plugin root folder.\n     */\n    isWatchCompilationRunning(uri: string): Promise<boolean>;\n}\n\n@injectable()\nexport class HostedPluginsManagerImpl implements HostedPluginsManager {\n\n    @inject(HostedPluginSupport)\n    protected readonly hostedPluginSupport: HostedPluginSupport;\n\n    protected watchCompilationRegistry: Map<string, cp.ChildProcess>;\n\n    constructor() {\n        this.watchCompilationRegistry = new Map();\n    }\n\n    runWatchCompilation(uri: string): Promise<void> {\n        const pluginRootPath = FileUri.fsPath(uri);\n\n        if (this.watchCompilationRegistry.has(pluginRootPath)) {\n            throw new Error('Watcher is already running in ' + pluginRootPath);\n        }\n\n        if (!this.checkWatchScript(pluginRootPath)) {\n            this.hostedPluginSupport.sendLog({\n                data: 'Plugin in ' + uri + ' doesn\\'t have watch script',\n                type: LogType.Error\n            });\n            throw new Error('Watch script doesn\\'t exist in ' + pluginRootPath + 'package.json');\n        }\n\n        return this.runWatchScript(pluginRootPath);\n    }\n\n    private killProcessTree(parentPid: number): void {\n        processTree(parentPid, (err: Error, childProcesses: Array<processTree.PS>) => {\n            childProcesses.forEach((p: processTree.PS) => {\n                process.kill(parseInt(p.PID));\n            });\n            process.kill(parentPid);\n        });\n    }\n\n    stopWatchCompilation(uri: string): Promise<void> {\n        const pluginPath = FileUri.fsPath(uri);\n\n        const watchProcess = this.watchCompilationRegistry.get(pluginPath);\n        if (!watchProcess) {\n            throw new Error('Watcher is not running in ' + pluginPath);\n        }\n\n        this.killProcessTree(watchProcess.pid!);\n        return Promise.resolve();\n    }\n\n    isWatchCompilationRunning(uri: string): Promise<boolean> {\n        const pluginPath = FileUri.fsPath(uri);\n\n        return new Promise(resolve => resolve(this.watchCompilationRegistry.has(pluginPath)));\n    }\n\n    protected runWatchScript(pluginRootPath: string): Promise<void> {\n        const watchProcess = cp.spawn('yarn', ['run', 'watch'], { cwd: pluginRootPath, shell: true });\n        watchProcess.on('exit', () => this.unregisterWatchScript(pluginRootPath));\n\n        this.watchCompilationRegistry.set(pluginRootPath, watchProcess);\n        this.hostedPluginSupport.sendLog({\n            data: 'Compilation watcher has been started in ' + pluginRootPath,\n            type: LogType.Info\n        });\n        return Promise.resolve();\n    }\n\n    protected unregisterWatchScript(pluginRootPath: string): void {\n        this.watchCompilationRegistry.delete(pluginRootPath);\n        this.hostedPluginSupport.sendLog({\n            data: 'Compilation watcher has been stopped in ' + pluginRootPath,\n            type: LogType.Info\n        });\n    }\n\n    /**\n     * Checks whether watch script is present into package.json by given parent folder.\n     *\n     * @param pluginPath path to plugin's root directory\n     */\n    protected async checkWatchScript(pluginPath: string): Promise<boolean> {\n        const pluginPackageJsonPath = path.join(pluginPath, 'package.json');\n        try {\n            const packageJson = await fs.readJSON(pluginPackageJsonPath);\n            const scripts = packageJson['scripts'];\n            if (scripts && scripts['watch']) {\n                return true;\n            }\n        } catch { }\n        return false;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { HostedInstanceManager, NodeHostedPluginRunner } from './hosted-instance-manager';\nimport { HostedPluginUriPostProcessorSymbolName } from './hosted-plugin-uri-postprocessor';\nimport { HostedPluginsManager, HostedPluginsManagerImpl } from './hosted-plugins-manager';\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { ConnectionContainerModule } from '@theia/core/lib/node/messaging/connection-container-module';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { PluginDevServerImpl } from './plugin-dev-service';\nimport { PluginDevServer, PluginDevClient, pluginDevServicePath } from '../common/plugin-dev-protocol';\nimport { HostedPluginReader } from './hosted-plugin-reader';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\n\nconst commonHostedConnectionModule = ConnectionContainerModule.create(({ bind, bindBackendService }) => {\n    bind(HostedPluginsManagerImpl).toSelf().inSingletonScope();\n    bind(HostedPluginsManager).toService(HostedPluginsManagerImpl);\n    bind(PluginDevServerImpl).toSelf().inSingletonScope();\n    bind(PluginDevServer).toService(PluginDevServerImpl);\n    bindBackendService<PluginDevServer, PluginDevClient>(pluginDevServicePath, PluginDevServer, (server, client) => {\n        server.setClient(client);\n        client.onDidCloseConnection(() => server.dispose());\n        return server;\n    });\n});\n\nexport function bindCommonHostedBackend(bind: interfaces.Bind): void {\n    bind(HostedPluginReader).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(HostedPluginReader);\n    bind(ConnectionContainerModule).toConstantValue(commonHostedConnectionModule);\n}\n\nconst hostedBackendConnectionModule = ConnectionContainerModule.create(({ bind }) => {\n    bindContributionProvider(bind, Symbol.for(HostedPluginUriPostProcessorSymbolName));\n    bind(HostedInstanceManager).to(NodeHostedPluginRunner).inSingletonScope();\n});\n\nexport default new ContainerModule(bind => {\n    bindCommonHostedBackend(bind);\n    bind(ConnectionContainerModule).toConstantValue(hostedBackendConnectionModule);\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDebugConfiguration, PluginDevServer, PluginDevClient } from '../common/plugin-dev-protocol';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { HostedInstanceManager } from './hosted-instance-manager';\nimport { PluginMetadata } from '@theia/plugin-ext/lib/common/plugin-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { HostedPluginReader } from './hosted-plugin-reader';\nimport { HostedPluginsManager } from './hosted-plugins-manager';\nimport { HostedPluginSupport } from '@theia/plugin-ext/lib/hosted/node/hosted-plugin';\n\n@injectable()\nexport class PluginDevServerImpl implements PluginDevServer {\n\n    @inject(HostedPluginsManager)\n    protected readonly hostedPluginsManager: HostedPluginsManager;\n\n    @inject(HostedInstanceManager)\n    protected readonly hostedInstanceManager: HostedInstanceManager;\n\n    @inject(HostedPluginReader)\n    private readonly reader: HostedPluginReader;\n\n    @inject(HostedPluginSupport)\n    private readonly hostedPlugin: HostedPluginSupport;\n\n    dispose(): void {\n        // Terminate the hosted instance if it is currently running.\n        if (this.hostedInstanceManager.isRunning()) {\n            this.hostedInstanceManager.terminate();\n        }\n    }\n    setClient(client: PluginDevClient): void {\n\n    }\n\n    async getHostedPlugin(): Promise<PluginMetadata | undefined> {\n        const pluginMetadata = await this.reader.getPlugin();\n        if (pluginMetadata) {\n            this.hostedPlugin.runPlugin(pluginMetadata.model);\n        }\n        return Promise.resolve(this.reader.getPlugin());\n    }\n\n    isPluginValid(uri: string): Promise<boolean> {\n        return Promise.resolve(this.hostedInstanceManager.isPluginValid(new URI(uri)));\n    }\n\n    runHostedPluginInstance(uri: string): Promise<string> {\n        return this.uriToStrPromise(this.hostedInstanceManager.run(new URI(uri)));\n    }\n\n    runDebugHostedPluginInstance(uri: string, debugConfig: PluginDebugConfiguration): Promise<string> {\n        return this.uriToStrPromise(this.hostedInstanceManager.debug(new URI(uri), debugConfig));\n    }\n\n    terminateHostedPluginInstance(): Promise<void> {\n        this.hostedInstanceManager.terminate();\n        return Promise.resolve();\n    }\n\n    isHostedPluginInstanceRunning(): Promise<boolean> {\n        return Promise.resolve(this.hostedInstanceManager.isRunning());\n    }\n\n    getHostedPluginInstanceURI(): Promise<string> {\n        return Promise.resolve(this.hostedInstanceManager.getInstanceURI().toString());\n    }\n\n    getHostedPluginURI(): Promise<string> {\n        return Promise.resolve(this.hostedInstanceManager.getPluginURI().toString());\n    }\n\n    protected uriToStrPromise(promise: Promise<URI>): Promise<string> {\n        return new Promise((resolve, reject) => {\n            promise.then((uri: URI) => {\n                resolve(uri.toString());\n            }).catch(error => reject(error));\n        });\n    }\n\n    runWatchCompilation(path: string): Promise<void> {\n        return this.hostedPluginsManager.runWatchCompilation(path);\n    }\n\n    stopWatchCompilation(path: string): Promise<void> {\n        return this.hostedPluginsManager.stopWatchCompilation(path);\n    }\n\n    isWatchCompilationRunning(path: string): Promise<boolean> {\n        return this.hostedPluginsManager.isWatchCompilationRunning(path);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class PluginVSCodeEnvironment {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    protected _extensionsDirUri: URI | undefined;\n    async getExtensionsDirUri(): Promise<URI> {\n        if (!this._extensionsDirUri) {\n            const configDir = new URI(await this.environments.getConfigDirUri());\n            this._extensionsDirUri = configDir.resolve('extensions');\n        }\n        return this._extensionsDirUri;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DEFAULT_SUPPORTED_API_VERSION } from '@theia/core/shared/@theia/application-package/lib/api';\n\nexport const VSCODE_DEFAULT_API_VERSION = DEFAULT_SUPPORTED_API_VERSION;\nexport const VSX_REGISTRY_URL_DEFAULT = 'https://open-vsx.org';\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\n/**\n * Static methods for identifying a plugin as the target of the VSCode deployment system.\n * In practice, this means that it will be resolved and deployed by the Open-VSX system.\n */\nexport namespace VSCodeExtensionUri {\n    export const VSCODE_PREFIX = 'vscode:extension/';\n    /**\n     * Should be used to prefix a plugin's ID to ensure that it is identified as a VSX Extension.\n     * @returns `vscode:extension/${id}`\n     */\n    export function toVsxExtensionUriString(id: string): string {\n        return `${VSCODE_PREFIX}${id}`;\n    }\n    export function toUri(name: string, namespace: string): URI;\n    export function toUri(id: string): URI;\n    export function toUri(idOrName: string, namespace?: string): URI {\n        if (typeof namespace === 'string') {\n            return new URI(toVsxExtensionUriString(`${namespace}.${idOrName}`));\n        } else {\n            return new URI(toVsxExtensionUriString(idOrName));\n        }\n    }\n    export function toId(uri: URI): string | undefined {\n        if (uri.scheme === 'vscode' && uri.path.dir.toString() === 'extension') {\n            return uri.path.base;\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { FileUri } from '@theia/core/lib/node';\nimport { PluginDeployerResolverContext } from '@theia/plugin-ext';\nimport { LocalPluginDeployerResolver } from '@theia/plugin-ext/lib/main/node/resolvers/local-plugin-deployer-resolver';\nimport { PluginVSCodeEnvironment } from '../common/plugin-vscode-environment';\nimport { isVSCodePluginFile } from './plugin-vscode-file-handler';\n\n@injectable()\nexport class LocalVSIXFilePluginDeployerResolver extends LocalPluginDeployerResolver {\n    static LOCAL_FILE = 'local-file';\n\n    @inject(PluginVSCodeEnvironment) protected readonly environment: PluginVSCodeEnvironment;\n\n    protected get supportedScheme(): string {\n        return LocalVSIXFilePluginDeployerResolver.LOCAL_FILE;\n    }\n\n    override accept(pluginId: string): boolean {\n        return super.accept(pluginId) && isVSCodePluginFile(pluginId);\n    }\n\n    async resolveFromLocalPath(pluginResolverContext: PluginDeployerResolverContext, localPath: string): Promise<void> {\n        const fileName = path.basename(localPath);\n        const pathInUserExtensionsDirectory = await this.ensureDiscoverability(localPath);\n        pluginResolverContext.addPlugin(fileName, pathInUserExtensionsDirectory);\n    }\n\n    /**\n     * Ensures that a user-installed plugin file is transferred to the user extension folder.\n     */\n    protected async ensureDiscoverability(localPath: string): Promise<string> {\n        const userExtensionsDir = await this.environment.getExtensionsDirUri();\n        if (!userExtensionsDir.isEqualOrParent(FileUri.create(localPath))) {\n            try {\n                const newPath = FileUri.fsPath(userExtensionsDir.resolve(path.basename(localPath)));\n                await fs.mkdirp(FileUri.fsPath(userExtensionsDir));\n                await new Promise<void>((resolve, reject) => {\n                    fs.copyFile(localPath, newPath, error => error ? reject(error) : resolve());\n                });\n                return newPath;\n            } catch (e) {\n                console.warn(`Problem copying plugin at ${localPath}:`, e);\n            }\n        }\n        return localPath;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport {\n    PluginDeployerFileHandler, PluginDeployerDirectoryHandler, PluginScanner, PluginDeployerParticipant, PluginDeployerResolver\n} from '@theia/plugin-ext';\nimport { PluginVsCodeFileHandler } from './plugin-vscode-file-handler';\nimport { PluginVsCodeDirectoryHandler } from './plugin-vscode-directory-handler';\nimport { VsCodePluginScanner } from './scanner-vscode';\nimport { PluginVsCodeCliContribution } from './plugin-vscode-cli-contribution';\nimport { CliContribution } from '@theia/core/lib/node';\nimport { PluginHostEnvironmentVariable } from '@theia/plugin-ext/lib/common';\nimport { PluginVSCodeEnvironment } from '../common/plugin-vscode-environment';\nimport { PluginVSCodeDeployerParticipant } from './plugin-vscode-deployer-participant';\nimport { LocalVSIXFilePluginDeployerResolver } from './local-vsix-file-plugin-deployer-resolver';\n\nexport default new ContainerModule(bind => {\n    bind(PluginVSCodeEnvironment).toSelf().inSingletonScope();\n\n    bind(PluginVSCodeDeployerParticipant).toSelf().inSingletonScope();\n    bind(PluginDeployerParticipant).toService(PluginVSCodeDeployerParticipant);\n\n    bind(PluginDeployerFileHandler).to(PluginVsCodeFileHandler).inSingletonScope();\n    bind(PluginDeployerDirectoryHandler).to(PluginVsCodeDirectoryHandler).inSingletonScope();\n    bind(PluginScanner).to(VsCodePluginScanner).inSingletonScope();\n\n    bind(PluginVsCodeCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(PluginVsCodeCliContribution);\n    bind(PluginHostEnvironmentVariable).toService(PluginVsCodeCliContribution);\n\n    bind(PluginDeployerResolver).to(LocalVSIXFilePluginDeployerResolver).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Argv, Arguments } from '@theia/core/shared/yargs';\nimport { CliContribution } from '@theia/core/lib/node/cli';\nimport { PluginHostEnvironmentVariable } from '@theia/plugin-ext/lib/common';\nimport { VSCODE_DEFAULT_API_VERSION } from '../common/plugin-vscode-types';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\n/**\n * CLI Contribution allowing to override the VS Code API version which is returned by `vscode.version` API call.\n */\n@injectable()\nexport class PluginVsCodeCliContribution implements CliContribution, PluginHostEnvironmentVariable {\n\n    /**\n     * CLI argument name to define the supported VS Code API version.\n     */\n    static VSCODE_API_VERSION = 'vscode-api-version';\n\n    protected vsCodeApiVersion?: string;\n    protected vsCodeApiVersionDeferred = new Deferred<string>();\n\n    get vsCodeApiVersionPromise(): Promise<string> {\n        return this.vsCodeApiVersionDeferred.promise;\n    }\n\n    configure(conf: Argv): void {\n        conf.option(PluginVsCodeCliContribution.VSCODE_API_VERSION, {\n            // eslint-disable-next-line max-len\n            description: `Overrides the version returned by VSCode API 'vscode.version'. Example: --${PluginVsCodeCliContribution.VSCODE_API_VERSION}=<Wanted Version>. Default [${VSCODE_DEFAULT_API_VERSION}]`,\n            type: 'string',\n            nargs: 1\n        });\n    }\n\n    setArguments(args: Arguments): void {\n        const arg = args[PluginVsCodeCliContribution.VSCODE_API_VERSION] as string | undefined;\n        this.vsCodeApiVersion = arg?.trim() || process.env['VSCODE_API_VERSION']?.trim() || VSCODE_DEFAULT_API_VERSION;\n        process.env['VSCODE_API_VERSION'] = this.vsCodeApiVersion;\n        this.vsCodeApiVersionDeferred.resolve(this.vsCodeApiVersion);\n    }\n\n    process(env: NodeJS.ProcessEnv): void {\n        if (this.vsCodeApiVersion) {\n            env['VSCODE_API_VERSION'] = this.vsCodeApiVersion;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PluginVSCodeEnvironment } from '../common/plugin-vscode-environment';\nimport { PluginDeployerParticipant, PluginDeployerStartContext } from '@theia/plugin-ext/lib/common/plugin-protocol';\n\n@injectable()\nexport class PluginVSCodeDeployerParticipant implements PluginDeployerParticipant {\n\n    @inject(PluginVSCodeEnvironment)\n    protected readonly environments: PluginVSCodeEnvironment;\n\n    async onWillStart(context: PluginDeployerStartContext): Promise<void> {\n        const extensionsDirUri = await this.environments.getExtensionsDirUri();\n        context.userEntries.push(extensionsDirUri.withScheme('local-dir').toString());\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as filenamify from 'filenamify';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport type { RecursivePartial, URI } from '@theia/core';\nimport { Deferred, firstTrue } from '@theia/core/lib/common/promise-util';\nimport { getTempDirPathAsync } from '@theia/plugin-ext/lib/main/node/temp-dir-util';\nimport {\n    PluginDeployerDirectoryHandler, PluginDeployerEntry, PluginDeployerDirectoryHandlerContext,\n    PluginDeployerEntryType, PluginPackage, PluginType, PluginIdentifiers\n} from '@theia/plugin-ext';\nimport { FileUri } from '@theia/core/lib/node';\nimport { PluginCliContribution } from '@theia/plugin-ext/lib/main/node/plugin-cli-contribution';\n\n@injectable()\nexport class PluginVsCodeDirectoryHandler implements PluginDeployerDirectoryHandler {\n\n    protected readonly deploymentDirectory: Deferred<URI>;\n\n    @inject(PluginCliContribution) protected readonly pluginCli: PluginCliContribution;\n\n    constructor() {\n        this.deploymentDirectory = new Deferred();\n        getTempDirPathAsync('vscode-copied')\n            .then(deploymentDirectoryPath => this.deploymentDirectory.resolve(FileUri.create(deploymentDirectoryPath)));\n    }\n\n    async accept(plugin: PluginDeployerEntry): Promise<boolean> {\n        console.debug(`Resolving \"${plugin.id()}\" as a VS Code extension...`);\n        return this.attemptResolution(plugin);\n    }\n\n    protected async attemptResolution(plugin: PluginDeployerEntry): Promise<boolean> {\n        if (this.resolvePackage(plugin)) {\n            return true;\n        }\n        return this.deriveMetadata(plugin);\n    }\n\n    protected async deriveMetadata(plugin: PluginDeployerEntry): Promise<boolean> {\n        return firstTrue(\n            this.resolveFromSources(plugin),\n            this.resolveFromVSIX(plugin),\n            this.resolveFromNpmTarball(plugin)\n        );\n    }\n\n    async handle(context: PluginDeployerDirectoryHandlerContext): Promise<void> {\n        await this.copyDirectory(context);\n        const types: PluginDeployerEntryType[] = [];\n        const packageJson: PluginPackage = context.pluginEntry().getValue('package.json');\n        if (packageJson.browser) {\n            types.push(PluginDeployerEntryType.FRONTEND);\n        }\n        if (packageJson.main || !packageJson.browser) {\n            types.push(PluginDeployerEntryType.BACKEND);\n        }\n        context.pluginEntry().accept(...types);\n    }\n\n    protected async copyDirectory(context: PluginDeployerDirectoryHandlerContext): Promise<void> {\n        if (this.pluginCli.copyUncompressedPlugins() && context.pluginEntry().type === PluginType.User) {\n            const entry = context.pluginEntry();\n            const id = entry.id();\n            const pathToRestore = entry.path();\n            const origin = entry.originalPath();\n            const targetDir = await this.getExtensionDir(context);\n            try {\n                if (await fs.pathExists(targetDir) || !entry.path().startsWith(origin)) {\n                    console.log(`[${id}]: already copied.`);\n                } else {\n                    console.log(`[${id}]: copying to \"${targetDir}\"`);\n                    const deploymentDirectory = await this.deploymentDirectory.promise;\n                    await fs.mkdirp(FileUri.fsPath(deploymentDirectory));\n                    await context.copy(origin, targetDir);\n                    entry.updatePath(targetDir);\n                    if (!this.deriveMetadata(entry)) {\n                        throw new Error('Unable to resolve plugin metadata after copying');\n                    }\n                }\n            } catch (e) {\n                console.warn(`[${id}]: Error when copying.`, e);\n                entry.updatePath(pathToRestore);\n            }\n        }\n    }\n\n    protected async resolveFromSources(plugin: PluginDeployerEntry): Promise<boolean> {\n        const pluginPath = plugin.path();\n        const pck = await this.requirePackage(pluginPath);\n        return this.resolvePackage(plugin, { pluginPath, pck });\n    }\n\n    protected async resolveFromVSIX(plugin: PluginDeployerEntry): Promise<boolean> {\n        if (!(await fs.pathExists(path.join(plugin.path(), 'extension.vsixmanifest')))) {\n            return false;\n        }\n        const pluginPath = path.join(plugin.path(), 'extension');\n        const pck = await this.requirePackage(pluginPath);\n        return this.resolvePackage(plugin, { pluginPath, pck });\n    }\n\n    protected async resolveFromNpmTarball(plugin: PluginDeployerEntry): Promise<boolean> {\n        const pluginPath = path.join(plugin.path(), 'package');\n        const pck = await this.requirePackage(pluginPath);\n        return this.resolvePackage(plugin, { pluginPath, pck });\n    }\n\n    protected resolvePackage(plugin: PluginDeployerEntry, options?: {\n        pluginPath: string\n        pck?: RecursivePartial<PluginPackage>\n    }): boolean {\n        const { pluginPath, pck } = options || {\n            pluginPath: plugin.path(),\n            pck: plugin.getValue('package.json')\n        };\n        if (!pck || !pck.name || !pck.version || !pck.engines || !pck.engines.vscode) {\n            return false;\n        }\n        pck.publisher ??= PluginIdentifiers.UNPUBLISHED;\n        if (options) {\n            plugin.storeValue('package.json', pck);\n            plugin.rootPath = plugin.path();\n            plugin.updatePath(pluginPath);\n        }\n        console.debug(`Resolved \"${plugin.id()}\" to a VS Code extension \"${pck.name}@${pck.version}\" with engines:`, pck.engines);\n        return true;\n    }\n\n    protected async requirePackage(pluginPath: string): Promise<PluginPackage | undefined> {\n        try {\n            const plugin: PluginPackage = await fs.readJSON(path.join(pluginPath, 'package.json'));\n            plugin.publisher ??= PluginIdentifiers.UNPUBLISHED;\n            return plugin;\n        } catch {\n            return undefined;\n        }\n    }\n\n    protected async getExtensionDir(context: PluginDeployerDirectoryHandlerContext): Promise<string> {\n        const deploymentDirectory = await this.deploymentDirectory.promise;\n        return FileUri.fsPath(deploymentDirectory.resolve(filenamify(context.pluginEntry().id(), { replacement: '_' })));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDeployerFileHandler, PluginDeployerEntry, PluginDeployerFileHandlerContext, PluginType } from '@theia/plugin-ext';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport * as filenamify from 'filenamify';\nimport type { URI } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { getTempDirPathAsync } from '@theia/plugin-ext/lib/main/node/temp-dir-util';\nimport { PluginVSCodeEnvironment } from '../common/plugin-vscode-environment';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\n\nexport const isVSCodePluginFile = (pluginPath?: string) => Boolean(pluginPath && (pluginPath.endsWith('.vsix') || pluginPath.endsWith('.tgz')));\n\n@injectable()\nexport class PluginVsCodeFileHandler implements PluginDeployerFileHandler {\n\n    @inject(PluginVSCodeEnvironment)\n    protected readonly environment: PluginVSCodeEnvironment;\n\n    private readonly systemExtensionsDirUri: Deferred<URI>;\n\n    constructor() {\n        this.systemExtensionsDirUri = new Deferred();\n        getTempDirPathAsync('vscode-unpacked')\n            .then(systemExtensionsDirPath => this.systemExtensionsDirUri.resolve(FileUri.create(systemExtensionsDirPath)));\n    }\n\n    async accept(resolvedPlugin: PluginDeployerEntry): Promise<boolean> {\n        return resolvedPlugin.isFile().then(file => {\n            if (!file) {\n                return false;\n            }\n            return isVSCodePluginFile(resolvedPlugin.path());\n        });\n    }\n\n    async handle(context: PluginDeployerFileHandlerContext): Promise<void> {\n        const id = context.pluginEntry().id();\n        const extensionDir = await this.getExtensionDir(context);\n        console.log(`[${id}]: trying to decompress into \"${extensionDir}\"...`);\n        if (context.pluginEntry().type === PluginType.User && await fs.pathExists(extensionDir)) {\n            console.log(`[${id}]: already found`);\n            context.pluginEntry().updatePath(extensionDir);\n            return;\n        }\n        await this.decompress(extensionDir, context);\n        console.log(`[${id}]: decompressed`);\n        context.pluginEntry().updatePath(extensionDir);\n    }\n\n    protected async getExtensionDir(context: PluginDeployerFileHandlerContext): Promise<string> {\n        const systemExtensionsDirUri = await this.systemExtensionsDirUri.promise;\n        return FileUri.fsPath(systemExtensionsDirUri.resolve(filenamify(context.pluginEntry().id(), { replacement: '_' })));\n    }\n\n    protected async decompress(extensionDir: string, context: PluginDeployerFileHandlerContext): Promise<void> {\n        await context.unzip(context.pluginEntry().path(), extensionDir);\n        if (context.pluginEntry().path().endsWith('.tgz')) {\n            const extensionPath = path.join(extensionDir, 'package');\n            const vscodeNodeModulesPath = path.join(extensionPath, 'vscode_node_modules.zip');\n            if (await fs.pathExists(vscodeNodeModulesPath)) {\n                await context.unzip(vscodeNodeModulesPath, path.join(extensionPath, 'node_modules'));\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2015-2021 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PluginScanner, PluginEngine, PluginPackage, PluginModel, PluginLifecycle, PluginEntryPoint, buildFrontendModuleName, UIKind, PluginIdentifiers } from '@theia/plugin-ext';\nimport { TheiaPluginScanner } from '@theia/plugin-ext/lib/hosted/node/scanners/scanner-theia';\nimport { environment } from '@theia/core/shared/@theia/application-package/lib/environment';\nimport { VSCodeExtensionUri } from '../common/plugin-vscode-uri';\n\nconst uiKind = environment.electron.is() ? UIKind.Desktop : UIKind.Web;\n\n@injectable()\nexport class VsCodePluginScanner extends TheiaPluginScanner implements PluginScanner {\n\n    private readonly VSCODE_TYPE: PluginEngine = 'vscode';\n\n    override get apiType(): PluginEngine {\n        return this.VSCODE_TYPE;\n    }\n\n    override getModel(plugin: PluginPackage): PluginModel {\n        // publisher can be empty on vscode extension development\n        const publisher = plugin.publisher ?? PluginIdentifiers.UNPUBLISHED;\n\n        // Only one entrypoint is valid in vscode extensions\n        // Mimic choosing frontend (web extension) and backend (local/remote extension) as described here:\n        // https://code.visualstudio.com/api/advanced-topics/extension-host#preferred-extension-location\n        const entryPoint: PluginEntryPoint = {};\n\n        // Act like codespaces when run in the browser (UIKind === 'web' and extensionKind is ['ui'])\n        const preferFrontend = uiKind === UIKind.Web && (plugin.extensionKind?.length === 1 && plugin.extensionKind[0] === 'ui');\n\n        if (plugin.browser && (!plugin.main || preferFrontend)) {\n            // Use frontend if available and there is no backend or frontend is preferred\n            entryPoint.frontend = plugin.browser;\n        } else {\n            // Default to using backend\n            entryPoint.backend = plugin.main;\n        }\n\n        const result: PluginModel = {\n            packagePath: plugin.packagePath,\n            packageUri: this.pluginUriFactory.createUri(plugin).toString(),\n            // see id definition: https://github.com/microsoft/vscode/blob/15916055fe0cb9411a5f36119b3b012458fe0a1d/src/vs/platform/extensions/common/extensions.ts#L167-L169\n            id: `${publisher.toLowerCase()}.${plugin.name.toLowerCase()}`,\n            name: plugin.name,\n            publisher: publisher,\n            version: plugin.version,\n            displayName: plugin.displayName,\n            description: plugin.description,\n            engine: {\n                type: this.VSCODE_TYPE,\n                version: plugin.engines[this.VSCODE_TYPE]\n            },\n            entryPoint,\n            iconUrl: plugin.icon && PluginPackage.toPluginUrl(plugin, plugin.icon),\n            l10n: plugin.l10n,\n            readmeUrl: PluginPackage.toPluginUrl(plugin, './README.md'),\n            licenseUrl: PluginPackage.toPluginUrl(plugin, './LICENSE')\n        };\n        return result;\n    }\n\n    /**\n     * Maps extension dependencies to deployable extension dependencies.\n     */\n    override getDependencies(plugin: PluginPackage): Map<string, string> | undefined {\n        // Store the list of dependencies.\n        const dependencies = new Map<string, string>();\n        // Iterate through the list of dependencies from `extensionDependencies` and `extensionPack`.\n        for (const dependency of [plugin.extensionDependencies, plugin.extensionPack]) {\n            if (dependency !== undefined) {\n                // Iterate over the list of dependencies present, and add them to the collection.\n                dependency.forEach((dep: string) => {\n                    const dependencyId = dep.toLowerCase();\n                    dependencies.set(dependencyId, VSCodeExtensionUri.toVsxExtensionUriString(dependencyId));\n                });\n            }\n        }\n        // Return the map of dependencies if present, else `undefined`.\n        return dependencies.size > 0 ? dependencies : undefined;\n    }\n\n    override getLifecycle(plugin: PluginPackage): PluginLifecycle {\n        return {\n            startMethod: 'activate',\n            stopMethod: 'deactivate',\n            frontendModuleName: buildFrontendModuleName(plugin),\n\n            frontendInitPath: 'plugin-vscode-init-fe.js',\n            backendInitPath: path.join(__dirname, 'plugin-vscode-init'),\n        };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * Starting with vscode 1.73.0, language pack bundles have changed their shape to accommodate the new `l10n` API.\n * They are now a record of { [englishValue]: translation }\n */\nexport interface LanguagePackBundle {\n    contents: Record<string, string>\n    uri: string\n}\n\nexport const languagePackServicePath = '/services/languagePackService';\n\nexport const LanguagePackService = Symbol('LanguagePackService');\n\nexport interface LanguagePackService {\n    storeBundle(pluginId: string, locale: string, bundle: LanguagePackBundle): void;\n    deleteBundle(pluginId: string, locale?: string): void;\n    getBundle(pluginId: string, locale: string): Promise<LanguagePackBundle | undefined>;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Argv, Arguments } from '@theia/core/shared/yargs';\nimport { CliContribution } from '@theia/core/lib/node';\n\nlet pluginHostTerminateTimeout = 10 * 1000;\nif (process.env.PLUGIN_HOST_TERMINATE_TIMEOUT) {\n    pluginHostTerminateTimeout = Number.parseInt(process.env.PLUGIN_HOST_TERMINATE_TIMEOUT);\n}\n\nlet pluginHostStopTimeout = 4 * 1000;\nif (process.env.PLUGIN_HOST_STOP_TIMEOUT) {\n    pluginHostStopTimeout = Number.parseInt(process.env.PLUGIN_HOST_STOP_TIMEOUT);\n}\n\n@injectable()\nexport class HostedPluginCliContribution implements CliContribution {\n\n    static EXTENSION_TESTS_PATH = 'extensionTestsPath';\n    static PLUGIN_HOST_TERMINATE_TIMEOUT = 'pluginHostTerminateTimeout';\n    static PLUGIN_HOST_STOP_TIMEOUT = 'pluginHostStopTimeout';\n\n    protected _extensionTestsPath: string | undefined;\n    get extensionTestsPath(): string | undefined {\n        return this._extensionTestsPath;\n    }\n\n    protected _pluginHostTerminateTimeout = pluginHostTerminateTimeout;\n    get pluginHostTerminateTimeout(): number {\n        return this._pluginHostTerminateTimeout;\n    }\n\n    protected _pluginHostStopTimeout = pluginHostStopTimeout;\n    get pluginHostStopTimeout(): number {\n        return this._pluginHostStopTimeout;\n    }\n\n    configure(conf: Argv): void {\n        conf.option(HostedPluginCliContribution.EXTENSION_TESTS_PATH, {\n            type: 'string'\n        });\n        conf.option(HostedPluginCliContribution.PLUGIN_HOST_TERMINATE_TIMEOUT, {\n            type: 'number',\n            default: pluginHostTerminateTimeout,\n            description: 'Timeout in milliseconds to wait for the plugin host process to terminate before killing it. Use 0 for no timeout.'\n        });\n        conf.option(HostedPluginCliContribution.PLUGIN_HOST_STOP_TIMEOUT, {\n            type: 'number',\n            default: pluginHostStopTimeout,\n            description: 'Timeout in milliseconds to wait for the plugin host process to stop internal services. Use 0 for no timeout.'\n        });\n    }\n\n    setArguments(args: Arguments): void {\n        this._extensionTestsPath = args[HostedPluginCliContribution.EXTENSION_TESTS_PATH] as string;\n        this._pluginHostTerminateTimeout = args[HostedPluginCliContribution.PLUGIN_HOST_TERMINATE_TIMEOUT] as number;\n        this._pluginHostStopTimeout = args[HostedPluginCliContribution.PLUGIN_HOST_STOP_TIMEOUT] as number;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 RedHat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core';\nimport {\n    PluginDeployerHandler, PluginDeployerEntry, PluginEntryPoint, DeployedPlugin,\n    PluginDependencies, PluginType, PluginIdentifiers\n} from '../../common/plugin-protocol';\nimport { HostedPluginReader } from './plugin-reader';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { HostedPluginLocalizationService } from './hosted-plugin-localization-service';\nimport { Stopwatch } from '@theia/core/lib/common';\nimport { PluginUninstallationManager } from '../../main/node/plugin-uninstallation-manager';\n\n@injectable()\nexport class HostedPluginDeployerHandler implements PluginDeployerHandler {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(HostedPluginReader)\n    private readonly reader: HostedPluginReader;\n\n    @inject(HostedPluginLocalizationService)\n    private readonly localizationService: HostedPluginLocalizationService;\n\n    @inject(Stopwatch)\n    protected readonly stopwatch: Stopwatch;\n\n    @inject(PluginUninstallationManager)\n    protected readonly uninstallationManager: PluginUninstallationManager;\n\n    private readonly deployedLocations = new Map<PluginIdentifiers.VersionedId, Set<string>>();\n    protected readonly sourceLocations = new Map<PluginIdentifiers.VersionedId, Set<string>>();\n\n    /**\n     * Managed plugin metadata backend entries.\n     */\n    private readonly deployedBackendPlugins = new Map<PluginIdentifiers.VersionedId, DeployedPlugin>();\n\n    /**\n     * Managed plugin metadata frontend entries.\n     */\n    private readonly deployedFrontendPlugins = new Map<PluginIdentifiers.VersionedId, DeployedPlugin>();\n\n    private backendPluginsMetadataDeferred = new Deferred<void>();\n\n    private frontendPluginsMetadataDeferred = new Deferred<void>();\n\n    async getDeployedFrontendPluginIds(): Promise<PluginIdentifiers.VersionedId[]> {\n        // await first deploy\n        await this.frontendPluginsMetadataDeferred.promise;\n        // fetch the last deployed state\n        return Array.from(this.deployedFrontendPlugins.keys());\n    }\n\n    async getDeployedBackendPluginIds(): Promise<PluginIdentifiers.VersionedId[]> {\n        // await first deploy\n        await this.backendPluginsMetadataDeferred.promise;\n        // fetch the last deployed state\n        return Array.from(this.deployedBackendPlugins.keys());\n    }\n\n    getDeployedPluginsById(pluginId: string): DeployedPlugin[] {\n        const matches: DeployedPlugin[] = [];\n        const handle = (plugins: Iterable<DeployedPlugin>): void => {\n            for (const plugin of plugins) {\n                if (PluginIdentifiers.componentsToVersionWithId(plugin.metadata.model).id === pluginId) {\n                    matches.push(plugin);\n                }\n            }\n        };\n        handle(this.deployedFrontendPlugins.values());\n        handle(this.deployedBackendPlugins.values());\n        return matches;\n    }\n\n    getDeployedPlugin(pluginId: PluginIdentifiers.VersionedId): DeployedPlugin | undefined {\n        return this.deployedBackendPlugins.get(pluginId) ?? this.deployedFrontendPlugins.get(pluginId);\n    }\n\n    /**\n     * @throws never! in order to isolate plugin deployment\n     */\n    async getPluginDependencies(entry: PluginDeployerEntry): Promise<PluginDependencies | undefined> {\n        const pluginPath = entry.path();\n        try {\n            const manifest = await this.reader.readPackage(pluginPath);\n            if (!manifest) {\n                return undefined;\n            }\n            const metadata = this.reader.readMetadata(manifest);\n            const dependencies: PluginDependencies = { metadata };\n            // Do not resolve system (aka builtin) plugins because it should be done statically at build time.\n            if (entry.type !== PluginType.System) {\n                dependencies.mapping = this.reader.readDependencies(manifest);\n            }\n            return dependencies;\n        } catch (e) {\n            console.error(`Failed to load plugin dependencies from '${pluginPath}' path`, e);\n            return undefined;\n        }\n    }\n\n    async deployFrontendPlugins(frontendPlugins: PluginDeployerEntry[]): Promise<number> {\n        let successes = 0;\n        for (const plugin of frontendPlugins) {\n            if (await this.deployPlugin(plugin, 'frontend')) { successes++; }\n        }\n        // resolve on first deploy\n        this.frontendPluginsMetadataDeferred.resolve(undefined);\n        return successes;\n    }\n\n    async deployBackendPlugins(backendPlugins: PluginDeployerEntry[]): Promise<number> {\n        let successes = 0;\n        for (const plugin of backendPlugins) {\n            if (await this.deployPlugin(plugin, 'backend')) { successes++; }\n        }\n        // rebuild translation config after deployment\n        await this.localizationService.buildTranslationConfig([...this.deployedBackendPlugins.values()]);\n        // resolve on first deploy\n        this.backendPluginsMetadataDeferred.resolve(undefined);\n        return successes;\n    }\n\n    /**\n     * @throws never! in order to isolate plugin deployment.\n     * @returns whether the plugin is deployed after running this function. If the plugin was already installed, will still return `true`.\n     */\n    protected async deployPlugin(entry: PluginDeployerEntry, entryPoint: keyof PluginEntryPoint): Promise<boolean> {\n        const pluginPath = entry.path();\n        const deployPlugin = this.stopwatch.start('deployPlugin');\n        let id;\n        let success = true;\n        try {\n            const manifest = await this.reader.readPackage(pluginPath);\n            if (!manifest) {\n                deployPlugin.error(`Failed to read ${entryPoint} plugin manifest from '${pluginPath}''`);\n                return success = false;\n            }\n\n            const metadata = this.reader.readMetadata(manifest);\n            metadata.isUnderDevelopment = entry.getValue('isUnderDevelopment') ?? false;\n\n            id = PluginIdentifiers.componentsToVersionedId(metadata.model);\n\n            const deployedLocations = this.deployedLocations.get(id) ?? new Set<string>();\n            deployedLocations.add(entry.rootPath);\n            this.deployedLocations.set(id, deployedLocations);\n            this.setSourceLocationsForPlugin(id, entry);\n\n            const deployedPlugins = entryPoint === 'backend' ? this.deployedBackendPlugins : this.deployedFrontendPlugins;\n            if (deployedPlugins.has(id)) {\n                deployPlugin.debug(`Skipped ${entryPoint} plugin ${metadata.model.name} already deployed`);\n                return true;\n            }\n\n            const { type } = entry;\n            const deployed: DeployedPlugin = { metadata, type };\n            deployed.contributes = await this.reader.readContribution(manifest);\n            await this.localizationService.deployLocalizations(deployed);\n            deployedPlugins.set(id, deployed);\n            deployPlugin.debug(`Deployed ${entryPoint} plugin \"${id}\" from \"${metadata.model.entryPoint[entryPoint] || pluginPath}\"`);\n        } catch (e) {\n            deployPlugin.error(`Failed to deploy ${entryPoint} plugin from '${pluginPath}' path`, e);\n            return success = false;\n        } finally {\n            if (success && id) {\n                this.markAsInstalled(id);\n            }\n        }\n        return success;\n    }\n\n    async uninstallPlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean> {\n        try {\n            const sourceLocations = this.sourceLocations.get(pluginId);\n            if (!sourceLocations) {\n                return false;\n            }\n            await Promise.all(Array.from(sourceLocations,\n                location => fs.remove(location).catch(err => console.error(`Failed to remove source for ${pluginId} at ${location}`, err))));\n            this.sourceLocations.delete(pluginId);\n            this.localizationService.undeployLocalizations(pluginId);\n            this.uninstallationManager.markAsUninstalled(pluginId);\n            return true;\n        } catch (e) {\n            console.error('Error uninstalling plugin', e);\n            return false;\n        }\n    }\n\n    protected markAsInstalled(id: PluginIdentifiers.VersionedId): void {\n        const metadata = PluginIdentifiers.idAndVersionFromVersionedId(id);\n        if (metadata) {\n            const toMarkAsUninstalled: PluginIdentifiers.VersionedId[] = [];\n            const checkForDifferentVersions = (others: Iterable<PluginIdentifiers.VersionedId>) => {\n                for (const other of others) {\n                    const otherMetadata = PluginIdentifiers.idAndVersionFromVersionedId(other);\n                    if (metadata.id === otherMetadata?.id && metadata.version !== otherMetadata.version) {\n                        toMarkAsUninstalled.push(other);\n                    }\n                }\n            };\n            checkForDifferentVersions(this.deployedFrontendPlugins.keys());\n            checkForDifferentVersions(this.deployedBackendPlugins.keys());\n            this.uninstallationManager.markAsUninstalled(...toMarkAsUninstalled);\n            this.uninstallationManager.markAsInstalled(id);\n            toMarkAsUninstalled.forEach(pluginToUninstall => this.uninstallPlugin(pluginToUninstall));\n        }\n    }\n\n    async undeployPlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean> {\n        this.deployedBackendPlugins.delete(pluginId);\n        this.deployedFrontendPlugins.delete(pluginId);\n        const deployedLocations = this.deployedLocations.get(pluginId);\n        if (!deployedLocations) {\n            return false;\n        }\n\n        const undeployPlugin = this.stopwatch.start('undeployPlugin');\n        this.deployedLocations.delete(pluginId);\n\n        for (const location of deployedLocations) {\n            try {\n                await fs.remove(location);\n                undeployPlugin.log(`[${pluginId}]: undeployed from \"${location}\"`);\n            } catch (e) {\n                undeployPlugin.error(`[${pluginId}]: failed to undeploy from location \"${location}\". reason:`, e);\n            }\n        }\n\n        return true;\n    }\n\n    protected setSourceLocationsForPlugin(id: PluginIdentifiers.VersionedId, entry: PluginDeployerEntry): void {\n        const knownLocations = this.sourceLocations.get(id) ?? new Set();\n        const maybeStoredLocations = entry.getValue('sourceLocations');\n        const storedLocations = Array.isArray(maybeStoredLocations) && maybeStoredLocations.every(location => typeof location === 'string')\n            ? maybeStoredLocations.concat(entry.originalPath())\n            : [entry.originalPath()];\n        storedLocations.forEach(location => knownLocations.add(location));\n        this.sourceLocations.set(id, knownLocations);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { LocalizationProvider } from '@theia/core/lib/node/i18n/localization-provider';\nimport { Localization } from '@theia/core/lib/common/i18n/localization';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { DeployedPlugin, Localization as PluginLocalization, PluginIdentifiers, Translation } from '../../common';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { Disposable, DisposableCollection, isObject, MaybePromise, nls, URI } from '@theia/core';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { LanguagePackBundle, LanguagePackService } from '../../common/language-pack-service';\n\nexport interface VSCodeNlsConfig {\n    locale: string\n    availableLanguages: Record<string, string>\n    _languagePackSupport?: boolean\n    _languagePackId?: string\n    _translationsConfigFile?: string\n    _cacheRoot?: string\n    _corruptedFile?: string\n}\n\n@injectable()\nexport class HostedPluginLocalizationService implements BackendApplicationContribution {\n\n    @inject(LocalizationProvider)\n    protected readonly localizationProvider: LocalizationProvider;\n\n    @inject(LanguagePackService)\n    protected readonly languagePackService: LanguagePackService;\n\n    @inject(EnvVariablesServer)\n    protected readonly envVariables: EnvVariablesServer;\n\n    protected localizationDisposeMap = new Map<string, Disposable>();\n    protected translationConfigFiles: Map<string, string> = new Map();\n\n    protected readonly _ready = new Deferred();\n\n    /**\n     * This promise resolves when the cache has been cleaned up after starting the backend server.\n     * Once resolved, the service allows to cache localization files for plugins.\n     */\n    ready = this._ready.promise;\n\n    initialize(): MaybePromise<void> {\n        this.getLocalizationCacheDir()\n            .then(cacheDir => fs.emptyDir(cacheDir))\n            .then(() => this._ready.resolve());\n    }\n\n    async deployLocalizations(plugin: DeployedPlugin): Promise<void> {\n        const disposable = new DisposableCollection();\n        if (plugin.contributes?.localizations) {\n            // Indicator that this plugin is a vscode language pack\n            // Language packs translate Theia and some builtin vscode extensions\n            const localizations = buildLocalizations(plugin.contributes.localizations);\n            disposable.push(Disposable.create(() => {\n                this.localizationProvider.removeLocalizations(...localizations);\n            }));\n            this.localizationProvider.addLocalizations(...localizations);\n        }\n        if (plugin.metadata.model.l10n || plugin.contributes?.localizations) {\n            // Indicator that this plugin is a vscode language pack or has its own localization bundles\n            // These bundles are purely used for translating plugins\n            // The branch above builds localizations for Theia's own strings\n            disposable.push(await this.updateLanguagePackBundles(plugin));\n        }\n        if (!disposable.disposed) {\n            const versionedId = PluginIdentifiers.componentsToVersionedId(plugin.metadata.model);\n            disposable.push(Disposable.create(() => {\n                this.localizationDisposeMap.delete(versionedId);\n            }));\n            this.localizationDisposeMap.set(versionedId, disposable);\n        }\n    }\n\n    undeployLocalizations(plugin: PluginIdentifiers.VersionedId): void {\n        this.localizationDisposeMap.get(plugin)?.dispose();\n    }\n\n    protected async updateLanguagePackBundles(plugin: DeployedPlugin): Promise<Disposable> {\n        const disposable = new DisposableCollection();\n        const pluginId = plugin.metadata.model.id;\n        const packageUri = new URI(plugin.metadata.model.packageUri);\n        if (plugin.contributes?.localizations) {\n            for (const localization of plugin.contributes.localizations) {\n                for (const translation of localization.translations) {\n                    const l10n = getL10nTranslation(translation);\n                    if (l10n) {\n                        const translatedPluginId = translation.id;\n                        const translationUri = packageUri.resolve(translation.path);\n                        const locale = localization.languageId;\n                        // We store a bundle for another extension in here\n                        // Hence we use `translatedPluginId` instead of `pluginId`\n                        this.languagePackService.storeBundle(translatedPluginId, locale, {\n                            contents: processL10nBundle(l10n),\n                            uri: translationUri.toString()\n                        });\n                        disposable.push(Disposable.create(() => {\n                            // Only dispose the deleted locale for the specific plugin\n                            this.languagePackService.deleteBundle(translatedPluginId, locale);\n                        }));\n                    }\n                }\n            }\n        }\n        // The `l10n` field of the plugin model points to a relative directory path within the plugin\n        // It is supposed to contain localization bundles that contain translations of the plugin strings into different languages\n        if (plugin.metadata.model.l10n) {\n            const bundleDirectory = packageUri.resolve(plugin.metadata.model.l10n);\n            const bundles = await loadPluginBundles(bundleDirectory);\n            if (bundles) {\n                for (const [locale, bundle] of Object.entries(bundles)) {\n                    this.languagePackService.storeBundle(pluginId, locale, bundle);\n                }\n                disposable.push(Disposable.create(() => {\n                    // Dispose all bundles contributed by the deleted plugin\n                    this.languagePackService.deleteBundle(pluginId);\n                }));\n            }\n        }\n        return disposable;\n    }\n\n    /**\n     * Performs localization of the plugin model. Translates entries such as command names, view names and other items.\n     *\n     * Translatable items are indicated with a `%id%` value.\n     * The `id` is the translation key that gets replaced with the localized value for the currently selected language.\n     *\n     * Returns a copy of the plugin argument and does not modify the argument.\n     * This is done to preserve the original `%id%` values for subsequent invocations of this method.\n     */\n    async localizePlugin(plugin: DeployedPlugin): Promise<DeployedPlugin> {\n        const currentLanguage = this.localizationProvider.getCurrentLanguage();\n        const localization = this.localizationProvider.loadLocalization(currentLanguage);\n        const pluginPath = new URI(plugin.metadata.model.packageUri).path.fsPath();\n        const pluginId = plugin.metadata.model.id;\n        try {\n            const translations = await loadPackageTranslations(pluginPath, currentLanguage);\n            plugin = localizePackage(plugin, translations, (key, original) => {\n                const fullKey = `${pluginId}/package/${key}`;\n                return Localization.localize(localization, fullKey, original);\n            }) as DeployedPlugin;\n        } catch (err) {\n            console.error(`Failed to localize plugin '${pluginId}'.`, err);\n        }\n        return plugin;\n    }\n\n    getNlsConfig(): VSCodeNlsConfig {\n        const locale = this.localizationProvider.getCurrentLanguage();\n        const configFile = this.translationConfigFiles.get(locale);\n        if (locale === nls.defaultLocale || !configFile) {\n            return { locale, availableLanguages: {} };\n        }\n        const cache = path.dirname(configFile);\n        return {\n            locale,\n            availableLanguages: { '*': locale },\n            _languagePackSupport: true,\n            _cacheRoot: cache,\n            _languagePackId: locale,\n            _translationsConfigFile: configFile\n        };\n    }\n\n    async buildTranslationConfig(plugins: DeployedPlugin[]): Promise<void> {\n        await this.ready;\n        const cacheDir = await this.getLocalizationCacheDir();\n        const configs = new Map<string, Record<string, string>>();\n        for (const plugin of plugins) {\n            if (plugin.contributes?.localizations) {\n                const pluginPath = new URI(plugin.metadata.model.packageUri).path.fsPath();\n                for (const localization of plugin.contributes.localizations) {\n                    const config = configs.get(localization.languageId) || {};\n                    for (const translation of localization.translations) {\n                        const fullPath = path.join(pluginPath, translation.path);\n                        config[translation.id] = fullPath;\n                    }\n                    configs.set(localization.languageId, config);\n                }\n            }\n        }\n\n        for (const [language, config] of configs.entries()) {\n            const languageConfigDir = path.join(cacheDir, language);\n            await fs.mkdirs(languageConfigDir);\n            const configFile = path.join(languageConfigDir, `nls.config.${language}.json`);\n            this.translationConfigFiles.set(language, configFile);\n            await fs.writeJson(configFile, config);\n        }\n    }\n\n    protected async getLocalizationCacheDir(): Promise<string> {\n        const configDir = new URI(await this.envVariables.getConfigDirUri()).path.fsPath();\n        const cacheDir = path.join(configDir, 'localization-cache');\n        return cacheDir;\n    }\n}\n\n// New plugin localization logic using vscode.l10n\n\nfunction getL10nTranslation(translation: Translation): UnprocessedL10nBundle | undefined {\n    // 'bundle' is a special key that contains all translations for the l10n vscode API\n    // If that doesn't exist, we can assume that the language pack is using the old vscode-nls API\n    return translation.contents.bundle;\n}\n\nasync function loadPluginBundles(l10nUri: URI): Promise<Record<string, LanguagePackBundle> | undefined> {\n    try {\n        const directory = l10nUri.path.fsPath();\n        const files = await fs.readdir(directory);\n        const result: Record<string, LanguagePackBundle> = {};\n        await Promise.all(files.map(async fileName => {\n            const match = fileName.match(/^bundle\\.l10n\\.([\\w\\-]+)\\.json$/);\n            if (match) {\n                const locale = match[1];\n                const contents = await fs.readJSON(path.join(directory, fileName));\n                result[locale] = {\n                    contents,\n                    uri: l10nUri.resolve(fileName).toString()\n                };\n            }\n        }));\n        return result;\n    } catch (err) {\n        // The directory either doesn't exist or its contents cannot be parsed\n        console.error(`Failed to load plugin localization bundles from ${l10nUri}.`, err);\n        // In any way we should just safely return undefined\n        return undefined;\n    }\n}\n\ntype UnprocessedL10nBundle = Record<string, string | { message: string }>;\n\nfunction processL10nBundle(bundle: UnprocessedL10nBundle): Record<string, string> {\n    const processedBundle: Record<string, string> = {};\n    for (const [name, value] of Object.entries(bundle)) {\n        const stringValue = typeof value === 'string' ? value : value.message;\n        processedBundle[name] = stringValue;\n    }\n    return processedBundle;\n}\n\n// Old plugin localization logic for vscode-nls\n// vscode-nls was used until version 1.73 of VSCode to translate extensions\n\nfunction buildLocalizations(localizations: PluginLocalization[]): Localization[] {\n    const theiaLocalizations: Localization[] = [];\n    for (const localization of localizations) {\n        const theiaLocalization: Localization = {\n            languageId: localization.languageId,\n            languageName: localization.languageName,\n            localizedLanguageName: localization.localizedLanguageName,\n            languagePack: true,\n            translations: {}\n        };\n        for (const translation of localization.translations) {\n            for (const [scope, value] of Object.entries(translation.contents)) {\n                for (const [key, item] of Object.entries(value)) {\n                    const translationKey = buildTranslationKey(translation.id, scope, key);\n                    theiaLocalization.translations[translationKey] = item;\n                }\n            }\n        }\n        theiaLocalizations.push(theiaLocalization);\n    }\n    return theiaLocalizations;\n}\n\nfunction buildTranslationKey(pluginId: string, scope: string, key: string): string {\n    return `${pluginId}/${Localization.transformKey(scope)}/${key}`;\n}\n\n// Localization logic for `package.json` entries\n// Extensions can use `package.nls.json` files to store translations for values in their package.json\n// This logic has not changed with the introduction of the vscode.l10n API\n\ninterface PackageTranslation {\n    translation?: Record<string, string>\n    default?: Record<string, string>\n}\n\nasync function loadPackageTranslations(pluginPath: string, locale: string): Promise<PackageTranslation> {\n    const localizedPluginPath = path.join(pluginPath, `package.nls.${locale}.json`);\n    try {\n        const defaultValue = coerceLocalizations(await fs.readJson(path.join(pluginPath, 'package.nls.json')));\n        if (await fs.pathExists(localizedPluginPath)) {\n            return {\n                translation: coerceLocalizations(await fs.readJson(localizedPluginPath)),\n                default: defaultValue\n            };\n        }\n        return {\n            default: defaultValue\n        };\n    } catch (e) {\n        if (e.code !== 'ENOENT') {\n            throw e;\n        }\n        return {};\n    }\n}\n\ninterface LocalizeInfo {\n    message: string\n    comment?: string\n}\n\nfunction isLocalizeInfo(obj: unknown): obj is LocalizeInfo {\n    return isObject(obj) && 'message' in obj || false;\n}\n\nfunction coerceLocalizations(translations: Record<string, string | LocalizeInfo>): Record<string, string> {\n    for (const [key, value] of Object.entries(translations)) {\n        if (isLocalizeInfo(value)) {\n            translations[key] = value.message;\n        } else if (typeof value !== 'string') {\n            // Only strings or LocalizeInfo values are valid\n            translations[key] = 'INVALID TRANSLATION VALUE';\n        }\n    }\n    return translations as Record<string, string>;\n}\n\nconst NLS_REGEX = /^%([\\w\\d.-]+)%$/i;\n\nfunction localizePackage(value: unknown, translations: PackageTranslation, callback: (key: string, defaultValue: string) => string): unknown {\n    if (typeof value === 'string') {\n        const match = NLS_REGEX.exec(value);\n        let result = value;\n        if (match) {\n            const key = match[1];\n            if (translations.translation) {\n                result = translations.translation[key];\n            } else if (translations.default) {\n                result = callback(key, translations.default[key]);\n            }\n        }\n        return result;\n    }\n    if (Array.isArray(value)) {\n        const result = [];\n        for (const item of value) {\n            result.push(localizePackage(item, translations, callback));\n        }\n        return result;\n    }\n    if (isObject(value)) {\n        const result: Record<string, unknown> = {};\n        for (const [name, item] of Object.entries(value)) {\n            result[name] = localizePackage(item, translations, callback);\n        }\n        return result;\n    }\n    return value;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ConnectionErrorHandler, ContributionProvider, ILogger, MessageService } from '@theia/core/lib/common';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { createIpcEnv } from '@theia/core/lib/node/messaging/ipc-protocol';\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport * as cp from 'child_process';\nimport { HostedPluginCliContribution } from './hosted-plugin-cli-contribution';\nimport { HostedPluginLocalizationService } from './hosted-plugin-localization-service';\nimport { ProcessTerminatedMessage, ProcessTerminateMessage } from './hosted-plugin-protocol';\nimport { BinaryMessagePipe } from '@theia/core/lib/node/messaging/binary-message-pipe';\nimport { DeployedPlugin, HostedPluginClient, PluginHostEnvironmentVariable, PluginIdentifiers, PLUGIN_HOST_BACKEND, ServerPluginRunner } from '../../common/plugin-protocol';\nimport psTree = require('ps-tree');\nimport { Duplex } from 'stream';\n\nexport interface IPCConnectionOptions {\n    readonly serverName: string;\n    readonly logger: ILogger;\n    readonly args: string[];\n    readonly errorHandler?: ConnectionErrorHandler;\n}\n\nexport const HostedPluginProcessConfiguration = Symbol('HostedPluginProcessConfiguration');\nexport interface HostedPluginProcessConfiguration {\n    readonly path: string\n}\n\n@injectable()\nexport class HostedPluginProcess implements ServerPluginRunner {\n\n    @inject(HostedPluginProcessConfiguration)\n    protected configuration: HostedPluginProcessConfiguration;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(HostedPluginCliContribution)\n    protected readonly cli: HostedPluginCliContribution;\n\n    @inject(ContributionProvider)\n    @named(PluginHostEnvironmentVariable)\n    protected readonly pluginHostEnvironmentVariables: ContributionProvider<PluginHostEnvironmentVariable>;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(HostedPluginLocalizationService)\n    protected readonly localizationService: HostedPluginLocalizationService;\n\n    private childProcess: cp.ChildProcess | undefined;\n    private messagePipe?: BinaryMessagePipe;\n    private client: HostedPluginClient;\n\n    private terminatingPluginServer = false;\n\n    public setClient(client: HostedPluginClient): void {\n        if (this.client) {\n            if (this.childProcess) {\n                this.runPluginServer();\n            }\n        }\n        this.client = client;\n    }\n\n    public clientClosed(): void {\n\n    }\n\n    public setDefault(defaultRunner: ServerPluginRunner): void {\n\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public acceptMessage(pluginHostId: string, message: Uint8Array): boolean {\n        return pluginHostId === 'main';\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public onMessage(pluginHostId: string, message: Uint8Array): void {\n        if (this.messagePipe) {\n            this.messagePipe.send(message);\n        }\n    }\n\n    async terminatePluginServer(): Promise<void> {\n        if (this.childProcess === undefined) {\n            return;\n        }\n\n        this.terminatingPluginServer = true;\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const cp = this.childProcess;\n        this.childProcess = undefined;\n\n        const waitForTerminated = new Deferred<void>();\n        cp.on('message', message => {\n            const msg = JSON.parse(message as string);\n            if (ProcessTerminatedMessage.is(msg)) {\n                waitForTerminated.resolve();\n            }\n        });\n        const stopTimeout = this.cli.pluginHostStopTimeout;\n        cp.send(JSON.stringify({ type: ProcessTerminateMessage.TYPE, stopTimeout }));\n\n        const terminateTimeout = this.cli.pluginHostTerminateTimeout;\n        if (terminateTimeout) {\n            await Promise.race([\n                waitForTerminated.promise,\n                new Promise(resolve => setTimeout(resolve, terminateTimeout))\n            ]);\n        } else {\n            await waitForTerminated.promise;\n        }\n\n        this.killProcessTree(cp.pid!);\n    }\n\n    killProcessTree(parentPid: number): void {\n        psTree(parentPid, (_, childProcesses) => {\n            childProcesses.forEach(childProcess =>\n                this.killProcess(parseInt(childProcess.PID))\n            );\n            this.killProcess(parentPid);\n        });\n    }\n\n    protected killProcess(pid: number): void {\n        try {\n            process.kill(pid);\n        } catch (e) {\n            if (e && 'code' in e && e.code === 'ESRCH') {\n                return;\n            }\n            this.logger.error(`[${pid}] failed to kill`, e);\n        }\n    }\n\n    public runPluginServer(): void {\n        if (this.childProcess) {\n            this.terminatePluginServer();\n        }\n        this.terminatingPluginServer = false;\n        this.childProcess = this.fork({\n            serverName: 'hosted-plugin',\n            logger: this.logger,\n            args: []\n        });\n\n        this.messagePipe = new BinaryMessagePipe(this.childProcess.stdio[4] as Duplex);\n        this.messagePipe.onMessage(buffer => {\n            if (this.client) {\n                this.client.postMessage(PLUGIN_HOST_BACKEND, buffer);\n            }\n        });\n    }\n\n    readonly HOSTED_PLUGIN_ENV_REGEXP_EXCLUSION = new RegExp('HOSTED_PLUGIN*');\n    private fork(options: IPCConnectionOptions): cp.ChildProcess {\n\n        // create env and add PATH to it so any executable from root process is available\n        const env = createIpcEnv({ env: process.env });\n        for (const key of Object.keys(env)) {\n            if (this.HOSTED_PLUGIN_ENV_REGEXP_EXCLUSION.test(key)) {\n                delete env[key];\n            }\n        }\n        env['VSCODE_NLS_CONFIG'] = JSON.stringify(this.localizationService.getNlsConfig());\n        // apply external env variables\n        this.pluginHostEnvironmentVariables.getContributions().forEach(envVar => envVar.process(env));\n        if (this.cli.extensionTestsPath) {\n            env.extensionTestsPath = this.cli.extensionTestsPath;\n        }\n\n        const forkOptions: cp.ForkOptions = {\n            silent: true,\n            env: env,\n            execArgv: [],\n            // 5th element MUST be 'overlapped' for it to work properly on Windows.\n            // 'overlapped' works just like 'pipe' on non-Windows platforms.\n            // See: https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_options_stdio\n            // Note: For some reason `@types/node` does not know about 'overlapped'.\n            stdio: ['pipe', 'pipe', 'pipe', 'ipc', 'overlapped' as 'pipe']\n        };\n        const inspectArgPrefix = `--${options.serverName}-inspect`;\n        const inspectArg = process.argv.find(v => v.startsWith(inspectArgPrefix));\n        if (inspectArg !== undefined) {\n            forkOptions.execArgv = ['--nolazy', `--inspect${inspectArg.substring(inspectArgPrefix.length)}`];\n        }\n\n        const childProcess = cp.fork(this.configuration.path, options.args, forkOptions);\n        childProcess.stdout!.on('data', data => this.logger.info(`[${options.serverName}: ${childProcess.pid}] ${data.toString().trim()}`));\n        childProcess.stderr!.on('data', data => this.logger.error(`[${options.serverName}: ${childProcess.pid}] ${data.toString().trim()}`));\n\n        this.logger.debug(`[${options.serverName}: ${childProcess.pid}] IPC started`);\n        childProcess.once('exit', (code: number, signal: string) => this.onChildProcessExit(options.serverName, childProcess.pid!, code, signal));\n        childProcess.on('error', err => this.onChildProcessError(err));\n        return childProcess;\n    }\n\n    private onChildProcessExit(serverName: string, pid: number, code: number, signal: string): void {\n        if (this.terminatingPluginServer) {\n            return;\n        }\n        this.logger.error(`[${serverName}: ${pid}] IPC exited, with signal: ${signal}, and exit code: ${code}`);\n\n        const message = 'Plugin runtime crashed unexpectedly, all plugins are not working, please reload the page.';\n        let hintMessage: string = 'If it doesn\\'t help, please check Theia server logs.';\n        if (signal && signal.toUpperCase() === 'SIGKILL') {\n            // May happen in case of OOM or manual force stop.\n            hintMessage = 'Probably there is not enough memory for the plugins. ' + hintMessage;\n        }\n\n        this.messageService.error(message + ' ' + hintMessage, { timeout: 15 * 60 * 1000 });\n    }\n\n    private onChildProcessError(err: Error): void {\n        this.logger.error(`Error from plugin host: ${err.message}`);\n    }\n\n    /**\n     * Provides additional plugin ids.\n     */\n    public async getExtraDeployedPluginIds(): Promise<PluginIdentifiers.VersionedId[]> {\n        return [];\n    }\n\n    /**\n     * Provides additional deployed plugins.\n     */\n    public async getExtraDeployedPlugins(): Promise<DeployedPlugin[]> {\n        return [];\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, multiInject, postConstruct, optional } from '@theia/core/shared/inversify';\nimport { ILogger, ConnectionErrorHandler } from '@theia/core/lib/common';\nimport { HostedPluginClient, PluginModel, ServerPluginRunner, DeployedPlugin, PluginIdentifiers } from '../../common/plugin-protocol';\nimport { LogPart } from '../../common/types';\nimport { HostedPluginProcess } from './hosted-plugin-process';\n\nexport interface IPCConnectionOptions {\n    readonly serverName: string;\n    readonly logger: ILogger;\n    readonly args: string[];\n    readonly errorHandler?: ConnectionErrorHandler;\n}\n\n@injectable()\nexport class HostedPluginSupport {\n    private isPluginProcessRunning = false;\n    private client: HostedPluginClient;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(HostedPluginProcess)\n    protected readonly hostedPluginProcess: HostedPluginProcess;\n\n    /**\n     * Optional runners to delegate some work\n     */\n    @optional()\n    @multiInject(ServerPluginRunner)\n    private readonly pluginRunners: ServerPluginRunner[];\n\n    @postConstruct()\n    protected init(): void {\n        this.pluginRunners.forEach(runner => {\n            runner.setDefault(this.hostedPluginProcess);\n        });\n    }\n\n    setClient(client: HostedPluginClient): void {\n        this.client = client;\n        this.hostedPluginProcess.setClient(client);\n        this.pluginRunners.forEach(runner => runner.setClient(client));\n    }\n\n    clientClosed(): void {\n        this.isPluginProcessRunning = false;\n        this.terminatePluginServer();\n        this.isPluginProcessRunning = false;\n        this.pluginRunners.forEach(runner => runner.clientClosed());\n    }\n\n    runPlugin(plugin: PluginModel): void {\n        if (!plugin.entryPoint.frontend) {\n            this.runPluginServer();\n        }\n    }\n\n    onMessage(pluginHostId: string, message: Uint8Array): void {\n        // need to perform routing\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.pluginRunners.length > 0) {\n            this.pluginRunners.forEach(runner => {\n                if (runner.acceptMessage(pluginHostId, message)) {\n                    runner.onMessage(pluginHostId, message);\n                }\n            });\n        } else {\n            this.hostedPluginProcess.onMessage(pluginHostId, message);\n        }\n    }\n\n    runPluginServer(): void {\n        if (!this.isPluginProcessRunning) {\n            this.hostedPluginProcess.runPluginServer();\n            this.isPluginProcessRunning = true;\n        }\n    }\n\n    /**\n     * Provides additional plugin ids.\n     */\n    async getExtraDeployedPluginIds(): Promise<PluginIdentifiers.VersionedId[]> {\n        return [].concat.apply([], await Promise.all(this.pluginRunners.map(runner => runner.getExtraDeployedPluginIds())));\n    }\n\n    /**\n     * Provides additional deployed plugins.\n     */\n    async getExtraDeployedPlugins(): Promise<DeployedPlugin[]> {\n        return [].concat.apply([], await Promise.all(this.pluginRunners.map(runner => runner.getExtraDeployedPlugins())));\n    }\n\n    sendLog(logPart: LogPart): void {\n        this.client.log(logPart);\n    }\n\n    private terminatePluginServer(): void {\n        this.hostedPluginProcess.terminatePluginServer();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2015-2018 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, multiInject } from '@theia/core/shared/inversify';\nimport { PluginPackage, PluginScanner, PluginMetadata, PLUGIN_HOST_BACKEND, PluginIdentifiers } from '../../common/plugin-protocol';\nimport { PluginUninstallationManager } from '../../main/node/plugin-uninstallation-manager';\n@injectable()\nexport class MetadataScanner {\n    private scanners: Map<string, PluginScanner> = new Map();\n\n    @inject(PluginUninstallationManager) protected readonly uninstallationManager: PluginUninstallationManager;\n\n    constructor(@multiInject(PluginScanner) scanners: PluginScanner[]) {\n        scanners.forEach((scanner: PluginScanner) => {\n            this.scanners.set(scanner.apiType, scanner);\n        });\n    }\n\n    getPluginMetadata(plugin: PluginPackage): PluginMetadata {\n        const scanner = this.getScanner(plugin);\n        return {\n            host: PLUGIN_HOST_BACKEND,\n            model: scanner.getModel(plugin),\n            lifecycle: scanner.getLifecycle(plugin),\n            outOfSync: this.uninstallationManager.isUninstalled(PluginIdentifiers.componentsToVersionedId(plugin)),\n        };\n    }\n\n    /**\n     * Returns the first suitable scanner.\n     *\n     * Throws if no scanner was found.\n     *\n     * @param {PluginPackage} plugin\n     * @returns {PluginScanner}\n     */\n    getScanner(plugin: PluginPackage): PluginScanner {\n        let scanner: PluginScanner | undefined;\n        if (plugin && plugin.engines) {\n            const scanners = Object.keys(plugin.engines)\n                .filter(engineName => this.scanners.has(engineName))\n                .map(engineName => this.scanners.get(engineName)!);\n            // get the first suitable scanner from the list\n            scanner = scanners[0];\n        }\n        if (!scanner) {\n            throw new Error('There is no suitable scanner found for ' + plugin.name);\n        }\n        return scanner;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018-2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { CliContribution } from '@theia/core/lib/node/cli';\nimport { ConnectionContainerModule } from '@theia/core/lib/node/messaging/connection-container-module';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { MetadataScanner } from './metadata-scanner';\nimport { HostedPluginServerImpl } from './plugin-service';\nimport { HostedPluginReader } from './plugin-reader';\nimport { HostedPluginSupport } from './hosted-plugin';\nimport { TheiaPluginScanner } from './scanners/scanner-theia';\nimport { HostedPluginServer, PluginScanner, HostedPluginClient, hostedServicePath, PluginDeployerHandler, PluginHostEnvironmentVariable } from '../../common/plugin-protocol';\nimport { GrammarsReader } from './scanners/grammars-reader';\nimport { HostedPluginProcess, HostedPluginProcessConfiguration } from './hosted-plugin-process';\nimport { ExtPluginApiProvider } from '../../common/plugin-ext-api-contribution';\nimport { HostedPluginCliContribution } from './hosted-plugin-cli-contribution';\nimport { HostedPluginDeployerHandler } from './hosted-plugin-deployer-handler';\nimport { PluginUriFactory } from './scanners/plugin-uri-factory';\nimport { FilePluginUriFactory } from './scanners/file-plugin-uri-factory';\nimport { HostedPluginLocalizationService } from './hosted-plugin-localization-service';\nimport { LanguagePackService, languagePackServicePath } from '../../common/language-pack-service';\nimport { PluginLanguagePackService } from './plugin-language-pack-service';\nimport { RpcConnectionHandler } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { ConnectionHandler } from '@theia/core/lib/common/messaging/handler';\n\nconst commonHostedConnectionModule = ConnectionContainerModule.create(({ bind, bindBackendService }) => {\n    bind(HostedPluginProcess).toSelf().inSingletonScope();\n    bind(HostedPluginSupport).toSelf().inSingletonScope();\n\n    bindContributionProvider(bind, Symbol.for(ExtPluginApiProvider));\n    bindContributionProvider(bind, PluginHostEnvironmentVariable);\n\n    bind(HostedPluginServerImpl).toSelf().inSingletonScope();\n    bind(HostedPluginServer).toService(HostedPluginServerImpl);\n    bindBackendService<HostedPluginServer, HostedPluginClient>(hostedServicePath, HostedPluginServer, (server, client) => {\n        server.setClient(client);\n        client.onDidCloseConnection(() => server.dispose());\n        return server;\n    });\n});\n\nexport function bindCommonHostedBackend(bind: interfaces.Bind): void {\n    bind(HostedPluginCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(HostedPluginCliContribution);\n\n    bind(MetadataScanner).toSelf().inSingletonScope();\n    bind(HostedPluginReader).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(HostedPluginReader);\n\n    bind(HostedPluginLocalizationService).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(HostedPluginLocalizationService);\n    bind(HostedPluginDeployerHandler).toSelf().inSingletonScope();\n    bind(PluginDeployerHandler).toService(HostedPluginDeployerHandler);\n\n    bind(PluginLanguagePackService).toSelf().inSingletonScope();\n    bind(LanguagePackService).toService(PluginLanguagePackService);\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(languagePackServicePath, () =>\n            ctx.container.get(LanguagePackService)\n        )\n    ).inSingletonScope();\n\n    bind(GrammarsReader).toSelf().inSingletonScope();\n    bind(HostedPluginProcessConfiguration).toConstantValue({\n        path: path.join(__dirname, 'plugin-host'),\n    });\n\n    bind(ConnectionContainerModule).toConstantValue(commonHostedConnectionModule);\n    bind(PluginUriFactory).to(FilePluginUriFactory).inSingletonScope();\n}\n\nexport function bindHostedBackend(bind: interfaces.Bind): void {\n    bindCommonHostedBackend(bind);\n\n    bind(PluginScanner).to(TheiaPluginScanner).inSingletonScope();\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { LanguagePackBundle, LanguagePackService } from '../../common/language-pack-service';\n\n@injectable()\nexport class PluginLanguagePackService implements LanguagePackService {\n\n    protected readonly storage = new Map<string, Map<string, LanguagePackBundle>>();\n\n    storeBundle(pluginId: string, locale: string, bundle: LanguagePackBundle): void {\n        if (!this.storage.has(pluginId)) {\n            this.storage.set(pluginId, new Map());\n        }\n        this.storage.get(pluginId)!.set(locale, bundle);\n    }\n\n    deleteBundle(pluginId: string, locale?: string): void {\n        if (locale) {\n            this.storage.get(pluginId)?.delete(locale);\n        } else {\n            this.storage.delete(pluginId);\n        }\n    }\n\n    async getBundle(pluginId: string, locale: string): Promise<LanguagePackBundle | undefined> {\n        return this.storage.get(pluginId)?.get(locale);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as express from '@theia/core/shared/express';\nimport * as escape_html from 'escape-html';\nimport { ILogger } from '@theia/core';\nimport { inject, injectable, optional, multiInject } from '@theia/core/shared/inversify';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { PluginMetadata, getPluginId, MetadataProcessor, PluginPackage, PluginContribution } from '../../common/plugin-protocol';\nimport { MetadataScanner } from './metadata-scanner';\nimport { loadManifest } from './plugin-manifest-loader';\n\n@injectable()\nexport class HostedPluginReader implements BackendApplicationContribution {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(MetadataScanner)\n    protected readonly scanner: MetadataScanner;\n\n    @optional()\n    @multiInject(MetadataProcessor) private readonly metadataProcessors: MetadataProcessor[];\n\n    /**\n     * Map between a plugin id and its local storage\n     */\n    protected pluginsIdsFiles: Map<string, string> = new Map();\n\n    configure(app: express.Application): void {\n        app.get('/hostedPlugin/:pluginId/:path(*)', async (req, res) => {\n            const pluginId = req.params.pluginId;\n            const filePath = req.params.path;\n\n            const localPath = this.pluginsIdsFiles.get(pluginId);\n            if (localPath) {\n                res.sendFile(filePath, { root: localPath }, e => {\n                    if (!e) {\n                        // the file was found and successfully transferred\n                        return;\n                    }\n                    console.error(`Could not transfer '${filePath}' file from '${pluginId}'`, e);\n                    if (res.headersSent) {\n                        // the request was already closed\n                        return;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((e as any)['code'] === 'ENOENT') {\n                        res.status(404).send(`No such file found in '${escape_html(pluginId)}' plugin.`);\n                    } else {\n                        res.status(500).send(`Failed to transfer a file from '${escape_html(pluginId)}' plugin.`);\n                    }\n                });\n            } else {\n                await this.handleMissingResource(req, res);\n            }\n        });\n    }\n\n    protected async handleMissingResource(req: express.Request, res: express.Response): Promise<void> {\n        const pluginId = req.params.pluginId;\n        res.status(404).send(`The plugin with id '${escape_html(pluginId)}' does not exist.`);\n    }\n\n    /**\n     * @throws never\n     */\n    async getPluginMetadata(pluginPath: string | undefined): Promise<PluginMetadata | undefined> {\n        try {\n            const manifest = await this.readPackage(pluginPath);\n            return manifest && this.readMetadata(manifest);\n        } catch (e) {\n            this.logger.error(`Failed to load plugin metadata from \"${pluginPath}\"`, e);\n            return undefined;\n        }\n    }\n\n    async readPackage(pluginPath: string | undefined): Promise<PluginPackage | undefined> {\n        if (!pluginPath) {\n            return undefined;\n        }\n        const manifest = await loadManifest(pluginPath);\n        if (!manifest) {\n            return undefined;\n        }\n        manifest.packagePath = pluginPath;\n        return manifest;\n    }\n\n    readMetadata(plugin: PluginPackage): PluginMetadata {\n        const pluginMetadata = this.scanner.getPluginMetadata(plugin);\n        if (pluginMetadata.model.entryPoint.backend) {\n            pluginMetadata.model.entryPoint.backend = path.resolve(plugin.packagePath, pluginMetadata.model.entryPoint.backend);\n        }\n        if (pluginMetadata) {\n            // Add post processor\n            if (this.metadataProcessors) {\n                this.metadataProcessors.forEach(metadataProcessor => {\n                    metadataProcessor.process(pluginMetadata);\n                });\n            }\n            this.pluginsIdsFiles.set(getPluginId(pluginMetadata.model), plugin.packagePath);\n        }\n        return pluginMetadata;\n    }\n\n    async readContribution(plugin: PluginPackage): Promise<PluginContribution | undefined> {\n        const scanner = this.scanner.getScanner(plugin);\n        return scanner.getContribution(plugin);\n    }\n\n    readDependencies(plugin: PluginPackage): Map<string, string> | undefined {\n        const scanner = this.scanner.getScanner(plugin);\n        return scanner.getDependencies(plugin);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable, inject, named, postConstruct } from '@theia/core/shared/inversify';\nimport { HostedPluginServer, HostedPluginClient, PluginDeployer, GetDeployedPluginsParams, DeployedPlugin, PluginIdentifiers } from '../../common/plugin-protocol';\nimport { HostedPluginSupport } from './hosted-plugin';\nimport { ILogger, Disposable, ContributionProvider, DisposableCollection } from '@theia/core';\nimport { ExtPluginApiProvider, ExtPluginApi } from '../../common/plugin-ext-api-contribution';\nimport { HostedPluginDeployerHandler } from './hosted-plugin-deployer-handler';\nimport { PluginDeployerImpl } from '../../main/node/plugin-deployer-impl';\nimport { HostedPluginLocalizationService } from './hosted-plugin-localization-service';\nimport { PluginUninstallationManager } from '../../main/node/plugin-uninstallation-manager';\n\n@injectable()\nexport class HostedPluginServerImpl implements HostedPluginServer {\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(HostedPluginDeployerHandler)\n    protected readonly deployerHandler: HostedPluginDeployerHandler;\n\n    @inject(PluginDeployer)\n    protected readonly pluginDeployer: PluginDeployerImpl;\n\n    @inject(HostedPluginLocalizationService)\n    protected readonly localizationService: HostedPluginLocalizationService;\n\n    @inject(ContributionProvider)\n    @named(Symbol.for(ExtPluginApiProvider))\n    protected readonly extPluginAPIContributions: ContributionProvider<ExtPluginApiProvider>;\n\n    @inject(PluginUninstallationManager) protected readonly uninstallationManager: PluginUninstallationManager;\n\n    protected client: HostedPluginClient | undefined;\n    protected toDispose = new DisposableCollection();\n\n    protected _ignoredPlugins?: Set<PluginIdentifiers.VersionedId>;\n    // We ignore any plugins that are marked as uninstalled the first time the frontend requests information about deployed plugins.\n    protected get ignoredPlugins(): Set<PluginIdentifiers.VersionedId> {\n        if (!this._ignoredPlugins) {\n            this._ignoredPlugins = new Set(this.uninstallationManager.getUninstalledPluginIds());\n        }\n        return this._ignoredPlugins;\n    }\n\n    protected readonly pluginVersions = new Map<PluginIdentifiers.UnversionedId, string>();\n\n    constructor(\n        @inject(HostedPluginSupport) private readonly hostedPlugin: HostedPluginSupport) {\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.pushAll([\n            this.pluginDeployer.onDidDeploy(() => this.client?.onDidDeploy()),\n            this.uninstallationManager.onDidChangeUninstalledPlugins(currentUninstalled => {\n                if (this._ignoredPlugins) {\n                    const uninstalled = new Set(currentUninstalled);\n                    for (const previouslyUninstalled of this._ignoredPlugins) {\n                        if (!uninstalled.has(previouslyUninstalled)) {\n                            this._ignoredPlugins.delete(previouslyUninstalled);\n                        }\n                    }\n                }\n                this.client?.onDidDeploy();\n            }),\n            Disposable.create(() => this.hostedPlugin.clientClosed()),\n        ]);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    setClient(client: HostedPluginClient): void {\n        this.client = client;\n        this.hostedPlugin.setClient(client);\n    }\n\n    async getDeployedPluginIds(): Promise<PluginIdentifiers.VersionedId[]> {\n        const backendMetadata = await this.deployerHandler.getDeployedBackendPluginIds();\n        if (backendMetadata.length > 0) {\n            this.hostedPlugin.runPluginServer();\n        }\n        const plugins = new Set<PluginIdentifiers.VersionedId>();\n        const addIds = async (identifiers: PluginIdentifiers.VersionedId[]): Promise<void> => {\n            for (const pluginId of identifiers) {\n                if (this.isRelevantPlugin(pluginId)) {\n                    plugins.add(pluginId);\n                }\n            }\n        };\n        addIds(await this.deployerHandler.getDeployedFrontendPluginIds());\n        addIds(backendMetadata);\n        addIds(await this.hostedPlugin.getExtraDeployedPluginIds());\n        return Array.from(plugins);\n    }\n\n    /**\n     * Ensures that the plugin was not uninstalled when this session was started\n     * and that it matches the first version of the given plugin seen by this session.\n     *\n     * The deployment system may have multiple versions of the same plugin available, but\n     * a single session should only ever activate one of them.\n     */\n    protected isRelevantPlugin(identifier: PluginIdentifiers.VersionedId): boolean {\n        const versionAndId = PluginIdentifiers.idAndVersionFromVersionedId(identifier);\n        if (!versionAndId) {\n            return false;\n        }\n        const knownVersion = this.pluginVersions.get(versionAndId.id);\n        if (knownVersion !== undefined && knownVersion !== versionAndId.version) {\n            return false;\n        }\n        if (this.ignoredPlugins.has(identifier)) {\n            return false;\n        }\n        if (knownVersion === undefined) {\n            this.pluginVersions.set(versionAndId.id, versionAndId.version);\n        }\n        return true;\n    }\n\n    getUninstalledPluginIds(): Promise<readonly PluginIdentifiers.VersionedId[]> {\n        return Promise.resolve(this.uninstallationManager.getUninstalledPluginIds());\n    }\n\n    async getDeployedPlugins({ pluginIds }: GetDeployedPluginsParams): Promise<DeployedPlugin[]> {\n        if (!pluginIds.length) {\n            return [];\n        }\n        const plugins: DeployedPlugin[] = [];\n        let extraDeployedPlugins: Map<string, DeployedPlugin> | undefined;\n        for (const versionedId of pluginIds) {\n            if (!this.isRelevantPlugin(versionedId)) {\n                continue;\n            }\n            let plugin = this.deployerHandler.getDeployedPlugin(versionedId);\n            if (!plugin) {\n                if (!extraDeployedPlugins) {\n                    extraDeployedPlugins = new Map<string, DeployedPlugin>();\n                    for (const extraDeployedPlugin of await this.hostedPlugin.getExtraDeployedPlugins()) {\n                        extraDeployedPlugins.set(PluginIdentifiers.componentsToVersionedId(extraDeployedPlugin.metadata.model), extraDeployedPlugin);\n                    }\n                }\n                plugin = extraDeployedPlugins.get(versionedId);\n            }\n            if (plugin) {\n                plugins.push(plugin);\n            }\n        }\n        return Promise.all(plugins.map(plugin => this.localizationService.localizePlugin(plugin)));\n    }\n\n    onMessage(pluginHostId: string, message: Uint8Array): Promise<void> {\n        this.hostedPlugin.onMessage(pluginHostId, message);\n        return Promise.resolve();\n    }\n\n    getExtPluginAPI(): Promise<ExtPluginApi[]> {\n        return Promise.resolve(this.extPluginAPIContributions.getContributions().map(p => p.provideApi()));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as path from 'path';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { PluginPackage } from '../../../common';\nimport { PluginUriFactory } from './plugin-uri-factory';\n/**\n * The default implementation of PluginUriFactory simply returns a File URI from the concatenated\n * package path and relative path.\n */\n@injectable()\nexport class FilePluginUriFactory implements PluginUriFactory {\n    createUri(pkg: PluginPackage, pkgRelativePath?: string): URI {\n        return FileUri.create(pkgRelativePath ? path.join(pkg.packagePath, pkgRelativePath) : pkg.packagePath);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2015-2018 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PluginPackageGrammarsContribution, GrammarsContribution } from '../../../common';\nimport * as path from 'path';\nimport * as fs from '@theia/core/shared/fs-extra';\n\n@injectable()\nexport class GrammarsReader {\n\n    async readGrammars(rawGrammars: PluginPackageGrammarsContribution[], pluginPath: string): Promise<GrammarsContribution[]> {\n        const result = new Array<GrammarsContribution>();\n        for (const rawGrammar of rawGrammars) {\n            const grammar = await this.readGrammar(rawGrammar, pluginPath);\n            if (grammar) {\n                result.push(grammar);\n            }\n        }\n\n        return result;\n    }\n\n    private async readGrammar(rawGrammar: PluginPackageGrammarsContribution, pluginPath: string): Promise<GrammarsContribution | undefined> {\n        // TODO: validate inputs\n        let grammar: string | object;\n\n        if (rawGrammar.path.endsWith('json')) {\n            grammar = await fs.readJSON(path.resolve(pluginPath, rawGrammar.path));\n        } else {\n            grammar = await fs.readFile(path.resolve(pluginPath, rawGrammar.path), 'utf8');\n        }\n        return {\n            language: rawGrammar.language,\n            scope: rawGrammar.scopeName,\n            format: rawGrammar.path.endsWith('json') ? 'json' : 'plist',\n            grammar: grammar,\n            grammarLocation: rawGrammar.path,\n            injectTo: rawGrammar.injectTo,\n            embeddedLanguages: rawGrammar.embeddedLanguages,\n            tokenTypes: rawGrammar.tokenTypes\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { PluginPackage } from '../../../common';\n\nexport const PluginUriFactory = Symbol('PluginUriFactory');\n/**\n * Creates URIs for resources used in plugin contributions. Projects where plugin host is not located on the back-end\n * machine and therefor resources cannot be loaded from the local file system in the back end can override the factory.\n */\nexport interface PluginUriFactory {\n    /**\n     * Returns a URI that allows a file to be loaded given a plugin package and a path relative to the plugin's package path\n     *\n     * @param pkg the package this the file is contained in\n     * @param pkgRelativePath the path of the file relative to the package path, e.g. 'resources/snippets.json'\n     */\n    createUri(pkg: PluginPackage, pkgRelativePath?: string): URI;\n}\n","// *****************************************************************************\n// Copyright (C) 2015-2021 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @theia/localization-check */\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    AutoClosingPair,\n    AutoClosingPairConditional,\n    buildFrontendModuleName,\n    DebuggerContribution,\n    IconThemeContribution,\n    IconUrl,\n    Keybinding,\n    LanguageConfiguration,\n    LanguageContribution,\n    Menu,\n    PluginCommand,\n    PluginContribution,\n    PluginEngine,\n    PluginLifecycle,\n    PluginModel,\n    PluginPackage,\n    PluginPackageCommand,\n    PluginPackageDebuggersContribution,\n    PluginPackageKeybinding,\n    PluginPackageLanguageContribution,\n    PluginPackageLanguageContributionConfiguration,\n    PluginPackageMenu,\n    PluginPackageSubmenu,\n    PluginPackageView,\n    PluginPackageViewContainer,\n    PluginPackageViewWelcome,\n    PluginScanner,\n    PluginTaskDefinitionContribution,\n    SnippetContribution,\n    Submenu,\n    ThemeContribution,\n    View,\n    ViewContainer,\n    ViewWelcome,\n    PluginPackageCustomEditor,\n    CustomEditor,\n    CustomEditorPriority,\n    PluginPackageLocalization,\n    Localization,\n    PluginPackageTranslation,\n    Translation,\n    PluginIdentifiers,\n    TerminalProfile\n} from '../../../common/plugin-protocol';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport { isObject, isStringArray, RecursivePartial } from '@theia/core/lib/common/types';\nimport { GrammarsReader } from './grammars-reader';\nimport { CharacterPair } from '../../../common/plugin-api-rpc';\nimport { isENOENT } from '../../../common/errors';\nimport * as jsoncparser from 'jsonc-parser';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport { deepClone } from '@theia/core/lib/common/objects';\nimport { PreferenceSchema, PreferenceSchemaProperties } from '@theia/core/lib/common/preferences/preference-schema';\nimport { TaskDefinition } from '@theia/task/lib/common/task-protocol';\nimport { ColorDefinition } from '@theia/core/lib/common/color';\nimport { PluginUriFactory } from './plugin-uri-factory';\n\nnamespace nls {\n    export function localize(key: string, _default: string): string {\n        return _default;\n    }\n}\n\nconst INTERNAL_CONSOLE_OPTIONS_SCHEMA = {\n    enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart'],\n    default: 'openOnFirstSessionStart',\n    description: nls.localize('internalConsoleOptions', 'Controls when the internal debug console should open.')\n};\n\nconst colorIdPattern = '^\\\\w+[.\\\\w+]*$';\n\n@injectable()\nexport class TheiaPluginScanner implements PluginScanner {\n\n    private readonly _apiType: PluginEngine = 'theiaPlugin';\n\n    @inject(GrammarsReader)\n    private readonly grammarsReader: GrammarsReader;\n\n    @inject(PluginUriFactory)\n    protected readonly pluginUriFactory: PluginUriFactory;\n\n    get apiType(): PluginEngine {\n        return this._apiType;\n    }\n\n    getModel(plugin: PluginPackage): PluginModel {\n        const publisher = plugin.publisher ?? PluginIdentifiers.UNPUBLISHED;\n        const result: PluginModel = {\n            packagePath: plugin.packagePath,\n            packageUri: this.pluginUriFactory.createUri(plugin).toString(),\n            // see id definition: https://github.com/microsoft/vscode/blob/15916055fe0cb9411a5f36119b3b012458fe0a1d/src/vs/platform/extensions/common/extensions.ts#L167-L169\n            id: `${publisher.toLowerCase()}.${plugin.name.toLowerCase()}`,\n            name: plugin.name,\n            publisher,\n            version: plugin.version,\n            displayName: plugin.displayName,\n            description: plugin.description,\n            l10n: plugin.l10n,\n            engine: {\n                type: this._apiType,\n                version: plugin.engines[this._apiType]\n            },\n            entryPoint: {\n                frontend: plugin.theiaPlugin!.frontend,\n                backend: plugin.theiaPlugin!.backend\n            }\n        };\n        return result;\n    }\n\n    getLifecycle(plugin: PluginPackage): PluginLifecycle {\n        return {\n            startMethod: 'start',\n            stopMethod: 'stop',\n            frontendModuleName: buildFrontendModuleName(plugin),\n\n            backendInitPath: path.join(__dirname, 'backend-init-theia')\n        };\n    }\n\n    getDependencies(rawPlugin: PluginPackage): Map<string, string> | undefined {\n        // skip it since there is no way to load transitive dependencies for Theia plugins yet\n        return undefined;\n    }\n\n    async getContribution(rawPlugin: PluginPackage): Promise<PluginContribution | undefined> {\n        if (!rawPlugin.contributes && !rawPlugin.activationEvents) {\n            return undefined;\n        }\n\n        const contributions: PluginContribution = {\n            activationEvents: rawPlugin.activationEvents\n        };\n\n        if (!rawPlugin.contributes) {\n            return contributions;\n        }\n\n        try {\n            if (rawPlugin.contributes.configuration) {\n                const configurations = Array.isArray(rawPlugin.contributes.configuration) ? rawPlugin.contributes.configuration : [rawPlugin.contributes.configuration];\n                contributions.configuration = [];\n                for (const c of configurations) {\n                    const config = this.readConfiguration(c, rawPlugin.packagePath);\n                    if (config) {\n                        contributions.configuration.push(config);\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'configuration'.`, rawPlugin.contributes.configuration, err);\n        }\n\n        const configurationDefaults = rawPlugin.contributes.configurationDefaults;\n        contributions.configurationDefaults = PreferenceSchemaProperties.is(configurationDefaults) ? configurationDefaults : undefined;\n\n        try {\n            if (rawPlugin.contributes.submenus) {\n                contributions.submenus = this.readSubmenus(rawPlugin.contributes.submenus, rawPlugin);\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'submenus'.`, rawPlugin.contributes.submenus, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.customEditors) {\n                const customEditors = this.readCustomEditors(rawPlugin.contributes.customEditors);\n                contributions.customEditors = customEditors;\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'customEditors'.`, rawPlugin.contributes.customEditors, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.viewsContainers) {\n                const viewsContainers = rawPlugin.contributes.viewsContainers;\n                contributions.viewsContainers = {};\n\n                for (const location of Object.keys(viewsContainers)) {\n                    const containers = this.readViewsContainers(viewsContainers[location], rawPlugin);\n                    const loc = location === 'activitybar' ? 'left' : location === 'panel' ? 'bottom' : location;\n                    if (contributions.viewsContainers[loc]) {\n                        contributions.viewsContainers[loc] = contributions.viewsContainers[loc].concat(containers);\n                    } else {\n                        contributions.viewsContainers[loc] = containers;\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'viewsContainers'.`, rawPlugin.contributes.viewsContainers, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.views) {\n                contributions.views = {};\n\n                for (const location of Object.keys(rawPlugin.contributes.views)) {\n                    const views = this.readViews(rawPlugin.contributes.views[location]);\n                    contributions.views[location] = views;\n                }\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'views'.`, rawPlugin.contributes.views, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.viewsWelcome) {\n                contributions.viewsWelcome = this.readViewsWelcome(rawPlugin.contributes!.viewsWelcome, rawPlugin.contributes.views);\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'viewsWelcome'.`, rawPlugin.contributes.viewsWelcome, err);\n        }\n\n        try {\n            const pluginCommands = rawPlugin.contributes.commands;\n            if (pluginCommands) {\n                const commands = Array.isArray(pluginCommands) ? pluginCommands : [pluginCommands];\n                contributions.commands = commands.map(command => this.readCommand(command, rawPlugin));\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'commands'.`, rawPlugin.contributes!.commands, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.menus) {\n                contributions.menus = {};\n\n                for (const location of Object.keys(rawPlugin.contributes.menus)) {\n                    const menus = this.readMenus(rawPlugin.contributes.menus[location]);\n                    contributions.menus[location] = menus;\n                }\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'menus'.`, rawPlugin.contributes.menus, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.keybindings) {\n                const rawKeybindings = Array.isArray(rawPlugin.contributes.keybindings) ? rawPlugin.contributes.keybindings : [rawPlugin.contributes.keybindings];\n                contributions.keybindings = rawKeybindings.map(rawKeybinding => this.readKeybinding(rawKeybinding));\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'keybindings'.`, rawPlugin.contributes.keybindings, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.debuggers) {\n                const debuggers = this.readDebuggers(rawPlugin.contributes.debuggers);\n                contributions.debuggers = debuggers;\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'debuggers'.`, rawPlugin.contributes.debuggers, err);\n        }\n\n        try {\n            if (rawPlugin.contributes.taskDefinitions) {\n                const definitions = rawPlugin.contributes.taskDefinitions!;\n                contributions.taskDefinitions = definitions.map(definitionContribution => this.readTaskDefinition(rawPlugin.name, definitionContribution));\n            }\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'taskDefinitions'.`, rawPlugin.contributes.taskDefinitions, err);\n        }\n\n        try {\n            contributions.problemMatchers = rawPlugin.contributes.problemMatchers;\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'problemMatchers'.`, rawPlugin.contributes.problemMatchers, err);\n        }\n\n        try {\n            contributions.problemPatterns = rawPlugin.contributes.problemPatterns;\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'problemPatterns'.`, rawPlugin.contributes.problemPatterns, err);\n        }\n\n        try {\n            contributions.resourceLabelFormatters = rawPlugin.contributes.resourceLabelFormatters;\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'resourceLabelFormatters'.`, rawPlugin.contributes.resourceLabelFormatters, err);\n        }\n\n        try {\n            contributions.authentication = rawPlugin.contributes.authentication;\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'authentication'.`, rawPlugin.contributes.authentication, err);\n        }\n\n        try {\n            contributions.notebooks = rawPlugin.contributes.notebooks;\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'notebooks'.`, rawPlugin.contributes.authentication, err);\n        }\n\n        try {\n            contributions.notebookRenderer = rawPlugin.contributes.notebookRenderer;\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'notebooks'.`, rawPlugin.contributes.authentication, err);\n        }\n\n        try {\n            contributions.snippets = this.readSnippets(rawPlugin);\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'snippets'.`, rawPlugin.contributes!.snippets, err);\n        }\n\n        try {\n            contributions.themes = this.readThemes(rawPlugin);\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'themes'.`, rawPlugin.contributes.themes, err);\n        }\n\n        try {\n            contributions.iconThemes = this.readIconThemes(rawPlugin);\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'iconThemes'.`, rawPlugin.contributes.iconThemes, err);\n        }\n\n        try {\n            contributions.colors = this.readColors(rawPlugin);\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'colors'.`, rawPlugin.contributes.colors, err);\n        }\n\n        try {\n            contributions.terminalProfiles = this.readTerminals(rawPlugin);\n        } catch (err) {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'terminals'.`, rawPlugin.contributes.terminal, err);\n        }\n\n        const [localizationsResult, languagesResult, grammarsResult] = await Promise.allSettled([\n            this.readLocalizations(rawPlugin),\n            rawPlugin.contributes.languages ? this.readLanguages(rawPlugin.contributes.languages, rawPlugin.packagePath) : undefined,\n            rawPlugin.contributes.grammars ? this.grammarsReader.readGrammars(rawPlugin.contributes.grammars, rawPlugin.packagePath) : undefined\n        ]);\n\n        if (localizationsResult.status === 'fulfilled') {\n            contributions.localizations = localizationsResult.value;\n        } else {\n            console.error(`Could not read '${rawPlugin.name}' contribution 'localizations'.`, rawPlugin.contributes.localizations, localizationsResult.reason);\n        }\n\n        if (rawPlugin.contributes.languages) {\n            if (languagesResult.status === 'fulfilled') {\n                contributions.languages = languagesResult.value;\n            } else {\n                console.error(`Could not read '${rawPlugin.name}' contribution 'languages'.`, rawPlugin.contributes.languages, languagesResult.reason);\n            }\n        }\n\n        if (rawPlugin.contributes.grammars) {\n            if (grammarsResult.status === 'fulfilled') {\n                contributions.grammars = grammarsResult.value;\n            } else {\n                console.error(`Could not read '${rawPlugin.name}' contribution 'grammars'.`, rawPlugin.contributes.grammars, grammarsResult.reason);\n            }\n        }\n\n        return contributions;\n    }\n\n    protected readTerminals(pck: PluginPackage): TerminalProfile[] | undefined {\n        if (!pck?.contributes?.terminal?.profiles) {\n            return undefined;\n        }\n        return pck.contributes.terminal.profiles.filter(profile => profile.id && profile.title);\n    }\n\n    protected async readLocalizations(pck: PluginPackage): Promise<Localization[] | undefined> {\n        if (!pck.contributes || !pck.contributes.localizations) {\n            return undefined;\n        }\n        return Promise.all(pck.contributes.localizations.map(e => this.readLocalization(e, pck.packagePath)));\n    }\n\n    protected async readLocalization({ languageId, languageName, localizedLanguageName, translations }: PluginPackageLocalization, pluginPath: string): Promise<Localization> {\n        const local: Localization = {\n            languageId,\n            languageName,\n            localizedLanguageName,\n            translations: []\n        };\n        local.translations = await Promise.all(translations.map(e => this.readTranslation(e, pluginPath)));\n        return local;\n    }\n\n    protected async readTranslation(packageTranslation: PluginPackageTranslation, pluginPath: string): Promise<Translation> {\n        const translation = await this.readJson<Translation>(path.resolve(pluginPath, packageTranslation.path));\n        if (!translation) {\n            throw new Error(`Could not read json file '${packageTranslation.path}'.`);\n        }\n        translation.id = packageTranslation.id;\n        translation.path = packageTranslation.path;\n        return translation;\n    }\n\n    protected readCommand({ command, title, original, category, icon, enablement }: PluginPackageCommand, pck: PluginPackage): PluginCommand {\n        const { themeIcon, iconUrl } = this.transformIconUrl(pck, icon) ?? {};\n        return { command, title, originalTitle: original, category, iconUrl, themeIcon, enablement };\n    }\n\n    protected transformIconUrl(plugin: PluginPackage, original?: IconUrl): { iconUrl?: IconUrl; themeIcon?: string } | undefined {\n        if (original) {\n            if (typeof original === 'string') {\n                if (original.startsWith('$(')) {\n                    return { themeIcon: original };\n                } else {\n                    return { iconUrl: this.toPluginUrl(plugin, original) };\n                }\n            } else {\n                return {\n                    iconUrl: {\n                        light: this.toPluginUrl(plugin, original.light),\n                        dark: this.toPluginUrl(plugin, original.dark)\n                    }\n                };\n            }\n        }\n    }\n\n    protected toPluginUrl(pck: PluginPackage, relativePath: string): string {\n        return PluginPackage.toPluginUrl(pck, relativePath);\n    }\n\n    protected readColors(pck: PluginPackage): ColorDefinition[] | undefined {\n        if (!pck.contributes || !pck.contributes.colors) {\n            return undefined;\n        }\n        const result: ColorDefinition[] = [];\n        for (const contribution of pck.contributes.colors) {\n            if (typeof contribution.id !== 'string' || contribution.id.length === 0) {\n                console.error(\"'configuration.colors.id' must be defined and can not be empty\");\n                continue;\n            }\n            if (!contribution.id.match(colorIdPattern)) {\n                console.error(\"'configuration.colors.id' must follow the word[.word]*\");\n                continue;\n            }\n            if (typeof contribution.description !== 'string' || contribution.id.length === 0) {\n                console.error(\"'configuration.colors.description' must be defined and can not be empty\");\n                continue;\n            }\n            const defaults = contribution.defaults;\n            if (!defaults || typeof defaults !== 'object' || typeof defaults.light !== 'string' || typeof defaults.dark !== 'string' || typeof defaults.highContrast !== 'string') {\n                console.error(\"'configuration.colors.defaults' must be defined and must contain 'light', 'dark' and 'highContrast'\");\n                continue;\n            }\n            result.push({\n                id: contribution.id,\n                description: contribution.description,\n                defaults: {\n                    light: defaults.light,\n                    dark: defaults.dark,\n                    hc: defaults.highContrast\n                }\n            });\n        }\n        return result;\n    }\n\n    protected readThemes(pck: PluginPackage): ThemeContribution[] | undefined {\n        if (!pck.contributes || !pck.contributes.themes) {\n            return undefined;\n        }\n        const result: ThemeContribution[] = [];\n        for (const contribution of pck.contributes.themes) {\n            if (contribution.path) {\n                result.push({\n                    id: contribution.id,\n                    uri: this.pluginUriFactory.createUri(pck, contribution.path).toString(),\n                    description: contribution.description,\n                    label: contribution.label,\n                    uiTheme: contribution.uiTheme\n                });\n            }\n        }\n        return result;\n    }\n\n    protected readIconThemes(pck: PluginPackage): IconThemeContribution[] | undefined {\n        if (!pck.contributes || !pck.contributes.iconThemes) {\n            return undefined;\n        }\n        const result: IconThemeContribution[] = [];\n        for (const contribution of pck.contributes.iconThemes) {\n            if (typeof contribution.id !== 'string') {\n                console.error('Expected string in `contributes.iconThemes.id`. Provided value:', contribution.id);\n                continue;\n            }\n            if (typeof contribution.path !== 'string') {\n                console.error('Expected string in `contributes.iconThemes.path`. Provided value:', contribution.path);\n                continue;\n            }\n            result.push({\n                id: contribution.id,\n                uri: this.pluginUriFactory.createUri(pck, contribution.path).toString(),\n                description: contribution.description,\n                label: contribution.label,\n                uiTheme: contribution.uiTheme\n            });\n        }\n        return result;\n    }\n\n    protected readSnippets(pck: PluginPackage): SnippetContribution[] | undefined {\n        if (!pck.contributes || !pck.contributes.snippets) {\n            return undefined;\n        }\n        const result: SnippetContribution[] = [];\n        for (const contribution of pck.contributes.snippets) {\n            if (contribution.path) {\n                result.push({\n                    language: contribution.language,\n                    source: pck.displayName || pck.name,\n                    uri: this.pluginUriFactory.createUri(pck, contribution.path).toString()\n                });\n            }\n        }\n        return result;\n    }\n\n    protected async readJson<T>(filePath: string): Promise<T | undefined> {\n        const content = await this.readFile(filePath);\n        return content ? jsoncparser.parse(content, undefined, { disallowComments: false }) : undefined;\n    }\n    protected async readFile(filePath: string): Promise<string> {\n        try {\n            const content = await fs.readFile(filePath, { encoding: 'utf8' });\n            return content;\n        } catch (e) {\n            if (!isENOENT(e)) {\n                console.error(e);\n            }\n            return '';\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private readConfiguration(rawConfiguration: RecursivePartial<PreferenceSchema>, pluginPath: string): PreferenceSchema | undefined {\n        return PreferenceSchema.is(rawConfiguration) ? rawConfiguration : undefined;\n    }\n\n    private readKeybinding(rawKeybinding: PluginPackageKeybinding): Keybinding {\n        return {\n            keybinding: rawKeybinding.key,\n            command: rawKeybinding.command,\n            when: rawKeybinding.when,\n            mac: rawKeybinding.mac,\n            linux: rawKeybinding.linux,\n            win: rawKeybinding.win,\n            args: rawKeybinding.args\n        };\n    }\n\n    private readCustomEditors(rawCustomEditors: PluginPackageCustomEditor[]): CustomEditor[] {\n        return rawCustomEditors.map(rawCustomEditor => this.readCustomEditor(rawCustomEditor));\n    }\n\n    private readCustomEditor(rawCustomEditor: PluginPackageCustomEditor): CustomEditor {\n        return {\n            viewType: rawCustomEditor.viewType,\n            displayName: rawCustomEditor.displayName,\n            selector: rawCustomEditor.selector || [],\n            priority: rawCustomEditor.priority || CustomEditorPriority.default\n        };\n    }\n\n    private readViewsContainers(rawViewsContainers: PluginPackageViewContainer[], pck: PluginPackage): ViewContainer[] {\n        return rawViewsContainers.map(rawViewContainer => this.readViewContainer(rawViewContainer, pck));\n    }\n\n    private readViewContainer(rawViewContainer: PluginPackageViewContainer, pck: PluginPackage): ViewContainer {\n        const themeIcon = rawViewContainer.icon.startsWith('$(') ? rawViewContainer.icon : undefined;\n        const iconUrl = this.toPluginUrl(pck, rawViewContainer.icon);\n        return {\n            id: rawViewContainer.id,\n            title: rawViewContainer.title,\n            iconUrl,\n            themeIcon,\n        };\n    }\n\n    private readViews(rawViews: PluginPackageView[]): View[] {\n        return rawViews.map(rawView => this.readView(rawView));\n    }\n\n    private readView(rawView: PluginPackageView): View {\n        const result: View = {\n            id: rawView.id,\n            name: rawView.name,\n            when: rawView.when,\n            type: rawView.type\n        };\n\n        return result;\n    }\n\n    private readViewsWelcome(rawViewsWelcome: PluginPackageViewWelcome[], rowViews: { [location: string]: PluginPackageView[]; } | undefined): ViewWelcome[] {\n        return rawViewsWelcome.map(rawViewWelcome => this.readViewWelcome(rawViewWelcome, this.extractPluginViewsIds(rowViews)));\n    }\n\n    private readViewWelcome(rawViewWelcome: PluginPackageViewWelcome, pluginViewsIds: string[]): ViewWelcome {\n        const result: ViewWelcome = {\n            view: rawViewWelcome.view,\n            content: rawViewWelcome.contents,\n            when: rawViewWelcome.when,\n            // if the plugin contributes Welcome view to its own view - it will be ordered first\n            order: pluginViewsIds.findIndex(v => v === rawViewWelcome.view) > -1 ? 0 : 1\n        };\n\n        return result;\n    }\n\n    private extractPluginViewsIds(views: { [location: string]: PluginPackageView[] } | undefined): string[] {\n        const pluginViewsIds: string[] = [];\n        if (views) {\n            for (const location of Object.keys(views)) {\n                const viewsIds = views[location].map(view => view.id);\n                pluginViewsIds.push(...viewsIds);\n            };\n        }\n        return pluginViewsIds;\n    }\n\n    private readMenus(rawMenus: PluginPackageMenu[]): Menu[] {\n        return rawMenus.map(rawMenu => this.readMenu(rawMenu));\n    }\n\n    private readMenu(rawMenu: PluginPackageMenu): Menu {\n        const result: Menu = {\n            command: rawMenu.command,\n            submenu: rawMenu.submenu,\n            alt: rawMenu.alt,\n            group: rawMenu.group,\n            when: rawMenu.when\n        };\n        return result;\n    }\n\n    private async readLanguages(rawLanguages: PluginPackageLanguageContribution[], pluginPath: string): Promise<LanguageContribution[]> {\n        return Promise.all(rawLanguages.map(language => this.readLanguage(language, pluginPath)));\n    }\n\n    private readSubmenus(rawSubmenus: PluginPackageSubmenu[], plugin: PluginPackage): Submenu[] {\n        return rawSubmenus.map(submenu => this.readSubmenu(submenu, plugin));\n    }\n\n    private readSubmenu(rawSubmenu: PluginPackageSubmenu, plugin: PluginPackage): Submenu {\n        const icon = this.transformIconUrl(plugin, rawSubmenu.icon);\n        return {\n            icon: icon?.iconUrl ?? icon?.themeIcon,\n            id: rawSubmenu.id,\n            label: rawSubmenu.label\n        };\n\n    }\n\n    private async readLanguage(rawLang: PluginPackageLanguageContribution, pluginPath: string): Promise<LanguageContribution> {\n        // TODO: add validation to all parameters\n        const result: LanguageContribution = {\n            id: rawLang.id,\n            aliases: rawLang.aliases,\n            extensions: rawLang.extensions,\n            filenamePatterns: rawLang.filenamePatterns,\n            filenames: rawLang.filenames,\n            firstLine: rawLang.firstLine,\n            mimetypes: rawLang.mimetypes\n        };\n        if (rawLang.configuration) {\n            const rawConfiguration = await this.readJson<PluginPackageLanguageContributionConfiguration>(path.resolve(pluginPath, rawLang.configuration));\n            if (rawConfiguration) {\n                const configuration: LanguageConfiguration = {\n                    brackets: rawConfiguration.brackets,\n                    comments: rawConfiguration.comments,\n                    folding: rawConfiguration.folding,\n                    wordPattern: rawConfiguration.wordPattern,\n                    autoClosingPairs: this.extractValidAutoClosingPairs(rawLang.id, rawConfiguration),\n                    indentationRules: rawConfiguration.indentationRules,\n                    surroundingPairs: this.extractValidSurroundingPairs(rawLang.id, rawConfiguration),\n                    onEnterRules: rawConfiguration.onEnterRules,\n                };\n                result.configuration = configuration;\n            }\n        }\n        return result;\n\n    }\n\n    private readDebuggers(rawDebuggers: PluginPackageDebuggersContribution[]): DebuggerContribution[] {\n        return rawDebuggers.map(rawDebug => this.readDebugger(rawDebug));\n    }\n\n    private readDebugger(rawDebugger: PluginPackageDebuggersContribution): DebuggerContribution {\n        const result: DebuggerContribution = {\n            type: rawDebugger.type,\n            label: rawDebugger.label,\n            languages: rawDebugger.languages,\n            enableBreakpointsFor: rawDebugger.enableBreakpointsFor,\n            variables: rawDebugger.variables,\n            adapterExecutableCommand: rawDebugger.adapterExecutableCommand,\n            configurationSnippets: rawDebugger.configurationSnippets,\n            win: rawDebugger.win,\n            winx86: rawDebugger.winx86,\n            windows: rawDebugger.windows,\n            osx: rawDebugger.osx,\n            linux: rawDebugger.linux,\n            program: rawDebugger.program,\n            args: rawDebugger.args,\n            runtime: rawDebugger.runtime,\n            runtimeArgs: rawDebugger.runtimeArgs\n        };\n\n        result.configurationAttributes = rawDebugger.configurationAttributes\n            && this.resolveSchemaAttributes(rawDebugger.type, rawDebugger.configurationAttributes);\n\n        return result;\n    }\n\n    private readTaskDefinition(pluginName: string, definitionContribution: PluginTaskDefinitionContribution): TaskDefinition {\n        const propertyKeys = definitionContribution.properties ? Object.keys(definitionContribution.properties) : [];\n        const schema = this.toSchema(definitionContribution);\n        return {\n            taskType: definitionContribution.type,\n            source: pluginName,\n            properties: {\n                required: definitionContribution.required || [],\n                all: propertyKeys,\n                schema\n            }\n        };\n    }\n\n    protected toSchema(definition: PluginTaskDefinitionContribution): IJSONSchema {\n        const reconciliation: IJSONSchema = { ...definition, type: 'object' };\n        const schema = deepClone(reconciliation);\n        if (schema.properties === undefined) {\n            schema.properties = Object.create(null);\n        }\n        schema.type = 'object';\n        schema.properties!.type = { type: 'string', const: definition.type };\n        return schema;\n    }\n\n    protected resolveSchemaAttributes(type: string, configurationAttributes: { [request: string]: IJSONSchema }): IJSONSchema[] {\n        const taskSchema = {};\n        return Object.keys(configurationAttributes).map(request => {\n            const attributes: IJSONSchema = deepClone(configurationAttributes[request]);\n            const defaultRequired = ['name', 'type', 'request'];\n            attributes.required = attributes.required && attributes.required.length ? defaultRequired.concat(attributes.required) : defaultRequired;\n            attributes.additionalProperties = false;\n            attributes.type = 'object';\n            if (!attributes.properties) {\n                attributes.properties = {};\n            }\n            const properties = attributes.properties;\n            properties['type'] = {\n                enum: [type],\n                description: nls.localize('debugType', 'Type of configuration.'),\n                pattern: '^(?!node2)',\n                errorMessage: nls.localize('debugTypeNotRecognised',\n                    'The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.'),\n                patternErrorMessage: nls.localize('node2NotSupported',\n                    '\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\".')\n            };\n            properties['name'] = {\n                type: 'string',\n                description: nls.localize('debugName', 'Name of configuration; appears in the launch configuration drop down menu.'),\n                default: 'Launch'\n            };\n            properties['request'] = {\n                enum: [request],\n                description: nls.localize('debugRequest', 'Request type of configuration. Can be \"launch\" or \"attach\".'),\n            };\n            properties['debugServer'] = {\n                type: 'number',\n                description: nls.localize('debugServer',\n                    'For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode'),\n                default: 4711\n            };\n            properties['preLaunchTask'] = {\n                anyOf: [taskSchema, {\n                    type: ['string'],\n                }],\n                default: '',\n                description: nls.localize('debugPrelaunchTask', 'Task to run before debug session starts.')\n            };\n            properties['postDebugTask'] = {\n                anyOf: [taskSchema, {\n                    type: ['string'],\n                }],\n                default: '',\n                description: nls.localize('debugPostDebugTask', 'Task to run after debug session ends.')\n            };\n            properties['internalConsoleOptions'] = INTERNAL_CONSOLE_OPTIONS_SCHEMA;\n\n            const osProperties = Object.assign({}, properties);\n            properties['windows'] = {\n                type: 'object',\n                description: nls.localize('debugWindowsConfiguration', 'Windows specific launch configuration attributes.'),\n                properties: osProperties\n            };\n            properties['osx'] = {\n                type: 'object',\n                description: nls.localize('debugOSXConfiguration', 'OS X specific launch configuration attributes.'),\n                properties: osProperties\n            };\n            properties['linux'] = {\n                type: 'object',\n                description: nls.localize('debugLinuxConfiguration', 'Linux specific launch configuration attributes.'),\n                properties: osProperties\n            };\n            Object.keys(attributes.properties).forEach(name => {\n                // Use schema allOf property to get independent error reporting #21113\n                attributes!.properties![name].pattern = attributes!.properties![name].pattern || '^(?!.*\\\\$\\\\{(env|config|command)\\\\.)';\n                attributes!.properties![name].patternErrorMessage = attributes!.properties![name].patternErrorMessage ||\n                    nls.localize('deprecatedVariables', \"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead.\");\n            });\n\n            return attributes;\n        });\n    }\n\n    private extractValidAutoClosingPairs(langId: string, configuration: PluginPackageLanguageContributionConfiguration): AutoClosingPairConditional[] | undefined {\n        const source = configuration.autoClosingPairs;\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        if (!Array.isArray(source)) {\n            console.warn(`[${langId}]: language configuration: expected \\`autoClosingPairs\\` to be an array.`);\n            return undefined;\n        }\n\n        let result: AutoClosingPairConditional[] | undefined = undefined;\n        for (let i = 0, len = source.length; i < len; i++) {\n            const pair = source[i];\n            if (Array.isArray(pair)) {\n                if (!isCharacterPair(pair)) {\n                    console.warn(`[${langId}]: language configuration: expected \\`autoClosingPairs[${i}]\\` to be an array of two strings or an object.`);\n                    continue;\n                }\n                result = result || [];\n                result.push({ open: pair[0], close: pair[1] });\n            } else {\n                if (!isObject(pair)) {\n                    console.warn(`[${langId}]: language configuration: expected \\`autoClosingPairs[${i}]\\` to be an array of two strings or an object.`);\n                    continue;\n                }\n                if (typeof pair.open !== 'string') {\n                    console.warn(`[${langId}]: language configuration: expected \\`autoClosingPairs[${i}].open\\` to be a string.`);\n                    continue;\n                }\n                if (typeof pair.close !== 'string') {\n                    console.warn(`[${langId}]: language configuration: expected \\`autoClosingPairs[${i}].close\\` to be a string.`);\n                    continue;\n                }\n                if (typeof pair.notIn !== 'undefined') {\n                    if (!isStringArray(pair.notIn)) {\n                        console.warn(`[${langId}]: language configuration: expected \\`autoClosingPairs[${i}].notIn\\` to be a string array.`);\n                        continue;\n                    }\n                }\n                result = result || [];\n                result.push({ open: pair.open, close: pair.close, notIn: pair.notIn });\n            }\n        }\n        return result;\n    }\n\n    private extractValidSurroundingPairs(langId: string, configuration: PluginPackageLanguageContributionConfiguration): AutoClosingPair[] | undefined {\n        const source = configuration.surroundingPairs;\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        if (!Array.isArray(source)) {\n            console.warn(`[${langId}]: language configuration: expected \\`surroundingPairs\\` to be an array.`);\n            return undefined;\n        }\n\n        let result: AutoClosingPair[] | undefined = undefined;\n        for (let i = 0, len = source.length; i < len; i++) {\n            const pair = source[i];\n            if (Array.isArray(pair)) {\n                if (!isCharacterPair(pair)) {\n                    console.warn(`[${langId}]: language configuration: expected \\`surroundingPairs[${i}]\\` to be an array of two strings or an object.`);\n                    continue;\n                }\n                result = result || [];\n                result.push({ open: pair[0], close: pair[1] });\n            } else {\n                if (!isObject(pair)) {\n                    console.warn(`[${langId}]: language configuration: expected \\`surroundingPairs[${i}]\\` to be an array of two strings or an object.`);\n                    continue;\n                }\n                if (typeof pair.open !== 'string') {\n                    console.warn(`[${langId}]: language configuration: expected \\`surroundingPairs[${i}].open\\` to be a string.`);\n                    continue;\n                }\n                if (typeof pair.close !== 'string') {\n                    console.warn(`[${langId}]: language configuration: expected \\`surroundingPairs[${i}].close\\` to be a string.`);\n                    continue;\n                }\n                result = result || [];\n                result.push({ open: pair.open, close: pair.close });\n            }\n        }\n        return result;\n    }\n\n}\n\nfunction isCharacterPair(something: CharacterPair): boolean {\n    return (\n        isStringArray(something)\n        && something.length === 2\n    );\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const pluginPathsServicePath = '/services/plugin-paths';\n\n// Service to create plugin configuration folders for different purpose.\nexport const PluginPathsService = Symbol('PluginPathsService');\nexport interface PluginPathsService {\n    /** Returns hosted log path. Create directory by this path if it is not exist on the file system. */\n    getHostLogPath(): Promise<string>;\n    /** Returns storage path for given workspace */\n    getHostStoragePath(workspaceUri: string | undefined, rootUris: string[]): Promise<string | undefined>;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class PluginTheiaEnvironment {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    protected _pluginsDirUri: URI | undefined;\n    async getPluginsDirUri(): Promise<URI> {\n        if (!this._pluginsDirUri) {\n            const configDir = new URI(await this.environments.getConfigDirUri());\n            this._pluginsDirUri = configDir.resolve('plugins');\n        }\n        return this._pluginsDirUri;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * Each webview should be deployed on a unique origin (https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy)\n * to ensure isolation from browser shared state as cookies, local storage and so on.\n *\n * Default hostname pattern of a origin is `{{uuid}}.webview.{{hostname}}`. Where `{{uuid}}` is a placeholder for a webview global id.\n * For electron target the default pattern is always used.\n * For the browser target use `THEIA_WEBVIEW_EXTERNAL_ENDPOINT` env variable to customize it.\n */\nexport namespace WebviewExternalEndpoint {\n    export const pattern = 'THEIA_WEBVIEW_EXTERNAL_ENDPOINT';\n    export const defaultPattern = '{{uuid}}.webview.{{hostname}}';\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as filenamify from 'filenamify';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport type { URI } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { FileUri } from '@theia/core/lib/node';\nimport {\n    PluginDeployerDirectoryHandler, PluginDeployerEntry, PluginPackage, PluginDeployerDirectoryHandlerContext, PluginDeployerEntryType, PluginType, PluginIdentifiers\n} from '../../../common/plugin-protocol';\nimport { PluginCliContribution } from '../plugin-cli-contribution';\nimport { getTempDirPathAsync } from '../temp-dir-util';\n\n@injectable()\nexport class PluginTheiaDirectoryHandler implements PluginDeployerDirectoryHandler {\n\n    protected readonly deploymentDirectory: Deferred<URI>;\n\n    @inject(PluginCliContribution) protected readonly pluginCli: PluginCliContribution;\n\n    constructor() {\n        this.deploymentDirectory = new Deferred();\n        getTempDirPathAsync('theia-copied')\n            .then(deploymentDirectory => this.deploymentDirectory.resolve(FileUri.create(deploymentDirectory)));\n    }\n\n    async accept(resolvedPlugin: PluginDeployerEntry): Promise<boolean> {\n\n        console.debug('PluginTheiaDirectoryHandler: accepting plugin with path', resolvedPlugin.path());\n\n        // handle only directories\n        if (await resolvedPlugin.isFile()) {\n            return false;\n        }\n\n        // is there a package.json ?\n        const packageJsonPath = path.resolve(resolvedPlugin.path(), 'package.json');\n\n        try {\n            let packageJson = resolvedPlugin.getValue<PluginPackage>('package.json');\n            if (!packageJson) {\n                packageJson = await fs.readJSON(packageJsonPath);\n                packageJson.publisher ??= PluginIdentifiers.UNPUBLISHED;\n                resolvedPlugin.storeValue('package.json', packageJson);\n            }\n\n            if (packageJson?.engines?.theiaPlugin) {\n                return true;\n            }\n        } catch { /* Failed to read file. Fall through. */ }\n        return false;\n    }\n\n    async handle(context: PluginDeployerDirectoryHandlerContext): Promise<void> {\n        await this.copyDirectory(context);\n        const types: PluginDeployerEntryType[] = [];\n        const packageJson = context.pluginEntry().getValue<PluginPackage>('package.json');\n        if (packageJson.theiaPlugin && packageJson.theiaPlugin.backend) {\n            types.push(PluginDeployerEntryType.BACKEND);\n        }\n        if (packageJson.theiaPlugin && packageJson.theiaPlugin.frontend) {\n            types.push(PluginDeployerEntryType.FRONTEND);\n        }\n\n        context.pluginEntry().accept(...types);\n    }\n\n    protected async copyDirectory(context: PluginDeployerDirectoryHandlerContext): Promise<void> {\n        if (this.pluginCli.copyUncompressedPlugins() && context.pluginEntry().type === PluginType.User) {\n            const entry = context.pluginEntry();\n            const id = entry.id();\n            const pathToRestore = entry.path();\n            const origin = entry.originalPath();\n            const targetDir = await this.getExtensionDir(context);\n            try {\n                if (await fs.pathExists(targetDir) || !entry.path().startsWith(origin)) {\n                    console.log(`[${id}]: already copied.`);\n                } else {\n                    console.log(`[${id}]: copying to \"${targetDir}\"`);\n                    const deploymentDirectory = await this.deploymentDirectory.promise;\n                    await fs.mkdirp(FileUri.fsPath(deploymentDirectory));\n                    await context.copy(origin, targetDir);\n                    entry.updatePath(targetDir);\n                    if (!this.accept(entry)) {\n                        throw new Error('Unable to resolve plugin metadata after copying');\n                    }\n                }\n            } catch (e) {\n                console.warn(`[${id}]: Error when copying.`, e);\n                entry.updatePath(pathToRestore);\n            }\n        }\n    }\n\n    protected async getExtensionDir(context: PluginDeployerDirectoryHandlerContext): Promise<string> {\n        const deploymentDirectory = await this.deploymentDirectory.promise;\n        return FileUri.fsPath(deploymentDirectory.resolve(filenamify(context.pluginEntry().id(), { replacement: '_' })));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDeployerFileHandler, PluginDeployerEntry, PluginDeployerFileHandlerContext, PluginType } from '../../../common/plugin-protocol';\nimport type { URI } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { getTempDirPathAsync } from '../temp-dir-util';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as filenamify from 'filenamify';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { PluginTheiaEnvironment } from '../../common/plugin-theia-environment';\n\n@injectable()\nexport class PluginTheiaFileHandler implements PluginDeployerFileHandler {\n\n    private readonly systemPluginsDirUri: Deferred<URI>;\n\n    @inject(PluginTheiaEnvironment)\n    protected readonly environment: PluginTheiaEnvironment;\n\n    constructor() {\n        this.systemPluginsDirUri = new Deferred();\n        getTempDirPathAsync('theia-unpacked')\n            .then(systemPluginsDirPath => this.systemPluginsDirUri.resolve(FileUri.create(systemPluginsDirPath)));\n    }\n\n    async accept(resolvedPlugin: PluginDeployerEntry): Promise<boolean> {\n        if (resolvedPlugin.path() !== null && resolvedPlugin.path().endsWith('.theia')) {\n            return resolvedPlugin.isFile();\n        }\n        return false;\n    }\n\n    async handle(context: PluginDeployerFileHandlerContext): Promise<void> {\n        const id = context.pluginEntry().id();\n        const pluginDir = await this.getPluginDir(context);\n        console.log(`[${id}]: trying to decompress into \"${pluginDir}\"...`);\n        if (context.pluginEntry().type === PluginType.User && await fs.pathExists(pluginDir)) {\n            console.log(`[${id}]: already found`);\n            context.pluginEntry().updatePath(pluginDir);\n            return;\n        }\n        await context.unzip(context.pluginEntry().path(), pluginDir);\n        console.log(`[${id}]: decompressed`);\n        context.pluginEntry().updatePath(pluginDir);\n    }\n\n    protected async getPluginDir(context: PluginDeployerFileHandlerContext): Promise<string> {\n        const systemPluginsDirUri = await this.systemPluginsDirUri.promise;\n        return FileUri.fsPath(systemPluginsDirUri.resolve(filenamify(context.pluginEntry().id(), { replacement: '_' })));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport namespace PluginPaths {\n    export const PLUGINS_LOGS_DIR = 'logs';\n    export const PLUGINS_GLOBAL_STORAGE_DIR = 'plugin-storage';\n    export const PLUGINS_WORKSPACE_STORAGE_DIR = 'workspace-storage';\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport * as path from 'path';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { readdir } from 'fs/promises';\nimport { remove } from '@theia/core/shared/fs-extra';\nimport * as crypto from 'crypto';\nimport { ILogger } from '@theia/core';\nimport { FileUri } from '@theia/core/lib/node';\nimport { PluginPaths } from './const';\nimport { PluginPathsService } from '../../common/plugin-paths-protocol';\nimport { UntitledWorkspaceService } from '@theia/workspace/lib/common';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { PluginCliContribution } from '../plugin-cli-contribution';\n\nconst SESSION_TIMESTAMP_PATTERN = /^\\d{8}T\\d{6}$/;\n\n// Service to provide configuration paths for plugin api.\n@injectable()\nexport class PluginPathsServiceImpl implements PluginPathsService {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(EnvVariablesServer)\n    protected readonly envServer: EnvVariablesServer;\n\n    @inject(PluginCliContribution)\n    protected readonly cliContribution: PluginCliContribution;\n\n    @inject(UntitledWorkspaceService)\n    protected readonly untitledWorkspaceService: UntitledWorkspaceService;\n\n    async getHostLogPath(): Promise<string> {\n        const parentLogsDir = await this.getLogsDirPath();\n\n        if (!parentLogsDir) {\n            throw new Error('Unable to get parent log directory');\n        }\n\n        const pluginDirPath = path.join(parentLogsDir, this.generateTimeFolderName(), 'host');\n        await fs.mkdirs(pluginDirPath);\n        // no `await` as We should never wait for the cleanup\n        this.cleanupOldLogs(parentLogsDir);\n        return pluginDirPath;\n    }\n\n    async getHostStoragePath(workspaceUri: string | undefined, rootUris: string[]): Promise<string | undefined> {\n        const parentStorageDir = await this.getWorkspaceStorageDirPath();\n\n        if (!parentStorageDir) {\n            throw new Error('Unable to get parent storage directory');\n        }\n\n        if (!workspaceUri) {\n            return undefined;\n        }\n\n        await fs.mkdirs(parentStorageDir);\n\n        const storageDirName = await this.buildWorkspaceId(workspaceUri, rootUris);\n        const storageDirPath = path.join(parentStorageDir, storageDirName);\n        await fs.mkdirs(storageDirPath);\n\n        return storageDirPath;\n    }\n\n    protected async buildWorkspaceId(workspaceUri: string, rootUris: string[]): Promise<string> {\n        const configDirUri = await this.envServer.getConfigDirUri();\n        const untitledWorkspace = await this.untitledWorkspaceService.getUntitledWorkspaceUri(\n            new URI(configDirUri),\n            async uri => !await fs.pathExists(uri.path.fsPath())\n        );\n\n        if (untitledWorkspace.toString() === workspaceUri) {\n            // if workspace is temporary\n            // then let create a storage path for each set of workspace roots\n            const rootsStr = rootUris.sort().join(',');\n            return this.createHash(rootsStr);\n        } else {\n            return this.createHash(workspaceUri);\n        }\n    }\n\n    /**\n     * Creates a hash digest of the given string.\n     */\n    protected createHash(str: string): string {\n        try {\n            // md5 is not FIPS-approved but we have to continue use it as there're existing storage folders based on it\n            return crypto.createHash('md5').update(str).digest('hex');\n        } catch (e) {\n            if (e.message.indexOf('disabled for FIPS') > -1) {\n                // SHA256 is FIPS-compliant\n                return crypto.createHash('sha256').update(str).digest('hex');\n            } else {\n                throw e;\n            }\n        }\n        // see more details in the issues 8378\n    }\n\n    /**\n     * Generate time folder name in format: YYYYMMDDTHHMMSS, for example: 20181205T093828\n     */\n    private generateTimeFolderName(): string {\n        const timeStamp = new Date().toISOString().replace(/[-:]|(\\..*)/g, '');\n        // Helps ensure our timestamp generation logic is \"valid\".\n        // Changes to the timestamp structure may break old logs deletion logic.\n        if (!SESSION_TIMESTAMP_PATTERN.test(timeStamp)) {\n            this.logger.error(`Generated log folder name: \"${timeStamp}\" does not match expected pattern: ${SESSION_TIMESTAMP_PATTERN}`);\n        }\n        return timeStamp;\n    }\n\n    private async getLogsDirPath(): Promise<string> {\n        const configDirUri = await this.envServer.getConfigDirUri();\n        return path.join(FileUri.fsPath(configDirUri), PluginPaths.PLUGINS_LOGS_DIR);\n    }\n\n    private async getWorkspaceStorageDirPath(): Promise<string> {\n        const configDirUri = await this.envServer.getConfigDirUri();\n        return path.join(FileUri.fsPath(configDirUri), PluginPaths.PLUGINS_WORKSPACE_STORAGE_DIR);\n    }\n\n    private async cleanupOldLogs(parentLogsDir: string): Promise<void> {\n        const dirEntries = await readdir(parentLogsDir, { withFileTypes: true });\n        const subDirEntries = dirEntries.filter(dirent => dirent.isDirectory());\n        const subDirNames = subDirEntries.map(dirent => dirent.name);\n        // We never clean a folder that is not a Theia logs session folder.\n        // Even if it does appears under the `parentLogsDir`...\n        const sessionSubDirNames = subDirNames.filter((dirName: string) => SESSION_TIMESTAMP_PATTERN.test(dirName));\n        // [].sort is ascending order and we need descending order (newest first).\n        const sortedSessionSubDirNames = sessionSubDirNames.sort().reverse();\n        const maxSessionLogsFolders = this.cliContribution.maxSessionLogsFolders();\n        // [5,4,3,2,1].slice(2) --> [2,1] --> only keep N latest session folders.\n        const oldSessionSubDirNames = sortedSessionSubDirNames.slice(maxSessionLogsFolders);\n\n        oldSessionSubDirNames.forEach((sessionDir: string) => {\n            const sessionDirPath = path.resolve(parentLogsDir, sessionDir);\n            // we are not waiting for the async `remove` to finish before returning\n            // in order to minimize impact on Theia startup time.\n            remove(sessionDirPath);\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Argv, Arguments } from '@theia/core/shared/yargs';\nimport { CliContribution } from '@theia/core/lib/node/cli';\nimport { LocalDirectoryPluginDeployerResolver } from './resolvers/local-directory-plugin-deployer-resolver';\n\n@injectable()\nexport class PluginCliContribution implements CliContribution {\n\n    static PLUGINS = 'plugins';\n    static PLUGIN_MAX_SESSION_LOGS_FOLDERS = 'plugin-max-session-logs-folders';\n    static UNCOMPRESSED_PLUGINS_IN_PLACE = 'uncompressed-plugins-in-place';\n    /**\n     * This is the default value used in VSCode, see:\n     * - https://github.com/Microsoft/vscode/blob/613447d6b3f458ef7fee227e3876303bf5184580/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts#L32\n     */\n    static DEFAULT_PLUGIN_MAX_SESSION_LOGS_FOLDERS = 10;\n\n    protected _localDir: string | undefined;\n    protected _maxSessionLogsFolders: number;\n    protected _keepUncompressedInPlace = false;\n\n    configure(conf: Argv): void {\n        conf.option(PluginCliContribution.PLUGINS, {\n            // eslint-disable-next-line max-len\n            description: `Provides further refinement for the plugins. Example: --${PluginCliContribution.PLUGINS}=${LocalDirectoryPluginDeployerResolver.LOCAL_DIR}:path/to/your/plugins`,\n            type: 'string',\n            nargs: 1\n        });\n\n        const maxLogSessionExample = `Example: --${PluginCliContribution.PLUGIN_MAX_SESSION_LOGS_FOLDERS}=5`;\n        conf.option(PluginCliContribution.PLUGIN_MAX_SESSION_LOGS_FOLDERS, {\n            description: `The maximum number of plugin logs sessions folders to retain. ${maxLogSessionExample}`,\n            type: 'number',\n            default: PluginCliContribution.DEFAULT_PLUGIN_MAX_SESSION_LOGS_FOLDERS,\n            nargs: 1\n        });\n\n        conf.option(PluginCliContribution.UNCOMPRESSED_PLUGINS_IN_PLACE, {\n            description: 'Whether user plugins that are stored on disk as uncompressed directories should be run in place or copied to temporary folder.',\n            type: 'boolean',\n            default: false,\n        });\n    }\n\n    setArguments(args: Arguments): void {\n        const pluginsArg = args[PluginCliContribution.PLUGINS] as string;\n        if (pluginsArg && String(pluginsArg).startsWith(`${LocalDirectoryPluginDeployerResolver.LOCAL_DIR}:`)) {\n            this._localDir = pluginsArg;\n        }\n\n        const maxSessionLogsFoldersArg = args[PluginCliContribution.PLUGIN_MAX_SESSION_LOGS_FOLDERS] as number;\n        if (maxSessionLogsFoldersArg && Number.isInteger(maxSessionLogsFoldersArg) && maxSessionLogsFoldersArg > 0) {\n            this._maxSessionLogsFolders = maxSessionLogsFoldersArg;\n        }\n        this._keepUncompressedInPlace = Boolean(args[PluginCliContribution.UNCOMPRESSED_PLUGINS_IN_PLACE]);\n    }\n\n    localDir(): string | undefined {\n        return this._localDir;\n    }\n\n    maxSessionLogsFolders(): number {\n        return this._maxSessionLogsFolders;\n    }\n\n    copyUncompressedPlugins(): boolean {\n        return !this._keepUncompressedInPlace;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PluginDeployer } from '../../common/plugin-protocol';\nimport { ILogger } from '@theia/core';\n\n@injectable()\nexport class PluginDeployerContribution implements BackendApplicationContribution {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(PluginDeployer)\n    protected pluginDeployer: PluginDeployer;\n\n    initialize(): void {\n        this.pluginDeployer.start();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport { promises as fs } from 'fs';\nimport { PluginDeployerEntry, PluginDeployerDirectoryHandlerContext } from '../../common/plugin-protocol';\n\nexport class PluginDeployerDirectoryHandlerContextImpl implements PluginDeployerDirectoryHandlerContext {\n\n    constructor(private readonly pluginDeployerEntry: PluginDeployerEntry) { }\n\n    async copy(origin: string, target: string): Promise<void> {\n        const entries = await fs.readdir(origin, { withFileTypes: true });\n        await fs.mkdir(target, { recursive: true });\n        await Promise.all(entries.map(async entry => {\n            const item = entry.name;\n            const itemPath = path.resolve(origin, item);\n            const targetPath = path.resolve(target, item);\n            if (entry.isDirectory()) {\n                return this.copy(itemPath, targetPath);\n            }\n            if (entry.isFile()) {\n                return fs.copyFile(itemPath, targetPath);\n            }\n        }));\n    }\n\n    pluginEntry(): PluginDeployerEntry {\n        return this.pluginDeployerEntry;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDeployerEntry, PluginDeployerEntryType, PluginType } from '../../common/plugin-protocol';\nimport { promises as fs } from 'fs';\n\nexport class PluginDeployerEntryImpl implements PluginDeployerEntry {\n\n    private initPath: string;\n\n    private currentPath: string;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private map: Map<string, any>;\n\n    private resolved: boolean;\n    private acceptedTypes: PluginDeployerEntryType[];\n\n    private changes: string[];\n\n    private resolvedByName: string;\n\n    private _type = PluginType.System;\n    private _rootPath: string | undefined;\n\n    constructor(readonly originId: string, readonly pluginId: string, initPath?: string) {\n        this.map = new Map();\n        this.changes = [];\n        this.acceptedTypes = [];\n        if (initPath) {\n            this.currentPath = initPath;\n            this.initPath = initPath;\n            this.resolved = true;\n        } else {\n            this.resolved = false;\n        }\n    }\n\n    id(): string {\n        return this.pluginId;\n    }\n    originalPath(): string {\n        return this.initPath;\n    }\n    path(): string {\n        return this.currentPath;\n    }\n    getValue<T>(key: string): T {\n        return this.map.get(key);\n    }\n    storeValue<T>(key: string, value: T): void {\n        this.map.set(key, value);\n    }\n    updatePath(newPath: string, transformerName?: string): void {\n        if (transformerName) {\n            this.changes.push(transformerName);\n        }\n        this.currentPath = newPath;\n    }\n    getChanges(): string[] {\n        return this.changes;\n    }\n    async isFile(): Promise<boolean> {\n        try {\n            const stat = await fs.stat(this.currentPath);\n            return stat.isFile();\n        } catch {\n            return false;\n        }\n    }\n    async isDirectory(): Promise<boolean> {\n        try {\n            const stat = await fs.stat(this.currentPath);\n            return stat.isDirectory();\n        } catch {\n            return false;\n        }\n    }\n    hasError(): boolean {\n        throw new Error('Method not implemented.');\n    }\n\n    isResolved(): boolean {\n        return this.resolved;\n    }\n\n    accept(...types: PluginDeployerEntryType[]): void {\n        this.acceptedTypes = types;\n    }\n\n    isAccepted(...types: PluginDeployerEntryType[]): boolean {\n        return types.some(type => this.acceptedTypes.indexOf(type) >= 0);\n    }\n\n    setResolvedBy(name: string): void {\n        this.resolvedByName = name;\n    }\n\n    resolvedBy(): string {\n        return this.resolvedByName;\n    }\n\n    get type(): PluginType {\n        return this._type;\n    }\n\n    set type(type: PluginType) {\n        this._type = type;\n    }\n\n    get rootPath(): string {\n        return !!this._rootPath ? this._rootPath : this.path();\n    }\n\n    set rootPath(rootPath: string) {\n        this._rootPath = rootPath;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDeployerEntry, PluginDeployerFileHandlerContext } from '../../common/plugin-protocol';\nimport * as decompress from 'decompress';\n\nexport class PluginDeployerFileHandlerContextImpl implements PluginDeployerFileHandlerContext {\n\n    constructor(private readonly pluginDeployerEntry: PluginDeployerEntry) {\n\n    }\n\n    async unzip(sourcePath: string, destPath: string): Promise<void> {\n        await decompress(sourcePath, destPath);\n    }\n\n    pluginEntry(): PluginDeployerEntry {\n        return this.pluginDeployerEntry;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, optional, multiInject, inject, named } from '@theia/core/shared/inversify';\nimport * as semver from 'semver';\nimport {\n    PluginDeployerResolver, PluginDeployerFileHandler, PluginDeployerDirectoryHandler,\n    PluginDeployerEntry, PluginDeployer, PluginDeployerParticipant, PluginDeployerStartContext,\n    PluginDeployerResolverInit,\n    PluginDeployerEntryType, PluginDeployerHandler, PluginType, UnresolvedPluginEntry, PluginIdentifiers, PluginDeployOptions\n} from '../../common/plugin-protocol';\nimport { PluginDeployerEntryImpl } from './plugin-deployer-entry-impl';\nimport {\n    PluginDeployerResolverContextImpl,\n    PluginDeployerResolverInitImpl\n} from './plugin-deployer-resolver-context-impl';\nimport { ProxyPluginDeployerEntry } from './plugin-deployer-proxy-entry-impl';\nimport { PluginDeployerFileHandlerContextImpl } from './plugin-deployer-file-handler-context-impl';\nimport { PluginDeployerDirectoryHandlerContextImpl } from './plugin-deployer-directory-handler-context-impl';\nimport { ILogger, Emitter, ContributionProvider } from '@theia/core';\nimport { PluginCliContribution } from './plugin-cli-contribution';\nimport { Measurement, Stopwatch } from '@theia/core/lib/common';\n\n@injectable()\nexport class PluginDeployerImpl implements PluginDeployer {\n\n    protected readonly onDidDeployEmitter = new Emitter<void>();\n    readonly onDidDeploy = this.onDidDeployEmitter.event;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(PluginDeployerHandler)\n    protected readonly pluginDeployerHandler: PluginDeployerHandler;\n\n    @inject(PluginCliContribution)\n    protected readonly cliContribution: PluginCliContribution;\n\n    @inject(Stopwatch)\n    protected readonly stopwatch: Stopwatch;\n\n    /**\n     * Inject all plugin resolvers found at runtime.\n     */\n    @optional() @multiInject(PluginDeployerResolver)\n    private pluginResolvers: PluginDeployerResolver[];\n\n    /**\n     * Inject all file handler for local resolved plugins.\n     */\n    @optional() @multiInject(PluginDeployerFileHandler)\n    private pluginDeployerFileHandlers: PluginDeployerFileHandler[];\n\n    /**\n     * Inject all directory handler for local resolved plugins.\n     */\n    @optional() @multiInject(PluginDeployerDirectoryHandler)\n    private pluginDeployerDirectoryHandlers: PluginDeployerDirectoryHandler[];\n\n    @inject(ContributionProvider) @named(PluginDeployerParticipant)\n    protected readonly participants: ContributionProvider<PluginDeployerParticipant>;\n\n    public start(): void {\n        this.logger.debug('Starting the deployer with the list of resolvers', this.pluginResolvers);\n        this.doStart();\n    }\n\n    public async initResolvers(): Promise<Array<void>> {\n\n        // call init on each resolver\n        const pluginDeployerResolverInit: PluginDeployerResolverInit = new PluginDeployerResolverInitImpl();\n        const promises = this.pluginResolvers.map(async pluginResolver => {\n            if (pluginResolver.init) {\n                pluginResolver.init(pluginDeployerResolverInit);\n            }\n        });\n        return Promise.all(promises);\n    }\n\n    protected async doStart(): Promise<void> {\n\n        // init resolvers\n        await this.initResolvers();\n\n        // check THEIA_DEFAULT_PLUGINS or THEIA_PLUGINS env var\n        const defaultPluginsValue = process.env.THEIA_DEFAULT_PLUGINS || undefined;\n        const pluginsValue = process.env.THEIA_PLUGINS || undefined;\n        // check the `--plugins` CLI option\n        const defaultPluginsValueViaCli = this.cliContribution.localDir();\n\n        this.logger.debug('Found the list of default plugins ID on env:', defaultPluginsValue);\n        this.logger.debug('Found the list of plugins ID on env:', pluginsValue);\n        this.logger.debug('Found the list of default plugins ID from CLI:', defaultPluginsValueViaCli);\n\n        // transform it to array\n        const defaultPluginIdList = defaultPluginsValue ? defaultPluginsValue.split(',') : [];\n        const pluginIdList = pluginsValue ? pluginsValue.split(',') : [];\n        const systemEntries = defaultPluginIdList.concat(pluginIdList).concat(defaultPluginsValueViaCli ? defaultPluginsValueViaCli.split(',') : []);\n\n        const userEntries: string[] = [];\n        const context: PluginDeployerStartContext = { userEntries, systemEntries };\n\n        for (const contribution of this.participants.getContributions()) {\n            if (contribution.onWillStart) {\n                await contribution.onWillStart(context);\n            }\n        }\n\n        const deployPlugins = this.measure('deployPlugins');\n        const unresolvedUserEntries = context.userEntries.map(id => ({\n            id,\n            type: PluginType.User\n        }));\n        const unresolvedSystemEntries = context.systemEntries.map(id => ({\n            id,\n            type: PluginType.System\n        }));\n        const plugins = await this.resolvePlugins([...unresolvedUserEntries, ...unresolvedSystemEntries]);\n        deployPlugins.log('Resolve plugins list');\n        await this.deployPlugins(plugins);\n        deployPlugins.log('Deploy plugins list');\n    }\n\n    async uninstall(pluginId: PluginIdentifiers.VersionedId): Promise<void> {\n        await this.pluginDeployerHandler.uninstallPlugin(pluginId);\n    }\n\n    async undeploy(pluginId: PluginIdentifiers.VersionedId): Promise<void> {\n        if (await this.pluginDeployerHandler.undeployPlugin(pluginId)) {\n            this.onDidDeployEmitter.fire();\n        }\n    }\n\n    async deploy(plugin: UnresolvedPluginEntry, options?: PluginDeployOptions): Promise<number> {\n        const deploy = this.measure('deploy');\n        const numDeployedPlugins = await this.deployMultipleEntries([plugin], options);\n        deploy.log(`Deploy plugin ${plugin.id}`);\n        return numDeployedPlugins;\n    }\n\n    protected async deployMultipleEntries(plugins: UnresolvedPluginEntry[], options?: PluginDeployOptions): Promise<number> {\n        const pluginsToDeploy = await this.resolvePlugins(plugins, options);\n        return this.deployPlugins(pluginsToDeploy);\n    }\n\n    /**\n     * Resolves plugins for the given type.\n     *\n     * Only call it a single time before triggering a single deploy to prevent re-resolving of extension dependencies, i.e.\n     * ```ts\n     * const deployer: PluginDeployer;\n     * deployer.deployPlugins(await deployer.resolvePlugins(allPluginEntries));\n     * ```\n     */\n    async resolvePlugins(plugins: UnresolvedPluginEntry[], options?: PluginDeployOptions): Promise<PluginDeployerEntry[]> {\n        const visited = new Set<string>();\n        const hasBeenVisited = (id: string) => visited.has(id) || (visited.add(id), false);\n        const pluginsToDeploy = new Map<PluginIdentifiers.VersionedId, PluginDeployerEntry>();\n        const unversionedIdsHandled = new Map<PluginIdentifiers.UnversionedId, string[]>();\n\n        const queue: UnresolvedPluginEntry[] = [...plugins];\n        while (queue.length) {\n            const pendingDependencies: Array<{\n                dependencies: Map<string, string>\n                type: PluginType\n            }> = [];\n            await Promise.all(queue.map(async entry => {\n                if (hasBeenVisited(entry.id)) {\n                    return;\n                }\n                const type = entry.type ?? PluginType.System;\n                try {\n                    const pluginDeployerEntries = await this.resolveAndHandle(entry.id, type, options);\n                    for (const deployerEntry of pluginDeployerEntries) {\n                        const pluginData = await this.pluginDeployerHandler.getPluginDependencies(deployerEntry);\n                        const versionedId = pluginData && PluginIdentifiers.componentsToVersionedId(pluginData.metadata.model);\n                        const unversionedId = versionedId && PluginIdentifiers.componentsToUnversionedId(pluginData.metadata.model);\n                        if (unversionedId && !pluginsToDeploy.has(versionedId)) {\n                            pluginsToDeploy.set(versionedId, deployerEntry);\n                            if (pluginData.mapping) {\n                                pendingDependencies.push({ dependencies: pluginData.mapping, type });\n                            }\n                            const otherVersions = unversionedIdsHandled.get(unversionedId) ?? [];\n                            otherVersions.push(pluginData.metadata.model.version);\n                            if (otherVersions.length === 1) {\n                                unversionedIdsHandled.set(unversionedId, otherVersions);\n                            } else {\n                                this.findBestVersion(unversionedId, otherVersions, pluginsToDeploy);\n                            }\n                        }\n                    }\n                } catch (e) {\n                    console.error(`Failed to resolve plugins from '${entry.id}'`, e);\n                }\n            }));\n            queue.length = 0;\n            for (const { dependencies, type } of pendingDependencies) {\n                for (const [dependency, deployableDependency] of dependencies) {\n                    if (!unversionedIdsHandled.has(dependency as PluginIdentifiers.UnversionedId)) {\n                        queue.push({\n                            id: deployableDependency,\n                            type\n                        });\n                    }\n                }\n            }\n        }\n        return [...pluginsToDeploy.values()];\n    }\n\n    protected async resolveAndHandle(id: string, type: PluginType, options?: PluginDeployOptions): Promise<PluginDeployerEntry[]> {\n        const entries = await this.resolvePlugin(id, type, options);\n        await this.applyFileHandlers(entries);\n        await this.applyDirectoryFileHandlers(entries);\n        return entries;\n    }\n\n    protected findBestVersion(unversionedId: PluginIdentifiers.UnversionedId, versions: string[], knownPlugins: Map<PluginIdentifiers.VersionedId, PluginDeployerEntry>): void {\n        // If left better, return negative. Then best is index 0.\n        versions.map(version => ({ version, plugin: knownPlugins.get(PluginIdentifiers.idAndVersionToVersionedId({ version, id: unversionedId })) }))\n            .sort((left, right) => {\n                const leftPlugin = left.plugin;\n                const rightPlugin = right.plugin;\n                if (!leftPlugin && !rightPlugin) {\n                    return 0;\n                }\n                if (!rightPlugin) {\n                    return -1;\n                }\n                if (!leftPlugin) {\n                    return 1;\n                }\n                if (leftPlugin.type === PluginType.System && rightPlugin.type === PluginType.User) {\n                    return -1;\n                }\n                if (leftPlugin.type === PluginType.User && rightPlugin.type === PluginType.System) {\n                    return 1;\n                }\n                if (semver.gtr(left.version, right.version)) {\n                    return -1;\n                }\n                return 1;\n            }).forEach((versionedEntry, index) => {\n                if (index !== 0) {\n                    // Mark as not accepted to prevent deployment of all but the winner.\n                    versionedEntry.plugin?.accept();\n                }\n            });\n    }\n\n    /**\n     * deploy all plugins that have been accepted\n     */\n    async deployPlugins(pluginsToDeploy: PluginDeployerEntry[]): Promise<number> {\n        const acceptedPlugins = pluginsToDeploy.filter(pluginDeployerEntry => pluginDeployerEntry.isAccepted());\n        const acceptedFrontendPlugins = pluginsToDeploy.filter(pluginDeployerEntry => pluginDeployerEntry.isAccepted(PluginDeployerEntryType.FRONTEND));\n        const acceptedBackendPlugins = pluginsToDeploy.filter(pluginDeployerEntry => pluginDeployerEntry.isAccepted(PluginDeployerEntryType.BACKEND));\n\n        this.logger.debug('the accepted plugins are', acceptedPlugins);\n        this.logger.debug('the acceptedFrontendPlugins plugins are', acceptedFrontendPlugins);\n        this.logger.debug('the acceptedBackendPlugins plugins are', acceptedBackendPlugins);\n\n        acceptedPlugins.forEach(plugin => {\n            this.logger.debug('will deploy plugin', plugin.id(), 'with changes', JSON.stringify(plugin.getChanges()), 'and this plugin has been resolved by', plugin.resolvedBy());\n        });\n\n        // local path to launch\n        const pluginPaths = acceptedBackendPlugins.map(pluginEntry => pluginEntry.path());\n        this.logger.debug('local path to deploy on remote instance', pluginPaths);\n\n        const deployments = await Promise.all([\n            // start the backend plugins\n            this.pluginDeployerHandler.deployBackendPlugins(acceptedBackendPlugins),\n            this.pluginDeployerHandler.deployFrontendPlugins(acceptedFrontendPlugins)\n        ]);\n        this.onDidDeployEmitter.fire(undefined);\n        return deployments.reduce<number>((accumulated, current) => accumulated += current ?? 0, 0);\n    }\n\n    /**\n     * If there are some single files, try to see if we can work on these files (like unpacking it, etc)\n     */\n    public async applyFileHandlers(pluginDeployerEntries: PluginDeployerEntry[]): Promise<void> {\n        const waitPromises = pluginDeployerEntries.filter(pluginDeployerEntry => pluginDeployerEntry.isResolved()).flatMap(pluginDeployerEntry =>\n            this.pluginDeployerFileHandlers.map(async pluginFileHandler => {\n                const proxyPluginDeployerEntry = new ProxyPluginDeployerEntry(pluginFileHandler, (pluginDeployerEntry) as PluginDeployerEntryImpl);\n                if (await pluginFileHandler.accept(proxyPluginDeployerEntry)) {\n                    const pluginDeployerFileHandlerContext = new PluginDeployerFileHandlerContextImpl(proxyPluginDeployerEntry);\n                    await pluginFileHandler.handle(pluginDeployerFileHandlerContext);\n                }\n            })\n        );\n        await Promise.all(waitPromises);\n    }\n\n    /**\n     * Check for all registered directories to see if there are some plugins that can be accepted to be deployed.\n     */\n    public async applyDirectoryFileHandlers(pluginDeployerEntries: PluginDeployerEntry[]): Promise<void> {\n        const waitPromises = pluginDeployerEntries.filter(pluginDeployerEntry => pluginDeployerEntry.isResolved()).flatMap(pluginDeployerEntry =>\n            this.pluginDeployerDirectoryHandlers.map(async pluginDirectoryHandler => {\n                const proxyPluginDeployerEntry = new ProxyPluginDeployerEntry(pluginDirectoryHandler, (pluginDeployerEntry) as PluginDeployerEntryImpl);\n                if (await pluginDirectoryHandler.accept(proxyPluginDeployerEntry)) {\n                    const pluginDeployerDirectoryHandlerContext = new PluginDeployerDirectoryHandlerContextImpl(proxyPluginDeployerEntry);\n                    await pluginDirectoryHandler.handle(pluginDeployerDirectoryHandlerContext);\n                }\n            })\n        );\n        await Promise.all(waitPromises);\n    }\n\n    /**\n     * Check a plugin ID see if there are some resolvers that can handle it. If there is a matching resolver, then we resolve the plugin\n     */\n    public async resolvePlugin(pluginId: string, type: PluginType = PluginType.System, options?: PluginDeployOptions): Promise<PluginDeployerEntry[]> {\n        const pluginDeployerEntries: PluginDeployerEntry[] = [];\n        const foundPluginResolver = this.pluginResolvers.find(pluginResolver => pluginResolver.accept(pluginId));\n        // there is a resolver for the input\n        if (foundPluginResolver) {\n\n            // create context object\n            const context = new PluginDeployerResolverContextImpl(foundPluginResolver, pluginId);\n\n            await foundPluginResolver.resolve(context, options);\n\n            context.getPlugins().forEach(entry => {\n                entry.type = type;\n                pluginDeployerEntries.push(entry);\n            });\n        } else {\n            // log it for now\n            this.logger.error('No plugin resolver found for the entry', pluginId);\n            const unresolvedEntry = new PluginDeployerEntryImpl(pluginId, pluginId);\n            unresolvedEntry.type = type;\n            pluginDeployerEntries.push(unresolvedEntry);\n        }\n\n        return pluginDeployerEntries;\n    }\n\n    protected measure(name: string): Measurement {\n        return this.stopwatch.start(name);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PluginDeployerEntry, PluginDeployerEntryType, PluginType } from '../../common/plugin-protocol';\nimport { PluginDeployerEntryImpl } from './plugin-deployer-entry-impl';\n\n/**\n * Proxify call to plugin deployer entry by adding the deployer name as part of the updating path\n */\n@injectable()\nexport class ProxyPluginDeployerEntry<T> implements PluginDeployerEntry {\n\n    private readonly deployerName: string;\n\n    constructor(readonly deployer: T, readonly delegate: PluginDeployerEntryImpl) {\n        this.deployerName = (this.deployer as {}).constructor.name;\n    }\n\n    id(): string {\n        return this.delegate.id();\n    }\n    originalPath(): string {\n        return this.delegate.originalPath();\n    }\n    path(): string {\n        return this.delegate.path();\n    }\n\n    getValue<V>(key: string): V {\n        return this.delegate.getValue(key);\n    }\n    storeValue<V>(key: string, value: V): void {\n        this.delegate.storeValue(key, value);\n    }\n\n    updatePath(newPath: string): void {\n        this.delegate.updatePath(newPath, this.deployerName);\n    }\n\n    getChanges(): string[] {\n        return this.delegate.getChanges();\n    }\n\n    isFile(): Promise<boolean> {\n        return this.delegate.isFile();\n    }\n\n    isDirectory(): Promise<boolean> {\n        return this.delegate.isDirectory();\n    }\n    isResolved(): boolean {\n        return this.delegate.isResolved();\n    }\n    isAccepted(...types: PluginDeployerEntryType[]): boolean {\n        return this.delegate.isAccepted(...types);\n    }\n    accept(...types: PluginDeployerEntryType[]): void {\n        this.delegate.accept(...types);\n    }\n    hasError(): boolean {\n        return this.delegate.hasError();\n    }\n    resolvedBy(): string {\n        return this.delegate.resolvedBy();\n    }\n\n    get type(): PluginType {\n        return this.delegate.type;\n    }\n\n    set type(type: PluginType) {\n        this.delegate.type = type;\n    }\n\n    get rootPath(): string {\n        return this.delegate.rootPath;\n    }\n\n    set rootPath(rootPath: string) {\n        this.delegate.rootPath = rootPath;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDeployerResolverContext, PluginDeployerEntry, PluginDeployerResolverInit } from '../../common/plugin-protocol';\nimport { PluginDeployerEntryImpl } from './plugin-deployer-entry-impl';\n\nexport class PluginDeployerResolverContextImpl<T> implements PluginDeployerResolverContext {\n\n    /**\n     * Name of the resolver for this context\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private resolverName: any;\n\n    private pluginEntries: PluginDeployerEntry[];\n\n    constructor(resolver: T, private readonly sourceId: string) {\n        this.pluginEntries = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.resolverName = (resolver as any).constructor.name;\n\n    }\n\n    addPlugin(pluginId: string, path: string): void {\n        const pluginEntry = new PluginDeployerEntryImpl(this.sourceId, pluginId, path);\n        pluginEntry.setResolvedBy(this.resolverName);\n        this.pluginEntries.push(pluginEntry);\n    }\n\n    getPlugins(): PluginDeployerEntry[] {\n        return this.pluginEntries;\n    }\n\n    getOriginId(): string {\n        return this.sourceId;\n    }\n\n}\n\nexport class PluginDeployerResolverInitImpl implements PluginDeployerResolverInit {\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { PluginApiContribution } from './plugin-service';\nimport { BackendApplicationContribution, CliContribution } from '@theia/core/lib/node';\nimport { WsRequestValidatorContribution } from '@theia/core/lib/node/ws-request-validators';\nimport { PluginsKeyValueStorage } from './plugins-key-value-storage';\nimport { PluginDeployerContribution } from './plugin-deployer-contribution';\nimport {\n    PluginDeployer, PluginDeployerResolver, PluginDeployerFileHandler,\n    PluginDeployerDirectoryHandler, PluginServer, pluginServerJsonRpcPath, PluginDeployerParticipant\n} from '../../common/plugin-protocol';\nimport { PluginDeployerImpl } from './plugin-deployer-impl';\nimport { LocalDirectoryPluginDeployerResolver } from './resolvers/local-directory-plugin-deployer-resolver';\nimport { PluginTheiaFileHandler } from './handlers/plugin-theia-file-handler';\nimport { PluginTheiaDirectoryHandler } from './handlers/plugin-theia-directory-handler';\nimport { GithubPluginDeployerResolver } from './plugin-github-resolver';\nimport { HttpPluginDeployerResolver } from './plugin-http-resolver';\nimport { ConnectionHandler, RpcConnectionHandler, bindContributionProvider } from '@theia/core';\nimport { PluginPathsService, pluginPathsServicePath } from '../common/plugin-paths-protocol';\nimport { PluginPathsServiceImpl } from './paths/plugin-paths-service';\nimport { PluginServerHandler } from './plugin-server-handler';\nimport { PluginCliContribution } from './plugin-cli-contribution';\nimport { PluginTheiaEnvironment } from '../common/plugin-theia-environment';\nimport { PluginTheiaDeployerParticipant } from './plugin-theia-deployer-participant';\nimport { WebviewBackendSecurityWarnings } from './webview-backend-security-warnings';\nimport { PluginUninstallationManager } from './plugin-uninstallation-manager';\nimport { LocalizationServerImpl } from '@theia/core/lib/node/i18n/localization-server';\nimport { PluginLocalizationServer } from './plugin-localization-server';\n\nexport function bindMainBackend(bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind): void {\n    bind(PluginApiContribution).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(PluginApiContribution);\n    bind(WsRequestValidatorContribution).toService(PluginApiContribution);\n\n    bindContributionProvider(bind, PluginDeployerParticipant);\n    bind(PluginDeployer).to(PluginDeployerImpl).inSingletonScope();\n    bind(PluginDeployerContribution).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(PluginDeployerContribution);\n\n    bind(PluginUninstallationManager).toSelf().inSingletonScope();\n\n    bind(PluginDeployerResolver).to(LocalDirectoryPluginDeployerResolver).inSingletonScope();\n    bind(PluginDeployerResolver).to(GithubPluginDeployerResolver).inSingletonScope();\n    bind(PluginDeployerResolver).to(HttpPluginDeployerResolver).inSingletonScope();\n\n    bind(PluginTheiaEnvironment).toSelf().inSingletonScope();\n    bind(PluginTheiaDeployerParticipant).toSelf().inSingletonScope();\n    bind(PluginDeployerParticipant).toService(PluginTheiaDeployerParticipant);\n\n    bind(PluginDeployerFileHandler).to(PluginTheiaFileHandler).inSingletonScope();\n    bind(PluginDeployerDirectoryHandler).to(PluginTheiaDirectoryHandler).inSingletonScope();\n\n    bind(PluginServer).to(PluginServerHandler).inSingletonScope();\n\n    bind(PluginsKeyValueStorage).toSelf().inSingletonScope();\n\n    bind(PluginPathsService).to(PluginPathsServiceImpl).inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(pluginPathsServicePath, () =>\n            ctx.container.get(PluginPathsService)\n        )\n    ).inSingletonScope();\n\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(pluginServerJsonRpcPath, () =>\n            ctx.container.get(PluginServer)\n        )\n    ).inSingletonScope();\n\n    bind(PluginCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(PluginCliContribution);\n\n    bind(WebviewBackendSecurityWarnings).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(WebviewBackendSecurityWarnings);\n\n    rebind(LocalizationServerImpl).to(PluginLocalizationServer).inSingletonScope();\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RequestContext, RequestService } from '@theia/core/shared/@theia/request';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport { PluginDeployerResolver, PluginDeployerResolverContext } from '../../common';\nimport { getTempDirPathAsync } from './temp-dir-util';\n\n/**\n * Resolver that handle the github: protocol\n * github:<org>/<repo>/<filename>@latest\n * github:<org>/<repo>/<filename>@<version>\n */\n@injectable()\nexport class GithubPluginDeployerResolver implements PluginDeployerResolver {\n\n    private static PREFIX = 'github:';\n\n    private static GITHUB_ENDPOINT = 'https://github.com/';\n\n    private unpackedFolder: Deferred<string>;\n\n    @inject(RequestService)\n    protected readonly request: RequestService;\n\n    constructor() {\n        this.unpackedFolder = new Deferred();\n        getTempDirPathAsync('github-remote').then(async unpackedFolder => {\n            try {\n                await fs.mkdir(unpackedFolder, { recursive: true });\n                this.unpackedFolder.resolve(unpackedFolder);\n            } catch (err) {\n                this.unpackedFolder.reject(err);\n            }\n        });\n    }\n\n    /**\n     * Grab the remote file specified by Github URL\n     */\n    async resolve(pluginResolverContext: PluginDeployerResolverContext): Promise<void> {\n\n        // download the file\n        // extract data\n        const extracted = /^github:(.*)\\/(.*)\\/(.*)$/gm.exec(pluginResolverContext.getOriginId());\n        if (!extracted || extracted === null || extracted.length !== 4) {\n            throw new Error('Invalid extension' + pluginResolverContext.getOriginId());\n        }\n\n        const orgName = extracted[1];\n        const repoName = extracted[2];\n        const file = extracted[3];\n\n        // get version if any\n        const splitFile = file.split('@');\n        let version;\n        let filename: string;\n        if (splitFile.length === 1) {\n            filename = file;\n            version = 'latest';\n        } else {\n            filename = splitFile[0];\n            version = splitFile[1];\n        }\n        // latest version, need to get the redirect\n        const url = GithubPluginDeployerResolver.GITHUB_ENDPOINT + orgName + '/' + repoName + '/releases/latest';\n\n        // if latest, resolve first the real version\n        if (version === 'latest') {\n            // disable redirect to grab the release\n            const followRedirects = 0;\n            const response = await this.request.request({ url, followRedirects });\n            // should have a redirect\n            if (response.res.statusCode === 302) {\n                const redirectLocation = response.res.headers.location;\n                if (!redirectLocation) {\n                    throw new Error('Invalid github link with latest not being found');\n                }\n\n                // parse redirect link\n                const taggedValueArray = /^https:\\/\\/.*tag\\/(.*)/gm.exec(redirectLocation);\n                if (!taggedValueArray || taggedValueArray.length !== 2) {\n                    throw new Error('The redirect link for latest is invalid ' + redirectLocation);\n                }\n\n                // grab version of tag\n                return this.grabGithubFile(pluginResolverContext, orgName, repoName, filename, taggedValueArray[1]);\n\n            }\n        } else {\n            return this.grabGithubFile(pluginResolverContext, orgName, repoName, filename, version);\n        }\n    }\n\n    /*\n     * Grab the github file specified by the plugin's ID\n     */\n    protected async grabGithubFile(pluginResolverContext: PluginDeployerResolverContext, orgName: string, repoName: string, filename: string, version: string): Promise<void> {\n        const unpackedFolder = await this.unpackedFolder.promise;\n        const unpackedPath = path.resolve(unpackedFolder, path.basename(version + filename));\n        try {\n            await fs.access(unpackedPath);\n            // use of cache. If file is already there use it directly\n            return;\n        } catch { }\n\n        const url = GithubPluginDeployerResolver.GITHUB_ENDPOINT + orgName + '/' + repoName + '/releases/download/' + version + '/' + filename;\n        const response = await this.request.request({ url });\n        if (RequestContext.isSuccess(response)) {\n            await fs.writeFile(unpackedPath, response.buffer);\n            pluginResolverContext.addPlugin(pluginResolverContext.getOriginId(), unpackedPath);\n        } else {\n            throw new Error(`Could not download the plugin from GitHub. URL: ${url}. HTTP status code: ${response.res.statusCode}`);\n        }\n    }\n\n    /**\n     * Handle only the plugins that starts with github:\n     */\n    accept(pluginId: string): boolean {\n        return pluginId.startsWith(GithubPluginDeployerResolver.PREFIX);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RequestContext, RequestService } from '@theia/core/shared/@theia/request';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport * as url from 'url';\nimport { PluginDeployerResolver, PluginDeployerResolverContext } from '../../common';\nimport { getTempDirPathAsync } from './temp-dir-util';\n\n/**\n * Resolver that handle the http(s): protocol\n * http://path/to/my.plugin\n * https://path/to/my.plugin\n */\n@injectable()\nexport class HttpPluginDeployerResolver implements PluginDeployerResolver {\n\n    private unpackedFolder: Deferred<string>;\n\n    @inject(RequestService)\n    protected readonly request: RequestService;\n\n    constructor() {\n        this.unpackedFolder = new Deferred();\n        getTempDirPathAsync('http-remote').then(async unpackedFolder => {\n            try {\n                await fs.mkdir(unpackedFolder, { recursive: true });\n                this.unpackedFolder.resolve(unpackedFolder);\n            } catch (err) {\n                this.unpackedFolder.reject(err);\n            }\n        });\n    }\n\n    /**\n     * Grab the remote file specified by the given URL\n     */\n    async resolve(pluginResolverContext: PluginDeployerResolverContext): Promise<void> {\n\n        // download the file\n        // keep filename of the url\n        const urlPath = pluginResolverContext.getOriginId();\n        const link = url.parse(urlPath);\n        if (!link.pathname) {\n            throw new Error('invalid link URI' + urlPath);\n        }\n\n        const dirname = path.dirname(link.pathname);\n        const basename = path.basename(link.pathname);\n        const filename = dirname.replace(/\\W/g, '_') + ('-') + basename;\n        const unpackedFolder = await this.unpackedFolder.promise;\n        const unpackedPath = path.resolve(unpackedFolder, path.basename(filename));\n\n        try {\n            await fs.access(unpackedPath);\n            // use of cache. If file is already there use it directly\n            return;\n        } catch { }\n\n        const response = await this.request.request({ url: pluginResolverContext.getOriginId() });\n        if (RequestContext.isSuccess(response)) {\n            await fs.writeFile(unpackedPath, response.buffer);\n            pluginResolverContext.addPlugin(pluginResolverContext.getOriginId(), unpackedPath);\n        } else {\n            throw new Error(`Could not download the plugin from ${pluginResolverContext.getOriginId()}. HTTP status code: ${response.res.statusCode}`);\n        }\n\n    }\n\n    /**\n     * Handle only the plugins that starts with http or https:\n     */\n    accept(pluginId: string): boolean {\n        return /^http[s]?:\\/\\/.*$/gm.test(pluginId);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { PluginDeployer } from '../../common/plugin-protocol';\nimport { PluginDeployerImpl } from './plugin-deployer-impl';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { LocalizationServerImpl } from '@theia/core/lib/node/i18n/localization-server';\n\n@injectable()\nexport class PluginLocalizationServer extends LocalizationServerImpl {\n    @inject(PluginDeployer)\n    protected readonly pluginDeployer: PluginDeployerImpl;\n    protected readonly pluginsDeployed = new Deferred();\n\n    override async initialize(): Promise<void> {\n        this.pluginDeployer.onDidDeploy(() => {\n            this.pluginsDeployed.resolve();\n        });\n        await super.initialize();\n    }\n\n    override async waitForInitialization(): Promise<void> {\n        await Promise.all([\n            super.waitForInitialization(),\n            this.pluginsDeployed.promise,\n        ]);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { PluginDeployerImpl } from './plugin-deployer-impl';\nimport { PluginsKeyValueStorage } from './plugins-key-value-storage';\nimport { PluginServer, PluginDeployer, PluginStorageKind, PluginType, UnresolvedPluginEntry, PluginIdentifiers, PluginDeployOptions } from '../../common/plugin-protocol';\nimport { KeysToAnyValues, KeysToKeysToAnyValue } from '../../common/types';\n\n@injectable()\nexport class PluginServerHandler implements PluginServer {\n\n    @inject(PluginDeployer)\n    protected readonly pluginDeployer: PluginDeployerImpl;\n\n    @inject(PluginsKeyValueStorage)\n    protected readonly pluginsKeyValueStorage: PluginsKeyValueStorage;\n\n    async deploy(pluginEntry: string, arg2?: PluginType | CancellationToken, options?: PluginDeployOptions): Promise<void> {\n        const type = typeof arg2 === 'number' ? arg2 as PluginType : undefined;\n        const successfulDeployments = await this.doDeploy({\n            id: pluginEntry,\n            type: type ?? PluginType.User\n        }, options);\n        if (successfulDeployments === 0) {\n            const optionText = options ? ` and options ${JSON.stringify(options)} ` : ' ';\n            throw new Error(`Deployment of extension with ID ${pluginEntry}${optionText}failed.`);\n        }\n    }\n\n    protected doDeploy(pluginEntry: UnresolvedPluginEntry, options?: PluginDeployOptions): Promise<number> {\n        return this.pluginDeployer.deploy(pluginEntry, options);\n    }\n\n    uninstall(pluginId: PluginIdentifiers.VersionedId): Promise<void> {\n        return this.pluginDeployer.uninstall(pluginId);\n    }\n\n    undeploy(pluginId: PluginIdentifiers.VersionedId): Promise<void> {\n        return this.pluginDeployer.undeploy(pluginId);\n    }\n\n    setStorageValue(key: string, value: KeysToAnyValues, kind: PluginStorageKind): Promise<boolean> {\n        return this.pluginsKeyValueStorage.set(key, value, kind);\n    }\n\n    getStorageValue(key: string, kind: PluginStorageKind): Promise<KeysToAnyValues> {\n        return this.pluginsKeyValueStorage.get(key, kind);\n    }\n\n    getAllStorageValues(kind: PluginStorageKind): Promise<KeysToKeysToAnyValue> {\n        return this.pluginsKeyValueStorage.getAll(kind);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as http from 'http';\nimport * as path from 'path';\nimport * as url from 'url';\nconst vhost = require('vhost');\nimport * as express from '@theia/core/shared/express';\nimport { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { WebviewExternalEndpoint } from '../common/webview-protocol';\nimport { environment } from '@theia/core/shared/@theia/application-package/lib/environment';\nimport { WsRequestValidatorContribution } from '@theia/core/lib/node/ws-request-validators';\nimport { MaybePromise } from '@theia/core/lib/common';\nimport { ApplicationPackage } from '@theia/core/shared/@theia/application-package';\n\n@injectable()\nexport class PluginApiContribution implements BackendApplicationContribution, WsRequestValidatorContribution {\n\n    protected webviewExternalEndpointRegExp: RegExp;\n\n    protected serveSameOrigin: boolean = false;\n\n    @inject(ApplicationPackage)\n    protected readonly applicationPackage: ApplicationPackage;\n\n    @postConstruct()\n    protected init(): void {\n        const webviewExternalEndpoint = this.webviewExternalEndpoint();\n        console.log(`Configuring to accept webviews on '${webviewExternalEndpoint}' hostname.`);\n        this.webviewExternalEndpointRegExp = new RegExp(webviewExternalEndpoint, 'i');\n    }\n\n    configure(app: express.Application): void {\n        const webviewApp = express();\n        webviewApp.use('/webview', express.static(path.join(this.applicationPackage.projectPath, 'lib', 'webview', 'pre')));\n        app.use(vhost(this.webviewExternalEndpointRegExp, webviewApp));\n    }\n\n    allowWsUpgrade(request: http.IncomingMessage): MaybePromise<boolean> {\n        if (request.headers.origin && !this.serveSameOrigin) {\n            const origin = url.parse(request.headers.origin);\n            if (origin.host && this.webviewExternalEndpointRegExp.test(origin.host)) {\n                // If the origin comes from the WebViews, refuse:\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected webviewExternalEndpointPattern(): string {\n        let endpointPattern;\n        if (environment.electron.is()) {\n            endpointPattern = WebviewExternalEndpoint.defaultPattern;\n        } else {\n            endpointPattern = process.env[WebviewExternalEndpoint.pattern] || WebviewExternalEndpoint.defaultPattern;\n        }\n        if (endpointPattern === '{{hostname}}') {\n            this.serveSameOrigin = true;\n        }\n        return endpointPattern;\n    }\n\n    /**\n     * Returns a RegExp pattern matching the expected WebView endpoint's host.\n     */\n    protected webviewExternalEndpoint(): string {\n        return `^${this.webviewExternalEndpointPattern()\n            .replace(/\\./g, '\\\\.')\n            .replace('{{uuid}}', '.+')\n            .replace('{{hostname}}', '.+')}$`;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PluginTheiaEnvironment } from '../common/plugin-theia-environment';\nimport { PluginDeployerParticipant, PluginDeployerStartContext } from '../../common/plugin-protocol';\n\n@injectable()\nexport class PluginTheiaDeployerParticipant implements PluginDeployerParticipant {\n\n    @inject(PluginTheiaEnvironment)\n    protected readonly environments: PluginTheiaEnvironment;\n\n    async onWillStart(context: PluginDeployerStartContext): Promise<void> {\n        const pluginsDirUri = await this.environments.getPluginsDirUri();\n        context.userEntries.push(pluginsDirUri.withScheme('local-dir').toString());\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PluginIdentifiers } from '../../common';\n\n@injectable()\nexport class PluginUninstallationManager {\n    protected readonly onDidChangeUninstalledPluginsEmitter = new Emitter<readonly PluginIdentifiers.VersionedId[]>();\n\n    get onDidChangeUninstalledPlugins(): Event<readonly PluginIdentifiers.VersionedId[]> {\n        return this.onDidChangeUninstalledPluginsEmitter.event;\n    }\n\n    protected uninstalledPlugins: PluginIdentifiers.VersionedId[] = [];\n\n    protected fireDidChange(): void {\n        this.onDidChangeUninstalledPluginsEmitter.fire(Object.freeze(this.uninstalledPlugins.slice()));\n    }\n\n    markAsUninstalled(...pluginIds: PluginIdentifiers.VersionedId[]): boolean {\n        let didChange = false;\n        for (const id of pluginIds) { didChange = this.markOneAsUninstalled(id) || didChange; }\n        if (didChange) { this.fireDidChange(); }\n        return didChange;\n    }\n\n    protected markOneAsUninstalled(pluginId: PluginIdentifiers.VersionedId): boolean {\n        if (!this.uninstalledPlugins.includes(pluginId)) {\n            this.uninstalledPlugins.push(pluginId);\n            return true;\n        }\n        return false;\n    }\n\n    markAsInstalled(...pluginIds: PluginIdentifiers.VersionedId[]): boolean {\n        let didChange = false;\n        for (const id of pluginIds) { didChange = this.markOneAsInstalled(id) || didChange; }\n        if (didChange) { this.fireDidChange(); }\n        return didChange;\n    }\n\n    protected markOneAsInstalled(pluginId: PluginIdentifiers.VersionedId): boolean {\n        let index: number;\n        let didChange = false;\n        while ((index = this.uninstalledPlugins.indexOf(pluginId)) !== -1) {\n            this.uninstalledPlugins.splice(index, 1);\n            didChange = true;\n        }\n        return didChange;\n    }\n\n    isUninstalled(pluginId: PluginIdentifiers.VersionedId): boolean {\n        return this.uninstalledPlugins.includes(pluginId);\n    }\n\n    getUninstalledPluginIds(): readonly PluginIdentifiers.VersionedId[] {\n        return Object.freeze(this.uninstalledPlugins.slice());\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { FileSystemLocking } from '@theia/core/lib/node';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { PluginPaths } from './paths/const';\nimport { PluginPathsService } from '../common/plugin-paths-protocol';\nimport { KeysToAnyValues, KeysToKeysToAnyValue } from '../../common/types';\nimport { PluginStorageKind } from '../../common';\n\nexport interface Store {\n    fsPath: string\n    values: KeysToKeysToAnyValue\n}\n\n@injectable()\nexport class PluginsKeyValueStorage {\n\n    private stores: Record<string, Store> = Object.create(null);\n    private storesToSync = new Set<Store>();\n    private syncStoresTimeout?: NodeJS.Timeout;\n\n    private deferredGlobalDataPath = new Deferred<string | undefined>();\n\n    @inject(PluginPathsService)\n    private pluginPathsService: PluginPathsService;\n\n    @inject(EnvVariablesServer)\n    private envServer: EnvVariablesServer;\n\n    @inject(FileSystemLocking)\n    private fsLocking: FileSystemLocking;\n\n    @postConstruct()\n    protected init(): void {\n        this.deferredGlobalDataPath.resolve(this.getGlobalDataPath().catch(error => {\n            console.error('Failed to initialize global state path:', error);\n            return undefined;\n        }));\n        process.once('beforeExit', () => this.dispose());\n        this.syncStores();\n    }\n\n    async set(key: string, value: KeysToAnyValues, kind: PluginStorageKind): Promise<boolean> {\n        const store = await this.getStore(kind);\n        if (!store) {\n            console.warn('Cannot save data: no opened workspace');\n            return false;\n        }\n        if (value === undefined || Object.keys(value).length === 0) {\n            delete store.values[key];\n        } else {\n            store.values[key] = value;\n        }\n        this.storesToSync.add(store);\n        return true;\n    }\n\n    async get(key: string, kind: PluginStorageKind): Promise<KeysToAnyValues> {\n        const store = await this.getStore(kind);\n        return store?.values[key] ?? {};\n    }\n\n    async getAll(kind: PluginStorageKind): Promise<KeysToKeysToAnyValue> {\n        const store = await this.getStore(kind);\n        return store?.values ?? {};\n    }\n\n    private async getGlobalDataPath(): Promise<string> {\n        const configDirUri = await this.envServer.getConfigDirUri();\n        const globalStorageFsPath = path.join(FileUri.fsPath(configDirUri), PluginPaths.PLUGINS_GLOBAL_STORAGE_DIR);\n        await fs.ensureDir(globalStorageFsPath);\n        return path.join(globalStorageFsPath, 'global-state.json');\n    }\n\n    private async initializeStore(storePath: string): Promise<Store> {\n        return this.fsLocking.lockPath(storePath, async resolved => {\n            const values = await this.readFromFile(resolved);\n            return {\n                values,\n                fsPath: storePath\n            };\n        });\n    }\n\n    private async getStore(kind: PluginStorageKind): Promise<Store | undefined> {\n        const dataPath = await this.getDataPath(kind);\n        if (dataPath) {\n            return this.stores[dataPath] ??= await this.initializeStore(dataPath);\n        }\n    }\n\n    private syncStores(): void {\n        this.syncStoresTimeout = setTimeout(async () => {\n            await Promise.all(Array.from(this.storesToSync, async ({ fsPath, values }) => {\n                await this.fsLocking.lockPath(fsPath, async storePath => {\n                    await this.writeToFile(storePath, values);\n                });\n            }));\n            this.storesToSync.clear();\n            if (this.syncStoresTimeout) {\n                this.syncStores();\n            }\n        }, this.getSyncStoreTimeout());\n    }\n\n    private getSyncStoreTimeout(): number {\n        // 0-10s + 1min\n        return 10_000 * Math.random() + 60_000;\n    }\n\n    private async getDataPath(kind: PluginStorageKind): Promise<string | undefined> {\n        if (!kind) {\n            return this.deferredGlobalDataPath.promise;\n        }\n        const storagePath = await this.pluginPathsService.getHostStoragePath(kind.workspace, kind.roots);\n        if (storagePath) {\n            return path.join(storagePath, 'workspace-state.json');\n        }\n    }\n\n    private async readFromFile(pathToFile: string): Promise<KeysToKeysToAnyValue> {\n        if (!await fs.pathExists(pathToFile)) {\n            return {};\n        }\n        try {\n            return await fs.readJSON(pathToFile);\n        } catch (error) {\n            console.error('Failed to parse data from \"', pathToFile, '\". Reason:', error);\n            return {};\n        }\n    }\n\n    private async writeToFile(pathToFile: string, data: KeysToKeysToAnyValue): Promise<void> {\n        await fs.ensureDir(path.dirname(pathToFile));\n        await fs.writeJSON(pathToFile, data);\n    }\n\n    private dispose(): void {\n        clearTimeout(this.syncStoresTimeout);\n        this.syncStoresTimeout = undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDeployerResolverContext } from '../../../common/plugin-protocol';\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { LocalPluginDeployerResolver } from './local-plugin-deployer-resolver';\n\n@injectable()\nexport class LocalDirectoryPluginDeployerResolver extends LocalPluginDeployerResolver {\n    static LOCAL_DIR = 'local-dir';\n\n    protected get supportedScheme(): string {\n        return LocalDirectoryPluginDeployerResolver.LOCAL_DIR;\n    }\n\n    protected async resolveFromLocalPath(pluginResolverContext: PluginDeployerResolverContext, localPath: string): Promise<void> {\n        const files = await fs.readdir(localPath);\n        files.forEach(file =>\n            pluginResolverContext.addPlugin(file, path.resolve(localPath, file))\n        );\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PluginDeployerResolver, PluginDeployerResolverContext } from '../../../common/plugin-protocol';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { FileUri } from '@theia/core/lib/node';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport abstract class LocalPluginDeployerResolver implements PluginDeployerResolver {\n    async resolve(pluginResolverContext: PluginDeployerResolverContext): Promise<void> {\n        const localPath = await this.resolveLocalPluginPath(pluginResolverContext, this.supportedScheme);\n        if (localPath) {\n            await this.resolveFromLocalPath(pluginResolverContext, localPath);\n        }\n    }\n\n    accept(pluginId: string): boolean {\n        return pluginId.startsWith(this.supportedScheme);\n    }\n\n    protected abstract get supportedScheme(): string;\n\n    protected abstract resolveFromLocalPath(pluginResolverContext: PluginDeployerResolverContext, localPath: string): Promise<void>;\n\n    private async resolveLocalPluginPath(pluginResolverContext: PluginDeployerResolverContext, expectedScheme: string): Promise<string | null> {\n        const localUri = new URI(pluginResolverContext.getOriginId());\n        if (localUri.scheme !== expectedScheme) {\n            return null;\n        }\n        let fsPath = FileUri.fsPath(localUri);\n        if (!path.isAbsolute(fsPath)) {\n            fsPath = path.resolve(process.cwd(), fsPath);\n        }\n        if (!await fs.pathExists(fsPath)) {\n            console.warn(`The local plugin referenced by ${pluginResolverContext.getOriginId()} does not exist.`);\n            return null;\n        }\n        return fsPath;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as os from 'os';\nimport * as path from 'path';\nimport { realpathSync, promises as fs } from 'fs';\n\nexport function getTempDir(name: string): string {\n    let tempDir = os.tmpdir();\n    // for mac os 'os.tmpdir()' return symlink, but we need real path\n    if (process.platform === 'darwin') {\n        tempDir = realpathSync(tempDir);\n    }\n    return path.resolve(tempDir, name);\n}\n\nexport async function getTempDirPathAsync(name: string): Promise<string> {\n    let tempDir = os.tmpdir();\n    // for mac os 'os.tmpdir()' return symlink, but we need real path\n    if (process.platform === 'darwin') {\n        tempDir = await fs.realpath(tempDir);\n    }\n    return path.resolve(tempDir, name);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { BackendApplicationConfigProvider } from '@theia/core/lib/node/backend-application-config-provider';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { WebviewExternalEndpoint } from '../common/webview-protocol';\n\n@injectable()\nexport class WebviewBackendSecurityWarnings implements BackendApplicationContribution {\n\n    initialize(): void {\n        this.checkHostPattern();\n    }\n\n    protected async checkHostPattern(): Promise<void> {\n        if (BackendApplicationConfigProvider.get()['warnOnPotentiallyInsecureHostPattern'] === false) {\n            return;\n        }\n        const envHostPattern = process.env[WebviewExternalEndpoint.pattern];\n        if (envHostPattern && envHostPattern !== WebviewExternalEndpoint.defaultPattern) {\n            console.warn(`\\\nWEBVIEW SECURITY WARNING\n\n    Changing the @theia/plugin-ext webview host pattern can lead to security vulnerabilities.\n        Current pattern: \"${envHostPattern}\"\n    Please read @theia/plugin-ext/README.md for more information.\n`\n            );\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { bindHostedBackend } from './hosted/node/plugin-ext-hosted-backend-module';\nimport { bindMainBackend } from './main/node/plugin-ext-backend-module';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindMainBackend(bind, unbind, isBound, rebind);\n    bindHostedBackend(bind);\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * The JSON-RPC interface for plugin metrics\n */\nexport const metricsJsonRpcPath = '/services/plugin-ext/metrics';\nexport const PluginMetrics = Symbol('PluginMetrics');\nexport interface PluginMetrics {\n    setMetrics(metrics: string): void;\n    getMetrics(): string;\n}\n\nexport const METRICS_TIMEOUT = 10000;\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MetricOutput, AnalyticsFromRequests } from '../../common/plugin-metrics-types';\nimport { injectable } from '@theia/core/shared/inversify';\n\n@injectable()\nexport class PluginMetricTimeCount implements MetricOutput {\n\n    public header = '# HELP language_server_time_count Number of language server requests\\n# TYPE language_server_time_count gauge\\n';\n\n    createMetricOutput(id: string, method: string, requestAnalytics: AnalyticsFromRequests): string {\n        if (requestAnalytics.successfulResponses < 0) {\n            requestAnalytics.successfulResponses = 0;\n        }\n        const successMetric = `language_server_time_count{id=\"${id}\" method=\"${method}\" result=\"success\"} ${requestAnalytics.successfulResponses}\\n`;\n\n        const failedRequests = requestAnalytics.totalRequests - requestAnalytics.successfulResponses;\n        const failureMetric = `language_server_time_count{id=\"${id}\" method=\"${method}\" result=\"fail\"} ${failedRequests}\\n`;\n        return successMetric + failureMetric;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MetricOutput, AnalyticsFromRequests } from '../../common/plugin-metrics-types';\nimport { injectable } from '@theia/core/shared/inversify';\n\n@injectable()\nexport class PluginMetricTimeSum implements MetricOutput {\n\n    public header = '# HELP language_server_time_sum Sum of time in milliseconds that language server requests take\\n# TYPE language_server_time_sum gauge\\n';\n\n    createMetricOutput(id: string, method: string, requestAnalytics: AnalyticsFromRequests): string {\n        const successTime = requestAnalytics.sumOfTimeForSuccess;\n        const success = `language_server_time_sum{id=\"${id}\" method=\"${method}\" result=\"success\"} ${successTime}\\n`;\n\n        const failureTime = requestAnalytics.sumOfTimeForFailure;\n        const failure = `language_server_time_sum{id=\"${id}\" method=\"${method}\" result=\"failure\"} ${failureTime}\\n`;\n\n        return success + failure;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { PluginMetricTimeCount } from './metric-output/plugin-metrics-time-count';\nimport { PluginMetricTimeSum } from './metric-output/plugin-metrics-time-sum';\nimport { MetricsMap } from '../common/plugin-metrics-types';\nimport { injectable, inject } from '@theia/core/shared/inversify';\n\n@injectable()\nexport class PluginMetricStringGenerator {\n\n    @inject(PluginMetricTimeCount)\n    private pluginMetricsTimeCount: PluginMetricTimeCount;\n\n    @inject(PluginMetricTimeSum)\n    private pluginMetricsTimeSum: PluginMetricTimeSum;\n\n    getMetricsString(extensionIDAnalytics: MetricsMap): string {\n\n        if (Object.keys(extensionIDAnalytics).length === 0) {\n            return '';\n        }\n\n        let metricString = this.pluginMetricsTimeCount.header;\n        for (const extensionID in extensionIDAnalytics) {\n            if (!extensionIDAnalytics.hasOwnProperty(extensionID)) {\n                continue;\n            }\n\n            const methodToAnalytic = extensionIDAnalytics[extensionID];\n            for (const method in methodToAnalytic) {\n                if (!methodToAnalytic.hasOwnProperty(method)) {\n                    continue;\n                }\n                const analytic = methodToAnalytic[method];\n                metricString += this.pluginMetricsTimeCount.createMetricOutput(extensionID, method, analytic);\n            }\n        }\n\n        metricString += this.pluginMetricsTimeSum.header;\n        for (const extensionID in extensionIDAnalytics) {\n            if (!extensionIDAnalytics.hasOwnProperty(extensionID)) {\n                continue;\n            }\n\n            const methodToAnalytic = extensionIDAnalytics[extensionID];\n            for (const method in methodToAnalytic) {\n                if (!methodToAnalytic.hasOwnProperty(method)) {\n                    continue;\n                }\n                const analytic = methodToAnalytic[method];\n                metricString += this.pluginMetricsTimeSum.createMetricOutput(extensionID, method, analytic);\n            }\n        }\n\n        return metricString;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginMetrics } from '../common/metrics-protocol';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { AnalyticsFromRequests, MetricsMap } from '../common/plugin-metrics-types';\n\n@injectable()\nexport class PluginMetricsContributor {\n    clients: Set<PluginMetrics> = new Set();\n\n    reconcile(): MetricsMap {\n        const reconciledMap: MetricsMap = {};\n        this.clients.forEach(c => {\n            const extensionIDtoMap = JSON.parse(c.getMetrics()) as MetricsMap;\n\n            for (const vscodeExtensionID in extensionIDtoMap) {\n                if (!extensionIDtoMap.hasOwnProperty(vscodeExtensionID)) {\n                    continue;\n                }\n\n                if (!reconciledMap[vscodeExtensionID]) {\n                    reconciledMap[vscodeExtensionID] = extensionIDtoMap[vscodeExtensionID];\n                } else {\n                    const methodToAnalytics = extensionIDtoMap[vscodeExtensionID];\n                    for (const method in methodToAnalytics) {\n\n                        if (!methodToAnalytics.hasOwnProperty(method)) {\n                            continue;\n                        }\n\n                        if (!reconciledMap[vscodeExtensionID][method]) {\n                            reconciledMap[vscodeExtensionID][method] = methodToAnalytics[method];\n                        } else {\n                            const currentAnalytic = reconciledMap[vscodeExtensionID][method];\n                            if (!methodToAnalytics[method]) {\n                                reconciledMap[vscodeExtensionID][method] = currentAnalytic;\n                            } else {\n                                // It does have the method\n                                // Then we need to reconcile the two analytics from requests\n                                const newAnalytic = methodToAnalytics[method] as AnalyticsFromRequests;\n                                newAnalytic.sumOfTimeForSuccess = newAnalytic.sumOfTimeForSuccess + currentAnalytic.sumOfTimeForSuccess;\n                                newAnalytic.sumOfTimeForFailure = newAnalytic.sumOfTimeForFailure + currentAnalytic.sumOfTimeForFailure;\n                                newAnalytic.totalRequests += currentAnalytic.totalRequests;\n                                newAnalytic.successfulResponses += currentAnalytic.successfulResponses;\n\n                                reconciledMap[vscodeExtensionID][method] = newAnalytic;\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return reconciledMap;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MetricsContribution } from '@theia/metrics/lib/node/metrics-contribution';\nimport { PluginMetricsContribution } from './plugin-metrics';\nimport { PluginMetrics, metricsJsonRpcPath } from '../common/metrics-protocol';\nimport { PluginMetricsImpl } from './plugin-metrics-impl';\nimport { ConnectionHandler } from '@theia/core/lib/common/messaging/handler';\nimport { RpcConnectionHandler } from '@theia/core';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { PluginMetricsContributor } from './metrics-contributor';\nimport { PluginMetricTimeSum } from './metric-output/plugin-metrics-time-sum';\nimport { PluginMetricTimeCount } from './metric-output/plugin-metrics-time-count';\nimport { PluginMetricStringGenerator } from './metric-string-generator';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(PluginMetricTimeSum).toSelf().inSingletonScope();\n    bind(PluginMetricTimeCount).toSelf().inSingletonScope();\n    bind(PluginMetrics).to(PluginMetricsImpl).inTransientScope();\n    bind(PluginMetricStringGenerator).toSelf().inSingletonScope();\n    bind(PluginMetricsContributor).toSelf().inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx => {\n        const clients = ctx.container.get(PluginMetricsContributor);\n        return new RpcConnectionHandler(metricsJsonRpcPath, client => {\n            const pluginMetricsHandler: PluginMetrics = ctx.container.get(PluginMetrics);\n            clients.clients.add(pluginMetricsHandler);\n            client.onDidCloseConnection(() => {\n                clients.clients.delete(pluginMetricsHandler);\n            });\n            return pluginMetricsHandler;\n        });\n    }\n    ).inSingletonScope();\n\n    bind(MetricsContribution).to(PluginMetricsContribution).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PluginMetrics } from '../common/metrics-protocol';\n\n@injectable()\nexport class PluginMetricsImpl implements PluginMetrics {\n\n    private metrics: string = '{}';\n\n    // tslint:disable-next-line:typedef\n    setMetrics(metrics: string) {\n        this.metrics = metrics;\n    }\n\n    /**\n     * This sends all the information about metrics inside of the plugins to the backend\n     * where it is served on the /metrics endpoint\n     */\n    getMetrics(): string {\n        return this.metrics;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MetricsContribution } from '@theia/metrics/lib/node/metrics-contribution';\nimport { METRICS_TIMEOUT } from '../common/metrics-protocol';\nimport { PluginMetricsContributor } from './metrics-contributor';\nimport { PluginMetricStringGenerator } from './metric-string-generator';\n\n@injectable()\nexport class PluginMetricsContribution implements MetricsContribution {\n\n    @inject(PluginMetricsContributor)\n    protected readonly metricsContributor: PluginMetricsContributor;\n\n    @inject(PluginMetricStringGenerator)\n    protected readonly stringGenerator: PluginMetricStringGenerator;\n\n    private metrics: string;\n\n    getMetrics(): string {\n        return this.metrics;\n    }\n\n    startCollecting(): void {\n        setInterval(() => {\n            const reconciledMetrics = this.metricsContributor.reconcile();\n            this.metrics = this.stringGenerator.getMetricsString(reconciledMetrics);\n        }, METRICS_TIMEOUT);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ShellCommandBuilder } from './shell-command-builder';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(ShellCommandBuilder).toSelf().inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event } from '@theia/core';\n\nexport interface ManagedProcessManager {\n    register(process: ManagedProcess): number;\n    unregister(process: ManagedProcess): void;\n    get(id: number): ManagedProcess | undefined;\n}\n\nexport interface ManagedProcess {\n    readonly id: number;\n    readonly onStart: Event<IProcessStartEvent>;\n    readonly onExit: Event<IProcessExitEvent>;\n    readonly onClose: Event<IProcessExitEvent>;\n    readonly onError: Event<ProcessErrorEvent>;\n    readonly killed: boolean;\n    kill(): void;\n}\n\nexport interface IProcessExitEvent {\n    // Exactly one of code and signal will be set.\n    readonly code?: number,\n    readonly signal?: string\n}\n\n/**\n * Data emitted when a process has been successfully started.\n */\nexport interface IProcessStartEvent {\n}\n\n/**\n * Data emitted when a process has failed to start.\n */\nexport interface ProcessErrorEvent extends Error {\n    /** An errno-like error string (e.g. ENOENT).  */\n    code: string;\n}\n\nexport enum ProcessType {\n    'Raw',\n    'Terminal'\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable no-null/no-null */\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport {\n    createShellCommandLine, BashQuotingFunctions, PowershellQuotingFunctions, CmdQuotingFunctions, ShellQuoting, ShellQuotedString, escapeForShell, ShellQuotingFunctions\n} from '../common/shell-quoting';\n\nexport interface ProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface CommandLineOptions {\n    cwd: string\n    args: string[]\n    env?: {\n        [key: string]: string | null\n    }\n}\n\n/**\n * Create command lines ready to be sent to a shell's stdin for evaluation.\n */\n@injectable()\nexport class ShellCommandBuilder {\n\n    /**\n     * Constructs a command line to run in a shell. The shell could be\n     * re-used/long-lived, this means we cannot spawn a new process with a nice\n     * and fresh environment, we need to encode environment modifications into\n     * the returned command.\n     *\n     * Inspired by VS Code implementation, see:\n     * https://github.com/microsoft/vscode/blob/f395cac4fff0721a8099126172c01411812bcb4a/src/vs/workbench/contrib/debug/node/terminals.ts#L79\n     *\n     * @param hostProcessInfo the host terminal process infos\n     * @param commandOptions program to execute in the host terminal\n     */\n    buildCommand(hostProcessInfo: ProcessInfo | undefined, commandOptions: CommandLineOptions): string {\n\n        const host = hostProcessInfo && hostProcessInfo.executable;\n        const cwd = commandOptions.cwd;\n\n        const args = commandOptions.args.map(value => ({\n            value, quoting: ShellQuoting.Strong,\n        } as ShellQuotedString));\n\n        const env: Array<[string, string | null]> = [];\n        if (commandOptions.env) {\n            for (const key of Object.keys(commandOptions.env)) {\n                env.push([key, commandOptions.env[key]]);\n            }\n        }\n        if (host) {\n            if (/(bash|wsl)(.exe)?$/.test(host)) {\n                return this.buildForBash(args, cwd, env);\n            } else if (/(ps|pwsh|powershell)(.exe)?$/i.test(host)) {\n                return this.buildForPowershell(args, cwd, env);\n            } else if (/cmd(.exe)?$/i.test(host)) {\n                return this.buildForCmd(args, cwd, env);\n            }\n        }\n        return this.buildForDefault(args, cwd, env);\n    }\n\n    protected buildForBash(args: Array<string | ShellQuotedString>, cwd?: string, env?: Array<[string, string | null]>): string {\n        let command = '';\n        if (cwd) {\n            command += `cd ${BashQuotingFunctions.strong(cwd)} && `;\n        }\n        if (env?.length) {\n            command += 'env';\n            for (const [key, value] of env) {\n                if (value === null) {\n                    command += ` -u ${BashQuotingFunctions.strong(key)}`;\n                } else {\n                    command += ` ${BashQuotingFunctions.strong(`${key}=${value}`)}`;\n                }\n            }\n            command += ' ';\n        }\n        command += this.createShellCommandLine(args, BashQuotingFunctions);\n        return command;\n    }\n\n    protected buildForPowershell(args: Array<string | ShellQuotedString>, cwd?: string, env?: Array<[string, string | null]>): string {\n        let command = '';\n        if (cwd) {\n            command += `cd ${PowershellQuotingFunctions.strong(cwd)}; `;\n        }\n        if (env?.length) {\n            for (const [key, value] of env) {\n                // Powershell requires special quoting when dealing with\n                // environment variable names.\n                const quotedKey = key\n                    .replace(/`/g, '````')\n                    .replace(/\\?/g, '``?');\n                if (value === null) {\n                    command += `Remove-Item \\${env:${quotedKey}}; `;\n                } else {\n                    command += `\\${env:${quotedKey}}=${PowershellQuotingFunctions.strong(value)}; `;\n                }\n            }\n        }\n        command += '& ' + this.createShellCommandLine(args, PowershellQuotingFunctions);\n        return command;\n    }\n\n    protected buildForCmd(args: Array<string | ShellQuotedString>, cwd?: string, env?: Array<[string, string | null]>): string {\n        let command = '';\n        if (cwd) {\n            command += `cd ${CmdQuotingFunctions.strong(cwd)} && `;\n        }\n        // Current quoting mechanism only works within a nested `cmd` call:\n        command += 'cmd /C \"';\n        if (env?.length) {\n            for (const [key, value] of env) {\n                if (value === null) {\n                    command += `set ${CmdQuotingFunctions.strong(key)}=\"\" && `;\n                } else {\n                    command += `set ${CmdQuotingFunctions.strong(`${key}=${value}`)} && `;\n                }\n            }\n        }\n        command += this.createShellCommandLine(args, CmdQuotingFunctions);\n        command += '\"';\n        return command;\n    }\n\n    protected buildForDefault(args: Array<string | ShellQuotedString>, cwd?: string, env?: Array<[string, string | null]>): string {\n        return this.buildForBash(args, cwd, env);\n    }\n\n    /**\n     * This method will try to leave `arg[0]` unescaped if possible. The reason\n     * is that shells like `cmd` expect their own commands like `dir` to be\n     * unescaped.\n     *\n     * @returns empty string if `args` is empty, otherwise an escaped command.\n     */\n    protected createShellCommandLine(args: (string | ShellQuotedString)[], quotingFunctions: ShellQuotingFunctions): string {\n        let command = '';\n        if (args.length > 0) {\n            const [exec, ...execArgs] = args;\n            // Some commands like `dir` should not be quoted for `cmd` to understand:\n            command += this.quoteExecutableIfNecessary(exec, quotingFunctions);\n            if (execArgs.length > 0) {\n                command += ' ' + createShellCommandLine(execArgs, quotingFunctions);\n            }\n        }\n        return command;\n    }\n\n    protected quoteExecutableIfNecessary(exec: string | ShellQuotedString, quotingFunctions: ShellQuotingFunctions): string {\n        return typeof exec === 'string' && !this.needsQuoting(exec) ? exec : escapeForShell(exec, quotingFunctions);\n    }\n\n    /**\n     * If this method returns `false` then we definitely need quoting.\n     *\n     * May return false positives.\n     */\n    protected needsQuoting(arg: string): boolean {\n        return /\\W/.test(arg);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// #region vscode\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// See: https://github.com/microsoft/vscode/blob/9ebb7c43bc99fd6e1a295040674d1f8e5831b9be/src/vs/vscode.d.ts#L5326-L5370\n\n/**\n * Defines how an argument should be quoted if it contains\n * spaces or unsupported characters.\n */\nexport const enum ShellQuoting {\n\n    /**\n     * Character escaping should be used. This for example\n     * uses \\ on bash and ` on PowerShell.\n     */\n    Escape = 'escape',\n\n    /**\n     * Strong string quoting should be used. This for example\n     * uses \" for Windows cmd and ' for bash and PowerShell.\n     * Strong quoting treats arguments as literal strings.\n     * Under PowerShell echo 'The value is $(2 * 3)' will\n     * print `The value is $(2 * 3)`\n     */\n    Strong = 'strong',\n\n    /**\n     * Weak string quoting should be used. This for example\n     * uses \" for Windows cmd, bash and PowerShell. Weak quoting\n     * still performs some kind of evaluation inside the quoted\n     * string.  Under PowerShell echo \"The value is $(2 * 3)\"\n     * will print `The value is 6`\n     */\n    Weak = 'weak'\n}\n\n/**\n * A string that will be quoted depending on the used shell.\n */\nexport interface ShellQuotedString {\n    /**\n     * The actual string value.\n     */\n    value: string;\n\n    /**\n     * The quoting style to use.\n     */\n    quoting: ShellQuoting;\n}\n\n// #endregion vscode\n\n/**\n * Functions that provide shell quoting capabilities.\n */\nexport interface ShellQuotingFunctions {\n\n    characters: {\n        /** Characters that require quotes, white space is always implied. */\n        needQuotes?: string\n        /** The character used to escape sequences. */\n        escape?: string\n        /** The character used to quote sequences, preventing variable expansion. */\n        strong?: string\n        /** The character used to quote sequences, allowing variable expansion. */\n        weak?: string\n    }\n\n    /**\n     * Should add escape-characters in front of forbidden characters.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    escape?(this: any, arg: string): string\n\n    /**\n     * Should quote the argument in such a way that variables CANNOT be expanded.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    strong?(this: any, arg: string): string;\n\n    /**\n     * Should quote the argument in such a way that variables CAN be expanded.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    weak?(this: any, arg: string): string;\n}\n\n/**\n * Converts a list of args into an escaped shell command.\n *\n * There are two main use cases when handling command/arguments for a shell:\n * 1. User already wrote the escaped commandline, then just use that.\n * 2. User wants a specific process to be invoked with some arguments.\n *\n * The `createShellCommandLine` function is useful for the latter.\n *\n * @param args Standard list of spawn/exec arguments, first item is the command.\n * @param quotingFunctions Collection of functions to process arguments.\n */\nexport function createShellCommandLine(args: Array<string | ShellQuotedString>, quotingFunctions?: ShellQuotingFunctions): string {\n    return args.map(arg => escapeForShell(arg, quotingFunctions)).join(' ');\n}\n\n/**\n * Escape (or quote) a given input.\n *\n * @param arg Input to escape.\n * @param quotingFunctions Collection of functions to process the given `arg`.\n * @param quotingType Override the quoting type specified by the given `arg`.\n */\nexport function escapeForShell(arg: string | ShellQuotedString, quotingFunctions?: ShellQuotingFunctions, quotingType?: ShellQuoting): string {\n    let value: string;\n    let quoting: ShellQuoting | undefined = quotingType;\n    if (typeof arg === 'string') {\n        if (!quoting) {\n            return arg;\n        }\n        value = arg;\n    } else {\n        if (!quoting) {\n            quoting = arg.quoting;\n        }\n        value = arg.value;\n    }\n    if (quotingFunctions && typeof quotingFunctions[quoting] === 'function') {\n        return quotingFunctions[quoting]!(value);\n    }\n    return value;\n}\n\nexport const BashQuotingFunctions: Required<ShellQuotingFunctions> = {\n    characters: {\n        needQuotes: '()',\n        escape: '\\\\',\n        strong: '\\'',\n        weak: '\"',\n    },\n    escape(arg): string {\n        return arg\n            .replace(/[\\s\\\\|(){}<>$&;\"']/g, '\\\\$&');\n    },\n    strong(arg): string {\n        // ('+) becomes ('\"'+\"')\n        return `'${arg\n            .replace(/'+/g, '\\'\"$&\"\\'')}'`;\n    },\n    weak(arg): string {\n        return `\"${arg\n            // Escape escape-characters.\n            .replace(/\\\\\"/g, '\\\\\\\\\"')\n            // Escape user-specified double-quotes.\n            .replace(/\"/g, '\\\\\"')\n            // Escape trailing (\\), we don't want the user to escape our last quote.\n            .replace(/\\\\$/g, '\\\\\\\\')}\"`;\n    },\n};\n\nexport const CmdQuotingFunctions: Required<ShellQuotingFunctions> = {\n    characters: {\n        weak: '\"',\n    },\n    escape(arg): string {\n        return arg\n            // Escape forbidden characters (see: cmd /?).\n            .replace(/[%&<>()@^|]/g, '^$&')\n            // Some characters must be escaped using `\\`.\n            .replace(/[\\\\\"]/g, '\\\\$&')\n            // Double-quote whitespaces, else we cannot escape it.\n            .replace(/\\s+/g, '\"$&\"');\n    },\n    strong(arg): string {\n        return this.weak(arg)\n            // Try to prevent variable expansion.\n            .replace(/%/g, '\"%\"');\n    },\n    weak(arg): string {\n        return `\"${arg\n            // Escape double quotes.\n            .replace(/\\\\\"/g, '\\\\\\\\\"')\n            .replace(/\"/g, '\\\\\"')\n            // Escape forbidden characters (see: cmd /?)\n            .replace(/[&<>()@^|]/g, '^$&')\n            // Escape trailing backslash, we don't want the user to escape our last quote.\n            .replace(/\\\\$/g, '\\\\\\\\')\n            // Escape line returns\n            .replace(/\\r?\\n/g, '^$&')}\"`;\n    },\n};\n\nexport const PowershellQuotingFunctions: Required<ShellQuotingFunctions> = {\n    characters: {\n        needQuotes: '()',\n        escape: '`',\n        strong: '\\'',\n        weak: '\"',\n    },\n    escape(arg): string {\n        return arg.replace(/[`|{}()<>;\"' ]/g, '`$&');\n    },\n    strong(arg): string {\n        // In powershell, one must write ('') for a single quote to be displayed\n        // within a single quoted string.\n        return `'${arg\n            .replace(/'/g, '\\'\\'')}'`;\n    },\n    weak(arg): string {\n        return `\"${arg\n            // Escape escape-characters.\n            .replace(/`\"/g, '``\"')\n            // Escape user-specified backticks.\n            .replace(/\"/g, '`\"')\n            // Escape trailing (`), we don't want the user to escape our last quote.\n            .replace(/`$/g, '``')}\"`;\n    },\n};\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport stream = require('stream');\n\n/**\n * A Node stream like `/dev/null`.\n *\n * Writing goes to a black hole, reading returns `EOF`.\n */\nexport class DevNullStream extends stream.Duplex {\n\n    constructor(options: {\n        /**\n         * Makes this stream call `destroy` on itself, emitting the `close` event.\n         */\n        autoDestroy?: boolean,\n    } = {}) {\n        super();\n        if (options.autoDestroy) {\n            this.destroy();\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override _write(chunk: any, encoding: string, callback: (err?: Error) => void): void {\n        callback();\n    }\n\n    override _read(size: number): void {\n        // eslint-disable-next-line no-null/no-null\n        this.push(null);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './process-manager';\nexport * from './process';\nexport * from './raw-process';\nexport * from './terminal-process';\nexport * from './task-terminal-process';\nexport * from './multi-ring-buffer';\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as stream from 'stream';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Disposable } from '@theia/core/lib/common';\n\n/**\n * The MultiRingBuffer is a ring buffer implementation that allows\n * multiple independent readers.\n *\n * These readers are created using the getReader or getStream functions\n * to create a reader that can be read using deq() or one that is a readable stream.\n */\n\nexport class MultiRingBufferReadableStream extends stream.Readable implements Disposable {\n\n    protected more = false;\n    protected disposed = false;\n\n    constructor(protected readonly ringBuffer: MultiRingBuffer,\n        protected readonly reader: number,\n        protected readonly encoding: BufferEncoding = 'utf8'\n    ) {\n        super();\n        this.setEncoding(encoding);\n    }\n\n    override _read(size: number): void {\n        this.more = true;\n        this.deq(size);\n    }\n\n    override _destroy(err: Error | null, callback: (err: Error | null) => void): void {\n        this.ringBuffer.closeStream(this);\n        this.ringBuffer.closeReader(this.reader);\n        this.disposed = true;\n        this.removeAllListeners();\n        callback(err);\n    }\n\n    onData(): void {\n        if (this.more === true) {\n            this.deq(-1);\n        }\n    }\n\n    deq(size: number): void {\n        if (this.disposed === true) {\n            return;\n        }\n\n        let buffer = undefined;\n        do {\n            buffer = this.ringBuffer.deq(this.reader, size, this.encoding);\n            if (buffer !== undefined) {\n                this.more = this.push(buffer, this.encoding);\n            }\n        }\n        while (buffer !== undefined && this.more === true && this.disposed === false);\n    }\n\n    dispose(): void {\n        this.destroy();\n    }\n}\n\nexport const MultiRingBufferOptions = Symbol('MultiRingBufferOptions');\nexport interface MultiRingBufferOptions {\n    readonly size: number,\n    readonly encoding?: BufferEncoding,\n}\n\nexport interface WrappedPosition { newPos: number, wrap: boolean }\n\n@injectable()\nexport class MultiRingBuffer implements Disposable {\n\n    protected readonly buffer: Buffer;\n    protected head: number = -1;\n    protected tail: number = -1;\n    protected readonly maxSize: number;\n    protected readonly encoding: BufferEncoding;\n\n    /* <id, position> */\n    protected readonly readers: Map<number, number>;\n    /* <stream : id> */\n    protected readonly streams: Map<MultiRingBufferReadableStream, number>;\n    protected readerId = 0;\n\n    constructor(\n        @inject(MultiRingBufferOptions) protected readonly options: MultiRingBufferOptions\n    ) {\n        this.maxSize = options.size;\n        if (options.encoding !== undefined) {\n            this.encoding = options.encoding;\n        } else {\n            this.encoding = 'utf8';\n        }\n        this.buffer = Buffer.alloc(this.maxSize);\n        this.readers = new Map();\n        this.streams = new Map();\n    }\n\n    enq(str: string, encoding = 'utf8'): void {\n        let buffer: Buffer = Buffer.from(str, encoding as BufferEncoding);\n\n        // Take the last elements of string if it's too big, drop the rest\n        if (buffer.length > this.maxSize) {\n            buffer = buffer.slice(buffer.length - this.maxSize);\n        }\n\n        if (buffer.length === 0) {\n            return;\n        }\n\n        // empty\n        if (this.head === -1 && this.tail === -1) {\n            this.head = 0;\n            this.tail = 0;\n            buffer.copy(this.buffer, this.head, 0, buffer.length);\n            this.head = buffer.length - 1;\n            this.onData(0);\n            return;\n        }\n\n        const startHead = this.inc(this.head, 1).newPos;\n\n        if (this.inc(startHead, buffer.length).wrap === true) {\n            buffer.copy(this.buffer, startHead, 0, this.maxSize - startHead);\n            buffer.copy(this.buffer, 0, this.maxSize - startHead);\n        } else {\n            buffer.copy(this.buffer, startHead);\n        }\n\n        this.incTails(buffer.length);\n        this.head = this.inc(this.head, buffer.length).newPos;\n        this.onData(startHead);\n    }\n\n    getReader(): number {\n        this.readers.set(this.readerId, this.tail);\n        return this.readerId++;\n    }\n\n    closeReader(id: number): void {\n        this.readers.delete(id);\n    }\n\n    getStream(encoding?: BufferEncoding): MultiRingBufferReadableStream {\n        const reader = this.getReader();\n        const readableStream = new MultiRingBufferReadableStream(this, reader, encoding);\n        this.streams.set(readableStream, reader);\n        return readableStream;\n    }\n\n    closeStream(readableStream: MultiRingBufferReadableStream): void {\n        this.streams.delete(<MultiRingBufferReadableStream>readableStream);\n    }\n\n    protected onData(start: number): void {\n        /*  Any stream that has read everything already\n         *  Should go back to the last buffer in start offset */\n        for (const [id, pos] of this.readers) {\n            if (pos === -1) {\n                this.readers.set(id, start);\n            }\n        }\n        /* Notify the streams there's new data. */\n        for (const [readableStream] of this.streams) {\n            readableStream.onData();\n        }\n    }\n\n    deq(id: number, size = -1, encoding: BufferEncoding = 'utf8'): string | undefined {\n        const pos = this.readers.get(id);\n        if (pos === undefined || pos === -1) {\n            return undefined;\n        }\n\n        if (size === 0) {\n            return undefined;\n        }\n\n        let buffer = '';\n        const maxDeqSize = this.sizeForReader(id);\n        const wrapped = this.isWrapped(pos, this.head);\n\n        let deqSize;\n        if (size === -1) {\n            deqSize = maxDeqSize;\n        } else {\n            deqSize = Math.min(size, maxDeqSize);\n        }\n\n        if (wrapped === false) { // no wrap\n            buffer = this.buffer.toString(encoding, pos, pos + deqSize);\n        } else { // wrap\n            buffer = buffer.concat(this.buffer.toString(encoding, pos, this.maxSize),\n                this.buffer.toString(encoding, 0, deqSize - (this.maxSize - pos)));\n        }\n\n        const lastIndex = this.inc(pos, deqSize - 1).newPos;\n        // everything is read\n        if (lastIndex === this.head) {\n            this.readers.set(id, -1);\n        } else {\n            this.readers.set(id, this.inc(pos, deqSize).newPos);\n        }\n\n        return buffer;\n    }\n\n    sizeForReader(id: number): number {\n        const pos = this.readers.get(id);\n        if (pos === undefined) {\n            return 0;\n        }\n\n        return this.sizeFrom(pos, this.head, this.isWrapped(pos, this.head));\n    }\n\n    size(): number {\n        return this.sizeFrom(this.tail, this.head, this.isWrapped(this.tail, this.head));\n    }\n\n    protected isWrapped(from: number, to: number): boolean {\n        if (to < from) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    protected sizeFrom(from: number, to: number, wrap: boolean): number {\n        if (from === -1 || to === -1) {\n            return 0;\n        } else {\n            if (wrap === false) {\n                return to - from + 1;\n            } else {\n                return to + 1 + this.maxSize - from;\n            }\n        }\n    }\n\n    emptyForReader(id: number): boolean {\n        const pos = this.readers.get(id);\n        if (pos === undefined || pos === -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    empty(): boolean {\n        if (this.head === -1 && this.tail === -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    streamsSize(): number {\n        return this.streams.size;\n    }\n\n    readersSize(): number {\n        return this.readers.size;\n    }\n\n    /**\n     * Dispose all the attached readers/streams.\n     */\n    dispose(): void {\n        for (const readableStream of this.streams.keys()) {\n            readableStream.dispose();\n        }\n    }\n\n    /* Position should be incremented if it goes pass end.  */\n    protected shouldIncPos(pos: number, end: number, size: number): boolean {\n        const { newPos: newHead, wrap } = this.inc(end, size);\n\n        /* Tail Head */\n        if (this.isWrapped(pos, end) === false) {\n            // Head needs to wrap to push the tail\n            if (wrap === true && newHead >= pos) {\n                return true;\n            }\n        } else { /* Head Tail */\n            //  If we wrap head is pushing tail, or if it goes over pos\n            if (wrap === true || newHead >= pos) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected incTailSize(pos: number, head: number, size: number): WrappedPosition {\n        const { newPos: newHead } = this.inc(head, size);\n        /* New tail is 1 past newHead.  */\n        return this.inc(newHead, 1);\n    }\n\n    protected incTail(pos: number, size: number): WrappedPosition {\n\n        if (this.shouldIncPos(pos, this.head, size) === false) {\n            return { newPos: pos, wrap: false };\n        }\n\n        return this.incTailSize(pos, this.head, size);\n    }\n\n    /* Increment the main tail and all the reader positions. */\n    protected incTails(size: number): void {\n        this.tail = this.incTail(this.tail, size).newPos;\n\n        for (const [id, pos] of this.readers) {\n            if (pos !== -1) {\n                if (this.shouldIncPos(pos, this.tail, size) === true) {\n                    this.readers.set(id, this.tail);\n                }\n            }\n        }\n    }\n\n    protected inc(pos: number, size: number): WrappedPosition {\n        if (size === 0) {\n            return { newPos: pos, wrap: false };\n        }\n        const newPos = (pos + size) % this.maxSize;\n        const wrap = newPos <= pos;\n        return { newPos, wrap };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, Container } from '@theia/core/shared/inversify';\nimport { RawProcess, RawProcessOptions, RawProcessFactory, RawForkOptions } from './raw-process';\nimport { TerminalProcess, TerminalProcessOptions, TerminalProcessFactory } from './terminal-process';\nimport { TaskTerminalProcess, TaskTerminalProcessFactory } from './task-terminal-process';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { ProcessManager } from './process-manager';\nimport { ILogger } from '@theia/core/lib/common';\nimport { MultiRingBuffer, MultiRingBufferOptions } from './multi-ring-buffer';\n\nexport default new ContainerModule(bind => {\n    bind(RawProcess).toSelf().inTransientScope();\n    bind(ProcessManager).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(ProcessManager);\n    bind(ILogger).toDynamicValue(ctx => {\n        const parentLogger = ctx.container.get<ILogger>(ILogger);\n        return parentLogger.child('process');\n    }).inSingletonScope().whenTargetNamed('process');\n    bind(RawProcessFactory).toFactory(ctx =>\n        (options: RawProcessOptions | RawForkOptions) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n\n            child.bind(RawProcessOptions).toConstantValue(options);\n            return child.get(RawProcess);\n        }\n    );\n\n    bind(TerminalProcess).toSelf().inTransientScope();\n    bind(TerminalProcessFactory).toFactory(ctx =>\n        (options: TerminalProcessOptions) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n\n            child.bind(TerminalProcessOptions).toConstantValue(options);\n            return child.get(TerminalProcess);\n        }\n    );\n\n    bind(TaskTerminalProcess).toSelf().inTransientScope();\n    bind(TaskTerminalProcessFactory).toFactory(ctx =>\n        (options: TerminalProcessOptions) => {\n            const child = ctx.container.createChild();\n            child.bind(TerminalProcessOptions).toConstantValue(options);\n            return child.get(TaskTerminalProcess);\n        }\n    );\n\n    bind(MultiRingBuffer).toSelf().inTransientScope();\n    /* 1MB size, TODO should be a user preference. */\n    bind(MultiRingBufferOptions).toConstantValue({ size: 1048576 });\n});\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { ManagedProcessManager, ManagedProcess } from '../common/process-manager-types';\nimport { MAX_SAFE_INTEGER } from '@theia/core/lib/common/numbers';\nimport { Process } from './process';\n\n@injectable()\nexport class ProcessManager implements ManagedProcessManager, BackendApplicationContribution {\n\n    protected readonly processes: Map<number, Process>;\n    protected readonly deleteEmitter: Emitter<number>;\n\n    constructor(\n        @inject(ILogger) @named('process') protected logger: ILogger\n    ) {\n        this.processes = new Map();\n        this.deleteEmitter = new Emitter<number>();\n    }\n\n    /**\n     * Registers the given process into this manager. Both on process termination and on error,\n     * the process will be automatically removed from the manager.\n     *\n     * @param process the process to register.\n     */\n    register(process: Process): number {\n        const id = this.generateId();\n        this.processes.set(id, process);\n        process.onError(() => this.unregister(process));\n        return id;\n    }\n\n    /**\n     * @returns a random id for a process that is not assigned to a different process yet.\n     */\n    protected generateId(): number {\n        let id = undefined;\n        while (id === undefined) {\n            const candidate = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n            if (!this.processes.has(candidate)) {\n                id = candidate;\n            }\n        }\n        return id;\n    }\n\n    /**\n     * Removes the process from this process manager. Invoking this method, will make\n     * sure that the process is terminated before eliminating it from the manager's cache.\n     *\n     * @param process the process to unregister from this process manager.\n     */\n    unregister(process: ManagedProcess): void {\n        const processLabel = this.getProcessLabel(process);\n        this.logger.debug(`Unregistering process. ${processLabel}`);\n        if (!process.killed) {\n            this.logger.debug(`Ensuring process termination. ${processLabel}`);\n            process.kill();\n        }\n        if (this.processes.delete(process.id)) {\n            this.deleteEmitter.fire(process.id);\n            this.logger.debug(`The process was successfully unregistered. ${processLabel}`);\n        } else {\n            this.logger.warn(`This process was not registered or was already unregistered. ${processLabel}`);\n        }\n    }\n\n    get(id: number): ManagedProcess | undefined {\n        return this.processes.get(id);\n    }\n\n    get onDelete(): Event<number> {\n        return this.deleteEmitter.event;\n    }\n\n    onStop(): void {\n        for (const process of this.processes.values()) {\n            try {\n                this.unregister(process);\n            } catch (error) {\n                this.logger.error(`Error occurred when unregistering process. ${this.getProcessLabel(process)}`, error);\n            }\n        }\n    }\n\n    private getProcessLabel(process: ManagedProcess): string {\n        return `[ID: ${process.id}]`;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, unmanaged } from '@theia/core/shared/inversify';\nimport { ILogger, Emitter, Event, isObject } from '@theia/core/lib/common';\nimport { FileUri } from '@theia/core/lib/node';\nimport { isOSX, isWindows } from '@theia/core';\nimport { Readable, Writable } from 'stream';\nimport { exec } from 'child_process';\nimport * as fs from 'fs';\nimport { IProcessStartEvent, IProcessExitEvent, ProcessErrorEvent, ProcessType, ManagedProcessManager, ManagedProcess } from '../common/process-manager-types';\nexport { IProcessStartEvent, IProcessExitEvent, ProcessErrorEvent, ProcessType };\n\n/**\n * Options to spawn a new process (`spawn`).\n *\n * For more information please refer to the spawn function of Node's\n * child_process module:\n *\n *   https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\n */\nexport interface ProcessOptions {\n    readonly command: string,\n    args?: string[],\n    options?: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [key: string]: any\n    }\n}\n\n/**\n * Options to fork a new process using the current Node interpreter (`fork`).\n *\n * For more information please refer to the fork function of Node's\n * child_process module:\n *\n *   https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options\n */\nexport interface ForkOptions {\n    readonly modulePath: string,\n    args?: string[],\n    options?: object\n}\n\n@injectable()\nexport abstract class Process implements ManagedProcess {\n\n    readonly id: number;\n    protected readonly startEmitter: Emitter<IProcessStartEvent> = new Emitter<IProcessStartEvent>();\n    protected readonly exitEmitter: Emitter<IProcessExitEvent> = new Emitter<IProcessExitEvent>();\n    protected readonly closeEmitter: Emitter<IProcessExitEvent> = new Emitter<IProcessExitEvent>();\n    protected readonly errorEmitter: Emitter<ProcessErrorEvent> = new Emitter<ProcessErrorEvent>();\n    protected _killed = false;\n\n    /**\n     * The OS process id.\n     */\n    abstract readonly pid: number;\n\n    /**\n     * The stdout stream.\n     */\n    abstract readonly outputStream: Readable;\n\n    /**\n     * The stderr stream.\n     */\n    abstract readonly errorStream: Readable;\n\n    /**\n     * The stdin stream.\n     */\n    abstract readonly inputStream: Writable;\n\n    constructor(\n        protected readonly processManager: ManagedProcessManager,\n        protected readonly logger: ILogger,\n        @unmanaged() protected readonly type: ProcessType,\n        protected readonly options: ProcessOptions | ForkOptions\n    ) {\n        this.id = this.processManager.register(this);\n        this.initialCwd = options && options.options && 'cwd' in options.options && options.options['cwd'].toString() || __dirname;\n    }\n\n    abstract kill(signal?: string): void;\n\n    get killed(): boolean {\n        return this._killed;\n    }\n\n    get onStart(): Event<IProcessStartEvent> {\n        return this.startEmitter.event;\n    }\n\n    /**\n     * Wait for the process to exit, streams can still emit data.\n     */\n    get onExit(): Event<IProcessExitEvent> {\n        return this.exitEmitter.event;\n    }\n\n    get onError(): Event<ProcessErrorEvent> {\n        return this.errorEmitter.event;\n    }\n\n    /**\n     * Waits for both process exit and for all the streams to be closed.\n     */\n    get onClose(): Event<IProcessExitEvent> {\n        return this.closeEmitter.event;\n    }\n\n    protected emitOnStarted(): void {\n        this.startEmitter.fire({});\n    }\n\n    /**\n     * Emit the onExit event for this process.  Only one of code and signal\n     * should be defined.\n     */\n    protected emitOnExit(code?: number, signal?: string): void {\n        const exitEvent: IProcessExitEvent = { code, signal };\n        this.handleOnExit(exitEvent);\n        this.exitEmitter.fire(exitEvent);\n    }\n\n    /**\n     * Emit the onClose event for this process.  Only one of code and signal\n     * should be defined.\n     */\n    protected emitOnClose(code?: number, signal?: string): void {\n        this.closeEmitter.fire({ code, signal });\n    }\n\n    protected handleOnExit(event: IProcessExitEvent): void {\n        this._killed = true;\n        const signalSuffix = event.signal ? `, signal: ${event.signal}` : '';\n        const executable = this.isForkOptions(this.options) ? this.options.modulePath : this.options.command;\n\n        this.logger.debug(`Process ${this.pid} has exited with code ${event.code}${signalSuffix}.`,\n            executable, this.options.args);\n    }\n\n    protected emitOnError(err: ProcessErrorEvent): void {\n        this.handleOnError(err);\n        this.errorEmitter.fire(err);\n    }\n\n    protected async emitOnErrorAsync(error: ProcessErrorEvent): Promise<void> {\n        process.nextTick(this.emitOnError.bind(this), error);\n    }\n\n    protected handleOnError(error: ProcessErrorEvent): void {\n        this._killed = true;\n        this.logger.error(error);\n    }\n\n    protected isForkOptions(options: unknown): options is ForkOptions {\n        return isObject<ForkOptions>(options) && !!options.modulePath;\n    }\n\n    protected readonly initialCwd: string;\n\n    /**\n     * @returns the current working directory as a URI (usually file:// URI)\n     */\n    public getCwdURI(): Promise<string> {\n        if (isOSX) {\n            return new Promise<string>(resolve => {\n                exec('lsof -OPln -p ' + this.pid + ' | grep cwd', (error, stdout, stderr) => {\n                    if (stdout !== '') {\n                        resolve(FileUri.create(stdout.substring(stdout.indexOf('/'), stdout.length - 1)).toString());\n                    } else {\n                        resolve(FileUri.create(this.initialCwd).toString());\n                    }\n                });\n            });\n        } else if (!isWindows) {\n            return new Promise<string>(resolve => {\n                fs.readlink('/proc/' + this.pid + '/cwd', (err, linkedstr) => {\n                    if (err || !linkedstr) {\n                        resolve(FileUri.create(this.initialCwd).toString());\n                    } else {\n                        resolve(FileUri.create(linkedstr).toString());\n                    }\n                });\n            });\n        } else {\n            return new Promise<string>(resolve => {\n                resolve(FileUri.create(this.initialCwd).toString());\n            });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Alibaba Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { IPty } from 'node-pty';\nimport { Event } from '@theia/core';\n\nexport class PseudoPty implements IPty {\n\n    readonly pid: number = -1;\n\n    readonly cols: number = -1;\n\n    readonly rows: number = -1;\n\n    readonly process: string = '';\n\n    handleFlowControl = false;\n\n    readonly onData: Event<string> = Event.None;\n\n    readonly onExit: Event<{ exitCode: number, signal?: number }> = Event.None;\n\n    on(event: string, listener: (data: string) => void): void;\n\n    on(event: string, listener: (exitCode: number, signal?: number) => void): void;\n\n    on(event: string, listener: (error?: string) => void): void;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    on(event: string, listener: (...args: any[]) => void): void { }\n\n    resize(columns: number, rows: number): void { }\n\n    write(data: string): void { }\n\n    kill(signal?: string): void { }\n\n    pause(): void { }\n\n    resume(): void { }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ProcessManager } from './process-manager';\nimport { ILogger } from '@theia/core/lib/common';\nimport { Process, ProcessType, ProcessOptions, ForkOptions, ProcessErrorEvent } from './process';\nimport { ChildProcess, spawn, fork } from 'child_process';\nimport * as stream from 'stream';\n\n// The class was here before, exporting to not break anything.\nexport { DevNullStream } from './dev-null-stream';\nimport { DevNullStream } from './dev-null-stream';\n\nexport const RawProcessOptions = Symbol('RawProcessOptions');\n\n/**\n * Options to spawn a new process (`spawn`).\n *\n * For more information please refer to the spawn function of Node's\n * child_process module:\n *\n *   https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\n */\nexport interface RawProcessOptions extends ProcessOptions {\n}\n\n/**\n * Options to fork a new process using the current Node interpreter (`fork`).\n *\n * For more information please refer to the fork function of Node's\n * `child_process` module:\n *\n *   https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options\n */\nexport interface RawForkOptions extends ForkOptions {\n}\n\nexport const RawProcessFactory = Symbol('RawProcessFactory');\nexport interface RawProcessFactory {\n    (options: RawProcessOptions | RawForkOptions): RawProcess;\n}\n\n@injectable()\nexport class RawProcess extends Process {\n\n    /**\n     * If the process fails to launch, it will be undefined.\n     */\n    readonly process: ChildProcess | undefined;\n\n    readonly outputStream: stream.Readable;\n    readonly errorStream: stream.Readable;\n    readonly inputStream: stream.Writable;\n\n    constructor( // eslint-disable-next-line @typescript-eslint/indent\n        @inject(RawProcessOptions) options: RawProcessOptions | RawForkOptions,\n        @inject(ProcessManager) processManager: ProcessManager,\n        @inject(ILogger) @named('process') logger: ILogger\n    ) {\n        super(processManager, logger, ProcessType.Raw, options);\n        const executable = this.isForkOptions(options) ? options.modulePath : options.command;\n\n        this.logger.debug(`Starting raw process: ${executable},`\n            + ` with args: ${options.args ? options.args.join(' ') : ''}, `\n            + ` with options: ${JSON.stringify(options.options)}`);\n\n        // About catching errors: spawn will sometimes throw directly\n        // (EACCES on Linux), sometimes return a Process object with the pid\n        // property undefined (ENOENT on Linux) and then emit an 'error' event.\n        // For now, we try to normalize that into always emitting an 'error'\n        // event.\n        try {\n            if (this.isForkOptions(options)) {\n                this.process = fork(\n                    options.modulePath,\n                    options.args || [],\n                    options.options || {});\n            } else {\n                this.process = spawn(\n                    options.command,\n                    options.args || [],\n                    options.options || {});\n            }\n\n            this.process.on('error', (error: NodeJS.ErrnoException) => {\n                error.code = error.code || 'Unknown error';\n                this.emitOnError(error as ProcessErrorEvent);\n            });\n\n            // When no stdio option is passed, it is null by default.\n            this.outputStream = this.process.stdout || new DevNullStream({ autoDestroy: true });\n            this.inputStream = this.process.stdin || new DevNullStream({ autoDestroy: true });\n            this.errorStream = this.process.stderr || new DevNullStream({ autoDestroy: true });\n\n            this.process.on('exit', (exitCode, signal) => {\n                // node's child_process exit sets the unused parameter to null,\n                // but we want it to be undefined instead.\n                this.emitOnExit(\n                    typeof exitCode === 'number' ? exitCode : undefined,\n                    typeof signal === 'string' ? signal : undefined,\n                );\n                this.processManager.unregister(this);\n            });\n\n            this.process.on('close', (exitCode, signal) => {\n                // node's child_process exit sets the unused parameter to null,\n                // but we want it to be undefined instead.\n                this.emitOnClose(\n                    typeof exitCode === 'number' ? exitCode : undefined,\n                    typeof signal === 'string' ? signal : undefined,\n                );\n            });\n\n            if (this.process.pid !== undefined) {\n                process.nextTick(this.emitOnStarted.bind(this));\n            }\n        } catch (error) {\n            /* When an error is thrown, set up some fake streams, so the client\n               code doesn't break because these field are undefined.  */\n            this.outputStream = new DevNullStream({ autoDestroy: true });\n            this.inputStream = new DevNullStream({ autoDestroy: true });\n            this.errorStream = new DevNullStream({ autoDestroy: true });\n\n            /* Call the client error handler, but first give them a chance to register it.  */\n            this.emitOnErrorAsync(error);\n        }\n    }\n\n    get pid(): number {\n        if (!this.process || !this.process.pid) {\n            throw new Error('process did not start correctly');\n        }\n        return this.process.pid;\n    }\n\n    kill(signal?: string): void {\n        if (this.process && this.killed === false) {\n            this.process.kill(signal as NodeJS.Signals);\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TerminalProcess, TerminalProcessOptions } from './terminal-process';\n\nexport const TaskTerminalProcessFactory = Symbol('TaskTerminalProcessFactory');\nexport interface TaskTerminalProcessFactory {\n    (options: TerminalProcessOptions): TaskTerminalProcess;\n}\n\n@injectable()\nexport class TaskTerminalProcess extends TerminalProcess {\n\n    public exited = false;\n    public attachmentAttempted = false;\n\n    protected override onTerminalExit(code: number | undefined, signal: string | undefined): void {\n        this.emitOnExit(code, signal);\n        this.exited = true;\n        // Unregister process only if task terminal already attached (or failed attach),\n        // Fixes https://github.com/eclipse-theia/theia/issues/2961\n        if (this.attachmentAttempted) {\n            this.unregisterProcess();\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection, Emitter, Event, isWindows } from '@theia/core';\nimport { ILogger } from '@theia/core/lib/common';\nimport { Process, ProcessType, ProcessOptions, /* ProcessErrorEvent */ } from './process';\nimport { ProcessManager } from './process-manager';\nimport { IPty, spawn } from 'node-pty';\nimport { MultiRingBuffer, MultiRingBufferReadableStream } from './multi-ring-buffer';\nimport { DevNullStream } from './dev-null-stream';\nimport { signame } from './utils';\nimport { PseudoPty } from './pseudo-pty';\nimport { Writable } from 'stream';\n\nexport const TerminalProcessOptions = Symbol('TerminalProcessOptions');\nexport interface TerminalProcessOptions extends ProcessOptions {\n    /**\n     * Windows only. Allow passing complex command lines already escaped for CommandLineToArgvW.\n     */\n    commandLine?: string;\n    isPseudo?: boolean;\n}\n\nexport const TerminalProcessFactory = Symbol('TerminalProcessFactory');\nexport interface TerminalProcessFactory {\n    (options: TerminalProcessOptions): TerminalProcess;\n}\n\nexport enum NodePtyErrors {\n    EACCES = 'Permission denied',\n    ENOENT = 'No such file or directory'\n}\n\n/**\n * Run arbitrary processes inside pseudo-terminals (PTY).\n *\n * Note: a PTY is not a shell process (bash/pwsh/cmd...)\n */\n@injectable()\nexport class TerminalProcess extends Process {\n\n    protected readonly terminal: IPty | undefined;\n    private _delayedResizer: DelayedResizer | undefined;\n    private _exitCode: number | undefined;\n\n    readonly outputStream = this.createOutputStream();\n    readonly errorStream = new DevNullStream({ autoDestroy: true });\n    readonly inputStream: Writable;\n\n    constructor( // eslint-disable-next-line @typescript-eslint/indent\n        @inject(TerminalProcessOptions) protected override readonly options: TerminalProcessOptions,\n        @inject(ProcessManager) processManager: ProcessManager,\n        @inject(MultiRingBuffer) protected readonly ringBuffer: MultiRingBuffer,\n        @inject(ILogger) @named('process') logger: ILogger\n    ) {\n        super(processManager, logger, ProcessType.Terminal, options);\n\n        if (options.isPseudo) {\n            // do not need to spawn a process, new a pseudo pty instead\n            this.terminal = new PseudoPty();\n            this.inputStream = new DevNullStream({ autoDestroy: true });\n            return;\n        }\n\n        if (this.isForkOptions(this.options)) {\n            throw new Error('terminal processes cannot be forked as of today');\n        }\n        this.logger.debug('Starting terminal process', JSON.stringify(options, undefined, 2));\n\n        // Delay resizes to avoid conpty not respecting very early resize calls\n        // see https://github.com/microsoft/vscode/blob/a1c783c/src/vs/platform/terminal/node/terminalProcess.ts#L177\n        if (isWindows) {\n            this._delayedResizer = new DelayedResizer();\n            this._delayedResizer.onTrigger(dimensions => {\n                this._delayedResizer?.dispose();\n                this._delayedResizer = undefined;\n                if (dimensions.cols && dimensions.rows) {\n                    this.resize(dimensions.cols, dimensions.rows);\n                }\n            });\n        }\n\n        const startTerminal = (command: string): { terminal: IPty | undefined, inputStream: Writable } => {\n            try {\n                return this.createPseudoTerminal(command, options, ringBuffer);\n            } catch (error) {\n                // Normalize the error to make it as close as possible as what\n                // node's child_process.spawn would generate in the same\n                // situation.\n                const message: string = error.message;\n\n                if (message.startsWith('File not found: ') || message.endsWith(NodePtyErrors.ENOENT)) {\n                    if (isWindows && command && !command.toLowerCase().endsWith('.exe')) {\n                        const commandExe = command + '.exe';\n                        this.logger.debug(`Trying terminal command '${commandExe}' because '${command}' was not found.`);\n                        return startTerminal(commandExe);\n                    }\n\n                    // Proceed with failure, reporting the original command because it was\n                    // the intended command and it was not found\n                    error.errno = 'ENOENT';\n                    error.code = 'ENOENT';\n                    error.path = options.command;\n                } else if (message.endsWith(NodePtyErrors.EACCES)) {\n                    // The shell program exists but was not accessible, so just fail\n                    error.errno = 'EACCES';\n                    error.code = 'EACCES';\n                    error.path = options.command;\n                }\n\n                // node-pty throws exceptions on Windows.\n                // Call the client error handler, but first give them a chance to register it.\n                this.emitOnErrorAsync(error);\n\n                return { terminal: undefined, inputStream: new DevNullStream({ autoDestroy: true }) };\n            }\n        };\n\n        const { terminal, inputStream } = startTerminal(options.command);\n        this.terminal = terminal;\n        this.inputStream = inputStream;\n    }\n\n    /**\n     * Helper for the constructor to attempt to create the pseudo-terminal encapsulating the shell process.\n     *\n     * @param command the shell command to launch\n     * @param options options for the shell process\n     * @param ringBuffer a ring buffer in which to collect terminal output\n     * @returns the terminal PTY and a stream by which it may be sent input\n     */\n    private createPseudoTerminal(command: string, options: TerminalProcessOptions, ringBuffer: MultiRingBuffer): { terminal: IPty | undefined, inputStream: Writable } {\n        const terminal = spawn(\n            command,\n            (isWindows && options.commandLine) || options.args || [],\n            options.options || {}\n        );\n\n        process.nextTick(() => this.emitOnStarted());\n\n        // node-pty actually wait for the underlying streams to be closed before emitting exit.\n        // We should emulate the `exit` and `close` sequence.\n        terminal.onExit(({ exitCode, signal }) => {\n            // Make sure to only pass either code or signal as !undefined, not\n            // both.\n            //\n            // node-pty quirk: On Linux/macOS, if the process exited through the\n            // exit syscall (with an exit code), signal will be 0 (an invalid\n            // signal value).  If it was terminated because of a signal, the\n            // signal parameter will hold the signal number and code should\n            // be ignored.\n            this._exitCode = exitCode;\n            if (signal === undefined || signal === 0) {\n                this.onTerminalExit(exitCode, undefined);\n            } else {\n                this.onTerminalExit(undefined, signame(signal));\n            }\n            process.nextTick(() => {\n                if (signal === undefined || signal === 0) {\n                    this.emitOnClose(exitCode, undefined);\n                } else {\n                    this.emitOnClose(undefined, signame(signal));\n                }\n            });\n        });\n\n        terminal.onData((data: string) => {\n            ringBuffer.enq(data);\n        });\n\n        const inputStream = new Writable({\n            write: (chunk: string) => {\n                this.write(chunk);\n            },\n        });\n\n        return { terminal, inputStream };\n    }\n\n    createOutputStream(): MultiRingBufferReadableStream {\n        return this.ringBuffer.getStream();\n    }\n\n    get pid(): number {\n        this.checkTerminal();\n        return this.terminal!.pid;\n    }\n\n    get executable(): string {\n        return (this.options as ProcessOptions).command;\n    }\n\n    get arguments(): string[] {\n        return this.options.args || [];\n    }\n\n    protected onTerminalExit(code: number | undefined, signal: string | undefined): void {\n        this.emitOnExit(code, signal);\n        this.unregisterProcess();\n    }\n\n    unregisterProcess(): void {\n        this.processManager.unregister(this);\n    }\n\n    kill(signal?: string): void {\n        if (this.terminal && this.killed === false) {\n            this.terminal.kill(signal);\n        }\n    }\n\n    resize(cols: number, rows: number): void {\n        if (typeof cols !== 'number' || typeof rows !== 'number' || isNaN(cols) || isNaN(rows)) {\n            return;\n        }\n        this.checkTerminal();\n        try {\n            // Ensure that cols and rows are always >= 1, this prevents a native exception in winpty.\n            cols = Math.max(cols, 1);\n            rows = Math.max(rows, 1);\n\n            // Delay resize if needed\n            if (this._delayedResizer) {\n                this._delayedResizer.cols = cols;\n                this._delayedResizer.rows = rows;\n                return;\n            }\n\n            this.terminal!.resize(cols, rows);\n        } catch (error) {\n            // swallow error if the pty has already exited\n            // see also https://github.com/microsoft/vscode/blob/a1c783c/src/vs/platform/terminal/node/terminalProcess.ts#L549\n            if (this._exitCode !== undefined &&\n                error.message !== 'ioctl(2) failed, EBADF' &&\n                error.message !== 'Cannot resize a pty that has already exited') {\n                throw error;\n            }\n        }\n    }\n\n    write(data: string): void {\n        this.checkTerminal();\n        this.terminal!.write(data);\n    }\n\n    protected checkTerminal(): void | never {\n        if (!this.terminal) {\n            throw new Error('pty process did not start correctly');\n        }\n    }\n\n}\n\n/**\n * Tracks the latest resize event to be trigger at a later point.\n */\nclass DelayedResizer extends DisposableCollection {\n    rows: number | undefined;\n    cols: number | undefined;\n    private _timeout: NodeJS.Timeout;\n\n    private readonly _onTrigger = new Emitter<{ rows?: number; cols?: number }>();\n    get onTrigger(): Event<{ rows?: number; cols?: number }> { return this._onTrigger.event; }\n\n    constructor() {\n        super();\n        this.push(this._onTrigger);\n        this._timeout = setTimeout(() => this._onTrigger.fire({ rows: this.rows, cols: this.cols }), 1000);\n        this.push(Disposable.create(() => clearTimeout(this._timeout)));\n    }\n\n    override dispose(): void {\n        super.dispose();\n        clearTimeout(this._timeout);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isWindows } from '@theia/core';\nimport * as os from 'os';\nconst stringArgv = require('string-argv');\n\n/**\n * Parses the given line into an array of args respecting escapes and string literals.\n * @param line the given line to parse\n */\nexport function parseArgs(line: string | undefined): string[] {\n    if (line) {\n        return stringArgv(line);\n    }\n    return [];\n}\n\n// Polyfill for Object.entries, until we upgrade to ES2017.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction objectEntries(obj: any): any[] {\n    const props = Object.keys(obj);\n    const result = new Array(props.length);\n    for (let i = 0; i < props.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        result[i] = [props[i], obj[props[i]]];\n    }\n\n    return result;\n}\n\n/**\n * Convert a signal number to its short name (using the signal definitions of\n * the current host).  Should never be called on Windows.  For Linux, this is\n * only valid for the x86 and ARM architectures, since other architectures may\n * use different numbers, see signal(7).\n */\nexport function signame(sig: number): string {\n    // We should never reach this on Windows, since signals are not a thing\n    // there.\n    if (isWindows) {\n        throw new Error('Trying to get a signal name on Windows.');\n    }\n\n    for (const entry of objectEntries(os.constants.signals)) {\n        if (entry[1] === sig) {\n            return entry[0];\n        }\n    }\n\n    // Don't know this signal?  Return the number as a string.\n    return sig.toString(10);\n}\n\n/**\n * Convert a code number to its short name\n */\nexport function codename(code: number): string {\n    for (const entry of objectEntries(os.constants.errno)) {\n        if (entry[1] === code) {\n            return entry[0];\n        }\n    }\n    // Return the number as string if we did not find a name for it.\n    return code.toString(10);\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core';\n\nexport interface SearchInWorkspaceOptions {\n    /**\n     * Maximum number of results to return.  Defaults to unlimited.\n     */\n    maxResults?: number;\n    /**\n     * accepts suffixes of K, M or G which correspond to kilobytes,\n     * megabytes and gigabytes, respectively. If no suffix is provided the input is\n     * treated as bytes.\n     *\n     * defaults to '20M'\n     */\n    maxFileSize?: string;\n    /**\n     * Search case sensitively if true.\n     */\n    matchCase?: boolean;\n    /**\n     * Search whole words only if true.\n     */\n    matchWholeWord?: boolean;\n    /**\n     * Use regular expressions for search if true.\n     */\n    useRegExp?: boolean;\n    /**\n     * Include all .gitignored and hidden files.\n     */\n    includeIgnored?: boolean;\n    /**\n     * Glob pattern for matching files and directories to include the search.\n     */\n    include?: string[];\n    /**\n     * Glob pattern for matching files and directories to exclude the search.\n     */\n    exclude?: string[];\n    /**\n     * Whether symlinks should be followed while searching.\n     */\n    followSymlinks?: boolean;\n}\n\nexport interface SearchInWorkspaceResult {\n    /**\n     * The string uri to the root folder that the search was performed.\n     */\n    root: string;\n\n    /**\n     * The string uri to the file containing the result.\n     */\n    fileUri: string;\n\n    /**\n     * matches found in the file\n     */\n    matches: SearchMatch[];\n}\n\nexport interface SearchMatch {\n    /**\n     * The (1-based) line number of the result.\n     */\n    line: number;\n\n    /**\n     * The (1-based) character number in the result line.  For UTF-8 files,\n     * one multi-byte character counts as one character.\n     */\n    character: number;\n\n    /**\n     * The length of the match, in characters.  For UTF-8 files, one\n     * multi-byte character counts as one character.\n     */\n    length: number;\n\n    /**\n     * The text of the line containing the result.\n     */\n    lineText: string | LinePreview;\n\n}\n\nexport interface LinePreview {\n    text: string;\n    character: number;\n}\n\nexport namespace SearchInWorkspaceResult {\n    /**\n     * Sort search in workspace results according to file, line, character position\n     * and then length.\n     */\n    export function compare(a: SearchInWorkspaceResult, b: SearchInWorkspaceResult): number {\n        if (a.fileUri !== b.fileUri) {\n            return a.fileUri < b.fileUri ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nexport const SearchInWorkspaceClient = Symbol('SearchInWorkspaceClient');\nexport interface SearchInWorkspaceClient {\n    /**\n     * Called by the server for every search match.\n     */\n    onResult(searchId: number, result: SearchInWorkspaceResult): void;\n\n    /**\n     * Called when no more search matches will come.\n     */\n    onDone(searchId: number, error?: string): void;\n}\n\nexport const SIW_WS_PATH = '/services/search-in-workspace';\nexport const SearchInWorkspaceServer = Symbol('SearchInWorkspaceServer');\nexport interface SearchInWorkspaceServer extends RpcServer<SearchInWorkspaceClient> {\n    /**\n     * Start a search for WHAT in directories ROOTURIS. Return a unique search id.\n     */\n    search(what: string, rootUris: string[], opts?: SearchInWorkspaceOptions): Promise<number>;\n\n    /**\n     * Cancel an ongoing search.\n     */\n    cancel(searchId: number): Promise<void>;\n\n    dispose(): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as path from 'path';\nimport { ILogger } from '@theia/core';\nimport { RawProcess, RawProcessFactory, RawProcessOptions } from '@theia/process/lib/node';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { SearchInWorkspaceServer, SearchInWorkspaceOptions, SearchInWorkspaceResult, SearchInWorkspaceClient, LinePreview } from '../common/search-in-workspace-interface';\n\nexport const RgPath = Symbol('RgPath');\n\n/**\n * Typing for ripgrep's arbitrary data object:\n *\n *   https://docs.rs/grep-printer/0.1.0/grep_printer/struct.JSON.html#object-arbitrary-data\n */\nexport type IRgBytesOrText = { bytes: string } | { text: string };\n\nfunction bytesOrTextToString(obj: IRgBytesOrText): string {\n    return 'bytes' in obj ?\n        Buffer.from(obj.bytes, 'base64').toString() :\n        obj.text;\n}\n\ntype IRgMessage = IRgMatch | IRgBegin | IRgEnd;\n\ninterface IRgMatch {\n    type: 'match';\n    data: {\n        path: IRgBytesOrText;\n        lines: IRgBytesOrText;\n        line_number: number;\n        absolute_offset: number;\n        submatches: IRgSubmatch[];\n    };\n}\n\nexport interface IRgSubmatch {\n    match: IRgBytesOrText;\n    start: number;\n    end: number;\n}\n\ninterface IRgBegin {\n    type: 'begin';\n    data: {\n        path: IRgBytesOrText;\n        lines: string;\n    };\n}\n\ninterface IRgEnd {\n    type: 'end';\n    data: {\n        path: IRgBytesOrText;\n    };\n}\n\n@injectable()\nexport class RipgrepSearchInWorkspaceServer implements SearchInWorkspaceServer {\n\n    // List of ongoing searches, maps search id to a the started rg process.\n    private ongoingSearches: Map<number, RawProcess> = new Map();\n\n    // Each incoming search is given a unique id, returned to the client.  This is the next id we will assigned.\n    private nextSearchId: number = 1;\n\n    private client: SearchInWorkspaceClient | undefined;\n\n    @inject(RgPath)\n    protected readonly rgPath: string;\n\n    constructor(\n        @inject(ILogger) protected readonly logger: ILogger,\n        @inject(RawProcessFactory) protected readonly rawProcessFactory: RawProcessFactory,\n    ) { }\n\n    setClient(client: SearchInWorkspaceClient | undefined): void {\n        this.client = client;\n    }\n\n    protected getArgs(options?: SearchInWorkspaceOptions): string[] {\n        const args = new Set<string>();\n\n        args.add('--hidden');\n        args.add('--json');\n\n        if (options?.matchCase) {\n            args.add('--case-sensitive');\n        } else {\n            args.add('--ignore-case');\n        }\n\n        if (options?.includeIgnored) {\n            args.add('--no-ignore');\n        }\n        if (options?.maxFileSize) {\n            args.add('--max-filesize=' + options.maxFileSize.trim());\n        } else {\n            args.add('--max-filesize=20M');\n        }\n\n        if (options?.include) {\n            this.addGlobArgs(args, options.include, false);\n        }\n\n        if (options?.exclude) {\n            this.addGlobArgs(args, options.exclude, true);\n        }\n\n        if (options?.followSymlinks) {\n            args.add('--follow');\n        }\n\n        if (options?.useRegExp || options?.matchWholeWord) {\n            args.add('--regexp');\n        } else {\n            args.add('--fixed-strings');\n            args.add('--');\n        }\n\n        return Array.from(args);\n    }\n\n    /**\n     * Add glob patterns to ripgrep's arguments\n     * @param args ripgrep set of arguments\n     * @param patterns patterns to include as globs\n     * @param exclude whether to negate the glob pattern or not\n     */\n    protected addGlobArgs(args: Set<string>, patterns: string[], exclude: boolean = false): void {\n        const sanitizedPatterns = patterns.map(pattern => pattern.trim()).filter(pattern => pattern.length > 0);\n        for (let pattern of sanitizedPatterns) {\n            // make sure the pattern always starts with `**/`\n            if (pattern.startsWith('/')) {\n                pattern = '**' + pattern;\n            } else if (!pattern.startsWith('**/')) {\n                pattern = '**/' + pattern;\n            }\n            // add the exclusion prefix\n            if (exclude) {\n                pattern = '!' + pattern;\n            }\n            args.add(`--glob=${pattern}`);\n            // add a generic glob cli argument entry to include files inside a given directory\n            if (!pattern.endsWith('*')) {\n                // ensure the new pattern ends with `/*`\n                pattern += pattern.endsWith('/') ? '*' : '/*';\n                args.add(`--glob=${pattern}`);\n            }\n        }\n    }\n\n    /**\n     * Transforms relative patterns to absolute paths, one for each given search path.\n     * The resulting paths are not validated in the file system as the pattern keeps glob information.\n     *\n     * @returns The resulting list may be larger than the received patterns as a relative pattern may\n     * resolve to multiple absolute patterns up to the number of search paths.\n     */\n    protected replaceRelativeToAbsolute(roots: string[], patterns: string[] = []): string[] {\n        const expandedPatterns = new Set<string>();\n        for (const pattern of patterns) {\n            if (this.isPatternRelative(pattern)) {\n                // create new patterns using the absolute form for each root\n                for (const root of roots) {\n                    expandedPatterns.add(path.resolve(root, pattern));\n                }\n            } else {\n                expandedPatterns.add(pattern);\n            }\n        }\n        return Array.from(expandedPatterns);\n    }\n\n    /**\n     * Tests if the pattern is relative and should/can be made absolute.\n     */\n    protected isPatternRelative(pattern: string): boolean {\n        return pattern.replace(/\\\\/g, '/').startsWith('./');\n    }\n\n    /**\n     * By default, sets the search directories for the string WHAT to the provided ROOTURIS directories\n     * and returns the assigned search id.\n     *\n     * The include / exclude (options in SearchInWorkspaceOptions) are lists of patterns for files to\n     * include / exclude during search (glob characters are allowed).\n     *\n     * include patterns successfully recognized as absolute paths will override the default search and set\n     * the search directories to the ones provided as includes.\n     * Relative paths are allowed, the application will attempt to translate them to valid absolute paths\n     * based on the applicable search directories.\n     */\n    async search(what: string, rootUris: string[], options: SearchInWorkspaceOptions = {}): Promise<number> {\n        // Start the rg process.  Use --vimgrep to get one result per\n        // line, --color=always to get color control characters that\n        // we'll use to parse the lines.\n        const searchId = this.nextSearchId++;\n        const rootPaths = rootUris.map(root => FileUri.fsPath(root));\n        // If there are absolute paths in `include` we will remove them and use\n        // those as paths to search from.\n        const searchPaths = await this.extractSearchPathsFromIncludes(rootPaths, options);\n        options.include = this.replaceRelativeToAbsolute(searchPaths, options.include);\n        options.exclude = this.replaceRelativeToAbsolute(searchPaths, options.exclude);\n        const rgArgs = this.getArgs(options);\n        // If we use matchWholeWord we use regExp internally, so we need\n        // to escape regexp characters if we actually not set regexp true in UI.\n        if (options?.matchWholeWord && !options.useRegExp) {\n            what = what.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n            if (!/\\B/.test(what.charAt(0))) {\n                what = '\\\\b' + what;\n            }\n            if (!/\\B/.test(what.charAt(what.length - 1))) {\n                what = what + '\\\\b';\n            }\n        }\n\n        const args = [...rgArgs, what, ...searchPaths];\n        const processOptions: RawProcessOptions = {\n            command: this.rgPath,\n            args\n        };\n\n        // TODO: Use child_process directly instead of rawProcessFactory?\n        const rgProcess: RawProcess = this.rawProcessFactory(processOptions);\n        this.ongoingSearches.set(searchId, rgProcess);\n\n        rgProcess.onError(error => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let errorCode = (error as any).code;\n\n            // Try to provide somewhat clearer error messages, if possible.\n            if (errorCode === 'ENOENT') {\n                errorCode = 'could not find the ripgrep (rg) binary';\n            } else if (errorCode === 'EACCES') {\n                errorCode = 'could not execute the ripgrep (rg) binary';\n            }\n\n            const errorStr = `An error happened while searching (${errorCode}).`;\n            this.wrapUpSearch(searchId, errorStr);\n        });\n\n        // Running counter of results.\n        let numResults = 0;\n\n        // Buffer to accumulate incoming output.\n        let databuf: string = '';\n\n        let currentSearchResult: SearchInWorkspaceResult | undefined;\n\n        rgProcess.outputStream.on('data', (chunk: Buffer) => {\n            // We might have already reached the max number of\n            // results, sent a TERM signal to rg, but we still get\n            // the data that was already output in the mean time.\n            // It's not necessary to return early here (the check\n            // for maxResults below would avoid sending extra\n            // results), but it avoids doing unnecessary work.\n            if (options?.maxResults && numResults >= options.maxResults) {\n                return;\n            }\n\n            databuf += chunk;\n\n            while (1) {\n                // Check if we have a complete line.\n                const eolIdx = databuf.indexOf('\\n');\n                if (eolIdx < 0) {\n                    break;\n                }\n\n                // Get and remove the line from the data buffer.\n                const lineBuf = databuf.slice(0, eolIdx);\n                databuf = databuf.slice(eolIdx + 1);\n\n                const obj = JSON.parse(lineBuf) as IRgMessage;\n                if (obj.type === 'begin') {\n                    const file = bytesOrTextToString(obj.data.path);\n                    if (file) {\n                        currentSearchResult = {\n                            fileUri: FileUri.create(file).toString(),\n                            root: this.getRoot(file, rootUris).toString(),\n                            matches: []\n                        };\n                    } else {\n                        this.logger.error('Begin message without path. ' + JSON.stringify(obj));\n                    }\n                } else if (obj.type === 'end') {\n                    if (currentSearchResult && this.client) {\n                        this.client.onResult(searchId, currentSearchResult);\n                    }\n                    currentSearchResult = undefined;\n                } else if (obj.type === 'match') {\n                    if (!currentSearchResult) {\n                        continue;\n                    }\n                    const data = obj.data;\n                    const file = bytesOrTextToString(data.path);\n                    const line = data.line_number;\n                    const lineText = bytesOrTextToString(data.lines);\n\n                    if (file === undefined || lineText === undefined) {\n                        continue;\n                    }\n\n                    const lineInBytes = Buffer.from(lineText);\n\n                    for (const submatch of data.submatches) {\n                        const startOffset = lineInBytes.slice(0, submatch.start).toString().length;\n                        const match = bytesOrTextToString(submatch.match);\n                        let lineInfo: string | LinePreview = lineText.trimRight();\n                        if (lineInfo.length > 300) {\n                            const prefixLength = 25;\n                            const start = Math.max(startOffset - prefixLength, 0);\n                            const length = prefixLength + match.length + 70;\n                            let prefix = '';\n                            if (start >= prefixLength) {\n                                prefix = '...';\n                            }\n                            const character = (start < prefixLength ? start : prefixLength) + prefix.length + 1;\n                            lineInfo = <LinePreview>{\n                                text: prefix + lineInfo.substring(start, start + length),\n                                character\n                            };\n                        }\n                        currentSearchResult.matches.push({\n                            line,\n                            character: startOffset + 1,\n                            length: match.length,\n                            lineText: lineInfo\n                        });\n                        numResults++;\n\n                        // Did we reach the maximum number of results?\n                        if (options?.maxResults && numResults >= options.maxResults) {\n                            rgProcess.kill();\n                            if (currentSearchResult && this.client) {\n                                this.client.onResult(searchId, currentSearchResult);\n                            }\n                            currentSearchResult = undefined;\n                            this.wrapUpSearch(searchId);\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n\n        rgProcess.outputStream.on('end', () => {\n            // If we reached maxResults, we should have already\n            // wrapped up the search.  Returning early avoids\n            // logging a warning message in wrapUpSearch.\n            if (options?.maxResults && numResults >= options.maxResults) {\n                return;\n            }\n\n            this.wrapUpSearch(searchId);\n        });\n\n        return searchId;\n    }\n\n    /**\n     * The default search paths are set to be the root paths associated to a workspace\n     * however the search scope can be further refined with the include paths available in the search options.\n     * This method will replace the searching paths to the ones specified in the 'include' options but as long\n     * as the 'include' paths can be successfully validated as existing.\n     *\n     * Therefore the returned array of paths can be either the workspace root paths or a set of validated paths\n     * derived from the include options which can be used to perform the search.\n     *\n     * Any pattern that resulted in a valid search path will be removed from the 'include' list as it is\n     * provided as an equivalent search path instead.\n     */\n    protected async extractSearchPathsFromIncludes(rootPaths: string[], options: SearchInWorkspaceOptions): Promise<string[]> {\n        if (!options.include) {\n            return rootPaths;\n        }\n        const resolvedPaths = new Set<string>();\n        const include: string[] = [];\n        for (const pattern of options.include) {\n            let keep = true;\n            for (const root of rootPaths) {\n                const absolutePath = await this.getAbsolutePathFromPattern(root, pattern);\n                // undefined means the pattern cannot be converted into an absolute path\n                if (absolutePath) {\n                    resolvedPaths.add(absolutePath);\n                    keep = false;\n                }\n            }\n            if (keep) {\n                include.push(pattern);\n            }\n        }\n        options.include = include;\n        return resolvedPaths.size > 0\n            ? Array.from(resolvedPaths)\n            : rootPaths;\n    }\n\n    /**\n     * Transform include/exclude option patterns from relative patterns to absolute patterns.\n     * E.g. './abc/foo.*' to '${root}/abc/foo.*', the transformation does not validate the\n     * pattern against the file system as glob suffixes remain.\n     *\n     * @returns undefined if the pattern cannot be converted into an absolute path.\n     */\n    protected async getAbsolutePathFromPattern(root: string, pattern: string): Promise<string | undefined> {\n        pattern = pattern.replace(/\\\\/g, '/');\n        // The pattern is not referring to a single file or folder, i.e. not to be converted\n        if (!path.isAbsolute(pattern) && !pattern.startsWith('./')) {\n            return undefined;\n        }\n        // remove the `/**` suffix if present\n        if (pattern.endsWith('/**')) {\n            pattern = pattern.substring(0, pattern.length - 3);\n        }\n        // if `pattern` is absolute then `root` will be ignored by `path.resolve()`\n        const targetPath = path.resolve(root, pattern);\n        if (await fs.pathExists(targetPath)) {\n            return targetPath;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the root folder uri that a file belongs to.\n     * In case that a file belongs to more than one root folders, returns the root folder that is closest to the file.\n     * If the file is not from the current workspace, returns empty string.\n     * @param filePath string path of the file\n     * @param rootUris string URIs of the root folders in the current workspace\n     */\n    private getRoot(filePath: string, rootUris: string[]): URI {\n        const roots = rootUris.filter(root => new URI(root).withScheme('file').isEqualOrParent(FileUri.create(filePath).withScheme('file')));\n        if (roots.length > 0) {\n            return FileUri.create(FileUri.fsPath(roots.sort((r1, r2) => r2.length - r1.length)[0]));\n        }\n        return new URI();\n    }\n\n    // Cancel an ongoing search.  Trying to cancel a search that doesn't exist isn't an\n    // error, otherwise we'd have to deal with race conditions, where a client cancels a\n    // search that finishes normally at the same time.\n    cancel(searchId: number): Promise<void> {\n        const process = this.ongoingSearches.get(searchId);\n        if (process) {\n            process.kill();\n            this.wrapUpSearch(searchId);\n        }\n\n        return Promise.resolve();\n    }\n\n    // Send onDone to the client and clean up what we know about search searchId.\n    private wrapUpSearch(searchId: number, error?: string): void {\n        if (this.ongoingSearches.delete(searchId)) {\n            if (this.client) {\n                this.logger.debug('Sending onDone for ' + searchId, error);\n                this.client.onDone(searchId, error);\n            } else {\n                this.logger.debug('Wrapping up search ' + searchId + ' but no client');\n            }\n        } else {\n            this.logger.debug(\"Trying to wrap up a search we don't know about \" + searchId);\n        }\n    }\n\n    dispose(): void {\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ConnectionHandler, RpcConnectionHandler } from '@theia/core/lib/common';\nimport { SearchInWorkspaceServer, SearchInWorkspaceClient, SIW_WS_PATH } from '../common/search-in-workspace-interface';\nimport { RipgrepSearchInWorkspaceServer, RgPath } from './ripgrep-search-in-workspace-server';\nimport { rgPath } from '@vscode/ripgrep';\n\nexport default new ContainerModule(bind => {\n    bind(SearchInWorkspaceServer).to(RipgrepSearchInWorkspaceServer);\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler<SearchInWorkspaceClient>(SIW_WS_PATH, client => {\n            const server = ctx.container.get<SearchInWorkspaceServer>(SearchInWorkspaceServer);\n            server.setClient(client);\n            client.onDidCloseConnection(() => server.dispose());\n            return server;\n        }));\n    bind(RgPath).toConstantValue(rgPath);\n});\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './task-protocol';\nexport * from './task-watcher';\nexport * from './problem-matcher-protocol';\nexport * from './task-util';\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// This file is inspired by VSCode https://github.com/Microsoft/vscode/blob/1.33.1/src/vs/workbench/contrib/tasks/common/problemMatcher.ts\n// 'problemMatcher.ts' copyright:\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '@theia/core';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport enum ApplyToKind {\n    allDocuments,\n    openDocuments,\n    closedDocuments\n}\n\nexport namespace ApplyToKind {\n    export function fromString(value: string | undefined): ApplyToKind | undefined {\n        if (value) {\n            value = value.toLowerCase();\n            if (value === 'alldocuments') {\n                return ApplyToKind.allDocuments;\n            } else if (value === 'opendocuments') {\n                return ApplyToKind.openDocuments;\n            } else if (value === 'closeddocuments') {\n                return ApplyToKind.closedDocuments;\n            }\n        }\n        return undefined;\n    }\n}\n\nexport enum FileLocationKind {\n    Auto,\n    Relative,\n    Absolute\n}\n\nexport namespace FileLocationKind {\n    export function fromString(value: string): FileLocationKind | undefined {\n        value = value.toLowerCase();\n        if (value === 'absolute') {\n            return FileLocationKind.Absolute;\n        } else if (value === 'relative') {\n            return FileLocationKind.Relative;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport interface WatchingPattern {\n    regexp: string;\n    file?: number;\n}\n\nexport interface WatchingMatcher {\n    // If set to true the background monitor is in active mode when the task starts.\n    // This is equals of issuing a line that matches the beginPattern\n    activeOnStart: boolean;\n    beginsPattern: WatchingPattern;\n    endsPattern: WatchingPattern;\n}\nexport namespace WatchingMatcher {\n    export function fromWatchingMatcherContribution(value: WatchingMatcherContribution | undefined): WatchingMatcher | undefined {\n        if (!value) {\n            return undefined;\n        }\n        return {\n            activeOnStart: !!value.activeOnStart,\n            beginsPattern: typeof value.beginsPattern === 'string' ? { regexp: value.beginsPattern } : value.beginsPattern,\n            endsPattern: typeof value.endsPattern === 'string' ? { regexp: value.endsPattern } : value.endsPattern\n        };\n    }\n}\n\nexport enum ProblemLocationKind {\n    File,\n    Location\n}\n\nexport namespace ProblemLocationKind {\n    export function fromString(value: string): ProblemLocationKind | undefined {\n        value = value.toLowerCase();\n        if (value === 'file') {\n            return ProblemLocationKind.File;\n        } else if (value === 'location') {\n            return ProblemLocationKind.Location;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport interface ProblemMatcher {\n    deprecated?: boolean;\n\n    owner: string;\n    source?: string;\n    applyTo: ApplyToKind;\n    fileLocation: FileLocationKind;\n    filePrefix?: string;\n    pattern: ProblemPattern | ProblemPattern[];\n    severity?: Severity;\n    watching?: WatchingMatcher;\n    uriProvider?: (path: string) => URI;\n}\n\nexport interface NamedProblemMatcher extends ProblemMatcher {\n    name: string;\n    label: string;\n}\n\nexport namespace ProblemMatcher {\n    export function isWatchModeWatcher(matcher: ProblemMatcher): boolean {\n        return !!matcher.watching;\n    }\n}\n\nexport interface ProblemPattern {\n    name?: string;\n\n    regexp: string;\n\n    kind?: ProblemLocationKind;\n    file?: number;\n    message?: number;\n    location?: number;\n    line?: number;\n    character?: number;\n    endLine?: number;\n    endCharacter?: number;\n    code?: number;\n    severity?: number;\n    loop?: boolean;\n}\n\nexport interface NamedProblemPattern extends ProblemPattern {\n    name: string;\n}\n\nexport namespace ProblemPattern {\n    export function fromProblemPatternContribution(value: ProblemPatternContribution): ProblemPattern {\n        return {\n            name: value.name,\n            regexp: value.regexp,\n            kind: value.kind ? ProblemLocationKind.fromString(value.kind) : undefined,\n            file: value.file,\n            message: value.message,\n            location: value.location,\n            line: value.line,\n            character: value.column || value.character,\n            endLine: value.endLine,\n            endCharacter: value.endColumn || value.endCharacter,\n            code: value.code,\n            severity: value.severity,\n            loop: value.loop\n        };\n    }\n}\n\nexport interface ProblemMatch {\n    resource?: URI;\n    description: ProblemMatcher;\n}\n\nexport interface ProblemMatchData extends ProblemMatch {\n    marker: Diagnostic;\n}\nexport namespace ProblemMatchData {\n    export function is(data: ProblemMatch): data is ProblemMatchData {\n        return 'marker' in data;\n    }\n}\n\nexport interface WatchingMatcherContribution {\n    // If set to true the background monitor is in active mode when the task starts.\n    // This is equals of issuing a line that matches the beginPattern\n    activeOnStart?: boolean;\n    beginsPattern: string | WatchingPattern;\n    endsPattern: string | WatchingPattern;\n}\n\nexport interface ProblemMatcherContribution {\n    base?: string;\n    name?: string;\n    label: string;\n    deprecated?: boolean;\n\n    owner: string;\n    source?: string;\n    applyTo?: string;\n    fileLocation?: 'absolute' | 'relative' | string[];\n    pattern: string | ProblemPatternContribution | ProblemPatternContribution[];\n    severity?: string;\n    watching?: WatchingMatcherContribution; // deprecated. Use `background`.\n    background?: WatchingMatcherContribution;\n}\n\nexport interface ProblemPatternContribution {\n    name?: string;\n    regexp: string;\n\n    kind?: string;\n    file?: number;\n    message?: number;\n    location?: number;\n    line?: number;\n    character?: number;\n    column?: number;\n    endLine?: number;\n    endCharacter?: number;\n    endColumn?: number;\n    code?: number;\n    severity?: number;\n    loop?: boolean;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { TaskConfiguration, TaskInfo } from '../task-protocol';\nimport { ApplicationError } from '@theia/core/lib/common/application-error';\n\nexport type ProcessType = 'shell' | 'process';\n\nexport interface CommandOptions {\n    /**\n     * The 'current working directory' the task will run in. Can be a uri-as-string\n     * or plain string path. If the cwd is meant to be somewhere under the workspace,\n     * one can use the variable `${workspaceFolder}`, which will be replaced by its path,\n     * at runtime. If not specified, defaults to the workspace root.\n     * ex:  cwd: '${workspaceFolder}/foo'\n     */\n    cwd?: string;\n\n    /**\n     * The environment of the executed program or shell. If omitted the parent process' environment is used.\n     */\n    env?: { [key: string]: string | undefined; };\n\n    /**\n     * Configuration of the shell when task type is `shell`\n     */\n    shell?: {\n        /**\n         * The shell to use.\n         */\n        executable: string;\n\n        /**\n         * The arguments to be passed to the shell executable to run in command mode\n         * (e.g ['-c'] for bash or ['/S', '/C'] for cmd.exe).\n         */\n        args?: string[];\n    };\n}\n\nexport interface CommandProperties {\n    readonly command?: string;\n    readonly args?: string[];\n    readonly options?: CommandOptions;\n}\n\n/** Configuration of a Task that may be run as a process or a command inside a shell. */\nexport interface ProcessTaskConfiguration extends TaskConfiguration, CommandProperties {\n    readonly type: ProcessType;\n\n    /**\n     * Windows specific task configuration\n     */\n    readonly windows?: CommandProperties;\n\n    /**\n     * macOS specific task configuration\n     */\n    readonly osx?: CommandProperties;\n\n    /**\n     * Linux specific task configuration\n     */\n    readonly linux?: CommandProperties;\n}\n\nexport interface ProcessTaskInfo extends TaskInfo {\n    /** process id. Defined if task is run as a process */\n    readonly processId?: number;\n    /** process task command */\n    readonly command?: string;\n}\nexport namespace ProcessTaskInfo {\n    export function is(info: TaskInfo): info is ProcessTaskInfo {\n        return info['processId'] !== undefined;\n    }\n}\n\nexport namespace ProcessTaskError {\n    export const CouldNotRun = ApplicationError.declare(1, (code: string) => ({\n        message: `Error starting process (${code})`,\n        data: { code }\n    }));\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core';\nimport { TaskWatcher } from './task-watcher';\n\n/**\n * Create the bindings common to node and browser.\n *\n * @param bind The bind function from inversify.\n */\nexport function createCommonBindings(bind: interfaces.Bind): void {\n\n    bind(ILogger).toDynamicValue(ctx => {\n        const logger = ctx.container.get<ILogger>(ILogger);\n        return logger.child('task');\n    }).inSingletonScope().whenTargetNamed('task');\n\n    bind(TaskWatcher).toSelf().inSingletonScope();\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event } from '@theia/core';\nimport { RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport { ProblemMatcher, ProblemMatch, WatchingMatcherContribution, ProblemMatcherContribution, ProblemPatternContribution } from './problem-matcher-protocol';\nexport { WatchingMatcherContribution, ProblemMatcherContribution, ProblemPatternContribution };\n\nexport const taskPath = '/services/task';\n\nexport const TaskServer = Symbol('TaskServer');\nexport const TaskClient = Symbol('TaskClient');\nexport enum DependsOrder {\n    Sequence = 'sequence',\n    Parallel = 'parallel',\n}\n\nexport enum RevealKind {\n    Always = 'always',\n    Silent = 'silent',\n    Never = 'never'\n}\n\nexport enum PanelKind {\n    Shared = 'shared',\n    Dedicated = 'dedicated',\n    New = 'new'\n}\n\nexport interface TaskOutputPresentation {\n    echo?: boolean;\n    focus?: boolean;\n    reveal?: RevealKind;\n    panel?: PanelKind;\n    showReuseMessage?: boolean;\n    clear?: boolean;\n    close?: boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [name: string]: any;\n}\nexport namespace TaskOutputPresentation {\n    export function getDefault(): TaskOutputPresentation {\n        return {\n            echo: true,\n            reveal: RevealKind.Always,\n            focus: false,\n            panel: PanelKind.Shared,\n            showReuseMessage: true,\n            clear: false,\n            close: false\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function fromJson(task: any): TaskOutputPresentation {\n        let outputPresentation = getDefault();\n        if (task && task.presentation) {\n            if (task.presentation.reveal) {\n                let reveal = RevealKind.Always;\n                if (task.presentation.reveal === 'silent') {\n                    reveal = RevealKind.Silent;\n                } else if (task.presentation.reveal === 'never') {\n                    reveal = RevealKind.Never;\n                }\n                outputPresentation = { ...outputPresentation, reveal };\n            }\n            if (task.presentation.panel) {\n                let panel = PanelKind.Shared;\n                if (task.presentation.panel === 'dedicated') {\n                    panel = PanelKind.Dedicated;\n                } else if (task.presentation.panel === 'new') {\n                    panel = PanelKind.New;\n                }\n                outputPresentation = { ...outputPresentation, panel };\n            }\n            outputPresentation = {\n                ...outputPresentation,\n                echo: task.presentation.echo === undefined || task.presentation.echo,\n                focus: shouldSetFocusToTerminal(task),\n                showReuseMessage: shouldShowReuseMessage(task),\n                clear: shouldClearTerminalBeforeRun(task),\n                close: shouldCloseTerminalOnFinish(task)\n            };\n        }\n        return outputPresentation;\n    }\n\n    export function shouldAlwaysRevealTerminal(task: TaskCustomization): boolean {\n        return !task.presentation || task.presentation.reveal === undefined || task.presentation.reveal === RevealKind.Always;\n    }\n\n    export function shouldSetFocusToTerminal(task: TaskCustomization): boolean {\n        return !!task.presentation && !!task.presentation.focus;\n    }\n\n    export function shouldClearTerminalBeforeRun(task: TaskCustomization): boolean {\n        return !!task.presentation && !!task.presentation.clear;\n    }\n\n    export function shouldCloseTerminalOnFinish(task: TaskCustomization): boolean {\n        return !!task.presentation && !!task.presentation.close;\n    }\n\n    export function shouldShowReuseMessage(task: TaskCustomization): boolean {\n        return !task.presentation || task.presentation.showReuseMessage === undefined || !!task.presentation.showReuseMessage;\n    }\n}\n\nexport interface TaskCustomization {\n    type: string;\n    group?: 'build' | 'test' | 'rebuild' | 'clean' | 'none' | { kind: 'build' | 'test' | 'rebuild' | 'clean', isDefault: boolean };\n    problemMatcher?: string | ProblemMatcherContribution | (string | ProblemMatcherContribution)[];\n    presentation?: TaskOutputPresentation;\n    detail?: string;\n\n    /** Whether the task is a background task or not. */\n    isBackground?: boolean;\n\n    /** The other tasks the task depend on. */\n    dependsOn?: string | TaskIdentifier | Array<string | TaskIdentifier>;\n\n    /** The order the dependsOn tasks should be executed in. */\n    dependsOrder?: DependsOrder;\n\n    runOptions?: RunOptions;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [name: string]: any;\n}\nexport namespace TaskCustomization {\n    export function isBuildTask(task: TaskCustomization): boolean {\n        return task.group === 'build' || typeof task.group === 'object' && task.group.kind === 'build';\n    }\n\n    export function isDefaultBuildTask(task: TaskCustomization): boolean {\n        return isDefaultTask(task) && isBuildTask(task);\n    }\n\n    export function isDefaultTask(task: TaskCustomization): boolean {\n        return typeof task.group === 'object' && task.group.isDefault;\n    }\n\n    export function isTestTask(task: TaskCustomization): boolean {\n        return task.group === 'test' || typeof task.group === 'object' && task.group.kind === 'test';\n    }\n\n    export function isDefaultTestTask(task: TaskCustomization): boolean {\n        return isDefaultTask(task) && isTestTask(task);\n    }\n}\n\nexport enum TaskScope {\n    Global = 1,\n    Workspace = 2\n}\n\n/**\n * The task configuration scopes.\n * - `string` represents the associated workspace folder uri.\n */\nexport type TaskConfigurationScope = string | TaskScope.Workspace | TaskScope.Global;\n\nexport interface TaskConfiguration extends TaskCustomization {\n    /** A label that uniquely identifies a task configuration per source */\n    readonly label: string;\n    readonly _scope: TaskConfigurationScope;\n}\n\nexport interface ContributedTaskConfiguration extends TaskConfiguration {\n    /**\n     * Source of the task configuration.\n     * For a configured task, it is the name of the root folder, while for a provided task, it is the name of the provider.\n     * This field is not supposed to be used in `tasks.json`\n     */\n    readonly _source: string;\n}\n\n/** A task identifier */\nexport interface TaskIdentifier {\n    type: string;\n    [name: string]: string;\n}\n\n/** Runtime information about Task. */\nexport interface TaskInfo {\n    /** internal unique task id */\n    readonly taskId: number,\n    /** terminal id. Defined if task is run as a terminal process */\n    readonly terminalId?: number,\n    /** context that was passed as part of task creation, if any */\n    readonly ctx?: string,\n    /** task config used for launching a task */\n    readonly config: TaskConfiguration,\n    /** Additional properties specific for a particular Task Runner. */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly [key: string]: any;\n}\n\nexport interface TaskServer extends RpcServer<TaskClient> {\n    /** Run a task. Optionally pass a context.  */\n    run(task: TaskConfiguration, ctx?: string, option?: RunTaskOption): Promise<TaskInfo>;\n    /** Kill a task, by id. */\n    kill(taskId: number): Promise<void>;\n    /**\n     * Returns a list of currently running tasks. If a context is provided,\n     * only the tasks started in that context will be provided. Using an\n     * undefined context matches all tasks, no matter the creation context.\n     */\n    getTasks(ctx?: string): Promise<TaskInfo[]>\n\n    /** removes the client that has disconnected */\n    disconnectClient(client: TaskClient): void;\n\n    /** Returns the list of default and registered task runners */\n    getRegisteredTaskTypes(): Promise<string[]>\n\n    /** plugin callback task complete */\n    customExecutionComplete(id: number, exitCode: number | undefined): Promise<void>\n}\n\nexport interface TaskCustomizationData {\n    type: string;\n    problemMatcher?: ProblemMatcher[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [name: string]: any;\n}\n\nexport interface RunTaskOption {\n    customization?: TaskCustomizationData;\n}\n\nexport interface RunOptions {\n    reevaluateOnRerun?: boolean;\n}\n\n/** Event sent when a task has concluded its execution */\nexport interface TaskExitedEvent {\n    readonly taskId: number;\n    readonly ctx?: string;\n\n    // Exactly one of code and signal will be set.\n    readonly code?: number;\n    readonly signal?: string;\n\n    readonly config?: TaskConfiguration;\n\n    readonly terminalId?: number;\n    readonly processId?: number;\n}\n\nexport interface TaskOutputEvent {\n    readonly taskId: number;\n    readonly ctx?: string;\n    readonly line: string;\n}\n\nexport interface TaskOutputProcessedEvent {\n    readonly taskId: number;\n    readonly config: TaskConfiguration;\n    readonly ctx?: string;\n    readonly problems?: ProblemMatch[];\n}\n\nexport interface BackgroundTaskEndedEvent {\n    readonly taskId: number;\n    readonly ctx?: string;\n}\n\nexport interface TaskClient {\n    onTaskExit(event: TaskExitedEvent): void;\n    onTaskCreated(event: TaskInfo): void;\n    onDidStartTaskProcess(event: TaskInfo): void;\n    onDidEndTaskProcess(event: TaskExitedEvent): void;\n    onDidProcessTaskOutput(event: TaskOutputProcessedEvent): void;\n    onBackgroundTaskEnded(event: BackgroundTaskEndedEvent): void;\n}\n\nexport interface TaskDefinition {\n    taskType: string;\n    source: string;\n    properties: {\n        /**\n         * Should be treated as an empty array if omitted.\n         * https://json-schema.org/draft/2020-12/json-schema-validation.html#rfc.section.6.5.3\n         */\n        required?: string[];\n        all: string[];\n        schema: IJSONSchema;\n    }\n}\n\nexport interface ManagedTask {\n    id: number;\n    context?: string;\n}\n\nexport interface ManagedTaskManager<T extends ManagedTask> {\n    onDelete: Event<number>;\n    register(task: T, context?: string): number;\n    get(id: number): T | undefined;\n    getTasks(context?: string): T[] | undefined;\n    delete(task: T): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * Converts the given standard name to a variable name starting with '$' if not already present.\n *\n * Variable names are used, for instance, to reference problem matchers, within task configurations.\n *\n * @param name standard name\n * @returns variable name with leading '$' if not already present.\n *\n * @see {@link fromVariableName} for the reverse conversion.\n */\nexport function asVariableName(name: string): string {\n    return name.startsWith('$') ? name : `$${name}`;\n}\n\n/**\n * Converts a given variable name to a standard name, effectively removing a leading '$' if present.\n *\n * Standard names are used, for instance, in registries to store variable objects\n *\n * @param name variable name\n * @returns variable name without leading '$' if present.\n *\n * @see {@link asVariableName} for the reverse conversion.\n */\nexport function fromVariableName(name: string): string {\n    return name.startsWith('$') ? name.slice(1) : name;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { TaskClient, TaskExitedEvent, TaskInfo, TaskOutputProcessedEvent, BackgroundTaskEndedEvent } from './task-protocol';\n\n@injectable()\nexport class TaskWatcher {\n\n    getTaskClient(): TaskClient {\n        const newTaskEmitter = this.onTaskCreatedEmitter;\n        const exitEmitter = this.onTaskExitEmitter;\n        const taskProcessStartedEmitter = this.onDidStartTaskProcessEmitter;\n        const taskProcessEndedEmitter = this.onDidEndTaskProcessEmitter;\n        const outputProcessedEmitter = this.onOutputProcessedEmitter;\n        const backgroundTaskEndedEmitter = this.onBackgroundTaskEndedEmitter;\n        return {\n            onTaskCreated(event: TaskInfo): void {\n                newTaskEmitter.fire(event);\n            },\n            onTaskExit(event: TaskExitedEvent): void {\n                exitEmitter.fire(event);\n            },\n            onDidStartTaskProcess(event: TaskInfo): void {\n                taskProcessStartedEmitter.fire(event);\n            },\n            onDidEndTaskProcess(event: TaskExitedEvent): void {\n                taskProcessEndedEmitter.fire(event);\n            },\n            onDidProcessTaskOutput(event: TaskOutputProcessedEvent): void {\n                outputProcessedEmitter.fire(event);\n            },\n            onBackgroundTaskEnded(event: BackgroundTaskEndedEvent): void {\n                backgroundTaskEndedEmitter.fire(event);\n            }\n        };\n    }\n\n    protected onTaskCreatedEmitter = new Emitter<TaskInfo>();\n    protected onTaskExitEmitter = new Emitter<TaskExitedEvent>();\n    protected onDidStartTaskProcessEmitter = new Emitter<TaskInfo>();\n    protected onDidEndTaskProcessEmitter = new Emitter<TaskExitedEvent>();\n    protected onOutputProcessedEmitter = new Emitter<TaskOutputProcessedEvent>();\n    protected onBackgroundTaskEndedEmitter = new Emitter<BackgroundTaskEndedEvent>();\n\n    get onTaskCreated(): Event<TaskInfo> {\n        return this.onTaskCreatedEmitter.event;\n    }\n    get onTaskExit(): Event<TaskExitedEvent> {\n        return this.onTaskExitEmitter.event;\n    }\n    get onDidStartTaskProcess(): Event<TaskInfo> {\n        return this.onDidStartTaskProcessEmitter.event;\n    }\n    get onDidEndTaskProcess(): Event<TaskExitedEvent> {\n        return this.onDidEndTaskProcessEmitter.event;\n    }\n    get onOutputProcessed(): Event<TaskOutputProcessedEvent> {\n        return this.onOutputProcessedEmitter.event;\n    }\n    get onBackgroundTaskEnded(): Event<BackgroundTaskEndedEvent> {\n        return this.onBackgroundTaskEndedEmitter.event;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 ByteDance and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { CustomTask, TaskFactory, TaskCustomOptions } from './custom-task';\nimport { CustomTaskRunner } from './custom-task-runner';\nimport { CustomTaskRunnerContribution } from './custom-task-runner-contribution';\nimport { TaskRunnerContribution } from '../task-runner';\n\nexport function bindCustomTaskRunnerModule(bind: interfaces.Bind): void {\n\n    bind(CustomTask).toSelf().inTransientScope();\n    bind(TaskFactory).toFactory(ctx =>\n        (options: TaskCustomOptions) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            child.bind(TaskCustomOptions).toConstantValue(options);\n            return child.get(CustomTask);\n        }\n    );\n    bind(CustomTaskRunner).toSelf().inSingletonScope();\n    bind(CustomTaskRunnerContribution).toSelf().inSingletonScope();\n    bind(TaskRunnerContribution).toService(CustomTaskRunnerContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 ByteDance and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CustomTaskRunner } from './custom-task-runner';\nimport { TaskRunnerContribution, TaskRunnerRegistry } from '../task-runner';\n\n@injectable()\nexport class CustomTaskRunnerContribution implements TaskRunnerContribution {\n\n    @inject(CustomTaskRunner)\n    protected readonly customTaskRunner: CustomTaskRunner;\n\n    registerRunner(runners: TaskRunnerRegistry): void {\n        runners.registerRunner('customExecution', this.customTaskRunner);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 ByteDance and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { TaskConfiguration } from '../../common';\nimport { Task } from '../task';\nimport { TaskRunner } from '../task-runner';\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core';\nimport { TaskFactory } from './custom-task';\nimport {\n    TerminalProcessFactory,\n    Process,\n    TerminalProcessOptions,\n} from '@theia/process/lib/node';\n\n/**\n * Task runner that runs a task as a pseudoterminal open.\n */\n@injectable()\nexport class CustomTaskRunner implements TaskRunner {\n\n    @inject(ILogger) @named('task')\n    protected readonly logger: ILogger;\n\n    @inject(TerminalProcessFactory)\n    protected readonly terminalProcessFactory: TerminalProcessFactory;\n\n    @inject(TaskFactory)\n    protected readonly taskFactory: TaskFactory;\n\n    async run(taskConfig: TaskConfiguration, ctx?: string): Promise<Task> {\n        try {\n            const terminalProcessOptions = { isPseudo: true } as TerminalProcessOptions;\n            const terminal: Process = this.terminalProcessFactory(terminalProcessOptions);\n\n            return this.taskFactory({\n                context: ctx,\n                config: taskConfig,\n                label: taskConfig.label,\n                process: terminal,\n            });\n        } catch (error) {\n            this.logger.error(`Error occurred while creating task: ${error}`);\n            throw error;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 ByteDance and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ILogger, MaybePromise } from '@theia/core/lib/common/';\nimport { Task, TaskOptions } from '../task';\nimport { TaskManager } from '../task-manager';\nimport { TaskInfo } from '../../common/task-protocol';\nimport { Process } from '@theia/process/lib/node';\n\nexport const TaskCustomOptions = Symbol('TaskCustomOptions');\nexport interface TaskCustomOptions extends TaskOptions {\n    process: Process\n}\n\nexport const TaskFactory = Symbol('TaskFactory');\nexport type TaskFactory = (options: TaskCustomOptions) => CustomTask;\n\n/** Represents a Task launched as a fake process by `CustomTaskRunner`. */\n@injectable()\nexport class CustomTask extends Task {\n\n    constructor(\n        @inject(TaskManager) taskManager: TaskManager,\n        @inject(ILogger) @named('task') logger: ILogger,\n        @inject(TaskCustomOptions) protected override readonly options: TaskCustomOptions\n    ) {\n        super(taskManager, logger, options);\n        this.logger.info(`Created new custom task, id: ${this.id}, context: ${this.context}`);\n    }\n\n    kill(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    getRuntimeInfo(): MaybePromise<TaskInfo> {\n        return {\n            taskId: this.id,\n            ctx: this.context,\n            config: this.options.config,\n            terminalId: this.process.id,\n            processId: this.process.id\n        };\n    }\n\n    public callbackTaskComplete(exitCode: number | undefined): MaybePromise<void> {\n        this.fireTaskExited({\n            taskId: this.taskId,\n            ctx: this.context,\n            config: this.options.config,\n            terminalId: this.process.id,\n            processId: this.process.id,\n            code: exitCode || 0\n        });\n    }\n\n    get process(): Process {\n        return this.options.process;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { ProcessTask, TaskFactory, TaskProcessOptions } from './process-task';\nimport { ProcessTaskRunner } from './process-task-runner';\nimport { ProcessTaskRunnerContribution } from './process-task-runner-contribution';\nimport { TaskRunnerContribution } from '../task-runner';\n\nexport function bindProcessTaskRunnerModule(bind: interfaces.Bind): void {\n\n    bind(ProcessTask).toSelf().inTransientScope();\n    bind(TaskFactory).toFactory(ctx =>\n        (options: TaskProcessOptions) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            child.bind(TaskProcessOptions).toConstantValue(options);\n            return child.get(ProcessTask);\n        }\n    );\n    bind(ProcessTaskRunner).toSelf().inSingletonScope();\n    bind(ProcessTaskRunnerContribution).toSelf().inSingletonScope();\n    bind(TaskRunnerContribution).toService(ProcessTaskRunnerContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ProcessTaskRunner } from './process-task-runner';\nimport { TaskRunnerContribution, TaskRunnerRegistry } from '../task-runner';\n\n@injectable()\nexport class ProcessTaskRunnerContribution implements TaskRunnerContribution {\n\n    @inject(ProcessTaskRunner)\n    protected readonly processTaskRunner: ProcessTaskRunner;\n\n    registerRunner(runners: TaskRunnerRegistry): void {\n        runners.registerRunner('process', this.processTaskRunner);\n        runners.registerRunner('shell', this.processTaskRunner);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { deepClone, isWindows, isOSX, ILogger } from '@theia/core';\nimport { FileUri } from '@theia/core/lib/node';\nimport {\n    RawProcessFactory,\n    ProcessErrorEvent,\n    Process,\n    TerminalProcessOptions,\n    TaskTerminalProcessFactory,\n} from '@theia/process/lib/node';\nimport {\n    ShellQuotedString, ShellQuotingFunctions, BashQuotingFunctions, CmdQuotingFunctions, PowershellQuotingFunctions, createShellCommandLine, ShellQuoting,\n} from '@theia/process/lib/common/shell-quoting';\nimport { TaskFactory } from './process-task';\nimport { TaskRunner } from '../task-runner-protocol';\nimport { Task } from '../task';\nimport { TaskConfiguration } from '../../common/task-protocol';\nimport { ProcessTaskError, CommandOptions } from '../../common/process/task-protocol';\nimport * as fs from 'fs';\nimport { ShellProcess } from '@theia/terminal/lib/node/shell-process';\n\nexport interface OsSpecificCommand {\n    command: string,\n    args: Array<string | ShellQuotedString> | undefined,\n    options: CommandOptions\n}\n\nexport interface ShellSpecificOptions {\n    /** Arguments passed to the shell, aka `command` here. */\n    execArgs: string[];\n    /** Pack of functions used to escape the `subCommand` and `subArgs` to run in the shell. */\n    quotingFunctions?: ShellQuotingFunctions;\n}\n\n/**\n * Task runner that runs a task as a process or a command inside a shell.\n */\n@injectable()\nexport class ProcessTaskRunner implements TaskRunner {\n\n    @inject(ILogger) @named('task')\n    protected readonly logger: ILogger;\n\n    @inject(RawProcessFactory)\n    protected readonly rawProcessFactory: RawProcessFactory;\n\n    @inject(TaskTerminalProcessFactory)\n    protected readonly taskTerminalProcessFactory: TaskTerminalProcessFactory;\n\n    @inject(TaskFactory)\n    protected readonly taskFactory: TaskFactory;\n\n    /**\n     * Runs a task from the given task configuration.\n     * @param taskConfig task configuration to run a task from. The provided task configuration must have a shape of `CommandProperties`.\n     */\n    async run(taskConfig: TaskConfiguration, ctx?: string): Promise<Task> {\n        if (!taskConfig.command) {\n            throw new Error(\"Process task config must have 'command' property specified\");\n        }\n        try {\n            // Always spawn a task in a pty, the only difference between shell/process tasks is the\n            // way the command is passed:\n            // - process: directly look for an executable and pass a specific set of arguments/options.\n            // - shell: defer the spawning to a shell that will evaluate a command line with our executable.\n            const terminalProcessOptions = this.getResolvedCommand(taskConfig);\n            const terminal: Process = this.taskTerminalProcessFactory(terminalProcessOptions);\n\n            // Wait for the confirmation that the process is successfully started, or has failed to start.\n            await new Promise((resolve, reject) => {\n                terminal.onStart(resolve);\n                terminal.onError((error: ProcessErrorEvent) => {\n                    reject(ProcessTaskError.CouldNotRun(error.code));\n                });\n            });\n\n            const processType = (taskConfig.taskType || taskConfig.type) as 'process' | 'shell';\n            return this.taskFactory({\n                label: taskConfig.label,\n                process: terminal,\n                processType,\n                context: ctx,\n                config: taskConfig,\n                command: this.getCommand(processType, terminalProcessOptions)\n            });\n        } catch (error) {\n            this.logger.error(`Error occurred while creating task: ${error}`);\n            throw error;\n        }\n    }\n\n    protected getResolvedCommand(taskConfig: TaskConfiguration): TerminalProcessOptions {\n        const osSpecificCommand = this.getOsSpecificCommand(taskConfig);\n\n        const options = osSpecificCommand.options;\n\n        // Use task's cwd with spawned process and pass node env object to\n        // new process, so e.g. we can re-use the system path\n        if (options) {\n            options.env = {\n                ...process.env,\n                ...(options.env || {})\n            };\n        }\n\n        /** Executable to actually spawn. */\n        let command: string;\n        /** List of arguments passed to `command`. */\n        let args: string[];\n\n        /**\n         * Only useful on Windows, has to do with how node-pty handles complex commands.\n         * This string should not include the executable, only what comes after it (arguments).\n         */\n        let commandLine: string | undefined;\n\n        if ((taskConfig.taskType || taskConfig.type) === 'shell') {\n            // When running a shell task, we have to spawn a shell process somehow,\n            // and tell it to run the command the user wants to run inside of it.\n            //\n            // E.g:\n            // - Spawning a process:\n            //     spawn(process_exe, [...args])\n            // - Spawning a shell and run a command:\n            //     spawn(shell_exe, [shell_exec_cmd_flag, command])\n            //\n            // The fun part is, the `command` to pass as an argument usually has to be\n            // what you would type verbatim inside the shell, so escaping rules apply.\n            //\n            // What's even more funny is that on Windows, node-pty uses a special\n            // mechanism to pass complex escaped arguments, via a string.\n            //\n            // We need to accommodate most shells, so we need to get specific.\n\n            const { shell } = osSpecificCommand.options;\n\n            command = shell?.executable || ShellProcess.getShellExecutablePath();\n            const { execArgs, quotingFunctions } = this.getShellSpecificOptions(command);\n\n            // Allow overriding shell options from task configuration.\n            args = shell?.args ? [...shell.args] : [...execArgs];\n\n            // Check if an argument list is defined or not. Empty is ok.\n            /** Shell command to run: */\n            const shellCommand = this.buildShellCommand(osSpecificCommand, quotingFunctions);\n\n            if (isWindows && /cmd(.exe)?$/.test(command)) {\n                // Let's take the following command, including an argument containing whitespace:\n                //     cmd> node -p process.argv 1 2 \"  3\"\n                //\n                // We would expect the following output:\n                //     json> [ '...\\\\node.exe', '1', '2', '  3' ]\n                //\n                // Let's run this command through `cmd.exe` using `child_process`:\n                //     js> void childprocess.spawn('cmd.exe', ['/s', '/c', 'node -p process.argv 1 2 \"  3\"']).stderr.on('data', console.log)\n                //\n                // We get the correct output, but when using node-pty:\n                //     js> void nodepty.spawn('cmd.exe', ['/s', '/c', 'node -p process.argv 1 2 \"  3\"']).on('data', console.log)\n                //\n                // Then the output looks like:\n                //     json> [ '...\\\\node.exe', '1', '2', '\"', '3\"' ]\n                //\n                // To fix that, we need to use a special node-pty feature and pass arguments as one string:\n                //     js> nodepty.spawn('cmd.exe', '/s /c \"node -p process.argv 1 2 \"  3\"\"')\n                //\n                // Note the extra quotes that need to be added around the whole command.\n                commandLine = [...args, `\"${shellCommand}\"`].join(' ');\n            }\n\n            args.push(shellCommand);\n        } else {\n            // When running process tasks, `command` is the executable to run,\n            // and `args` are the arguments we want to pass to it.\n            command = osSpecificCommand.command;\n            if (Array.isArray(osSpecificCommand.args)) {\n                // Process task doesn't handle quotation: Normalize arguments from `ShellQuotedString` to raw `string`.\n                args = osSpecificCommand.args.map(arg => typeof arg === 'string' ? arg : arg.value);\n            } else {\n                args = [];\n            }\n        }\n        return { command, args, commandLine, options };\n    }\n\n    protected buildShellCommand(systemSpecificCommand: OsSpecificCommand, quotingFunctions?: ShellQuotingFunctions): string {\n        if (Array.isArray(systemSpecificCommand.args)) {\n            const commandLineElements: Array<string | ShellQuotedString> = [systemSpecificCommand.command, ...systemSpecificCommand.args].map(arg => {\n                // We want to quote arguments only if needed.\n                if (quotingFunctions && typeof arg === 'string' && this.argumentNeedsQuotes(arg, quotingFunctions)) {\n                    return {\n                        quoting: ShellQuoting.Strong,\n                        value: arg,\n                    };\n                } else {\n                    return arg;\n                }\n            });\n            return createShellCommandLine(commandLineElements, quotingFunctions);\n        } else {\n            // No arguments are provided, so `command` is actually the full command line to execute.\n            return systemSpecificCommand.command ?? '';\n        }\n    }\n\n    protected getShellSpecificOptions(command: string): ShellSpecificOptions {\n        if (/bash(.exe)?$/.test(command)) {\n            return {\n                quotingFunctions: BashQuotingFunctions,\n                execArgs: ['-c']\n            };\n        } else if (/wsl(.exe)?$/.test(command)) {\n            return {\n                quotingFunctions: BashQuotingFunctions,\n                execArgs: ['-e']\n            };\n        } else if (/cmd(.exe)?$/.test(command)) {\n            return {\n                quotingFunctions: CmdQuotingFunctions,\n                execArgs: ['/S', '/C']\n            };\n        } else if (/(ps|pwsh|powershell)(.exe)?/.test(command)) {\n            return {\n                quotingFunctions: PowershellQuotingFunctions,\n                execArgs: ['-c']\n            };\n        } else {\n            return {\n                quotingFunctions: BashQuotingFunctions,\n                execArgs: ['-l', '-c']\n            };\n        }\n    }\n\n    protected getOsSpecificCommand(taskConfig: TaskConfiguration): OsSpecificCommand {\n        // on windows, windows-specific options, if available, take precedence\n        if (isWindows && taskConfig.windows !== undefined) {\n            return this.getSystemSpecificCommand(taskConfig, 'windows');\n        } else if (isOSX && taskConfig.osx !== undefined) { // on macOS, mac-specific options, if available, take precedence\n            return this.getSystemSpecificCommand(taskConfig, 'osx');\n        } else if (!isWindows && !isOSX && taskConfig.linux !== undefined) { // on linux, linux-specific options, if available, take precedence\n            return this.getSystemSpecificCommand(taskConfig, 'linux');\n        } else { // system-specific options are unavailable, use the default\n            return this.getSystemSpecificCommand(taskConfig, undefined);\n        }\n    }\n\n    protected getCommand(processType: 'process' | 'shell', terminalProcessOptions: TerminalProcessOptions): string | undefined {\n        if (terminalProcessOptions.args) {\n            if (processType === 'shell') {\n                return terminalProcessOptions.args[terminalProcessOptions.args.length - 1];\n            } else if (processType === 'process') {\n                return `${terminalProcessOptions.command} ${terminalProcessOptions.args.join(' ')}`;\n            }\n        }\n    }\n\n    /**\n     * This is task specific, to align with VS Code's behavior.\n     *\n     * When parsing arguments, VS Code will try to detect if the user already\n     * tried to quote things.\n     *\n     * See: https://github.com/microsoft/vscode/blob/d363b988e1e58cf49963841c498681cdc6cb55a3/src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts#L1101-L1127\n     *\n     * @param value\n     * @param shellQuotingOptions\n     */\n    protected argumentNeedsQuotes(value: string, shellQuotingOptions: ShellQuotingFunctions): boolean {\n        const { characters } = shellQuotingOptions;\n        const needQuotes = new Set([' ', ...characters.needQuotes || []]);\n        if (!characters) {\n            return false;\n        }\n        if (value.length >= 2) {\n            const first = value[0] === characters.strong ? characters.strong : value[0] === characters.weak ? characters.weak : undefined;\n            if (first === value[value.length - 1]) {\n                return false;\n            }\n        }\n        let quote: string | undefined;\n        for (let i = 0; i < value.length; i++) {\n            // We found the end quote.\n            const ch = value[i];\n            if (ch === quote) {\n                quote = undefined;\n            } else if (quote !== undefined) {\n                // skip the character. We are quoted.\n                continue;\n            } else if (ch === characters.escape) {\n                // Skip the next character\n                i++;\n            } else if (ch === characters.strong || ch === characters.weak) {\n                quote = ch;\n            } else if (needQuotes.has(ch)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected getSystemSpecificCommand(taskConfig: TaskConfiguration, system: 'windows' | 'linux' | 'osx' | undefined): OsSpecificCommand {\n        // initialize with default values from the `taskConfig`\n        let command: string | undefined = taskConfig.command;\n        let args: Array<string | ShellQuotedString> | undefined = taskConfig.args;\n        let options: CommandOptions = deepClone(taskConfig.options) || {};\n\n        if (system) {\n            if (taskConfig[system].command) {\n                command = taskConfig[system].command;\n            }\n            if (taskConfig[system].args) {\n                args = taskConfig[system].args;\n            }\n            if (taskConfig[system].options) {\n                options = taskConfig[system].options;\n            }\n        }\n\n        if (options.cwd) {\n            options.cwd = this.asFsPath(options.cwd);\n        }\n\n        if (command === undefined) {\n            throw new Error('The `command` field of a task cannot be undefined.');\n        }\n\n        return { command, args, options };\n    }\n\n    protected asFsPath(uriOrPath: string): string {\n        return (uriOrPath.startsWith('file:'))\n            ? FileUri.fsPath(uriOrPath)\n            : uriOrPath;\n    }\n\n    /**\n     * @deprecated\n     *\n     * Remove ProcessTaskRunner.findCommand, introduce process \"started\" event\n     * Checks for the existence of a file, at the provided path, and make sure that\n     * it's readable and executable.\n     */\n    protected async executableFileExists(filePath: string): Promise<boolean> {\n        return new Promise<boolean>(async (resolve, reject) => {\n            fs.access(filePath, fs.constants.F_OK | fs.constants.X_OK, err => {\n                resolve(err ? false : true);\n            });\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common/';\nimport { Process, IProcessExitEvent } from '@theia/process/lib/node';\nimport { Task, TaskOptions } from '../task';\nimport { TaskManager } from '../task-manager';\nimport { ProcessType, ProcessTaskInfo } from '../../common/process/task-protocol';\nimport { TaskExitedEvent } from '../../common/task-protocol';\n\n// copied from https://github.com/microsoft/vscode/blob/1.79.0/src/vs/base/common/strings.ts#L736\nconst CSI_SEQUENCE = /(:?\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~]/g;\n\n// Plus additional markers for custom `\\x1b]...\\x07` instructions.\nconst CSI_CUSTOM_SEQUENCE = /\\x1b\\].*?\\x07/g;\n\nexport function removeAnsiEscapeCodes(str: string): string {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '').replace(CSI_CUSTOM_SEQUENCE, '');\n    }\n\n    return str.trimEnd();\n}\n\nexport const TaskProcessOptions = Symbol('TaskProcessOptions');\nexport interface TaskProcessOptions extends TaskOptions {\n    process: Process;\n    processType: ProcessType;\n    command?: string;\n}\n\nexport const TaskFactory = Symbol('TaskFactory');\nexport type TaskFactory = (options: TaskProcessOptions) => ProcessTask;\n\n/** Represents a Task launched as a process by `ProcessTaskRunner`. */\n@injectable()\nexport class ProcessTask extends Task {\n\n    protected command: string | undefined;\n\n    constructor(\n        @inject(TaskManager) taskManager: TaskManager,\n        @inject(ILogger) @named('task') logger: ILogger,\n        @inject(TaskProcessOptions) protected override readonly options: TaskProcessOptions\n    ) {\n        super(taskManager, logger, options);\n\n        const toDispose = this.process.onClose(async event => {\n            toDispose.dispose();\n            this.fireTaskExited(await this.getTaskExitedEvent(event));\n        });\n\n        // Buffer to accumulate incoming output.\n        let dataBuffer: string = '';\n        this.process.outputStream.on('data', (chunk: string) => {\n            dataBuffer += chunk;\n\n            while (1) {\n                // Check if we have a complete line.\n                const eolIdx = dataBuffer.indexOf('\\n');\n                if (eolIdx < 0) {\n                    break;\n                }\n\n                // Get and remove the line from the data buffer.\n                const lineBuf = dataBuffer.slice(0, eolIdx);\n                dataBuffer = dataBuffer.slice(eolIdx + 1);\n                const processedLine = removeAnsiEscapeCodes(lineBuf);\n                this.fireOutputLine({\n                    taskId: this.taskId,\n                    ctx: this.context,\n                    line: processedLine\n                });\n            }\n        });\n\n        this.command = this.options.command;\n        this.logger.info(`Created new task, id: ${this.id}, process id: ${this.options.process.id}, OS PID: ${this.process.pid}, context: ${this.context}`);\n    }\n\n    kill(): Promise<void> {\n        return new Promise<void>(resolve => {\n            if (this.process.killed) {\n                resolve();\n            } else {\n                const toDispose = this.process.onClose(event => {\n                    toDispose.dispose();\n                    resolve();\n                });\n                this.process.kill();\n            }\n        });\n    }\n\n    protected async getTaskExitedEvent(evt: IProcessExitEvent): Promise<TaskExitedEvent> {\n        return {\n            taskId: this.taskId,\n            ctx: this.context,\n            code: evt.code,\n            signal: evt.signal,\n            config: this.options.config,\n            terminalId: this.process.id,\n            processId: this.process.id\n        };\n    }\n\n    getRuntimeInfo(): ProcessTaskInfo {\n        return {\n            taskId: this.id,\n            ctx: this.context,\n            config: this.options.config,\n            terminalId: this.process.id,\n            processId: this.process.id,\n            command: this.command\n        };\n    }\n\n    get process(): Process {\n        return this.options.process;\n    }\n\n    get processType(): ProcessType {\n        return this.options.processType;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EOL } from '@theia/core/lib/common/os';\nimport { Diagnostic, DiagnosticSeverity, Range } from '@theia/core/shared/vscode-languageserver-protocol';\nimport {\n    FileLocationKind, ProblemMatcher, ProblemPattern,\n    ProblemMatch, ProblemMatchData, ProblemLocationKind\n} from '../common/problem-matcher-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { MAX_SAFE_INTEGER } from '@theia/core/lib/common/numbers';\nimport { join } from 'path';\n\nconst endOfLine: string = EOL;\n\nexport interface ProblemData {\n    kind?: ProblemLocationKind;\n    file?: string;\n    location?: string;\n    line?: string;\n    character?: string;\n    endLine?: string;\n    endCharacter?: string;\n    message?: string;\n    severity?: string;\n    code?: string;\n}\n\nexport abstract class AbstractLineMatcher {\n\n    protected patterns: ProblemPattern[] = [];\n    protected activePatternIndex: number = 0;\n    protected activePattern: ProblemPattern | undefined;\n    protected cachedProblemData: ProblemData;\n\n    constructor(\n        protected matcher: ProblemMatcher\n    ) {\n        if (Array.isArray(matcher.pattern)) {\n            this.patterns = matcher.pattern;\n        } else {\n            this.patterns = [matcher.pattern];\n        }\n        this.cachedProblemData = this.getEmptyProblemData();\n\n        if (this.patterns.slice(0, this.patternCount - 1).some(p => !!p.loop)) {\n            console.error('Problem Matcher: Only the last pattern can loop');\n        }\n    }\n\n    /**\n     * Finds the problem identified by this line matcher.\n     *\n     * @param line the line of text to find the problem from\n     * @return the identified problem. If the problem is not found, `undefined` is returned.\n     */\n    abstract match(line: string): ProblemMatch | undefined;\n\n    /**\n     * Number of problem patterns that the line matcher uses.\n     */\n    get patternCount(): number {\n        return this.patterns.length;\n    }\n\n    protected getEmptyProblemData(): ProblemData {\n        // eslint-disable-next-line no-null/no-null\n        return Object.create(null) as ProblemData;\n    }\n\n    protected fillProblemData(data: ProblemData | null, pattern: ProblemPattern, matches: RegExpExecArray): data is ProblemData {\n        if (data) {\n            this.fillProperty(data, 'file', pattern, matches, true);\n            this.appendProperty(data, 'message', pattern, matches, true);\n            this.fillProperty(data, 'code', pattern, matches, true);\n            this.fillProperty(data, 'severity', pattern, matches, true);\n            this.fillProperty(data, 'location', pattern, matches, true);\n            this.fillProperty(data, 'line', pattern, matches);\n            this.fillProperty(data, 'character', pattern, matches);\n            this.fillProperty(data, 'endLine', pattern, matches);\n            this.fillProperty(data, 'endCharacter', pattern, matches);\n            return true;\n        }\n        return false;\n    }\n\n    private appendProperty(data: ProblemData, property: keyof ProblemData, pattern: ProblemPattern, matches: RegExpExecArray, trim: boolean = false): void {\n        const patternProperty = pattern[property];\n        if (data[property] === undefined) {\n            this.fillProperty(data, property, pattern, matches, trim);\n        } else if (patternProperty !== undefined && patternProperty < matches.length) {\n            let value = matches[patternProperty];\n            if (trim) {\n                value = value.trim();\n            }\n            (data[property] as string) += endOfLine + value;\n        }\n    }\n\n    private fillProperty(data: ProblemData, property: keyof ProblemData, pattern: ProblemPattern, matches: RegExpExecArray, trim: boolean = false): void {\n        const patternAtProperty = pattern[property];\n        if (data[property] === undefined && patternAtProperty !== undefined && patternAtProperty < matches.length) {\n            let value = matches[patternAtProperty];\n            if (value !== undefined) {\n                if (trim) {\n                    value = value.trim();\n                }\n                (data[property] as string) = value;\n            }\n        }\n    }\n\n    protected getMarkerMatch(data: ProblemData): ProblemMatch | undefined {\n        try {\n            const location = this.getLocation(data);\n            if (data.file && location && data.message) {\n                const marker: Diagnostic = {\n                    severity: this.getSeverity(data),\n                    range: location,\n                    message: data.message\n                };\n                if (data.code !== undefined) {\n                    marker.code = data.code;\n                }\n                if (this.matcher.source !== undefined) {\n                    marker.source = this.matcher.source;\n                }\n                return {\n                    description: this.matcher,\n                    resource: this.getResource(data.file, this.matcher),\n                    marker\n                } as ProblemMatchData;\n            }\n            return {\n                description: this.matcher\n            };\n        } catch (err) {\n            console.error(`Failed to convert problem data into match: ${JSON.stringify(data)}`);\n        }\n        return undefined;\n    }\n\n    private getLocation(data: ProblemData): Range | null {\n        if (data.kind === ProblemLocationKind.File) {\n            return this.createRange(0, 0, 0, 0);\n        }\n        if (data.location) {\n            return this.parseLocationInfo(data.location);\n        }\n        if (!data.line) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        const startLine = parseInt(data.line);\n        const startColumn = data.character ? parseInt(data.character) : undefined;\n        const endLine = data.endLine ? parseInt(data.endLine) : undefined;\n        const endColumn = data.endCharacter ? parseInt(data.endCharacter) : undefined;\n        return this.createRange(startLine, startColumn, endLine, endColumn);\n    }\n\n    private parseLocationInfo(value: string): Range | null {\n        if (!value || !value.match(/(\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)/)) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        const parts = value.split(',');\n        const startLine = parseInt(parts[0]);\n        const startColumn = parts.length > 1 ? parseInt(parts[1]) : undefined;\n        if (parts.length > 3) {\n            return this.createRange(startLine, startColumn, parseInt(parts[2]), parseInt(parts[3]));\n        } else {\n            return this.createRange(startLine, startColumn, undefined, undefined);\n        }\n    }\n\n    private createRange(startLine: number, startColumn: number | undefined, endLine: number | undefined, endColumn: number | undefined): Range {\n        let range: Range;\n        if (startColumn !== undefined) {\n            if (endColumn !== undefined) {\n                range = Range.create(startLine, startColumn, endLine || startLine, endColumn);\n            } else {\n                range = Range.create(startLine, startColumn, startLine, startColumn);\n            }\n        } else {\n            range = Range.create(startLine, 1, startLine, MAX_SAFE_INTEGER);\n        }\n\n        // range indexes should be zero-based\n        return Range.create(\n            this.getZeroBasedRangeIndex(range.start.line),\n            this.getZeroBasedRangeIndex(range.start.character),\n            this.getZeroBasedRangeIndex(range.end.line),\n            this.getZeroBasedRangeIndex(range.end.character)\n        );\n    }\n\n    private getZeroBasedRangeIndex(ind: number): number {\n        return ind === 0 ? ind : ind - 1;\n    }\n\n    private getSeverity(data: ProblemData): DiagnosticSeverity {\n        // eslint-disable-next-line no-null/no-null\n        let result: Severity | null = null;\n        if (data.severity) {\n            const value = data.severity;\n            if (value) {\n                result = Severity.fromValue(value);\n                if (result === Severity.Ignore) {\n                    if (value === 'E') {\n                        result = Severity.Error;\n                    } else if (value === 'W') {\n                        result = Severity.Warning;\n                    } else if (value === 'I') {\n                        result = Severity.Info;\n                    } else if (value.toLowerCase() === 'hint') {\n                        result = Severity.Info;\n                    } else if (value.toLowerCase() === 'note') {\n                        result = Severity.Info;\n                    }\n                }\n            }\n        }\n        // eslint-disable-next-line no-null/no-null\n        if (result === null || result === Severity.Ignore) {\n            result = this.matcher.severity || Severity.Error;\n        }\n        return Severity.toDiagnosticSeverity(result);\n    }\n\n    private getResource(filename: string, matcher: ProblemMatcher): URI {\n        const kind = matcher.fileLocation;\n        let fullPath: string | undefined;\n        if (kind === FileLocationKind.Absolute) {\n            fullPath = filename;\n        } else if ((kind === FileLocationKind.Relative) && matcher.filePrefix) {\n            let relativeFileName = filename.replace(/\\\\/g, '/');\n            if (relativeFileName.startsWith('./')) {\n                relativeFileName = relativeFileName.slice(2);\n            }\n            fullPath = join(matcher.filePrefix, relativeFileName);\n        }\n        if (fullPath === undefined) {\n            throw new Error('FileLocationKind is not actionable. Does the matcher have a filePrefix? This should never happen.');\n        }\n        if (matcher.uriProvider !== undefined) {\n            return matcher.uriProvider(fullPath);\n        } else {\n            return URI.fromFilePath(fullPath);\n        }\n    }\n\n    protected resetActivePatternIndex(defaultIndex?: number): void {\n        if (defaultIndex === undefined) {\n            defaultIndex = 0;\n        }\n        this.activePatternIndex = defaultIndex;\n        this.activePattern = this.patterns[defaultIndex];\n    }\n\n    protected nextProblemPattern(): void {\n        this.activePatternIndex++;\n        if (this.activePatternIndex > this.patternCount - 1) {\n            this.resetActivePatternIndex();\n        } else {\n            this.activePattern = this.patterns[this.activePatternIndex];\n        }\n    }\n\n    protected doOneLineMatch(line: string): boolean {\n        if (this.activePattern) {\n            const regexp = new RegExp(this.activePattern.regexp);\n            const regexMatches = regexp.exec(line);\n            if (regexMatches) {\n                this.cachedProblemData.kind ??= this.activePattern.kind;\n                return this.fillProblemData(this.cachedProblemData, this.activePattern, regexMatches);\n            }\n        }\n        return false;\n    }\n\n    // check if active pattern is the last pattern\n    protected isUsingTheLastPattern(): boolean {\n        return this.patternCount > 0 && this.activePatternIndex === this.patternCount - 1;\n    }\n\n    protected isLastPatternLoop(): boolean {\n        return this.patternCount > 0 && !!this.patterns[this.patternCount - 1].loop;\n    }\n\n    protected resetCachedProblemData(): void {\n        this.cachedProblemData = this.getEmptyProblemData();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ContributionProvider } from '@theia/core';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { TaskRunnerContribution, TaskRunnerRegistry } from './task-runner';\n\n@injectable()\nexport class TaskBackendApplicationContribution implements BackendApplicationContribution {\n\n    @inject(ContributionProvider) @named(TaskRunnerContribution)\n    protected readonly contributionProvider: ContributionProvider<TaskRunnerContribution>;\n\n    @inject(TaskRunnerRegistry)\n    protected readonly taskRunnerRegistry: TaskRunnerRegistry;\n\n    onStart(): void {\n        this.contributionProvider.getContributions().forEach(contrib =>\n            contrib.registerRunner(this.taskRunnerRegistry)\n        );\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { bindContributionProvider } from '@theia/core';\nimport { ConnectionHandler, RpcConnectionHandler } from '@theia/core/lib/common/messaging';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { bindProcessTaskRunnerModule } from './process/process-task-runner-backend-module';\nimport { bindCustomTaskRunnerModule } from './custom/custom-task-runner-backend-module';\nimport { TaskBackendApplicationContribution } from './task-backend-application-contribution';\nimport { TaskManager } from './task-manager';\nimport { TaskRunnerContribution, TaskRunnerRegistry } from './task-runner';\nimport { TaskServerImpl } from './task-server';\nimport { createCommonBindings } from '../common/task-common-module';\nimport { TaskClient, TaskServer, taskPath } from '../common';\n\nexport default new ContainerModule(bind => {\n\n    bind(TaskManager).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(TaskManager);\n\n    bind(TaskServer).to(TaskServerImpl).inSingletonScope();\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler<TaskClient>(taskPath, client => {\n            const taskServer = ctx.container.get<TaskServer>(TaskServer);\n            taskServer.setClient(client);\n            // when connection closes, cleanup that client of task-server\n            client.onDidCloseConnection(() => {\n                taskServer.disconnectClient(client);\n            });\n            return taskServer;\n        })\n    ).inSingletonScope();\n\n    createCommonBindings(bind);\n\n    bind(TaskRunnerRegistry).toSelf().inSingletonScope();\n    bindContributionProvider(bind, TaskRunnerContribution);\n    bind(TaskBackendApplicationContribution).toSelf().inSingletonScope();\n    bind(BackendApplicationContribution).toService(TaskBackendApplicationContribution);\n\n    bindProcessTaskRunnerModule(bind);\n    bindCustomTaskRunnerModule(bind);\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { AbstractLineMatcher } from './task-abstract-line-matcher';\nimport { ProblemMatcher, ProblemMatch, WatchingPattern } from '../common/problem-matcher-protocol';\n\nexport class StartStopLineMatcher extends AbstractLineMatcher {\n\n    constructor(matcher: ProblemMatcher) {\n        super(matcher);\n    }\n\n    /**\n     * Finds the problem identified by this line matcher.\n     *\n     * @param line the line of text to find the problem from\n     * @return the identified problem. If the problem is not found, `undefined` is returned.\n     */\n    match(line: string): ProblemMatch | undefined {\n        if (!this.activePattern) {\n            this.resetActivePatternIndex();\n        }\n        if (this.activePattern) {\n            const originalProblemData = Object.assign(this.getEmptyProblemData(), this.cachedProblemData);\n            const foundMatch = this.doOneLineMatch(line);\n            if (foundMatch) {\n                if (this.isUsingTheLastPattern()) {\n                    const matchResult = this.getMarkerMatch(this.cachedProblemData);\n                    if (this.isLastPatternLoop()) {\n                        this.cachedProblemData = originalProblemData;\n                    } else {\n                        this.resetCachedProblemData();\n                        this.resetActivePatternIndex();\n                    }\n                    return matchResult;\n                } else {\n                    this.nextProblemPattern();\n                }\n            } else {\n                this.resetCachedProblemData();\n                if (this.activePatternIndex !== 0) { // if no match, use the first pattern to parse the same line\n                    this.resetActivePatternIndex();\n                    return this.match(line);\n                }\n            }\n        }\n        return undefined;\n    }\n}\n\nexport class WatchModeLineMatcher extends StartStopLineMatcher {\n\n    private beginsPattern: WatchingPattern;\n    private endsPattern: WatchingPattern;\n    activeOnStart: boolean = false;\n\n    constructor(matcher: ProblemMatcher) {\n        super(matcher);\n        this.beginsPattern = matcher.watching!.beginsPattern;\n        this.endsPattern = matcher.watching!.endsPattern;\n        this.activeOnStart = matcher.watching!.activeOnStart === true;\n        this.resetActivePatternIndex(this.activeOnStart ? 0 : -1);\n    }\n\n    /**\n     * Finds the problem identified by this line matcher.\n     *\n     * @param line the line of text to find the problem from\n     * @return the identified problem. If the problem is not found, `undefined` is returned.\n     */\n    override match(line: string): ProblemMatch | undefined {\n        if (this.activeOnStart) {\n            this.activeOnStart = false;\n            this.resetActivePatternIndex(0);\n            this.resetCachedProblemData();\n            return super.match(line);\n        }\n\n        if (this.matchBegin(line)) {\n            const beginsPatternMatch = this.getMarkerMatch(this.cachedProblemData);\n            this.resetCachedProblemData();\n            return beginsPatternMatch;\n        }\n        if (this.matchEnd(line)) {\n            this.resetCachedProblemData();\n            return undefined;\n        }\n        if (this.activePattern) {\n            return super.match(line);\n        }\n        return undefined;\n    }\n\n    matchBegin(line: string): boolean {\n        const beginRegexp = new RegExp(this.beginsPattern.regexp);\n        const regexMatches = beginRegexp.exec(line);\n        if (regexMatches) {\n            this.fillProblemData(this.cachedProblemData, this.beginsPattern, regexMatches);\n            this.resetActivePatternIndex(0);\n            return true;\n        }\n        return false;\n    }\n\n    matchEnd(line: string): boolean {\n        const endRegexp = new RegExp(this.endsPattern.regexp);\n        const match = endRegexp.exec(line);\n        if (match) {\n            this.resetActivePatternIndex(-1);\n            return true;\n        }\n        return false;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { Emitter, Event, ILogger } from '@theia/core/lib/common';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\nimport { Task } from './task';\nimport { ManagedTaskManager } from '../common';\n\n// inspired by process-manager.ts\n\n/**\n * The {@link TaskManager} is the common component responsible for managing running tasks.\n */\n@injectable()\nexport class TaskManager implements BackendApplicationContribution, ManagedTaskManager<Task> {\n\n    /** contains all running tasks */\n    protected readonly tasks: Map<number, Task> = new Map();\n    /** contains running tasks per context */\n    protected readonly tasksPerCtx: Map<string, Task[]> = new Map();\n    /** each task has this unique task id, for this back-end */\n    protected id: number = -1;\n    /**\n     * Emit when a registered task is deleted.\n     */\n    protected readonly deleteEmitter = new Emitter<number>();\n\n    constructor(\n        @inject(ILogger) @named('task') protected readonly logger: ILogger\n    ) { }\n\n    /**\n     * Registers a new task (in the given context if present). Each registered\n     * task is considered to be currently running.\n     * @param task the new task.\n     * @param ctx  the provided context.\n     *\n     * @returns the registration id for the given task.\n     */\n    register(task: Task, ctx?: string): number {\n        const id = ++this.id;\n        this.tasks.set(id, task);\n\n        if (ctx) {\n            let tks = this.tasksPerCtx.get(ctx);\n            if (tks === undefined) {\n                tks = [];\n            }\n            tks.push(task);\n            this.tasksPerCtx.set(ctx, tks);\n        }\n\n        return id;\n    }\n\n    /**\n     * Try to retrieve the registered task for the given id.\n     * @param id the task registration id.\n     *\n     * @returns the task or `undefined` if no task was registered for the given id.\n     */\n    get(id: number): Task | undefined {\n        return this.tasks.get(id);\n    }\n\n    /**\n     * Returns all running tasks. If a context is provided, filter-down to\n     * only tasks started from that context.\n     * @param ctx the task execution context.\n     *\n     * @returns all running tasks for the given context or `undefined` if no tasks are registered for the given context.\n     */\n    getTasks(ctx?: string): Task[] | undefined {\n        if (!ctx) {\n            return [...this.tasks.values()];\n        } else {\n            if (this.tasksPerCtx.has(ctx)) {\n                return this.tasksPerCtx.get(ctx);\n            }\n        }\n    }\n\n    /**\n     * Delete the given task from the task manager.\n     * @param task the task to delete.\n     */\n    delete(task: Task): void {\n        this.tasks.delete(task.id);\n\n        const ctx = task.context;\n        if (ctx && this.tasksPerCtx.has(ctx)) {\n            const tasksForWS = this.tasksPerCtx.get(ctx);\n            if (tasksForWS !== undefined) {\n                const idx = tasksForWS.indexOf(task);\n                if (idx !== -1) {\n                    tasksForWS.splice(idx, 1);\n                }\n            }\n        }\n        this.deleteEmitter.fire(task.id);\n    }\n\n    get onDelete(): Event<number> {\n        return this.deleteEmitter.event;\n    }\n\n    /**\n     * Is triggered on application stop to cleanup all ongoing tasks.\n     */\n    onStop(): void {\n        this.tasks.forEach((task: Task, id: number) => {\n            this.logger.debug(`Task Backend application: onStop(): cleaning task id: ${id}`);\n            this.delete(task);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { AbstractLineMatcher } from './task-abstract-line-matcher';\nimport { ProblemMatcher, ProblemMatch } from '../common/problem-matcher-protocol';\nimport { StartStopLineMatcher, WatchModeLineMatcher } from './task-line-matchers';\n\nexport class ProblemCollector {\n\n    private lineMatchers: AbstractLineMatcher[] = [];\n\n    constructor(\n        public problemMatchers: ProblemMatcher[]\n    ) {\n        for (const matcher of problemMatchers) {\n            if (ProblemMatcher.isWatchModeWatcher(matcher)) {\n                this.lineMatchers.push(new WatchModeLineMatcher(matcher));\n            } else {\n                this.lineMatchers.push(new StartStopLineMatcher(matcher));\n            }\n        }\n    }\n\n    processLine(line: string): ProblemMatch[] {\n        const markers: ProblemMatch[] = [];\n        this.lineMatchers.forEach(lineMatcher => {\n            const match = lineMatcher.match(line);\n            if (match) {\n                markers.push(match);\n            }\n        });\n        return markers;\n    }\n\n    isTaskActiveOnStart(): boolean {\n        const activeOnStart = this.lineMatchers.some(lineMatcher => (lineMatcher instanceof WatchModeLineMatcher) && lineMatcher.activeOnStart);\n        return activeOnStart;\n    }\n\n    matchBeginMatcher(line: string): boolean {\n        const match = this.lineMatchers.some(lineMatcher => (lineMatcher instanceof WatchModeLineMatcher) && lineMatcher.matchBegin(line));\n        return match;\n    }\n\n    matchEndMatcher(line: string): boolean {\n        const match = this.lineMatchers.some(lineMatcher => (lineMatcher instanceof WatchModeLineMatcher) && lineMatcher.matchEnd(line));\n        return match;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { TaskConfiguration } from '../common';\nimport { Task } from './task';\n\nexport const TaskRunner = Symbol('TaskRunner');\n/**\n * A {@link TaskRunner} knows how to run a task configuration of a particular type.\n */\nexport interface TaskRunner {\n    /**\n     * Runs a task based on the given `TaskConfiguration`.\n     * @param taskConfig the task configuration that should be executed.\n     * @param ctx the execution context.\n     *\n     * @returns a promise of the (currently running) {@link Task}.\n     */\n    run(tskConfig: TaskConfiguration, ctx?: string): Promise<Task>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { ProcessTaskRunner } from './process/process-task-runner';\nimport { TaskRunner } from './task-runner-protocol';\nexport { TaskRunner };\n\nexport const TaskRunnerContribution = Symbol('TaskRunnerContribution');\n\n/** The {@link TaskRunnerContribution} can be used to contribute custom {@link TaskRunner}s. */\nexport interface TaskRunnerContribution {\n    /**\n     * Register custom runners using the given {@link TaskRunnerRegistry}.\n     * @param runners the common task runner registry.\n     */\n    registerRunner(runners: TaskRunnerRegistry): void;\n}\n\n/**\n * The {@link TaskRunnerRegistry} is the common component for the registration and provisioning of\n * {@link TaskRunner}s. Theia will collect all {@link TaskRunner}s and invoke {@link TaskRunnerContribution#registerRunner}\n * for each contribution. The `TaskServer` will use the runners provided by this registry to execute `TaskConfiguration`s that\n * have been triggered by the user.\n */\n@injectable()\nexport class TaskRunnerRegistry {\n\n    protected runners: Map<string, TaskRunner>;\n    /** A Task Runner that will be used for executing a Task without an associated Runner. */\n    protected defaultRunner: TaskRunner;\n\n    @inject(ProcessTaskRunner)\n    protected readonly processTaskRunner: ProcessTaskRunner;\n\n    @postConstruct()\n    protected init(): void {\n        this.runners = new Map();\n        this.defaultRunner = this.processTaskRunner;\n    }\n    /**\n     * Registers the given {@link TaskRunner} to execute Tasks of the specified type.\n     * If there is already a {@link TaskRunner} registered for the specified type the registration will\n     * be overwritten with the new value.\n     * @param type the task type for which the given runner should be registered.\n     * @param runner the task runner that should be registered.\n     *\n     * @returns a `Disposable` that can be invoked to unregister the given runner.\n     */\n    registerRunner(type: string, runner: TaskRunner): Disposable {\n        this.runners.set(type, runner);\n        return {\n            dispose: () => this.runners.delete(type)\n        };\n    }\n\n    /**\n     * Looks for a registered {@link TaskRunner} for each of the task types in sequence and returns the first that is found\n     * If no task runner is registered for any of the types, the default runner is returned.\n     * @param types the task types.\n     *\n     * @returns the registered {@link TaskRunner} or a default runner if none is registered for the specified types.\n     */\n    getRunner(...types: string[]): TaskRunner {\n        for (const type of types) {\n            const runner = this.runners.get(type);\n            if (runner) {\n                return runner;\n            }\n        }\n        return this.defaultRunner;\n    }\n\n    /**\n     * Derives all task types for which a {@link TaskRunner} is registered.\n     *\n     * @returns all derived task types.\n     */\n    getRunnerTypes(): string[] {\n        return [...this.runners.keys()];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection, ILogger } from '@theia/core/lib/common/';\nimport {\n    TaskClient,\n    TaskExitedEvent,\n    TaskInfo,\n    TaskServer,\n    TaskConfiguration,\n    TaskOutputProcessedEvent,\n    RunTaskOption,\n    BackgroundTaskEndedEvent\n} from '../common';\nimport { TaskManager } from './task-manager';\nimport { TaskRunnerRegistry } from './task-runner';\nimport { Task } from './task';\nimport { ProcessTask } from './process/process-task';\nimport { ProblemCollector } from './task-problem-collector';\nimport { CustomTask } from './custom/custom-task';\n\n@injectable()\nexport class TaskServerImpl implements TaskServer, Disposable {\n\n    /** Task clients, to send notifications-to. */\n    protected clients: TaskClient[] = [];\n    /** Map of task id and task disposable */\n    protected readonly toDispose = new Map<number, DisposableCollection>();\n\n    /** Map of task id and task background status. */\n    // Currently there is only one property ('isActive'), but in the future we may want to store more properties\n    protected readonly backgroundTaskStatusMap = new Map<number, { 'isActive': boolean }>();\n\n    @inject(ILogger) @named('task')\n    protected readonly logger: ILogger;\n\n    @inject(TaskManager)\n    protected readonly taskManager: TaskManager;\n\n    @inject(TaskRunnerRegistry)\n    protected readonly runnerRegistry: TaskRunnerRegistry;\n\n    /** task context - {task id - problem collector} */\n    private problemCollectors: Map<string, Map<number, ProblemCollector>> = new Map();\n\n    dispose(): void {\n        for (const toDispose of this.toDispose.values()) {\n            toDispose.dispose();\n        }\n        this.toDispose.clear();\n        this.backgroundTaskStatusMap.clear();\n    }\n\n    protected disposeByTaskId(taskId: number): void {\n        if (this.toDispose.has(taskId)) {\n            this.toDispose.get(taskId)!.dispose();\n            this.toDispose.delete(taskId);\n        }\n\n        if (this.backgroundTaskStatusMap.has(taskId)) {\n            this.backgroundTaskStatusMap.delete(taskId);\n        }\n    }\n\n    async getTasks(context?: string): Promise<TaskInfo[]> {\n        const taskInfo: TaskInfo[] = [];\n        const tasks = this.taskManager.getTasks(context);\n        if (tasks !== undefined) {\n            for (const task of tasks) {\n                taskInfo.push(await task.getRuntimeInfo());\n            }\n        }\n        this.logger.debug(`getTasks(): about to return task information for ${taskInfo.length} tasks`);\n\n        return Promise.resolve(taskInfo);\n    }\n\n    async run(taskConfiguration: TaskConfiguration, ctx?: string, option?: RunTaskOption): Promise<TaskInfo> {\n        const runner = this.runnerRegistry.getRunner(taskConfiguration.type, taskConfiguration.taskType);\n        const task = await runner.run(taskConfiguration, ctx);\n\n        if (!this.toDispose.has(task.id)) {\n            this.toDispose.set(task.id, new DisposableCollection());\n        }\n\n        if (taskConfiguration.isBackground && !this.backgroundTaskStatusMap.has(task.id)) {\n            this.backgroundTaskStatusMap.set(task.id, { 'isActive': false });\n        }\n\n        this.toDispose.get(task.id)!.push(\n            task.onExit(event => {\n                this.taskManager.delete(task);\n                this.fireTaskExitedEvent(event, task);\n                this.removedCachedProblemCollector(event.ctx || '', event.taskId);\n                this.disposeByTaskId(event.taskId);\n            })\n        );\n\n        const resolvedMatchers = option && option.customization ? option.customization.problemMatcher || [] : [];\n        if (resolvedMatchers.length > 0) {\n            this.toDispose.get(task.id)!.push(\n                task.onOutput(event => {\n                    let collector: ProblemCollector | undefined = this.getCachedProblemCollector(event.ctx || '', event.taskId);\n                    if (!collector) {\n                        collector = new ProblemCollector(resolvedMatchers);\n                        this.cacheProblemCollector(event.ctx || '', event.taskId, collector);\n                    }\n\n                    const problems = collector.processLine(event.line);\n                    if (problems.length > 0) {\n                        this.fireTaskOutputProcessedEvent({\n                            taskId: event.taskId,\n                            config: taskConfiguration,\n                            ctx: event.ctx,\n                            problems\n                        });\n                    }\n                    if (taskConfiguration.isBackground) {\n                        const backgroundTaskStatus = this.backgroundTaskStatusMap.get(event.taskId)!;\n                        if (!backgroundTaskStatus.isActive) {\n                            // Get the 'activeOnStart' value of the problem matcher 'background' property\n                            const activeOnStart = collector.isTaskActiveOnStart();\n                            if (activeOnStart) {\n                                backgroundTaskStatus.isActive = true;\n                            } else {\n                                const isBeginsPatternMatch = collector.matchBeginMatcher(event.line);\n                                if (isBeginsPatternMatch) {\n                                    backgroundTaskStatus.isActive = true;\n                                }\n                            }\n                        }\n\n                        if (backgroundTaskStatus.isActive) {\n                            const isEndsPatternMatch = collector.matchEndMatcher(event.line);\n                            // Mark ends pattern as matches, only after begins pattern matches\n                            if (isEndsPatternMatch) {\n                                this.fireBackgroundTaskEndedEvent({\n                                    taskId: event.taskId,\n                                    ctx: event.ctx\n                                });\n                            }\n                        }\n                    }\n                })\n            );\n        }\n        this.toDispose.get(task.id)!.push(task);\n\n        const taskInfo = await task.getRuntimeInfo();\n        this.fireTaskCreatedEvent(taskInfo);\n        return taskInfo;\n    }\n\n    async getRegisteredTaskTypes(): Promise<string[]> {\n        return this.runnerRegistry.getRunnerTypes();\n    }\n\n    async customExecutionComplete(id: number, exitCode: number | undefined): Promise<void> {\n        const task = this.taskManager.get(id) as CustomTask;\n        await task.callbackTaskComplete(exitCode);\n    }\n\n    protected fireTaskExitedEvent(event: TaskExitedEvent, task?: Task): void {\n        this.logger.debug(log => log('task has exited:', event));\n\n        if (task instanceof ProcessTask) {\n            this.clients.forEach(client => {\n                client.onDidEndTaskProcess(event);\n            });\n        }\n\n        this.clients.forEach(client => {\n            client.onTaskExit(event);\n        });\n    }\n\n    protected fireTaskCreatedEvent(event: TaskInfo, task?: Task): void {\n        this.logger.debug(log => log('task created:', event));\n\n        this.clients.forEach(client => {\n            client.onTaskCreated(event);\n        });\n\n        if (task && task instanceof ProcessTask) {\n            this.clients.forEach(client => {\n                client.onDidStartTaskProcess(event);\n            });\n        }\n    }\n\n    protected fireTaskOutputProcessedEvent(event: TaskOutputProcessedEvent): void {\n        this.clients.forEach(client => client.onDidProcessTaskOutput(event));\n    }\n\n    protected fireBackgroundTaskEndedEvent(event: BackgroundTaskEndedEvent): void {\n        this.clients.forEach(client => client.onBackgroundTaskEnded(event));\n    }\n\n    /** Kill task for a given id. Rejects if task is not found */\n    async kill(id: number): Promise<void> {\n        const taskToKill = this.taskManager.get(id);\n        if (taskToKill !== undefined) {\n            this.logger.info(`Killing task id ${id}`);\n            return taskToKill.kill();\n        } else {\n            this.logger.info(`Could not find task to kill, task id ${id}. Already terminated?`);\n            return Promise.reject(new Error(`Could not find task to kill, task id ${id}. Already terminated?`));\n        }\n    }\n\n    /** Adds a client to this server */\n    setClient(client: TaskClient): void {\n        this.logger.debug('a client has connected - adding it to the list:');\n        this.clients.push(client);\n    }\n\n    /** Removes a client, from this server */\n    disconnectClient(client: TaskClient): void {\n        this.logger.debug('a client has disconnected - removed from list:');\n        const idx = this.clients.indexOf(client);\n        if (idx > -1) {\n            this.clients.splice(idx, 1);\n        }\n    }\n\n    private getCachedProblemCollector(ctx: string, taskId: number): ProblemCollector | undefined {\n        if (this.problemCollectors.has(ctx)) {\n            return this.problemCollectors.get(ctx)!.get(taskId);\n        }\n    }\n\n    private cacheProblemCollector(ctx: string, taskId: number, problemCollector: ProblemCollector): void {\n        if (this.problemCollectors.has(ctx)) {\n            if (!this.problemCollectors.get(ctx)!.has(taskId)) {\n                this.problemCollectors.get(ctx)!.set(taskId, problemCollector);\n            }\n        } else {\n            const forNewContext = new Map<number, ProblemCollector>();\n            forNewContext.set(taskId, problemCollector);\n            this.problemCollectors.set(ctx, forNewContext);\n        }\n    }\n\n    private removedCachedProblemCollector(ctx: string, taskId: number): void {\n        if (this.problemCollectors.has(ctx) && this.problemCollectors.get(ctx)!.has(taskId)) {\n            this.problemCollectors.get(ctx)!.delete(taskId);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ILogger, Disposable, DisposableCollection, Emitter, Event, MaybePromise } from '@theia/core/lib/common/';\nimport { TaskInfo, TaskExitedEvent, TaskConfiguration, TaskOutputEvent, ManagedTask, ManagedTaskManager } from '../common/task-protocol';\n/**\n * Represents the options used for running a task.\n */\nexport interface TaskOptions {\n    /** The task label */\n    label: string;\n    /** The task configuration which should be executed */\n    config: TaskConfiguration;\n    /** The optional execution context */\n    context?: string;\n}\n\n/**\n * A {@link Task} represents the execution state of a `TaskConfiguration`.\n * Implementing classes have to call the {@link Task#fireOutputLine} function\n * whenever a new output occurs during the execution.\n */\n@injectable()\nexport abstract class Task implements Disposable, ManagedTask {\n\n    protected taskId: number;\n    protected readonly toDispose: DisposableCollection = new DisposableCollection();\n    readonly exitEmitter: Emitter<TaskExitedEvent>;\n    readonly outputEmitter: Emitter<TaskOutputEvent>;\n\n    constructor(\n        protected readonly taskManager: ManagedTaskManager<Task>,\n        protected readonly logger: ILogger,\n        protected readonly options: TaskOptions\n    ) {\n        this.taskId = this.taskManager.register(this, this.options.context);\n        this.exitEmitter = new Emitter<TaskExitedEvent>();\n        this.outputEmitter = new Emitter<TaskOutputEvent>();\n        this.toDispose.push(this.exitEmitter);\n        this.toDispose.push(this.outputEmitter);\n    }\n\n    /**\n     * Terminate this task.\n     *\n     * @returns a promise that resolves once the task has been properly terminated.\n     */\n    abstract kill(): Promise<void>;\n\n    get onExit(): Event<TaskExitedEvent> {\n        return this.exitEmitter.event;\n    }\n\n    get onOutput(): Event<TaskOutputEvent> {\n        return this.outputEmitter.event;\n    }\n\n    /** Has to be called when a task has concluded its execution. */\n    protected fireTaskExited(event: TaskExitedEvent): void {\n        this.exitEmitter.fire(event);\n    }\n\n    protected fireOutputLine(event: TaskOutputEvent): void {\n        this.outputEmitter.fire(event);\n    }\n    /**\n     * Retrieves the runtime information about this task.\n     * The runtime information computation may happen asynchronous.\n     *\n     * @returns (a promise of) the runtime information as `TaskInfo`.\n     */\n    abstract getRuntimeInfo(): MaybePromise<TaskInfo>;\n\n    get id(): number {\n        return this.taskId;\n    }\n\n    get context(): string | undefined {\n        return this.options.context;\n    }\n\n    get label(): string {\n        return this.options.label;\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends RpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getEnvVarCollectionDescriptionsByExtension(id: number): Promise<Map<string, string | MarkdownString | undefined>>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    onAttachAttempted(id: number): Promise<void>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n\n    /**\n     * Gets a single collection constructed by merging all environment variable collections into\n     * one.\n     */\n    readonly collections: ReadonlyMap<string, EnvironmentVariableCollection>;\n    /**\n     * Gets a single collection constructed by merging all environment variable collections into\n     * one.\n     */\n    readonly mergedCollection: MergedEnvironmentVariableCollection;\n    /**\n     * Sets an extension's environment variable collection.\n     */\n    setCollection(extensionIdentifier: string, persistent: boolean, collection: SerializableEnvironmentVariableCollection, description: string | MarkdownString | undefined): void;\n    /**\n     * Deletes an extension's environment variable collection.\n     */\n    deleteCollection(extensionIdentifier: string): void;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Either code and reason will be set or signal.\n    code?: number;\n    reason?: TerminalExitReason;\n    signal?: string;\n\n    attached?: boolean;\n}\n\nexport enum TerminalExitReason {\n    Unknown = 0,\n    Shutdown = 1,\n    Process = 2,\n    User = 3,\n    Extension = 4,\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error;\n    attached?: boolean;\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n    updateTerminalEnvVariables(): void;\n    storeTerminalEnvVariables(data: string): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    updateTerminalEnvVariables(): void {\n        this.clients.forEach(c => {\n            try {\n                c.updateTerminalEnvVariables();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    storeTerminalEnvVariables(data: string): void {\n        this.clients.forEach(c => {\n            try {\n                c.storeTerminalEnvVariables(data);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariable.ts\n\nexport const ENVIRONMENT_VARIABLE_COLLECTIONS_KEY = 'terminal.integrated.environmentVariableCollections';\n\nexport interface EnvironmentVariableCollection {\n    readonly map: ReadonlyMap<string, EnvironmentVariableMutator>;\n}\n\nexport interface EnvironmentVariableCollectionWithPersistence extends EnvironmentVariableCollection {\n    readonly persistent: boolean;\n    readonly description: string | MarkdownString | undefined;\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\nexport interface EnvironmentVariableMutator {\n    readonly value: string;\n    readonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface ExtensionOwnedEnvironmentVariableMutator extends EnvironmentVariableMutator {\n    readonly extensionIdentifier: string;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface MergedEnvironmentVariableCollection {\n    readonly map: ReadonlyMap<string, ExtensionOwnedEnvironmentVariableMutator[]>;\n\n    /**\n     * Applies this collection to a process environment.\n     */\n    applyToProcessEnvironment(env: { [key: string]: string | null }): void;\n}\n\nexport interface SerializableExtensionEnvironmentVariableCollection {\n    extensionIdentifier: string,\n    collection: SerializableEnvironmentVariableCollection | undefined,\n    description: string | MarkdownString | undefined\n}\n\nexport type SerializableEnvironmentVariableCollection = [string, EnvironmentVariableMutator][];\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\nimport { OS } from '@theia/core/lib/common/os';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport type ShellTerminalOSPreferences<T> = {\n    [key in OS.Type]: T\n};\n\nexport interface IShellTerminalPreferences {\n    shell: ShellTerminalOSPreferences<string | undefined>,\n    shellArgs: ShellTerminalOSPreferences<string[]>\n};\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shell?: string,\n    args?: string[] | string,\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null },\n    strictEnv?: boolean,\n    isPseudo?: boolean,\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = RpcProxy<IShellTerminalServer>;\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core';\n\n/**\n * Create the bindings common to node and browser.\n *\n * @param bind The bind function from inversify.\n */\nexport function createCommonBindings(bind: interfaces.Bind): void {\n    bind(ILogger).toDynamicValue(ctx => {\n        const logger = ctx.container.get<ILogger>(ILogger);\n        return logger.child('terminal');\n    }).inSingletonScope().whenTargetNamed('terminal');\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport {\n    IBaseTerminalClient,\n    IBaseTerminalExitEvent,\n    IBaseTerminalErrorEvent\n} from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        const storeTerminalEnvVariablesEmitter = this.onStoreTerminalEnvVariablesRequestedEmitter;\n        const updateTerminalEnvVariablesEmitter = this.onUpdateTerminalEnvVariablesRequestedEmitter;\n        return {\n            storeTerminalEnvVariables(data: string): void {\n                storeTerminalEnvVariablesEmitter.fire(data);\n            },\n            updateTerminalEnvVariables(): void {\n                updateTerminalEnvVariablesEmitter.fire(undefined);\n            },\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n    private onStoreTerminalEnvVariablesRequestedEmitter = new Emitter<string>();\n    private onUpdateTerminalEnvVariablesRequestedEmitter = new Emitter<undefined>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n\n    get onStoreTerminalEnvVariablesRequested(): Event<string> {\n        return this.onStoreTerminalEnvVariablesRequestedEmitter.event;\n    }\n\n    get onUpdateTerminalEnvVariablesRequested(): Event<undefined> {\n        return this.onUpdateTerminalEnvVariablesRequestedEmitter.event;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { ILogger, DisposableCollection, isWindows } from '@theia/core/lib/common';\nimport {\n    IBaseTerminalServer,\n    IBaseTerminalServerOptions,\n    IBaseTerminalClient,\n    TerminalProcessInfo,\n    EnvironmentVariableCollection,\n    MergedEnvironmentVariableCollection,\n    SerializableEnvironmentVariableCollection,\n    EnvironmentVariableMutator,\n    ExtensionOwnedEnvironmentVariableMutator,\n    EnvironmentVariableMutatorType,\n    EnvironmentVariableCollectionWithPersistence,\n    SerializableExtensionEnvironmentVariableCollection,\n    TerminalExitReason\n} from '../common/base-terminal-protocol';\nimport { TerminalProcess, ProcessManager, TaskTerminalProcess } from '@theia/process/lib/node';\nimport { ShellProcess } from './shell-process';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\n\n@injectable()\nexport abstract class BaseTerminalServer implements IBaseTerminalServer {\n    protected client: IBaseTerminalClient | undefined = undefined;\n    protected terminalToDispose = new Map<number, DisposableCollection>();\n\n    readonly collections: Map<string, EnvironmentVariableCollectionWithPersistence> = new Map();\n    mergedCollection: MergedEnvironmentVariableCollection;\n\n    constructor(\n        @inject(ProcessManager) protected readonly processManager: ProcessManager,\n        @inject(ILogger) @named('terminal') protected readonly logger: ILogger\n    ) {\n        processManager.onDelete(id => {\n            const toDispose = this.terminalToDispose.get(id);\n            if (toDispose !== undefined) {\n                toDispose.dispose();\n                this.terminalToDispose.delete(id);\n            }\n        });\n        this.mergedCollection = this.resolveMergedCollection();\n    }\n\n    abstract create(options: IBaseTerminalServerOptions): Promise<number>;\n\n    async attach(id: number): Promise<number> {\n        const term = this.processManager.get(id);\n\n        if (term && term instanceof TerminalProcess) {\n            return term.id;\n        } else {\n            this.logger.warn(`Couldn't attach - can't find terminal with id: ${id} `);\n            return -1;\n        }\n    }\n\n    async onAttachAttempted(id: number): Promise<void> {\n        const terminal = this.processManager.get(id);\n        if (terminal instanceof TaskTerminalProcess) {\n            terminal.attachmentAttempted = true;\n            if (terminal.exited) {\n                // Didn't execute `unregisterProcess` on terminal `exit` event to enable attaching task output to terminal,\n                // Fixes https://github.com/eclipse-theia/theia/issues/2961\n                terminal.unregisterProcess();\n            } else {\n                this.postAttachAttempted(terminal);\n            }\n        }\n    }\n\n    async getProcessId(id: number): Promise<number> {\n        const terminal = this.processManager.get(id);\n        if (!(terminal instanceof TerminalProcess)) {\n            throw new Error(`terminal \"${id}\" does not exist`);\n        }\n        return terminal.pid;\n    }\n\n    async getProcessInfo(id: number): Promise<TerminalProcessInfo> {\n        const terminal = this.processManager.get(id);\n        if (!(terminal instanceof TerminalProcess)) {\n            throw new Error(`terminal \"${id}\" does not exist`);\n        }\n        return {\n            executable: terminal.executable,\n            arguments: terminal.arguments,\n        };\n    }\n\n    async getEnvVarCollectionDescriptionsByExtension(id: number): Promise<Map<string, string | MarkdownString | undefined>> {\n        const terminal = this.processManager.get(id);\n        if (!(terminal instanceof TerminalProcess)) {\n            throw new Error(`terminal \"${id}\" does not exist`);\n        }\n        const result = new Map<string, string | MarkdownString | undefined>();\n        this.collections.forEach((value, key) => {\n            result.set(key, value.description);\n        });\n        return result;\n    }\n\n    async getCwdURI(id: number): Promise<string> {\n        const terminal = this.processManager.get(id);\n        if (!(terminal instanceof TerminalProcess)) {\n            throw new Error(`terminal \"${id}\" does not exist`);\n        }\n        return terminal.getCwdURI();\n    }\n\n    async close(id: number): Promise<void> {\n        const term = this.processManager.get(id);\n\n        if (term instanceof TerminalProcess) {\n            term.kill();\n        }\n    }\n\n    async getDefaultShell(): Promise<string> {\n        return ShellProcess.getShellExecutablePath();\n    }\n\n    dispose(): void {\n        // noop\n    }\n\n    async resize(id: number, cols: number, rows: number): Promise<void> {\n        const term = this.processManager.get(id);\n        if (term && term instanceof TerminalProcess) {\n            term.resize(cols, rows);\n        } else {\n            console.warn(\"Couldn't resize terminal \" + id + \", because it doesn't exist.\");\n        }\n    }\n\n    /* Set the client to receive notifications on.  */\n    setClient(client: IBaseTerminalClient | undefined): void {\n        this.client = client;\n        if (!this.client) {\n            return;\n        }\n        this.client.updateTerminalEnvVariables();\n    }\n\n    protected notifyClientOnExit(term: TerminalProcess): DisposableCollection {\n        const toDispose = new DisposableCollection();\n\n        toDispose.push(term.onError(error => {\n            this.logger.error(`Terminal pid: ${term.pid} error: ${error}, closing it.`);\n\n            if (this.client !== undefined) {\n                this.client.onTerminalError({\n                    terminalId: term.id,\n                    error: new Error(`Failed to execute terminal process (${error.code})`),\n                    attached: term instanceof TaskTerminalProcess && term.attachmentAttempted\n                });\n            }\n        }));\n\n        toDispose.push(term.onExit(event => {\n            if (this.client !== undefined) {\n                this.client.onTerminalExitChanged({\n                    terminalId: term.id,\n                    code: event.code,\n                    reason: TerminalExitReason.Process,\n                    signal: event.signal,\n                    attached: term instanceof TaskTerminalProcess && term.attachmentAttempted\n                });\n            }\n        }));\n        return toDispose;\n    }\n\n    protected postCreate(term: TerminalProcess): void {\n        const toDispose = this.notifyClientOnExit(term);\n        this.terminalToDispose.set(term.id, toDispose);\n    }\n\n    protected postAttachAttempted(term: TaskTerminalProcess): void {\n        const toDispose = this.notifyClientOnExit(term);\n        this.terminalToDispose.set(term.id, toDispose);\n    }\n\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    // some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariableService.ts\n\n    setCollection(extensionIdentifier: string, persistent: boolean, collection: SerializableEnvironmentVariableCollection, description: string | MarkdownString | undefined): void {\n        const translatedCollection = { persistent, description, map: new Map<string, EnvironmentVariableMutator>(collection) };\n        this.collections.set(extensionIdentifier, translatedCollection);\n        this.updateCollections();\n    }\n\n    deleteCollection(extensionIdentifier: string): void {\n        this.collections.delete(extensionIdentifier);\n        this.updateCollections();\n    }\n\n    private updateCollections(): void {\n        this.persistCollections();\n        this.mergedCollection = this.resolveMergedCollection();\n    }\n\n    protected persistCollections(): void {\n        const collectionsJson: SerializableExtensionEnvironmentVariableCollection[] = [];\n        this.collections.forEach((collection, extensionIdentifier) => {\n            if (collection.persistent) {\n                collectionsJson.push({\n                    extensionIdentifier,\n                    collection: [...this.collections.get(extensionIdentifier)!.map.entries()],\n                    description: collection.description\n                });\n            }\n        });\n        if (this.client) {\n            const stringifiedJson = JSON.stringify(collectionsJson);\n            this.client.storeTerminalEnvVariables(stringifiedJson);\n        }\n    }\n\n    private resolveMergedCollection(): MergedEnvironmentVariableCollection {\n        return new MergedEnvironmentVariableCollectionImpl(this.collections);\n    }\n\n}\n\n/*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariableCollection.ts\n\nexport class MergedEnvironmentVariableCollectionImpl implements MergedEnvironmentVariableCollection {\n    readonly map: Map<string, ExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n    constructor(collections: Map<string, EnvironmentVariableCollection>) {\n        collections.forEach((collection, extensionIdentifier) => {\n            const it = collection.map.entries();\n            let next = it.next();\n            while (!next.done) {\n                const variable = next.value[0];\n                let entry = this.map.get(variable);\n                if (!entry) {\n                    entry = [];\n                    this.map.set(variable, entry);\n                }\n\n                // If the first item in the entry is replace ignore any other entries as they would\n                // just get replaced by this one.\n                if (entry.length > 0 && entry[0].type === EnvironmentVariableMutatorType.Replace) {\n                    next = it.next();\n                    continue;\n                }\n\n                // Mutators get applied in the reverse order than they are created\n                const mutator = next.value[1];\n                entry.unshift({\n                    extensionIdentifier,\n                    value: mutator.value,\n                    type: mutator.type\n                });\n\n                next = it.next();\n            }\n        });\n    }\n\n    applyToProcessEnvironment(env: { [key: string]: string | null }): void {\n        let lowerToActualVariableNames: { [lowerKey: string]: string | undefined } | undefined;\n        if (isWindows) {\n            lowerToActualVariableNames = {};\n            Object.keys(env).forEach(e => lowerToActualVariableNames![e.toLowerCase()] = e);\n        }\n        this.map.forEach((mutators, variable) => {\n            const actualVariable = isWindows ? lowerToActualVariableNames![variable.toLowerCase()] || variable : variable;\n            mutators.forEach(mutator => {\n                switch (mutator.type) {\n                    case EnvironmentVariableMutatorType.Append:\n                        env[actualVariable] = (env[actualVariable] || '') + mutator.value;\n                        break;\n                    case EnvironmentVariableMutatorType.Prepend:\n                        env[actualVariable] = mutator.value + (env[actualVariable] || '');\n                        break;\n                    case EnvironmentVariableMutatorType.Replace:\n                        env[actualVariable] = mutator.value;\n                        break;\n                }\n            });\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core/lib/common/event';\n\nexport interface BufferingStreamOptions {\n    /**\n     * Max size in bytes of the chunks being emitted.\n     */\n    maxChunkSize?: number\n    /**\n     * Amount of time in milliseconds to wait between the moment we start\n     * buffering data and when we emit the buffered chunk.\n     */\n    emitInterval?: number\n}\n\n/**\n * This component will buffer whatever is pushed to it and emit chunks back\n * every {@link BufferingStreamOptions.emitInterval}. It will also ensure that\n * the emitted chunks never exceed {@link BufferingStreamOptions.maxChunkSize}.\n */\nexport class BufferingStream<T> {\n    protected buffer?: T;\n    protected timeout?: NodeJS.Timeout;\n    protected maxChunkSize: number;\n    protected emitInterval: number;\n\n    protected onDataEmitter = new Emitter<T>();\n    protected readonly concat: (left: T, right: T) => T;\n    protected readonly slice: (what: T, start?: number, end?: number) => T;\n    protected readonly length: (what: T) => number;\n\n    constructor(options: BufferingStreamOptions = {}, concat: (left: T, right: T) => T, slice: (what: T, start?: number, end?: number) => T, length: (what: T) => number) {\n        this.emitInterval = options.emitInterval ?? 16; // ms\n        this.maxChunkSize = options.maxChunkSize ?? (256 * 1024); // bytes\n        this.concat = concat;\n        this.slice = slice;\n        this.length = length;\n    }\n\n    get onData(): Event<T> {\n        return this.onDataEmitter.event;\n    }\n\n    push(chunk: T): void {\n        if (this.buffer) {\n            this.buffer = this.concat(this.buffer, chunk);\n        } else {\n            this.buffer = chunk;\n            this.timeout = setTimeout(() => this.emitBufferedChunk(), this.emitInterval);\n        }\n    }\n\n    dispose(): void {\n        clearTimeout(this.timeout);\n        this.buffer = undefined;\n        this.onDataEmitter.dispose();\n    }\n\n    protected emitBufferedChunk(): void {\n        this.onDataEmitter.fire(this.slice(this.buffer!, 0, this.maxChunkSize));\n        if (this.length(this.buffer!) <= this.maxChunkSize) {\n            this.buffer = undefined;\n        } else {\n            this.buffer = this.slice(this.buffer!, this.maxChunkSize);\n            this.timeout = setTimeout(() => this.emitBufferedChunk(), this.emitInterval);\n        }\n    }\n}\n\nexport class StringBufferingStream extends BufferingStream<string> {\n    constructor(options: BufferingStreamOptions = {}) {\n        super(options, (left, right) => left.concat(right), (what, start, end) => what.slice(start, end), what => what.length);\n    }\n}\n\nexport class BufferBufferingStream extends BufferingStream<Buffer> {\n    constructor(options: BufferingStreamOptions = {}) {\n        super(options, (left, right) => Buffer.concat([left, right]), (what, start, end) => what.slice(start, end), what => what.length);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport * as os from 'os';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { TerminalProcess, TerminalProcessOptions, ProcessManager, MultiRingBuffer } from '@theia/process/lib/node';\nimport { isWindows, isOSX } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { EnvironmentUtils } from '@theia/core/lib/node/environment-utils';\nimport { parseArgs } from '@theia/process/lib/node/utils';\n\nexport const ShellProcessFactory = Symbol('ShellProcessFactory');\nexport type ShellProcessFactory = (options: ShellProcessOptions) => ShellProcess;\n\nexport const ShellProcessOptions = Symbol('ShellProcessOptions');\nexport interface ShellProcessOptions {\n    shell?: string,\n    args?: string[] | string,\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null },\n    strictEnv?: boolean,\n    isPseudo?: boolean,\n}\n\nfunction getRootPath(rootURI?: string): string {\n    if (rootURI) {\n        const uri = new URI(rootURI);\n        return FileUri.fsPath(uri);\n    } else {\n        return os.homedir();\n    }\n}\n\n@injectable()\nexport class ShellProcess extends TerminalProcess {\n\n    protected static defaultCols = 80;\n    protected static defaultRows = 24;\n\n    constructor( // eslint-disable-next-line @typescript-eslint/indent\n        @inject(ShellProcessOptions) options: ShellProcessOptions,\n        @inject(ProcessManager) processManager: ProcessManager,\n        @inject(MultiRingBuffer) ringBuffer: MultiRingBuffer,\n        @inject(ILogger) @named('terminal') logger: ILogger,\n        @inject(EnvironmentUtils) environmentUtils: EnvironmentUtils,\n    ) {\n        super(<TerminalProcessOptions>{\n            command: options.shell || ShellProcess.getShellExecutablePath(),\n            args: options.args || ShellProcess.getShellExecutableArgs(),\n            options: {\n                name: 'xterm-color',\n                cols: options.cols || ShellProcess.defaultCols,\n                rows: options.rows || ShellProcess.defaultRows,\n                cwd: getRootPath(options.rootURI),\n                env: options.strictEnv !== true ? environmentUtils.mergeProcessEnv(options.env) : options.env,\n            },\n            isPseudo: options.isPseudo,\n        }, processManager, ringBuffer, logger);\n    }\n\n    public static getShellExecutablePath(): string {\n        const shell = process.env.THEIA_SHELL;\n        if (shell) {\n            return shell;\n        }\n        if (isWindows) {\n            return 'cmd.exe';\n        } else {\n            return process.env.SHELL!;\n        }\n    }\n\n    public static getShellExecutableArgs(): string[] {\n        const args = process.env.THEIA_SHELL_ARGS;\n        if (args) {\n            return parseArgs(args);\n        }\n        if (isOSX) {\n            return ['-l'];\n        } else {\n            return [];\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { EnvironmentUtils } from '@theia/core/lib/node/environment-utils';\nimport { IShellTerminalServerOptions } from '../common/shell-terminal-protocol';\nimport { BaseTerminalServer } from './base-terminal-server';\nimport { ShellProcessFactory } from './shell-process';\nimport { ProcessManager } from '@theia/process/lib/node';\nimport { isWindows } from '@theia/core/lib/common/os';\nimport * as cp from 'child_process';\n\n@injectable()\nexport class ShellTerminalServer extends BaseTerminalServer {\n\n    @inject(EnvironmentUtils) protected environmentUtils: EnvironmentUtils;\n\n    constructor(\n        @inject(ShellProcessFactory) protected readonly shellFactory: ShellProcessFactory,\n        @inject(ProcessManager) processManager: ProcessManager,\n        @inject(ILogger) @named('terminal') logger: ILogger) {\n        super(processManager, logger);\n    }\n\n    async create(options: IShellTerminalServerOptions): Promise<number> {\n        try {\n            if (options.strictEnv !== true) {\n                options.env = this.environmentUtils.mergeProcessEnv(options.env);\n                this.mergedCollection.applyToProcessEnvironment(options.env);\n            }\n            const term = this.shellFactory(options);\n            this.postCreate(term);\n            return term.id;\n        } catch (error) {\n            this.logger.error('Error while creating terminal', error);\n            return -1;\n        }\n    }\n\n    // copied and modified from https://github.com/microsoft/vscode/blob/4636be2b71c87bfb0bfe3c94278b447a5efcc1f1/src/vs/workbench/contrib/debug/node/terminals.ts#L32-L75\n    private spawnAsPromised(command: string, args: string[]): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let stdout = '';\n            const child = cp.spawn(command, args);\n            if (child.pid) {\n                child.stdout.on('data', (data: Buffer) => {\n                    stdout += data.toString();\n                });\n            }\n            child.on('error', err => {\n                reject(err);\n            });\n            child.on('close', code => {\n                resolve(stdout);\n            });\n        });\n    }\n\n    public hasChildProcesses(processId: number | undefined): Promise<boolean> {\n        if (processId) {\n            // if shell has at least one child process, assume that shell is busy\n            if (isWindows) {\n                return this.spawnAsPromised('wmic', ['process', 'get', 'ParentProcessId']).then(stdout => {\n                    const pids = stdout.split('\\r\\n');\n                    return pids.some(p => parseInt(p) === processId);\n                }, error => true);\n            } else {\n                return this.spawnAsPromised('/usr/bin/pgrep', ['-lP', String(processId)]).then(stdout => {\n                    const r = stdout.trim();\n                    if (r.length === 0 || r.indexOf(' tmux') >= 0) { // ignore 'tmux';\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }, error => true);\n            }\n        }\n        // fall back to safe side\n        return Promise.resolve(true);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common';\nimport { TerminalProcess, ProcessManager } from '@theia/process/lib/node';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { MessagingService } from '@theia/core/lib/node/messaging/messaging-service';\nimport { StringBufferingStream } from './buffering-stream';\n\n@injectable()\nexport class TerminalBackendContribution implements MessagingService.Contribution {\n    protected readonly decoder = new TextDecoder('utf-8');\n\n    @inject(ProcessManager)\n    protected readonly processManager: ProcessManager;\n\n    @inject(ILogger) @named('terminal')\n    protected readonly logger: ILogger;\n\n    configure(service: MessagingService): void {\n        service.wsChannel(`${terminalsPath}/:id`, (params: { id: string }, channel) => {\n            const id = parseInt(params.id, 10);\n            const termProcess = this.processManager.get(id);\n            if (termProcess instanceof TerminalProcess) {\n                const output = termProcess.createOutputStream();\n                // Create a RPC connection to the terminal process\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                channel.onMessage(e => {\n                    termProcess.write(e().readString());\n                });\n\n                const buffer = new StringBufferingStream();\n                buffer.onData(chunk => {\n                    channel.getWriteBuffer().writeString(chunk).commit();\n                });\n                output.on('data', chunk => {\n                    buffer.push(chunk);\n                });\n                channel.onClose(() => {\n                    buffer.dispose();\n                    output.dispose();\n                });\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, Container, interfaces } from '@theia/core/shared/inversify';\nimport { TerminalBackendContribution } from './terminal-backend-contribution';\nimport { ConnectionHandler, RpcConnectionHandler } from '@theia/core/lib/common/messaging';\nimport { ShellProcess, ShellProcessFactory, ShellProcessOptions } from './shell-process';\nimport { ITerminalServer, terminalPath } from '../common/terminal-protocol';\nimport { IBaseTerminalClient, DispatchingBaseTerminalClient, IBaseTerminalServer } from '../common/base-terminal-protocol';\nimport { TerminalServer } from './terminal-server';\nimport { IShellTerminalServer, shellTerminalPath } from '../common/shell-terminal-protocol';\nimport { ShellTerminalServer } from '../node/shell-terminal-server';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { createCommonBindings } from '../common/terminal-common-module';\nimport { MessagingService } from '@theia/core/lib/node/messaging/messaging-service';\n\nexport function bindTerminalServer(bind: interfaces.Bind, { path, identifier, constructor }: {\n    path: string,\n    identifier: interfaces.ServiceIdentifier<IBaseTerminalServer>,\n    constructor: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        new(...args: any[]): IBaseTerminalServer;\n    }\n}): void {\n    const dispatchingClient = new DispatchingBaseTerminalClient();\n    bind<IBaseTerminalServer>(identifier).to(constructor).inSingletonScope().onActivation((context, terminalServer) => {\n        terminalServer.setClient(dispatchingClient);\n        dispatchingClient.push(context.container.get(TerminalWatcher).getTerminalClient());\n        terminalServer.setClient = () => {\n            throw new Error('use TerminalWatcher');\n        };\n        return terminalServer;\n    });\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler<IBaseTerminalClient>(path, client => {\n            const disposable = dispatchingClient.push(client);\n            client.onDidCloseConnection(() => disposable.dispose());\n            return ctx.container.get(identifier);\n        })\n    ).inSingletonScope();\n}\n\nexport default new ContainerModule(bind => {\n    bind(MessagingService.Contribution).to(TerminalBackendContribution).inSingletonScope();\n\n    bind(ShellProcess).toSelf().inTransientScope();\n    bind(ShellProcessFactory).toFactory(ctx =>\n        (options: ShellProcessOptions) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            child.bind(ShellProcessOptions).toConstantValue(options);\n            return child.get(ShellProcess);\n        }\n    );\n\n    bind(TerminalWatcher).toSelf().inSingletonScope();\n    bindTerminalServer(bind, {\n        path: terminalPath,\n        identifier: ITerminalServer,\n        constructor: TerminalServer\n    });\n    bindTerminalServer(bind, {\n        path: shellTerminalPath,\n        identifier: IShellTerminalServer,\n        constructor: ShellTerminalServer\n    });\n\n    createCommonBindings(bind);\n});\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport {\n    ITerminalServer,\n    ITerminalServerOptions\n} from '../common/terminal-protocol';\nimport { BaseTerminalServer } from './base-terminal-server';\nimport { TerminalProcessFactory, ProcessManager } from '@theia/process/lib/node';\n\n@injectable()\nexport class TerminalServer extends BaseTerminalServer implements ITerminalServer {\n\n    @inject(TerminalProcessFactory) protected readonly terminalFactory: TerminalProcessFactory;\n\n    constructor(\n        @inject(ProcessManager) processManager: ProcessManager,\n        @inject(ILogger) @named('terminal') logger: ILogger,\n    ) {\n        super(processManager, logger);\n    }\n\n    create(options: ITerminalServerOptions): Promise<number> {\n        return new Promise<number>((resolve, reject) => {\n            const term = this.terminalFactory(options);\n            term.onStart(_ => {\n                this.postCreate(term);\n                resolve(term.id);\n            });\n            term.onError(error => {\n                this.logger.error('Error while creating terminal', error);\n                resolve(-1);\n            });\n        });\n\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { OVSXClientProvider, OVSXUrlResolver } from './ovsx-client-provider';\nexport { VSXEnvironment } from './vsx-environment';\nexport { VSXExtensionUri } from './vsx-extension-uri';\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MaybePromise } from '@theia/core/lib/common';\nimport { RequestService } from '@theia/core/shared/@theia/request';\nimport type { interfaces } from '@theia/core/shared/inversify';\nimport { OVSXClient, OVSXHttpClient } from '@theia/ovsx-client';\nimport { VSXEnvironment } from './vsx-environment';\n\nexport const OVSXUrlResolver = Symbol('OVSXUrlResolver') as symbol & interfaces.Abstract<OVSXUrlResolver>;\nexport type OVSXUrlResolver = (value: string) => MaybePromise<string>;\n\nexport const OVSXClientProvider = Symbol('OVSXClientProvider') as symbol & interfaces.Abstract<OVSXClientProvider>;\nexport type OVSXClientProvider = () => MaybePromise<OVSXClient>;\n\n/**\n * @deprecated since 1.32.0\n */\nexport async function createOVSXClient(vsxEnvironment: VSXEnvironment, requestService: RequestService): Promise<OVSXClient> {\n    const apiUrl = await vsxEnvironment.getRegistryApiUri();\n    return new OVSXHttpClient(apiUrl, requestService);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type { OVSXRouterConfig } from '@theia/ovsx-client';\n\nexport const VSX_ENVIRONMENT_PATH = '/services/vsx-environment';\n\nexport const VSXEnvironment = Symbol('VSXEnvironment');\nexport interface VSXEnvironment {\n    getRegistryUri(): Promise<string>;\n    getRegistryApiUri(): Promise<string>;\n    getVscodeApiVersion(): Promise<string>;\n    getOvsxRouterConfig?(): Promise<OVSXRouterConfig | undefined>;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { VSCodeExtensionUri as VSXExtensionUri } from '@theia/plugin-ext-vscode/lib/common/plugin-vscode-uri';\n/** @deprecated since 1.25.0. Import `VSCodeExtensionUri from `plugin-ext-vscode` package instead. */\nexport { VSXExtensionUri };\n\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { OVSXClientProvider, OVSXUrlResolver } from '../common';\nimport { RequestService } from '@theia/core/shared/@theia/request';\nimport { ExtensionIdMatchesFilterFactory, OVSXApiFilter, OVSXApiFilterImpl, OVSXClient, OVSXHttpClient, OVSXRouterClient, RequestContainsFilterFactory } from '@theia/ovsx-client';\nimport { VSXEnvironment } from './vsx-environment';\n\nexport default new ContainerModule(bind => {\n    bind(OVSXUrlResolver)\n        .toFunction(url => url);\n    bind(OVSXClientProvider)\n        .toDynamicValue(ctx => {\n            const vsxEnvironment = ctx.container.get<VSXEnvironment>(VSXEnvironment);\n            const requestService = ctx.container.get<RequestService>(RequestService);\n            const urlResolver = ctx.container.get(OVSXUrlResolver);\n            const clientPromise = Promise\n                .all([\n                    vsxEnvironment.getRegistryApiUri(),\n                    vsxEnvironment.getOvsxRouterConfig?.(),\n                ])\n                .then<OVSXClient>(async ([apiUrl, ovsxRouterConfig]) => {\n                    if (ovsxRouterConfig) {\n                        const clientFactory = OVSXHttpClient.createClientFactory(requestService);\n                        return OVSXRouterClient.FromConfig(\n                            ovsxRouterConfig,\n                            async url => clientFactory(await urlResolver(url)),\n                            [RequestContainsFilterFactory, ExtensionIdMatchesFilterFactory]\n                        );\n                    }\n                    return new OVSXHttpClient(\n                        await urlResolver(apiUrl),\n                        requestService\n                    );\n                });\n            // reuse the promise for subsequent calls to this provider\n            return () => clientPromise;\n        })\n        .inSingletonScope();\n    bind(OVSXApiFilter)\n        .toDynamicValue(ctx => {\n            const vsxEnvironment = ctx.container.get<VSXEnvironment>(VSXEnvironment);\n            const apiFilter = new OVSXApiFilterImpl('-- temporary invalid version value --');\n            vsxEnvironment.getVscodeApiVersion()\n                .then(apiVersion => apiFilter.supportedApiVersion = apiVersion);\n            return apiFilter;\n        })\n        .inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CliContribution } from '@theia/core/lib/node';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Argv } from '@theia/core/shared/yargs';\nimport { OVSXRouterConfig } from '@theia/ovsx-client';\nimport * as fs from 'fs';\n\n@injectable()\nexport class VsxCli implements CliContribution {\n\n    ovsxRouterConfig: OVSXRouterConfig | undefined;\n\n    configure(conf: Argv<{}>): void {\n        conf.option('ovsx-router-config', { description: 'JSON configuration file for the OVSX router client', type: 'string' });\n    }\n\n    async setArguments(args: Record<string, unknown>): Promise<void> {\n        const { 'ovsx-router-config': ovsxRouterConfig } = args;\n        if (typeof ovsxRouterConfig === 'string') {\n            this.ovsxRouterConfig = JSON.parse(await fs.promises.readFile(ovsxRouterConfig, 'utf8'));\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { OVSXRouterConfig } from '@theia/ovsx-client';\nimport { PluginVsCodeCliContribution } from '@theia/plugin-ext-vscode/lib/node/plugin-vscode-cli-contribution';\nimport { VSXEnvironment } from '../common/vsx-environment';\nimport { VsxCli } from './vsx-cli';\n\n@injectable()\nexport class VSXEnvironmentImpl implements VSXEnvironment {\n\n    protected _registryUri = new URI(process.env['VSX_REGISTRY_URL']?.trim() || 'https://open-vsx.org');\n\n    @inject(PluginVsCodeCliContribution)\n    protected readonly pluginVscodeCli: PluginVsCodeCliContribution;\n\n    @inject(VsxCli)\n    protected vsxCli: VsxCli;\n\n    async getRegistryUri(): Promise<string> {\n        return this._registryUri.toString(true);\n    }\n\n    async getRegistryApiUri(): Promise<string> {\n        return this._registryUri.resolve('api').toString(true);\n    }\n\n    async getVscodeApiVersion(): Promise<string> {\n        return this.pluginVscodeCli.vsCodeApiVersionPromise;\n    }\n\n    async getOvsxRouterConfig(): Promise<OVSXRouterConfig | undefined> {\n        return this.vsxCli.ovsxRouterConfig;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as semver from 'semver';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PluginDeployerHandler, PluginDeployerResolver, PluginDeployerResolverContext, PluginDeployOptions, PluginIdentifiers } from '@theia/plugin-ext/lib/common/plugin-protocol';\nimport { VSCodeExtensionUri } from '@theia/plugin-ext-vscode/lib/common/plugin-vscode-uri';\nimport { OVSXClientProvider } from '../common/ovsx-client-provider';\nimport { OVSXApiFilter, VSXExtensionRaw } from '@theia/ovsx-client';\nimport { RequestService } from '@theia/core/shared/@theia/request';\nimport { PluginVSCodeEnvironment } from '@theia/plugin-ext-vscode/lib/common/plugin-vscode-environment';\nimport { PluginUninstallationManager } from '@theia/plugin-ext/lib/main/node/plugin-uninstallation-manager';\n\n@injectable()\nexport class VSXExtensionResolver implements PluginDeployerResolver {\n\n    @inject(OVSXClientProvider) protected clientProvider: OVSXClientProvider;\n    @inject(PluginDeployerHandler) protected pluginDeployerHandler: PluginDeployerHandler;\n    @inject(RequestService) protected requestService: RequestService;\n    @inject(PluginVSCodeEnvironment) protected readonly environment: PluginVSCodeEnvironment;\n    @inject(PluginUninstallationManager) protected readonly uninstallationManager: PluginUninstallationManager;\n    @inject(OVSXApiFilter) protected vsxApiFilter: OVSXApiFilter;\n\n    accept(pluginId: string): boolean {\n        return !!VSCodeExtensionUri.toId(new URI(pluginId));\n    }\n\n    async resolve(context: PluginDeployerResolverContext, options?: PluginDeployOptions): Promise<void> {\n        const id = VSCodeExtensionUri.toId(new URI(context.getOriginId()));\n        if (!id) {\n            return;\n        }\n        let extension: VSXExtensionRaw | undefined;\n        const client = await this.clientProvider();\n        if (options) {\n            console.log(`[${id}]: trying to resolve version ${options.version}...`);\n            const { extensions } = await client.query({ extensionId: id, extensionVersion: options.version, includeAllVersions: true });\n            extension = extensions[0];\n        } else {\n            console.log(`[${id}]: trying to resolve latest version...`);\n            const { extensions } = await client.query({ extensionId: id, includeAllVersions: true });\n            extension = this.vsxApiFilter.getLatestCompatibleExtension(extensions);\n        }\n        if (!extension) {\n            return;\n        }\n        if (extension.error) {\n            throw new Error(extension.error);\n        }\n        const resolvedId = id + '-' + extension.version;\n        const downloadUrl = extension.files.download;\n        console.log(`[${id}]: resolved to '${resolvedId}'`);\n\n        if (!options?.ignoreOtherVersions) {\n            const existingVersion = this.hasSameOrNewerVersion(id, extension);\n            if (existingVersion) {\n                console.log(`[${id}]: is already installed with the same or newer version '${existingVersion}'`);\n                return;\n            }\n        }\n        const downloadPath = (await this.environment.getExtensionsDirUri()).path.fsPath();\n        await fs.ensureDir(downloadPath);\n        const extensionPath = path.resolve(downloadPath, path.basename(downloadUrl));\n        console.log(`[${resolvedId}]: trying to download from \"${downloadUrl}\"...`, 'to path', downloadPath);\n        if (!await this.download(downloadUrl, extensionPath)) {\n            console.log(`[${resolvedId}]: not found`);\n            return;\n        }\n        console.log(`[${resolvedId}]: downloaded to ${extensionPath}\"`);\n        context.addPlugin(resolvedId, extensionPath);\n    }\n\n    protected hasSameOrNewerVersion(id: string, extension: VSXExtensionRaw): string | undefined {\n        const existingPlugins = this.pluginDeployerHandler.getDeployedPluginsById(id)\n            .filter(plugin => !this.uninstallationManager.isUninstalled(PluginIdentifiers.componentsToVersionedId(plugin.metadata.model)));\n        const sufficientVersion = existingPlugins.find(existingPlugin => {\n            const existingVersion = semver.clean(existingPlugin.metadata.model.version);\n            const desiredVersion = semver.clean(extension.version);\n            if (desiredVersion && existingVersion && semver.gte(existingVersion, desiredVersion)) {\n                return existingVersion;\n            }\n        });\n        return sufficientVersion?.metadata.model.version;\n    }\n\n    protected async download(downloadUrl: string, downloadPath: string): Promise<boolean> {\n        if (await fs.pathExists(downloadPath)) { return true; }\n        const context = await this.requestService.request({ url: downloadUrl });\n        if (context.res.statusCode === 404) {\n            return false;\n        } else if (context.res.statusCode !== 200) {\n            throw new Error('Request returned status code: ' + context.res.statusCode);\n        } else {\n            await fs.writeFile(downloadPath, context.buffer);\n            return true;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ConnectionHandler, JsonRpcConnectionHandler } from '@theia/core';\nimport { CliContribution } from '@theia/core/lib/node';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { PluginDeployerResolver } from '@theia/plugin-ext/lib/common/plugin-protocol';\nimport { VSXEnvironment, VSX_ENVIRONMENT_PATH } from '../common/vsx-environment';\nimport { VsxCli } from './vsx-cli';\nimport { VSXEnvironmentImpl } from './vsx-environment-impl';\nimport { VSXExtensionResolver } from './vsx-extension-resolver';\n\nexport default new ContainerModule(bind => {\n    bind(VSXEnvironment).to(VSXEnvironmentImpl).inSingletonScope();\n    bind(VsxCli).toSelf().inSingletonScope();\n    bind(CliContribution).toService(VsxCli);\n    bind(ConnectionHandler)\n        .toDynamicValue(ctx => new JsonRpcConnectionHandler(VSX_ENVIRONMENT_PATH, () => ctx.container.get(VSXEnvironment)))\n        .inSingletonScope();\n    bind(VSXExtensionResolver).toSelf().inSingletonScope();\n    bind(PluginDeployerResolver).toService(VSXExtensionResolver);\n});\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-protocol';\nexport * from './workspace-file-service';\nexport * from './untitled-workspace-service';\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { MaybePromise } from '@theia/core';\nimport { WorkspaceFileService } from './workspace-file-service';\n\n@injectable()\nexport class UntitledWorkspaceService {\n\n    @inject(WorkspaceFileService)\n    protected readonly workspaceFileService: WorkspaceFileService;\n\n    isUntitledWorkspace(candidate?: URI): boolean {\n        return !!candidate && this.workspaceFileService.isWorkspaceFile(candidate) && candidate.path.base.startsWith('Untitled');\n    }\n\n    async getUntitledWorkspaceUri(configDirUri: URI, isAcceptable: (candidate: URI) => MaybePromise<boolean>, warnOnHits?: () => unknown): Promise<URI> {\n        const parentDir = configDirUri.resolve('workspaces');\n        const workspaceExtensions = this.workspaceFileService.getWorkspaceFileExtensions();\n        const defaultFileExtension = workspaceExtensions[this.workspaceFileService.defaultFileTypeIndex];\n        let uri;\n        let attempts = 0;\n        do {\n            attempts++;\n            uri = parentDir.resolve(`Untitled-${Math.round(Math.random() * 1000)}.${defaultFileExtension}`);\n            if (attempts === 10) {\n                warnOnHits?.();\n            }\n            if (attempts === 50) {\n                throw new Error('Workspace Service: too many attempts to find unused filename.');\n            }\n        } while (!(await isAcceptable(uri)));\n        return uri;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\nexport interface WorkspaceFileType {\n    extension: string\n    name: string\n}\n\n/**\n * @deprecated Since 1.39.0. Use `WorkspaceFileService#getWorkspaceFileTypes` instead.\n */\nexport const THEIA_EXT = 'theia-workspace';\n/**\n * @deprecated Since 1.39.0. Use `WorkspaceFileService#getWorkspaceFileTypes` instead.\n */\nexport const VSCODE_EXT = 'code-workspace';\n\n@injectable()\nexport class WorkspaceFileService {\n\n    protected _defaultFileTypeIndex = 0;\n\n    get defaultFileTypeIndex(): number {\n        return this._defaultFileTypeIndex;\n    }\n\n    /**\n     * Check if the file should be considered as a workspace file.\n     *\n     * Example: We should not try to read the contents of an .exe file.\n     */\n    isWorkspaceFile(candidate: FileStat | URI): boolean {\n        const uri = FileStat.is(candidate) ? candidate.resource : candidate;\n        const extensions = this.getWorkspaceFileExtensions(true);\n        return extensions.includes(uri.path.ext);\n    }\n\n    getWorkspaceFileTypes(): WorkspaceFileType[] {\n        return [\n            {\n                name: 'Theia',\n                extension: THEIA_EXT\n            },\n            {\n                name: 'Visual Studio Code',\n                extension: VSCODE_EXT\n            }\n        ];\n    }\n\n    getWorkspaceFileExtensions(dot?: boolean): string[] {\n        return this.getWorkspaceFileTypes().map(type => dot ? `.${type.extension}` : type.extension);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const workspacePath = '/services/workspace';\n\n/**\n * The JSON-RPC workspace interface.\n */\nexport const WorkspaceServer = Symbol('WorkspaceServer');\nexport interface WorkspaceServer {\n\n    /**\n     * Returns with a promise that resolves to the most recently used workspace folder URI as a string.\n     * Resolves to `undefined` if the workspace folder is not yet set.\n     */\n    getMostRecentlyUsedWorkspace(): Promise<string | undefined>;\n\n    /**\n     * Sets the desired string representation of the URI as the most recently used workspace folder.\n     */\n    setMostRecentlyUsedWorkspace(uri: string): Promise<void>;\n\n    /**\n     * Removes a workspace from the list of recently opened workspaces.\n     *\n     * @param uri the workspace uri.\n     */\n    removeRecentWorkspace(uri: string): Promise<void>;\n\n    /**\n     * Returns list of recently opened workspaces as an array.\n     */\n    getRecentWorkspaces(): Promise<string[]>\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as yargs from '@theia/core/shared/yargs';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport * as jsoncparser from 'jsonc-parser';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { FileUri, BackendApplicationContribution } from '@theia/core/lib/node';\nimport { CliContribution } from '@theia/core/lib/node/cli';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { WorkspaceServer, UntitledWorkspaceService } from '../common';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport URI from '@theia/core/lib/common/uri';\nimport { notEmpty } from '@theia/core';\n\n@injectable()\nexport class WorkspaceCliContribution implements CliContribution {\n\n    @inject(EnvVariablesServer) protected readonly envVariablesServer: EnvVariablesServer;\n    @inject(UntitledWorkspaceService) protected readonly untitledWorkspaceService: UntitledWorkspaceService;\n\n    workspaceRoot = new Deferred<string | undefined>();\n\n    configure(conf: yargs.Argv): void {\n        conf.usage('$0 [workspace-directories] [options]');\n        conf.option('root-dir', {\n            description: 'DEPRECATED: Sets the workspace directory.',\n        });\n    }\n\n    async setArguments(args: yargs.Arguments): Promise<void> {\n        const workspaceArguments = args._.slice(2).map(probablyAlreadyString => String(probablyAlreadyString));\n        if (workspaceArguments.length === 0 && args['root-dir']) {\n            workspaceArguments.push(String(args['root-dir']));\n        }\n        if (workspaceArguments.length === 0) {\n            this.workspaceRoot.resolve(undefined);\n        } else if (workspaceArguments.length === 1) {\n            this.workspaceRoot.resolve(this.normalizeWorkspaceArg(workspaceArguments[0]));\n        } else {\n            this.workspaceRoot.resolve(this.buildWorkspaceForMultipleArguments(workspaceArguments));\n        }\n    }\n\n    protected normalizeWorkspaceArg(raw: string): string {\n        return path.resolve(raw).replace(/\\/$/, '');\n    }\n\n    protected async buildWorkspaceForMultipleArguments(workspaceArguments: string[]): Promise<string | undefined> {\n        try {\n            const dirs = await Promise.all(workspaceArguments.map(async maybeDir => (await fs.stat(maybeDir).catch(() => undefined))?.isDirectory()));\n            const folders = workspaceArguments.filter((_, index) => dirs[index]).map(dir => ({ path: this.normalizeWorkspaceArg(dir) }));\n            if (folders.length < 2) {\n                return folders[0]?.path;\n            }\n            const untitledWorkspaceUri = await this.untitledWorkspaceService.getUntitledWorkspaceUri(\n                new URI(await this.envVariablesServer.getConfigDirUri()),\n                async uri => !await fs.pathExists(uri.path.fsPath()),\n            );\n            const untitledWorkspacePath = untitledWorkspaceUri.path.fsPath();\n\n            await fs.ensureDir(path.dirname(untitledWorkspacePath));\n            await fs.writeFile(untitledWorkspacePath, JSON.stringify({ folders }, undefined, 4));\n            return untitledWorkspacePath;\n        } catch {\n            return undefined;\n        }\n    }\n}\n\n@injectable()\nexport class DefaultWorkspaceServer implements WorkspaceServer, BackendApplicationContribution {\n\n    protected root: Deferred<string | undefined> = new Deferred();\n    /**\n     * Untitled workspaces that are not among the most recent N workspaces will be deleted on start. Increase this number to keep older files,\n     * lower it to delete stale untitled workspaces more aggressively.\n     */\n    protected untitledWorkspaceStaleThreshold = 10;\n\n    @inject(WorkspaceCliContribution)\n    protected readonly cliParams: WorkspaceCliContribution;\n\n    @inject(EnvVariablesServer)\n    protected readonly envServer: EnvVariablesServer;\n\n    @inject(UntitledWorkspaceService)\n    protected readonly untitledWorkspaceService: UntitledWorkspaceService;\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        const root = await this.getRoot();\n        this.root.resolve(root);\n    }\n\n    async onStart(): Promise<void> {\n        await this.removeOldUntitledWorkspaces();\n    }\n\n    protected async getRoot(): Promise<string | undefined> {\n        let root = await this.getWorkspaceURIFromCli();\n        if (!root) {\n            const data = await this.readRecentWorkspacePathsFromUserHome();\n            if (data && data.recentRoots) {\n                root = data.recentRoots[0];\n            }\n        }\n        return root;\n    }\n\n    getMostRecentlyUsedWorkspace(): Promise<string | undefined> {\n        return this.root.promise;\n    }\n\n    async setMostRecentlyUsedWorkspace(rawUri: string): Promise<void> {\n        const uri = rawUri && new URI(rawUri).toString(); // the empty string is used as a signal from the frontend not to load a workspace.\n        this.root = new Deferred();\n        this.root.resolve(uri);\n        const recentRoots = Array.from(new Set([uri, ...await this.getRecentWorkspaces()]));\n        this.writeToUserHome({ recentRoots });\n    }\n\n    async removeRecentWorkspace(rawUri: string): Promise<void> {\n        const uri = rawUri && new URI(rawUri).toString(); // the empty string is used as a signal from the frontend not to load a workspace.\n        const recentRoots = await this.getRecentWorkspaces();\n        const index = recentRoots.indexOf(uri);\n        if (index !== -1) {\n            recentRoots.splice(index, 1);\n            this.writeToUserHome({\n                recentRoots\n            });\n        }\n    }\n\n    async getRecentWorkspaces(): Promise<string[]> {\n        const data = await this.readRecentWorkspacePathsFromUserHome();\n        if (data && data.recentRoots) {\n            const allRootUris = await Promise.all(data.recentRoots.map(async element =>\n                element && await this.workspaceStillExist(element) ? element : undefined));\n            return allRootUris.filter(notEmpty);\n        }\n        return [];\n    }\n\n    protected async workspaceStillExist(workspaceRootUri: string): Promise<boolean> {\n        return fs.pathExists(FileUri.fsPath(workspaceRootUri));\n    }\n\n    protected async getWorkspaceURIFromCli(): Promise<string | undefined> {\n        const arg = await this.cliParams.workspaceRoot.promise;\n        return arg !== undefined ? FileUri.create(arg).toString() : undefined;\n    }\n\n    /**\n     * Writes the given uri as the most recently used workspace root to the user's home directory.\n     * @param uri most recently used uri\n     */\n    protected async writeToUserHome(data: RecentWorkspacePathsData): Promise<void> {\n        const file = await this.getUserStoragePath();\n        await this.writeToFile(file, data);\n    }\n\n    protected async writeToFile(fsPath: string, data: object): Promise<void> {\n        if (!await fs.pathExists(fsPath)) {\n            await fs.mkdirs(path.resolve(fsPath, '..'));\n        }\n        await fs.writeJson(fsPath, data);\n    }\n\n    /**\n     * Reads the most recently used workspace root from the user's home directory.\n     */\n    protected async readRecentWorkspacePathsFromUserHome(): Promise<RecentWorkspacePathsData | undefined> {\n        const fsPath = await this.getUserStoragePath();\n        const data = await this.readJsonFromFile(fsPath);\n        return RecentWorkspacePathsData.create(data);\n    }\n\n    protected async readJsonFromFile(fsPath: string): Promise<object | undefined> {\n        if (await fs.pathExists(fsPath)) {\n            const rawContent = await fs.readFile(fsPath, 'utf-8');\n            const strippedContent = jsoncparser.stripComments(rawContent);\n            return jsoncparser.parse(strippedContent);\n        }\n    }\n\n    protected async getUserStoragePath(): Promise<string> {\n        const configDirUri = await this.envServer.getConfigDirUri();\n        return path.resolve(FileUri.fsPath(configDirUri), 'recentworkspace.json');\n    }\n\n    /**\n     * Removes untitled workspaces that are not among the most recently used workspaces.\n     * Use the `untitledWorkspaceStaleThreshold` to configure when to delete workspaces.\n     */\n    protected async removeOldUntitledWorkspaces(): Promise<void> {\n        const recents = (await this.getRecentWorkspaces()).map(FileUri.fsPath);\n        const olderUntitledWorkspaces = recents\n            .slice(this.untitledWorkspaceStaleThreshold)\n            .filter(workspace => this.untitledWorkspaceService.isUntitledWorkspace(FileUri.create(workspace)));\n        await Promise.all(olderUntitledWorkspaces.map(workspace => fs.promises.unlink(FileUri.fsPath(workspace)).catch(() => { })));\n        if (olderUntitledWorkspaces.length > 0) {\n            await this.writeToUserHome({ recentRoots: await this.getRecentWorkspaces() });\n        }\n    }\n}\n\nexport interface RecentWorkspacePathsData {\n    recentRoots: string[];\n}\n\nexport namespace RecentWorkspacePathsData {\n    /**\n     * Parses `data` as `RecentWorkspacePathsData` but removes any non-string array entry.\n     *\n     * Returns undefined if the given `data` does not contain a `recentRoots` array property.\n     */\n    export function create(data: unknown): RecentWorkspacePathsData | undefined {\n        if (typeof data !== 'object' || !data || !Array.isArray((data as RecentWorkspacePathsData).recentRoots)) {\n            return;\n        }\n        return {\n            recentRoots: (data as RecentWorkspacePathsData).recentRoots.filter(root => typeof root === 'string')\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ConnectionHandler, RpcConnectionHandler } from '@theia/core/lib/common';\nimport { WorkspaceServer, workspacePath, UntitledWorkspaceService, WorkspaceFileService } from '../common';\nimport { DefaultWorkspaceServer, WorkspaceCliContribution } from './default-workspace-server';\nimport { CliContribution } from '@theia/core/lib/node/cli';\nimport { BackendApplicationContribution } from '@theia/core/lib/node';\n\nexport default new ContainerModule(bind => {\n    bind(WorkspaceCliContribution).toSelf().inSingletonScope();\n    bind(CliContribution).toService(WorkspaceCliContribution);\n    bind(DefaultWorkspaceServer).toSelf().inSingletonScope();\n    bind(WorkspaceServer).toService(DefaultWorkspaceServer);\n    bind(BackendApplicationContribution).toService(WorkspaceServer);\n    bind(UntitledWorkspaceService).toSelf().inSingletonScope();\n    bind(WorkspaceFileService).toSelf().inSingletonScope();\n\n    bind(ConnectionHandler).toDynamicValue(ctx =>\n        new RpcConnectionHandler(workspacePath, () =>\n            ctx.container.get(WorkspaceServer)\n        )\n    ).inSingletonScope();\n});\n","module.exports = require(\"assert\");","module.exports = require(\"async_hooks\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"cluster\");","module.exports = require(\"constants\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"module\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"pnpapi\");","module.exports = require(\"process\");","module.exports = require(\"punycode\");","module.exports = require(\"querystring\");","module.exports = require(\"readline\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"timers\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"v8\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_fuzzy_lib_fuzzy_js-node_modules_inversify_es_inversify_js-node_modules_i-374ef0\",\"vendors-node_modules_phosphor_coreutils_lib_index_js-packages_core_node_modules_iconv-lite_li-d06203\",\"vendors-node_modules_yargs_index_js\",\"vendors-node_modules_fs-extra_lib_index_js\",\"vendors-node_modules_reflect-metadata_Reflect_js\",\"vendors-node_modules_deepmerge_dist_cjs_js-node_modules_express_index_js-node_modules_http-pr-e1c984\",\"vendors-node_modules_nsfw_js_src_index_js-packages_filesystem_node_modules_minimatch_minimatch_js\",\"vendors-node_modules_drivelist_build_Release_drivelist_node-node_modules_stroncium_procfs_lib-cf49d8\",\"packages_core_lib_common_index_js\",\"packages_plugin-ext_lib_common_plugin-api-rpc_js\",\"packages_core_lib_node_messaging_ipc-channel_js-packages_core_lib_node_messaging_ipc-protocol_js\",\"dev-packages_application-package_lib_api_js-packages_plugin-ext_lib_common_index_js\",\"node_modules_express_lib_sync_recursive-node_modules_require-main-filename_sync_recursive-pac-c83c5f\",\"packages_filesystem_lib_node_nsfw-watcher_nsfw-filesystem-service_js\"], () => (__webpack_require__(\"./src-gen/backend/main.js\")))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t\"main\": 1\n};\n\n__webpack_require__.O.require = (chunkId) => (installedChunks[chunkId]);\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\t__webpack_require__.O();\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t__webpack_require__.e(\"vendors-node_modules_fuzzy_lib_fuzzy_js-node_modules_inversify_es_inversify_js-node_modules_i-374ef0\");\n\t__webpack_require__.e(\"vendors-node_modules_phosphor_coreutils_lib_index_js-packages_core_node_modules_iconv-lite_li-d06203\");\n\t__webpack_require__.e(\"vendors-node_modules_yargs_index_js\");\n\t__webpack_require__.e(\"vendors-node_modules_fs-extra_lib_index_js\");\n\t__webpack_require__.e(\"vendors-node_modules_reflect-metadata_Reflect_js\");\n\t__webpack_require__.e(\"vendors-node_modules_deepmerge_dist_cjs_js-node_modules_express_index_js-node_modules_http-pr-e1c984\");\n\t__webpack_require__.e(\"vendors-node_modules_nsfw_js_src_index_js-packages_filesystem_node_modules_minimatch_minimatch_js\");\n\t__webpack_require__.e(\"vendors-node_modules_drivelist_build_Release_drivelist_node-node_modules_stroncium_procfs_lib-cf49d8\");\n\t__webpack_require__.e(\"packages_core_lib_common_index_js\");\n\t__webpack_require__.e(\"packages_plugin-ext_lib_common_plugin-api-rpc_js\");\n\t__webpack_require__.e(\"packages_core_lib_node_messaging_ipc-channel_js-packages_core_lib_node_messaging_ipc-protocol_js\");\n\t__webpack_require__.e(\"dev-packages_application-package_lib_api_js-packages_plugin-ext_lib_common_index_js\");\n\t__webpack_require__.e(\"node_modules_express_lib_sync_recursive-node_modules_require-main-filename_sync_recursive-pac-c83c5f\");\n\t__webpack_require__.e(\"packages_filesystem_lib_node_nsfw-watcher_nsfw-filesystem-service_js\");\n\treturn next();\n};","","// module cache are used so entry inlining is disabled\n// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":[],"sourceRoot":""}