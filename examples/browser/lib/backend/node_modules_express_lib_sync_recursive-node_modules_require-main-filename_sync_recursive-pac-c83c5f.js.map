{"version":3,"file":"node_modules_express_lib_sync_recursive-node_modules_require-main-filename_sync_recursive-pac-c83c5f.js","mappings":"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","sources":["webpack:////Users/chadgauthier/cloud-ai-UI/node_modules/express/lib|sync?","webpack:////Users/chadgauthier/cloud-ai-UI/node_modules/require-main-filename|sync?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/application-package.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/application-props.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/extension-package-collector.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/extension-package.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/index.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/json-file.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/application-package/src/npm-registry.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/request/src/common-request-service.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/request/src/index.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/request/src/node-request-service.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/dev-packages/request/src/proxy.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/common/severity.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/backend-application.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/cli.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/debug.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/file-uri.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/filesystem-locking.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/index.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/messaging/index.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/messaging/ipc-connection-provider.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/messaging/messaging-service.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/src/node/process-utils.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/shared/fs-extra/index.js?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/core/shared/vscode-languageserver-protocol/index.js?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/debug/src/common/debug-adapter-session.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/debug/src/node/stream-debug-adapter.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/plugin-ext/src/common/arrays.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/plugin-ext/src/hosted/node/hosted-plugin-protocol.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/plugin-ext/src/hosted/node/plugin-activation-events.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/packages/plugin-ext/src/hosted/node/plugin-manifest-loader.ts?","webpack:////Users/chadgauthier/cloud-ai-UI/node_modules/yargs/build/lib|sync?","webpack:////Users/chadgauthier/cloud-ai-UI/node_modules/yargs/node_modules/yargs-parser|sync?","webpack:////Users/chadgauthier/cloud-ai-UI/node_modules/yargs|sync?"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/express/lib sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/require-main-filename sync recursive\";\nmodule.exports = webpackEmptyContext;","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as paths from 'path';\nimport { readJsonFile, writeJsonFile } from './json-file';\nimport { NpmRegistry, NodePackage, PublishedNodePackage, sortByKey } from './npm-registry';\nimport { Extension, ExtensionPackage, ExtensionPackageOptions, RawExtensionPackage } from './extension-package';\nimport { ExtensionPackageCollector } from './extension-package-collector';\nimport { ApplicationProps } from './application-props';\nimport deepmerge = require('deepmerge');\nimport resolvePackagePath = require('resolve-package-path');\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ApplicationLog = (message?: any, ...optionalParams: any[]) => void;\nexport class ApplicationPackageOptions {\n    readonly projectPath: string;\n    readonly log?: ApplicationLog;\n    readonly error?: ApplicationLog;\n    readonly registry?: NpmRegistry;\n    readonly appTarget?: ApplicationProps.Target;\n}\n\nexport type ApplicationModuleResolver = (modulePath: string) => string;\n\nexport class ApplicationPackage {\n    readonly projectPath: string;\n    readonly log: ApplicationLog;\n    readonly error: ApplicationLog;\n\n    constructor(\n        protected readonly options: ApplicationPackageOptions\n    ) {\n        this.projectPath = options.projectPath;\n        this.log = options.log || console.log.bind(console);\n        this.error = options.error || console.error.bind(console);\n    }\n\n    protected _registry: NpmRegistry | undefined;\n    get registry(): NpmRegistry {\n        if (this._registry) {\n            return this._registry;\n        }\n        this._registry = this.options.registry || new NpmRegistry();\n        this._registry.updateProps(this.props);\n        return this._registry;\n    }\n\n    get target(): ApplicationProps.Target {\n        return this.props.target;\n    }\n\n    protected _props: ApplicationProps | undefined;\n    get props(): ApplicationProps {\n        if (this._props) {\n            return this._props;\n        }\n        const theia = this.pck.theia || {};\n\n        if (this.options.appTarget) {\n            theia.target = this.options.appTarget;\n        }\n\n        if (theia.target && !(theia.target in ApplicationProps.ApplicationTarget)) {\n            const defaultTarget = ApplicationProps.ApplicationTarget.browser;\n            console.warn(`Unknown application target '${theia.target}', '${defaultTarget}' to be used instead`);\n            theia.target = defaultTarget;\n        }\n\n        return this._props = deepmerge(ApplicationProps.DEFAULT, theia);\n    }\n\n    protected _pck: NodePackage | undefined;\n    get pck(): NodePackage {\n        if (this._pck) {\n            return this._pck;\n        }\n        return this._pck = readJsonFile(this.packagePath);\n    }\n\n    protected _frontendModules: Map<string, string> | undefined;\n    protected _frontendPreloadModules: Map<string, string> | undefined;\n    protected _frontendElectronModules: Map<string, string> | undefined;\n    protected _secondaryWindowModules: Map<string, string> | undefined;\n    protected _backendModules: Map<string, string> | undefined;\n    protected _backendElectronModules: Map<string, string> | undefined;\n    protected _electronMainModules: Map<string, string> | undefined;\n    protected _preloadModules: Map<string, string> | undefined;\n    protected _extensionPackages: ReadonlyArray<ExtensionPackage> | undefined;\n\n    /**\n     * Extension packages in the topological order.\n     */\n    get extensionPackages(): ReadonlyArray<ExtensionPackage> {\n        if (!this._extensionPackages) {\n            const collector = new ExtensionPackageCollector(\n                (raw: PublishedNodePackage, options: ExtensionPackageOptions = {}) => this.newExtensionPackage(raw, options),\n                this.resolveModule\n            );\n            this._extensionPackages = collector.collect(this.pck);\n        }\n        return this._extensionPackages;\n    }\n\n    getExtensionPackage(extension: string): ExtensionPackage | undefined {\n        return this.extensionPackages.find(pck => pck.name === extension);\n    }\n\n    async findExtensionPackage(extension: string): Promise<ExtensionPackage | undefined> {\n        return this.getExtensionPackage(extension) || this.resolveExtensionPackage(extension);\n    }\n\n    /**\n     * Resolve an extension name to its associated package\n     * @param extension the name of the extension's package as defined in \"dependencies\" (might be aliased)\n     * @returns the extension package\n     */\n    async resolveExtensionPackage(extension: string): Promise<ExtensionPackage | undefined> {\n        const raw = await RawExtensionPackage.view(this.registry, extension);\n        return raw ? this.newExtensionPackage(raw, { alias: extension }) : undefined;\n    }\n\n    protected newExtensionPackage(raw: PublishedNodePackage, options: ExtensionPackageOptions = {}): ExtensionPackage {\n        return new ExtensionPackage(raw, this.registry, options);\n    }\n\n    get frontendPreloadModules(): Map<string, string> {\n        return this._frontendPreloadModules ??= this.computeModules('frontendPreload');\n    }\n\n    get frontendModules(): Map<string, string> {\n        return this._frontendModules ??= this.computeModules('frontend');\n    }\n\n    get frontendElectronModules(): Map<string, string> {\n        return this._frontendElectronModules ??= this.computeModules('frontendElectron', 'frontend');\n    }\n\n    get secondaryWindowModules(): Map<string, string> {\n        return this._secondaryWindowModules ??= this.computeModules('secondaryWindow');\n    }\n\n    get backendModules(): Map<string, string> {\n        return this._backendModules ??= this.computeModules('backend');\n    }\n\n    get backendElectronModules(): Map<string, string> {\n        return this._backendElectronModules ??= this.computeModules('backendElectron', 'backend');\n    }\n\n    get electronMainModules(): Map<string, string> {\n        return this._electronMainModules ??= this.computeModules('electronMain');\n    }\n\n    get preloadModules(): Map<string, string> {\n        return this._preloadModules ??= this.computeModules('preload');\n    }\n\n    protected computeModules<P extends keyof Extension, S extends keyof Extension = P>(primary: P, secondary?: S): Map<string, string> {\n        const result = new Map<string, string>();\n        let moduleIndex = 1;\n        for (const extensionPackage of this.extensionPackages) {\n            const extensions = extensionPackage.theiaExtensions;\n            if (extensions) {\n                for (const extension of extensions) {\n                    const modulePath = extension[primary] || (secondary && extension[secondary]);\n                    if (typeof modulePath === 'string') {\n                        const extensionPath = paths.join(extensionPackage.name, modulePath).split(paths.sep).join('/');\n                        result.set(`${primary}_${moduleIndex}`, extensionPath);\n                        moduleIndex = moduleIndex + 1;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    relative(path: string): string {\n        return paths.relative(this.projectPath, path);\n    }\n\n    path(...segments: string[]): string {\n        return paths.resolve(this.projectPath, ...segments);\n    }\n\n    get packagePath(): string {\n        return this.path('package.json');\n    }\n\n    lib(...segments: string[]): string {\n        return this.path('lib', ...segments);\n    }\n\n    srcGen(...segments: string[]): string {\n        return this.path('src-gen', ...segments);\n    }\n\n    backend(...segments: string[]): string {\n        return this.srcGen('backend', ...segments);\n    }\n\n    bundledBackend(...segments: string[]): string {\n        return this.path('backend', 'bundle', ...segments);\n    }\n\n    frontend(...segments: string[]): string {\n        return this.srcGen('frontend', ...segments);\n    }\n\n    isBrowser(): boolean {\n        return this.target === ApplicationProps.ApplicationTarget.browser;\n    }\n\n    isElectron(): boolean {\n        return this.target === ApplicationProps.ApplicationTarget.electron;\n    }\n\n    ifBrowser<T>(value: T): T | undefined;\n    ifBrowser<T>(value: T, defaultValue: T): T;\n    ifBrowser<T>(value: T, defaultValue?: T): T | undefined {\n        return this.isBrowser() ? value : defaultValue;\n    }\n\n    ifElectron<T>(value: T): T | undefined;\n    ifElectron<T>(value: T, defaultValue: T): T;\n    ifElectron<T>(value: T, defaultValue?: T): T | undefined {\n        return this.isElectron() ? value : defaultValue;\n    }\n\n    get targetBackendModules(): Map<string, string> {\n        return this.ifBrowser(this.backendModules, this.backendElectronModules);\n    }\n\n    get targetFrontendModules(): Map<string, string> {\n        return this.ifBrowser(this.frontendModules, this.frontendElectronModules);\n    }\n\n    get targetElectronMainModules(): Map<string, string> {\n        return this.ifElectron(this.electronMainModules, new Map());\n    }\n\n    setDependency(name: string, version: string | undefined): boolean {\n        const dependencies = this.pck.dependencies || {};\n        const currentVersion = dependencies[name];\n        if (currentVersion === version) {\n            return false;\n        }\n        if (version) {\n            dependencies[name] = version;\n        } else {\n            delete dependencies[name];\n        }\n        this.pck.dependencies = sortByKey(dependencies);\n        return true;\n    }\n\n    save(): Promise<void> {\n        return writeJsonFile(this.packagePath, this.pck, {\n            detectIndent: true\n        });\n    }\n\n    protected _moduleResolver: undefined | ApplicationModuleResolver;\n    /**\n     * A node module resolver in the context of the application package.\n     */\n    get resolveModule(): ApplicationModuleResolver {\n        if (!this._moduleResolver) {\n            const resolutionPaths = this.packagePath || process.cwd();\n            this._moduleResolver = modulePath => {\n                const resolved = resolvePackagePath(modulePath, resolutionPaths);\n                if (!resolved) {\n                    throw new Error('Could not resolve module: ' + modulePath);\n                }\n                return resolved;\n            };\n        }\n        return this._moduleResolver!;\n    }\n\n    resolveModulePath(moduleName: string, ...segments: string[]): string {\n        return paths.resolve(this.resolveModule(moduleName + '/package.json'), '..', ...segments);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type { BrowserWindowConstructorOptions } from 'electron';\nexport import deepmerge = require('deepmerge');\n\nexport type RequiredRecursive<T> = {\n    [K in keyof T]-?: T[K] extends object ? RequiredRecursive<T[K]> : T[K]\n};\n\n/**\n * Base configuration for the Theia application.\n */\nexport interface ApplicationConfig {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly [key: string]: any;\n}\n\nexport type ElectronFrontendApplicationConfig = RequiredRecursive<ElectronFrontendApplicationConfig.Partial>;\nexport namespace ElectronFrontendApplicationConfig {\n    export const DEFAULT: ElectronFrontendApplicationConfig = {\n        windowOptions: {}\n    };\n    export interface Partial {\n\n        /**\n         * Override or add properties to the electron `windowOptions`.\n         *\n         * Defaults to `{}`.\n         */\n        readonly windowOptions?: BrowserWindowConstructorOptions;\n    }\n}\n\nexport type DefaultTheme = string | Readonly<{ light: string, dark: string }>;\nexport namespace DefaultTheme {\n    export function defaultForOSTheme(theme: DefaultTheme): string {\n        if (typeof theme === 'string') {\n            return theme;\n        }\n        if (\n            typeof window !== 'undefined' &&\n            window.matchMedia &&\n            window.matchMedia('(prefers-color-scheme: dark)').matches\n        ) {\n            return theme.dark;\n        }\n        return theme.light;\n    }\n}\n\n/**\n * Application configuration for the frontend. The following properties will be injected into the `index.html`.\n */\nexport type FrontendApplicationConfig = RequiredRecursive<FrontendApplicationConfig.Partial>;\nexport namespace FrontendApplicationConfig {\n    export const DEFAULT: FrontendApplicationConfig = {\n        applicationName: 'Eclipse Theia',\n        defaultTheme: { light: 'light', dark: 'dark' },\n        defaultIconTheme: 'theia-file-icons',\n        electron: ElectronFrontendApplicationConfig.DEFAULT,\n        defaultLocale: '',\n        validatePreferencesSchema: true\n    };\n    export interface Partial extends ApplicationConfig {\n\n        /**\n         * The default theme for the application.\n         *\n         * Defaults to `dark` if the OS's theme is dark. Otherwise `light`.\n         */\n        readonly defaultTheme?: DefaultTheme;\n\n        /**\n         * The default icon theme for the application.\n         *\n         * Defaults to `none`.\n         */\n        readonly defaultIconTheme?: string;\n\n        /**\n         * The name of the application.\n         *\n         * Defaults to `Eclipse Theia`.\n         */\n        readonly applicationName?: string;\n\n        /**\n         * Electron specific configuration.\n         *\n         * Defaults to `ElectronFrontendApplicationConfig.DEFAULT`.\n         */\n        readonly electron?: ElectronFrontendApplicationConfig.Partial;\n\n        /**\n         * The default locale for the application.\n         *\n         * Defaults to \"\".\n         */\n        readonly defaultLocale?: string;\n\n        /**\n         * When `true`, the application will validate the JSON schema of the preferences on start\n         * and log warnings to the console if the schema is not valid.\n         *\n         * Defaults to `true`.\n         */\n        readonly validatePreferencesSchema?: boolean;\n    }\n}\n\n/**\n * Application configuration for the backend.\n */\nexport type BackendApplicationConfig = RequiredRecursive<BackendApplicationConfig.Partial>;\nexport namespace BackendApplicationConfig {\n    export const DEFAULT: BackendApplicationConfig = {\n        singleInstance: false,\n    };\n    export interface Partial extends ApplicationConfig {\n\n        /**\n         * If true and in Electron mode, only one instance of the application is allowed to run at a time.\n         *\n         * Defaults to `false`.\n         */\n        readonly singleInstance?: boolean;\n    }\n}\n\n/**\n * Configuration for the generator.\n */\nexport type GeneratorConfig = RequiredRecursive<GeneratorConfig.Partial>;\nexport namespace GeneratorConfig {\n    export const DEFAULT: GeneratorConfig = {\n        preloadTemplate: ''\n    };\n    export interface Partial {\n\n        /**\n         * Template to use for extra preload content markup (file path or HTML).\n         *\n         * Defaults to `''`.\n         */\n        readonly preloadTemplate?: string;\n    }\n}\n\nexport interface NpmRegistryProps {\n\n    /**\n     * Defaults to `false`.\n     */\n    readonly next: boolean;\n\n    /**\n     * Defaults to `https://registry.npmjs.org/`.\n     */\n    readonly registry: string;\n\n}\nexport namespace NpmRegistryProps {\n    export const DEFAULT: NpmRegistryProps = {\n        next: false,\n        registry: 'https://registry.npmjs.org/'\n    };\n}\n\n/**\n * Representation of all backend and frontend related Theia extension and application properties.\n */\nexport interface ApplicationProps extends NpmRegistryProps {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly [key: string]: any;\n\n    /**\n     * Whether the extension targets the browser or electron. Defaults to `browser`.\n     */\n    readonly target: ApplicationProps.Target;\n\n    /**\n     * Frontend related properties.\n     */\n    readonly frontend: {\n        readonly config: FrontendApplicationConfig\n    };\n\n    /**\n     * Backend specific properties.\n     */\n    readonly backend: {\n        readonly config: BackendApplicationConfig\n    };\n\n    /**\n     * Generator specific properties.\n     */\n    readonly generator: {\n        readonly config: GeneratorConfig\n    };\n}\nexport namespace ApplicationProps {\n    export type Target = keyof typeof ApplicationTarget;\n    export enum ApplicationTarget {\n        browser = 'browser',\n        electron = 'electron'\n    };\n    export const DEFAULT: ApplicationProps = {\n        ...NpmRegistryProps.DEFAULT,\n        target: 'browser',\n        backend: {\n            config: BackendApplicationConfig.DEFAULT\n        },\n        frontend: {\n            config: FrontendApplicationConfig.DEFAULT\n        },\n        generator: {\n            config: GeneratorConfig.DEFAULT\n        }\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { readJsonFile } from './json-file';\nimport { NodePackage, PublishedNodePackage } from './npm-registry';\nimport { ExtensionPackage, ExtensionPackageOptions, RawExtensionPackage } from './extension-package';\n\nexport class ExtensionPackageCollector {\n\n    protected readonly sorted: ExtensionPackage[] = [];\n    protected readonly visited = new Map<string, boolean>();\n\n    constructor(\n        protected readonly extensionPackageFactory: (raw: PublishedNodePackage, options?: ExtensionPackageOptions) => ExtensionPackage,\n        protected readonly resolveModule: (modulePath: string) => string\n    ) { }\n\n    protected root: NodePackage;\n    collect(pck: NodePackage): ReadonlyArray<ExtensionPackage> {\n        this.root = pck;\n        this.collectPackages(pck);\n        return this.sorted;\n    }\n\n    protected collectPackages(pck: NodePackage): void {\n        for (const [dependency, versionRange] of [\n            ...Object.entries(pck.dependencies ?? {}),\n            ...Object.entries(pck.peerDependencies ?? {})\n        ]) {\n            this.collectPackage(dependency, versionRange!);\n        }\n    }\n\n    protected parent: ExtensionPackage | undefined;\n    protected collectPackagesWithParent(pck: NodePackage, parent: ExtensionPackage): void {\n        const current = this.parent;\n        this.parent = parent;\n        this.collectPackages(pck);\n        this.parent = current;\n    }\n\n    protected collectPackage(name: string, versionRange: string): void {\n        if (this.visited.has(name)) {\n            return;\n        }\n        this.visited.set(name, true);\n\n        let packagePath: string | undefined;\n        try {\n            packagePath = this.resolveModule(name);\n        } catch {\n            console.debug(`Failed to resolve module: ${name}`);\n        }\n        if (!packagePath) {\n            return;\n        }\n        const pck: NodePackage = readJsonFile(packagePath);\n        if (RawExtensionPackage.is(pck)) {\n            const parent = this.parent;\n            const version = pck.version;\n            const transitive = !(name in this.root.dependencies!);\n            pck.installed = { packagePath, version, parent, transitive };\n            pck.version = versionRange;\n            const extensionPackage = this.extensionPackageFactory(pck, { alias: name });\n            this.collectPackagesWithParent(pck, extensionPackage);\n            this.sorted.push(extensionPackage);\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from 'fs-extra';\nimport * as paths from 'path';\nimport * as semver from 'semver';\nimport { NpmRegistry, PublishedNodePackage, NodePackage } from './npm-registry';\n\nexport interface Extension {\n    frontendPreload?: string;\n    frontend?: string;\n    frontendElectron?: string;\n    secondaryWindow?: string;\n    backend?: string;\n    backendElectron?: string;\n    electronMain?: string;\n    preload?: string;\n}\n\nexport interface ExtensionPackageOptions {\n    /**\n     * Alias to use in place of the original package's name.\n     */\n    alias?: string\n}\n\nexport class ExtensionPackage {\n\n    protected _name: string;\n\n    constructor(\n        readonly raw: PublishedNodePackage & Partial<RawExtensionPackage>,\n        protected readonly registry: NpmRegistry,\n        options: ExtensionPackageOptions = {}\n    ) {\n        this._name = options.alias ?? raw.name;\n    }\n\n    /**\n     * The name of the extension's package as defined in \"dependencies\" (might be aliased)\n     */\n    get name(): string {\n        return this._name;\n    }\n\n    get version(): string {\n        if (this.raw.installed) {\n            return this.raw.installed.version;\n        }\n        if (this.raw.view) {\n            const latestVersion = this.raw.view.latestVersion;\n            if (latestVersion) {\n                return latestVersion;\n            }\n        }\n        return this.raw.version;\n    }\n\n    get description(): string {\n        return this.raw.description || '';\n    }\n\n    get theiaExtensions(): Extension[] {\n        return this.raw.theiaExtensions || [];\n    }\n\n    get installed(): boolean {\n        return !!this.raw.installed;\n    }\n\n    get dependent(): string | undefined {\n        if (!this.transitive) {\n            return undefined;\n        }\n        let current = this.parent!;\n        let parent = current.parent;\n        while (parent !== undefined) {\n            current = parent;\n            parent = current.parent;\n        }\n        return current.name;\n    }\n\n    get transitive(): boolean {\n        return !!this.raw.installed && this.raw.installed.transitive;\n    }\n\n    get parent(): ExtensionPackage | undefined {\n        if (this.raw.installed) {\n            return this.raw.installed.parent;\n        }\n        return undefined;\n    }\n\n    protected async view(): Promise<RawExtensionPackage.ViewState> {\n        if (this.raw.view === undefined) {\n            const raw = await RawExtensionPackage.view(this.registry, this.name, this.version);\n            this.raw.view = raw ? raw.view : new RawExtensionPackage.ViewState(this.registry);\n        }\n        return this.raw.view!;\n    }\n\n    protected readme?: string;\n    async getReadme(): Promise<string> {\n        if (this.readme === undefined) {\n            this.readme = await this.resolveReadme();\n        }\n        return this.readme;\n    }\n    protected async resolveReadme(): Promise<string> {\n        const raw = await this.view();\n        if (raw && raw.readme) {\n            return raw.readme;\n        }\n        if (this.raw.installed) {\n            const readmePath = paths.resolve(this.raw.installed.packagePath, '..', 'README.md');\n            if (await fs.pathExists(readmePath)) {\n                return fs.readFile(readmePath, { encoding: 'utf8' });\n            }\n            return '';\n        }\n        return '';\n    }\n\n    getAuthor(): string {\n        if (this.raw.publisher) {\n            return this.raw.publisher.username;\n        }\n        if (typeof this.raw.author === 'string') {\n            return this.raw.author;\n        }\n        if (this.raw.author && this.raw.author.name) {\n            return this.raw.author.name;\n        }\n        if (!!this.raw.maintainers && this.raw.maintainers.length > 0) {\n            return this.raw.maintainers[0].username;\n        }\n        return '';\n    }\n\n}\n\nexport interface RawExtensionPackage extends PublishedNodePackage {\n    installed?: RawExtensionPackage.InstalledState\n    view?: RawExtensionPackage.ViewState\n    theiaExtensions: Extension[];\n}\nexport namespace RawExtensionPackage {\n    export interface InstalledState {\n        version: string;\n        packagePath: string;\n        transitive: boolean;\n        parent?: ExtensionPackage;\n    }\n    export class ViewState {\n        readme?: string;\n        tags?: {\n            [tag: string]: string\n        };\n        constructor(\n            protected readonly registry: NpmRegistry\n        ) { }\n        get latestVersion(): string | undefined {\n            if (this.tags) {\n                if (this.registry.props.next) {\n                    const next = this.tags['next'];\n                    if (next !== undefined) {\n                        return next;\n                    }\n                }\n                const latest = this.tags['latest'];\n                if (this.registry.props.next || !semver.prerelease(latest)) {\n                    return latest;\n                }\n                return undefined;\n            }\n            return undefined;\n        }\n    }\n    export function is(pck: NodePackage | undefined): pck is RawExtensionPackage {\n        return PublishedNodePackage.is(pck) && !!pck.theiaExtensions;\n    }\n    export async function view(registry: NpmRegistry, name: string, version?: string): Promise<RawExtensionPackage | undefined> {\n        const result = await registry.view(name).catch(() => undefined);\n        if (!result) {\n            return undefined;\n        }\n        const tags = result['dist-tags'];\n        const versions = [tags['latest']];\n        if (registry.props.next) {\n            versions.push(tags['next']);\n        }\n        if (version) {\n            versions.push(tags[version], version);\n        }\n        for (const current of versions.reverse()) {\n            const raw = result.versions[current];\n            if (is(raw)) {\n                const viewState = new ViewState(registry);\n                viewState.readme = result.readme;\n                viewState.tags = tags;\n                raw.view = viewState;\n                return raw;\n            }\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './npm-registry';\nexport * from './extension-package';\nexport * from './application-package';\nexport * from './application-props';\nexport * from './environment';\nexport * from './api';\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fs from 'fs';\nimport writeJsonFile = require('write-json-file');\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction readJsonFile(path: string): any {\n    return JSON.parse(fs.readFileSync(path, { encoding: 'utf-8' }));\n}\n\nexport { writeJsonFile, readJsonFile };\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as nano from 'nano';\nimport { RequestContext } from '@theia/request';\nimport { NodeRequestService } from '@theia/request/lib/node-request-service';\nimport { NpmRegistryProps } from './application-props';\n\nexport interface IChangeStream {\n    on(event: 'data', cb: (change: { id: string }) => void): void;\n    destroy(): void;\n}\n\nexport interface Author {\n    name: string;\n    email: string;\n}\n\nexport interface Maintainer {\n    username: string;\n    email: string;\n}\n\nexport interface Dependencies {\n    [name: string]: string | undefined;\n}\n\nexport interface NodePackage {\n    name?: string;\n    version?: string;\n    description?: string;\n    publisher?: Maintainer;\n    author?: string | Author;\n    maintainers?: Maintainer[];\n    keywords?: string[];\n    dependencies?: Dependencies;\n    peerDependencies?: Dependencies;\n    [property: string]: any;\n}\n\nexport interface PublishedNodePackage extends NodePackage {\n    name: string;\n    version: string;\n}\nexport namespace PublishedNodePackage {\n    export function is(pck: NodePackage | undefined): pck is PublishedNodePackage {\n        return !!pck && !!pck.name && !!pck.version;\n    }\n}\n\nexport interface ViewResult {\n    'dist-tags': {\n        [tag: string]: string\n    }\n    'versions': {\n        [version: string]: NodePackage\n    },\n    'readme': string;\n    [key: string]: any\n}\n\nexport function sortByKey(object: { [key: string]: any }): {\n    [key: string]: any;\n} {\n    return Object.keys(object).sort().reduce((sorted, key) => {\n        sorted[key] = object[key];\n        return sorted;\n    }, {} as { [key: string]: any });\n}\n\nexport class NpmRegistryOptions {\n    /**\n     * Default: false.\n     */\n    readonly watchChanges: boolean;\n}\n\nexport class NpmRegistry {\n\n    readonly props: NpmRegistryProps = { ...NpmRegistryProps.DEFAULT };\n    protected readonly options: NpmRegistryOptions;\n\n    protected changes?: nano.ChangesReaderScope;\n    protected readonly index = new Map<string, Promise<ViewResult>>();\n\n    protected request: NodeRequestService;\n\n    constructor(options?: Partial<NpmRegistryOptions>) {\n        this.options = {\n            watchChanges: false,\n            ...options\n        };\n        this.resetIndex();\n        this.request = new NodeRequestService();\n    }\n\n    updateProps(props?: Partial<NpmRegistryProps>): void {\n        const oldRegistry = this.props.registry;\n        Object.assign(this.props, props);\n        const newRegistry = this.props.registry;\n        if (oldRegistry !== newRegistry) {\n            this.resetIndex();\n        }\n    }\n    protected resetIndex(): void {\n        this.index.clear();\n        if (this.options.watchChanges && this.props.registry === NpmRegistryProps.DEFAULT.registry) {\n            if (this.changes) {\n                this.changes.stop();\n            }\n            // Invalidate index with NPM registry web hooks\n            this.changes = nano('https://replicate.npmjs.com').use('registry').changesReader;\n            this.changes.get({}).on('change', change => this.invalidate(change.id));\n        }\n    }\n    protected invalidate(name: string): void {\n        if (this.index.delete(name)) {\n            this.view(name);\n        }\n    }\n\n    view(name: string): Promise<ViewResult> {\n        const indexed = this.index.get(name);\n        if (indexed) {\n            return indexed;\n        }\n        const result = this.doView(name);\n        this.index.set(name, result);\n        result.catch(() => this.index.delete(name));\n        return result;\n    }\n\n    protected async doView(name: string): Promise<ViewResult> {\n        let url = this.props.registry;\n        if (name[0] === '@') {\n            url += '@' + encodeURIComponent(name.substring(1));\n        } else {\n            url += encodeURIComponent(name);\n        }\n        const response = await this.request.request({ url });\n        if (response.res.statusCode !== 200) {\n            throw new Error(`HTTP ${response.res.statusCode}: for ${url}`);\n        }\n        return RequestContext.asJson<ViewResult>(response);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nconst textDecoder = typeof TextDecoder !== 'undefined' ? new TextDecoder() : undefined;\n\nexport interface Headers {\n    [header: string]: string;\n}\n\nexport interface RequestOptions {\n    type?: string;\n    url: string;\n    user?: string;\n    password?: string;\n    headers?: Headers;\n    timeout?: number;\n    data?: string;\n    followRedirects?: number;\n    proxyAuthorization?: string;\n}\n\nexport interface RequestContext {\n    url: string;\n    res: {\n        headers: Headers;\n        statusCode?: number;\n    };\n    /**\n     * Contains the data returned by the request.\n     *\n     * If the request was transferred from the backend to the frontend, the buffer has been compressed into a string. In every case the buffer is an {@link Uint8Array}.\n     */\n    buffer: Uint8Array | string;\n}\n\nexport namespace RequestContext {\n    export function isSuccess(context: RequestContext): boolean {\n        return (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n    }\n\n    function hasNoContent(context: RequestContext): boolean {\n        return context.res.statusCode === 204;\n    }\n\n    export function asText(context: RequestContext): string {\n        if (!isSuccess(context)) {\n            throw new Error(`Server returned code ${context.res.statusCode}.`);\n        }\n        if (hasNoContent(context)) {\n            return '';\n        }\n        // Ensures that the buffer is an Uint8Array\n        context = decompress(context);\n        if (textDecoder) {\n            return textDecoder.decode(context.buffer as Uint8Array);\n        } else {\n            return context.buffer.toString();\n        }\n    }\n\n    export function asJson<T = {}>(context: RequestContext): T {\n        const str = asText(context);\n        try {\n            return JSON.parse(str);\n        } catch (err) {\n            err.message += ':\\n' + str;\n            throw err;\n        }\n    }\n\n    /**\n     * Convert the buffer to base64 before sending it to the frontend.\n     * This reduces the amount of JSON data transferred massively.\n     * Does nothing if the buffer is already compressed.\n     */\n    export function compress(context: RequestContext): RequestContext {\n        if (context.buffer instanceof Uint8Array && Buffer !== undefined) {\n            context.buffer = Buffer.from(context.buffer).toString('base64');\n        }\n        return context;\n    }\n\n    /**\n     * Decompresses a base64 buffer into a normal array buffer\n     * Does nothing if the buffer is not compressed.\n     */\n    export function decompress(context: RequestContext): RequestContext {\n        const buffer = context.buffer;\n        if (typeof buffer === 'string' && typeof atob === 'function') {\n            context.buffer = Uint8Array.from(atob(buffer), c => c.charCodeAt(0));\n        }\n        return context;\n    }\n}\n\nexport interface RequestConfiguration {\n    proxyUrl?: string;\n    proxyAuthorization?: string;\n    strictSSL?: boolean;\n}\nexport interface RequestService {\n    configure(config: RequestConfiguration): Promise<void>;\n    request(options: RequestOptions, token?: CancellationToken): Promise<RequestContext>;\n    resolveProxy(url: string): Promise<string | undefined>\n}\n\nexport const RequestService = Symbol('RequestService');\nexport const BackendRequestService = Symbol('BackendRequestService');\nexport const REQUEST_SERVICE_PATH = '/services/request-service';\n\nexport interface CancellationToken {\n    readonly isCancellationRequested: boolean;\n    readonly onCancellationRequested: (listener: () => void) => void;\n}\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './common-request-service';\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport { getProxyAgent, ProxyAgent } from './proxy';\nimport { Headers, RequestConfiguration, RequestContext, RequestOptions, RequestService, CancellationToken } from './common-request-service';\nimport { createGunzip } from 'zlib';\n\nexport interface RawRequestFunction {\n    (options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends RequestOptions {\n    agent?: ProxyAgent;\n    strictSSL?: boolean;\n    getRawRequest?(options: NodeRequestOptions): RawRequestFunction;\n};\n\nexport class NodeRequestService implements RequestService {\n\n    protected proxyUrl?: string;\n    protected strictSSL?: boolean;\n    protected authorization?: string;\n\n    protected getNodeRequest(options: RequestOptions): RawRequestFunction {\n        const endpoint = new URL(options.url);\n        const module = endpoint.protocol === 'https:' ? https : http;\n        return module.request;\n    }\n\n    protected async getProxyUrl(url: string): Promise<string | undefined> {\n        return this.proxyUrl;\n    }\n\n    async configure(config: RequestConfiguration): Promise<void> {\n        if (config.proxyUrl !== undefined) {\n            this.proxyUrl = config.proxyUrl;\n        }\n        if (config.strictSSL !== undefined) {\n            this.strictSSL = config.strictSSL;\n        }\n        if (config.proxyAuthorization !== undefined) {\n            this.authorization = config.proxyAuthorization;\n        }\n    }\n\n    protected async processOptions(options: NodeRequestOptions): Promise<NodeRequestOptions> {\n        const { strictSSL } = this;\n        options.strictSSL = options.strictSSL ?? strictSSL;\n        const agent = options.agent ? options.agent : getProxyAgent(options.url || '', process.env, {\n            proxyUrl: await this.getProxyUrl(options.url),\n            strictSSL: options.strictSSL\n        });\n        options.agent = agent;\n\n        const authorization = options.proxyAuthorization || this.authorization;\n        if (authorization) {\n            options.headers = {\n                ...(options.headers || {}),\n                'Proxy-Authorization': authorization\n            };\n        }\n\n        options.headers = {\n            'Accept-Encoding': 'gzip',\n            ...(options.headers || {}),\n        };\n\n        return options;\n    }\n\n    request(options: NodeRequestOptions, token?: CancellationToken): Promise<RequestContext> {\n        return new Promise(async (resolve, reject) => {\n            options = await this.processOptions(options);\n\n            const endpoint = new URL(options.url);\n            const rawRequest = options.getRawRequest\n                ? options.getRawRequest(options)\n                : this.getNodeRequest(options);\n\n            const opts: https.RequestOptions = {\n                hostname: endpoint.hostname,\n                port: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n                protocol: endpoint.protocol,\n                path: endpoint.pathname + endpoint.search,\n                method: options.type || 'GET',\n                headers: options.headers,\n                agent: options.agent,\n                rejectUnauthorized: !!options.strictSSL\n            };\n\n            if (options.user && options.password) {\n                opts.auth = options.user + ':' + options.password;\n            }\n\n            const req = rawRequest(opts, async res => {\n                const followRedirects = options.followRedirects ?? 3;\n                if (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers.location) {\n                    this.request({\n                        ...options,\n                        url: res.headers.location,\n                        followRedirects: followRedirects - 1\n                    }, token).then(resolve, reject);\n                } else {\n                    const chunks: Uint8Array[] = [];\n\n                    const stream = res.headers['content-encoding'] === 'gzip' ? res.pipe(createGunzip()) : res;\n\n                    stream.on('data', chunk => {\n                        chunks.push(chunk);\n                    });\n\n                    stream.on('end', () => {\n                        const buffer = Buffer.concat(chunks);\n                        resolve({\n                            url: options.url,\n                            res: {\n                                headers: res.headers as Headers,\n                                statusCode: res.statusCode\n                            },\n                            buffer\n                        });\n                    });\n\n                    stream.on('error', reject);\n                }\n            });\n\n            req.on('error', reject);\n\n            if (options.timeout) {\n                req.setTimeout(options.timeout);\n            }\n\n            if (options.data) {\n                req.write(options.data);\n            }\n\n            req.end();\n\n            token?.onCancellationRequested(() => {\n                req.abort();\n                reject();\n            });\n        });\n    }\n\n    async resolveProxy(url: string): Promise<string | undefined> {\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { parse as parseUrl, Url } from 'url';\nimport * as httpAgent from 'http-proxy-agent';\nimport * as httpsAgent from 'https-proxy-agent';\n\nexport type ProxyAgent = httpAgent.HttpProxyAgent | httpsAgent.HttpsProxyAgent;\n\nfunction getSystemProxyURI(requestURL: Url, env: typeof process.env): string | undefined {\n    if (requestURL.protocol === 'http:') {\n        return env.HTTP_PROXY || env.http_proxy;\n    } else if (requestURL.protocol === 'https:') {\n        return env.HTTPS_PROXY || env.https_proxy || env.HTTP_PROXY || env.http_proxy;\n    }\n\n    return undefined;\n}\n\nexport interface ProxySettings {\n    proxyUrl?: string;\n    strictSSL?: boolean;\n}\n\nexport function getProxyAgent(rawRequestURL: string, env: typeof process.env, options: ProxySettings = {}): ProxyAgent | undefined {\n    const requestURL = parseUrl(rawRequestURL);\n    const proxyURL = options.proxyUrl || getSystemProxyURI(requestURL, env);\n\n    if (!proxyURL) {\n        return undefined;\n    }\n\n    const proxyEndpoint = parseUrl(proxyURL);\n\n    if (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n        return undefined;\n    }\n\n    const opts = {\n        host: proxyEndpoint.hostname || '',\n        port: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n        auth: proxyEndpoint.auth,\n        rejectUnauthorized: !!options.strictSSL,\n    };\n\n    const createAgent = requestURL.protocol === 'http:' ? httpAgent : httpsAgent;\n    return createAgent(opts);\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiagnosticSeverity } from 'vscode-languageserver-protocol';\nimport { nls } from './nls';\n\nexport enum Severity {\n    Ignore = 0,\n    Error = 1,\n    Warning = 2,\n    Info = 3,\n    Log = 4\n}\n\nconst error = 'Errors';\nconst warning = 'Warnings';\nconst info = 'Info';\nconst log = 'Log';\nconst ignore = 'All';\n\nexport namespace Severity {\n    export function fromValue(value: string | undefined): Severity {\n        value = value && value.toLowerCase();\n\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (['error', 'errors'].indexOf(value) !== -1) {\n            return Severity.Error;\n        }\n        if (['warn', 'warning', 'warnings'].indexOf(value) !== -1) {\n            return Severity.Warning;\n        }\n        if (value === 'info') {\n            return Severity.Info;\n        }\n        if (value === 'log') {\n            return Severity.Log;\n        }\n\n        return Severity.Ignore;\n    }\n\n    export function toDiagnosticSeverity(value: Severity): DiagnosticSeverity {\n        switch (value) {\n            case Severity.Ignore:\n                return DiagnosticSeverity.Hint;\n            case Severity.Info:\n                return DiagnosticSeverity.Information;\n            case Severity.Log:\n                return DiagnosticSeverity.Information;\n            case Severity.Warning:\n                return DiagnosticSeverity.Warning;\n            case Severity.Error:\n                return DiagnosticSeverity.Error;\n            default:\n                return DiagnosticSeverity.Error;\n        }\n    }\n\n    export function toString(severity: Severity | undefined): string {\n        switch (severity) {\n            case Severity.Error:\n                return error;\n            case Severity.Warning:\n                return warning;\n            case Severity.Info:\n                return info;\n            case Severity.Log:\n                return log;\n            default:\n                return ignore;\n        }\n    }\n\n    export function toLocaleString(severity: string | Severity): string {\n        if (severity === Severity.Error || severity === error) {\n            return nls.localize('theia/core/severity/errors', 'Errors');\n        } else if (severity === Severity.Warning || severity === warning) {\n            return nls.localize('theia/core/severity/warnings', 'Warnings');\n        } else if (severity === Severity.Info || severity === info) {\n            return nls.localizeByDefault('Info');\n        } else if (severity === Severity.Log || severity === log) {\n            return nls.localize('theia/core/severity/log', 'Log');\n        } else {\n            return nls.localizeByDefault('All');\n        }\n    }\n\n    export function toArray(): string[] {\n        return [ignore, error, warning, info, log];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as dns from 'dns';\nimport * as path from 'path';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as express from 'express';\nimport * as yargs from 'yargs';\nimport * as fs from 'fs-extra';\nimport { inject, named, injectable, postConstruct } from 'inversify';\nimport { ContributionProvider, MaybePromise, Stopwatch } from '../common';\nimport { CliContribution } from './cli';\nimport { Deferred } from '../common/promise-util';\nimport { environment } from '../common/index';\nimport { AddressInfo } from 'net';\nimport { ApplicationPackage } from '@theia/application-package';\nimport { ProcessUtils } from './process-utils';\n\nexport type DnsResultOrder = 'ipv4first' | 'verbatim' | 'nodeDefault';\n\nconst APP_PROJECT_PATH = 'app-project-path';\n\nconst TIMER_WARNING_THRESHOLD = 50;\n\nconst DEFAULT_PORT = environment.electron.is() ? 0 : 3000;\nconst DEFAULT_HOST = 'localhost';\nconst DEFAULT_SSL = false;\nconst DEFAULT_DNS_DEFAULT_RESULT_ORDER: DnsResultOrder = 'ipv4first';\n\nexport const BackendApplicationServer = Symbol('BackendApplicationServer');\n/**\n * This service is responsible for serving the frontend files.\n *\n * When not bound, `@theia/cli` generators will bind it on the fly to serve files according to its own layout.\n */\nexport interface BackendApplicationServer extends BackendApplicationContribution { }\n\nexport const BackendApplicationContribution = Symbol('BackendApplicationContribution');\n/**\n * Contribution for hooking into the backend lifecycle:\n *\n * - `initialize()`\n * - `configure(expressApp)`\n * - `onStart(httpServer)`\n * - `onStop()`\n */\nexport interface BackendApplicationContribution {\n    /**\n     * Called during the initialization of the backend application.\n     * Use this for functionality which has to run as early as possible.\n     *\n     * The implementation may be async, however it will still block the\n     * initialization step until it's resolved.\n     *\n     * @returns either `undefined` or a Promise resolving to `undefined`.\n     */\n    initialize?(): MaybePromise<void>;\n\n    /**\n     * Called after the initialization of the backend application is complete.\n     * Use this to configure the Express app before it is started, for example\n     * to offer additional endpoints.\n     *\n     * The implementation may be async, however it will still block the\n     * configuration step until it's resolved.\n     *\n     * @param app the express application to configure.\n     *\n     * @returns either `undefined` or a Promise resolving to `undefined`.\n     */\n    configure?(app: express.Application): MaybePromise<void>;\n\n    /**\n     * Called right after the server for the Express app is started.\n     * Use this to additionally configure the server or as ready-signal for your service.\n     *\n     * The implementation may be async, however it will still block the\n     * startup step until it's resolved.\n     *\n     * @param server the backend server running the express app.\n     *\n     * @returns either `undefined` or a Promise resolving to `undefined`.\n     */\n    onStart?(server: http.Server | https.Server): MaybePromise<void>;\n\n    /**\n     * Called when the backend application shuts down. Contributions must perform only synchronous operations.\n     * Any kind of additional asynchronous work queued in the event loop will be ignored and abandoned.\n     *\n     * @param app the express application.\n     */\n    onStop?(app?: express.Application): void;\n}\n\n@injectable()\nexport class BackendApplicationCliContribution implements CliContribution {\n\n    port: number;\n    hostname: string | undefined;\n    dnsDefaultResultOrder: DnsResultOrder = DEFAULT_DNS_DEFAULT_RESULT_ORDER;\n    ssl: boolean | undefined;\n    cert: string | undefined;\n    certkey: string | undefined;\n    projectPath: string;\n\n    configure(conf: yargs.Argv): void {\n        conf.option('port', { alias: 'p', description: 'The port the backend server listens on.', type: 'number', default: DEFAULT_PORT });\n        conf.option('hostname', { alias: 'h', description: 'The allowed hostname for connections.', type: 'string', default: DEFAULT_HOST });\n        conf.option('ssl', { description: 'Use SSL (HTTPS), cert and certkey must also be set', type: 'boolean', default: DEFAULT_SSL });\n        conf.option('cert', { description: 'Path to SSL certificate.', type: 'string' });\n        conf.option('certkey', { description: 'Path to SSL certificate key.', type: 'string' });\n        conf.option(APP_PROJECT_PATH, { description: 'Sets the application project directory', default: this.appProjectPath() });\n        conf.option('dnsDefaultResultOrder', {\n            type: 'string',\n            description: 'Configure Node\\'s DNS resolver default behavior, see https://nodejs.org/docs/latest-v18.x/api/dns.html#dnssetdefaultresultorderorder',\n            choices: ['ipv4first', 'verbatim', 'nodeDefault'],\n            default: DEFAULT_DNS_DEFAULT_RESULT_ORDER\n        });\n    }\n\n    setArguments(args: yargs.Arguments): void {\n        this.port = args.port as number;\n        this.hostname = args.hostname as string;\n        this.ssl = args.ssl as boolean;\n        this.cert = args.cert as string;\n        this.certkey = args.certkey as string;\n        this.projectPath = args[APP_PROJECT_PATH] as string;\n        this.dnsDefaultResultOrder = args.dnsDefaultResultOrder as DnsResultOrder;\n    }\n\n    protected appProjectPath(): string {\n        if (environment.electron.is()) {\n            if (process.env.THEIA_APP_PROJECT_PATH) {\n                return process.env.THEIA_APP_PROJECT_PATH;\n            }\n            throw new Error('The \\'THEIA_APP_PROJECT_PATH\\' environment variable must be set when running in electron.');\n        }\n        return process.cwd();\n    }\n}\n\n/**\n * The main entry point for Theia applications.\n */\n@injectable()\nexport class BackendApplication {\n\n    protected readonly app: express.Application = express();\n\n    @inject(ApplicationPackage)\n    protected readonly applicationPackage: ApplicationPackage;\n\n    @inject(ProcessUtils)\n    protected readonly processUtils: ProcessUtils;\n\n    @inject(Stopwatch)\n    protected readonly stopwatch: Stopwatch;\n\n    constructor(\n        @inject(ContributionProvider) @named(BackendApplicationContribution)\n        protected readonly contributionsProvider: ContributionProvider<BackendApplicationContribution>,\n        @inject(BackendApplicationCliContribution) protected readonly cliParams: BackendApplicationCliContribution) {\n        process.on('uncaughtException', error => {\n            this.handleUncaughtError(error);\n        });\n\n        // Workaround for Electron not installing a handler to ignore SIGPIPE error\n        // (https://github.com/electron/electron/issues/13254)\n        process.on('SIGPIPE', () => {\n            console.error(new Error('Unexpected SIGPIPE'));\n        });\n        /**\n         * Kill the current process tree on exit.\n         */\n        function signalHandler(signal: NodeJS.Signals): never {\n            process.exit(1);\n        }\n        // Handles normal process termination.\n        process.on('exit', () => this.onStop());\n        // Handles `Ctrl+C`.\n        process.on('SIGINT', signalHandler);\n        // Handles `kill pid`.\n        process.on('SIGTERM', signalHandler);\n    }\n\n    protected async initialize(): Promise<void> {\n        for (const contribution of this.contributionsProvider.getContributions()) {\n            if (contribution.initialize) {\n                try {\n                    await this.measure(contribution.constructor.name + '.initialize',\n                        () => contribution.initialize!()\n                    );\n                } catch (error) {\n                    console.error('Could not initialize contribution', error);\n                }\n            }\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.configure();\n    }\n\n    protected async configure(): Promise<void> {\n        // Do not await the initialization because contributions are expected to handle\n        // concurrent initialize/configure in undefined order if they provide both\n        this.initialize();\n\n        this.app.get('*.js', this.serveGzipped.bind(this, 'text/javascript'));\n        this.app.get('*.js.map', this.serveGzipped.bind(this, 'application/json'));\n        this.app.get('*.css', this.serveGzipped.bind(this, 'text/css'));\n        this.app.get('*.wasm', this.serveGzipped.bind(this, 'application/wasm'));\n        this.app.get('*.gif', this.serveGzipped.bind(this, 'image/gif'));\n        this.app.get('*.png', this.serveGzipped.bind(this, 'image/png'));\n        this.app.get('*.svg', this.serveGzipped.bind(this, 'image/svg+xml'));\n\n        for (const contribution of this.contributionsProvider.getContributions()) {\n            if (contribution.configure) {\n                try {\n                    await this.measure(contribution.constructor.name + '.configure',\n                        () => contribution.configure!(this.app)\n                    );\n                } catch (error) {\n                    console.error('Could not configure contribution', error);\n                }\n            }\n        }\n    }\n\n    use(...handlers: express.Handler[]): void {\n        this.app.use(...handlers);\n    }\n\n    async start(port?: number, hostname?: string): Promise<http.Server | https.Server> {\n        hostname ??= this.cliParams.hostname;\n        port ??= this.cliParams.port;\n\n        if (this.cliParams.dnsDefaultResultOrder !== 'nodeDefault') {\n            dns.setDefaultResultOrder(this.cliParams.dnsDefaultResultOrder);\n        }\n\n        const deferred = new Deferred<http.Server | https.Server>();\n        let server: http.Server | https.Server;\n\n        if (this.cliParams.ssl) {\n\n            if (this.cliParams.cert === undefined) {\n                throw new Error('Missing --cert option, see --help for usage');\n            }\n\n            if (this.cliParams.certkey === undefined) {\n                throw new Error('Missing --certkey option, see --help for usage');\n            }\n\n            let key: Buffer;\n            let cert: Buffer;\n            try {\n                key = await fs.readFile(this.cliParams.certkey as string);\n            } catch (err) {\n                console.error(\"Can't read certificate key\");\n                throw err;\n            }\n\n            try {\n                cert = await fs.readFile(this.cliParams.cert as string);\n            } catch (err) {\n                console.error(\"Can't read certificate\");\n                throw err;\n            }\n            server = https.createServer({ key, cert }, this.app);\n        } else {\n            server = http.createServer(this.app);\n        }\n\n        server.on('error', error => {\n            deferred.reject(error);\n            /* The backend might run in a separate process,\n             * so we defer `process.exit` to let time for logging in the parent process */\n            setTimeout(process.exit, 0, 1);\n        });\n\n        server.listen(port, hostname, () => {\n            // address should be defined at this point\n            const address = server.address()!;\n            const url = typeof address === 'string' ? address : this.getHttpUrl(address, this.cliParams.ssl);\n            console.info(`Theia app listening on ${url}.`);\n            deferred.resolve(server);\n        });\n\n        /* Allow any number of websocket servers.  */\n        server.setMaxListeners(0);\n\n        for (const contribution of this.contributionsProvider.getContributions()) {\n            if (contribution.onStart) {\n                try {\n                    await this.measure(contribution.constructor.name + '.onStart',\n                        () => contribution.onStart!(server)\n                    );\n                } catch (error) {\n                    console.error('Could not start contribution', error);\n                }\n            }\n        }\n        return this.stopwatch.startAsync('server', 'Finished starting backend application', () => deferred.promise);\n    }\n\n    protected getHttpUrl({ address, port, family }: AddressInfo, ssl?: boolean): string {\n        const scheme = ssl ? 'https' : 'http';\n        return family.toLowerCase() === 'ipv6'\n            ? `${scheme}://[${address}]:${port}`\n            : `${scheme}://${address}:${port}`;\n    }\n\n    protected onStop(): void {\n        console.info('>>> Stopping backend contributions...');\n        for (const contrib of this.contributionsProvider.getContributions()) {\n            if (contrib.onStop) {\n                try {\n                    contrib.onStop(this.app);\n                } catch (error) {\n                    console.error('Could not stop contribution', error);\n                }\n            }\n        }\n        console.info('<<< All backend contributions have been stopped.');\n        this.processUtils.terminateProcessTree(process.pid);\n    }\n\n    protected async serveGzipped(contentType: string, req: express.Request, res: express.Response, next: express.NextFunction): Promise<void> {\n        const acceptedEncodings = req.acceptsEncodings();\n\n        const gzUrl = `${req.url}.gz`;\n        const gzPath = path.join(this.applicationPackage.projectPath, 'lib', 'frontend', gzUrl);\n        if (acceptedEncodings.indexOf('gzip') === -1 || !(await fs.pathExists(gzPath))) {\n            next();\n            return;\n        }\n\n        req.url = gzUrl;\n\n        res.set('Content-Encoding', 'gzip');\n        res.set('Content-Type', contentType);\n\n        next();\n    }\n\n    protected async measure<T>(name: string, fn: () => MaybePromise<T>): Promise<T> {\n        return this.stopwatch.startAsync(name, `Backend ${name}`, fn, { thresholdMillis: TIMER_WARNING_THRESHOLD });\n    }\n\n    protected handleUncaughtError(error: Error): void {\n        if (error) {\n            console.error('Uncaught Exception: ', error.toString());\n            if (error.stack) {\n                console.error(error.stack);\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as yargs from 'yargs';\nimport { inject, named, injectable } from 'inversify';\nimport { ContributionProvider } from '../common/contribution-provider';\nimport { MaybePromise } from '../common/types';\n\nexport const CliContribution = Symbol('CliContribution');\n\n/**\n * Call back for extension to contribute options to the cli.\n */\nexport interface CliContribution {\n    configure(conf: yargs.Argv): void;\n    setArguments(args: yargs.Arguments): MaybePromise<void>;\n}\n\n@injectable()\nexport class CliManager {\n\n    constructor(@inject(ContributionProvider) @named(CliContribution)\n    protected readonly contributionsProvider: ContributionProvider<CliContribution>) { }\n\n    async initializeCli(argv: string[]): Promise<void> {\n        const pack = require('../../package.json');\n        const version = pack.version;\n        const command = yargs.version(version);\n        command.exitProcess(this.isExit());\n        for (const contrib of this.contributionsProvider.getContributions()) {\n            contrib.configure(command);\n        }\n        const args = command\n            .detectLocale(false)\n            .showHelpOnFail(false, 'Specify --help for available options')\n            .help('help')\n            .parse(argv);\n        for (const contrib of this.contributionsProvider.getContributions()) {\n            await contrib.setArguments(args);\n        }\n    }\n\n    protected isExit(): boolean {\n        return true;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// eslint-disable-next-line no-var, @typescript-eslint/no-explicit-any\ndeclare var v8debug: any;\nfunction isInDebugMode(): boolean {\n    if (typeof v8debug === 'object') {\n        return true;\n    }\n    if (process && process.execArgv) {\n        return process.execArgv.some(arg =>\n            /^--(debug|inspect)(-brk)?=?/.test(arg)\n        );\n    }\n    return false;\n}\nexport const DEBUG_MODE = isInDebugMode();\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI as Uri } from 'vscode-uri';\nimport URI from '../common/uri';\nimport { isWindows } from '../common/os';\n\nexport namespace FileUri {\n\n    const windowsDriveRegex = /^([^:/?#]+?):$/;\n\n    /**\n     * Creates a new file URI from the filesystem path argument.\n     * @param fsPath the filesystem path.\n     */\n    export function create(fsPath_: string): URI {\n        return new URI(Uri.file(fsPath_));\n    }\n\n    /**\n     * Returns with the platform specific FS path that is represented by the URI argument.\n     *\n     * @param uri the file URI that has to be resolved to a platform specific FS path.\n     */\n    export function fsPath(uri: URI | string): string {\n        if (typeof uri === 'string') {\n            return fsPath(new URI(uri));\n        } else {\n            /*\n             * A uri for the root of a Windows drive, eg file:\\\\\\c%3A, is converted to c:\n             * by the Uri class.  However file:\\\\\\c%3A is unambiguously a uri to the root of\n             * the drive and c: is interpreted as the default directory for the c drive\n             * (by, for example, the readdir function in the fs-extra module).\n             * A backslash must be appended to the drive, eg c:\\, to ensure the correct path.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsPathFromVsCodeUri = (uri as any).codeUri.fsPath;\n            if (isWindows) {\n                const isWindowsDriveRoot = windowsDriveRegex.exec(fsPathFromVsCodeUri);\n                if (isWindowsDriveRoot) {\n                    return fsPathFromVsCodeUri + '\\\\';\n                }\n            }\n            return fsPathFromVsCodeUri;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Mutex } from 'async-mutex';\nimport { injectable, interfaces } from 'inversify';\nimport * as path from 'path';\n\nexport const FileSystemLocking = Symbol('FileSystemLocking') as symbol & interfaces.Abstract<FileSystemLocking>;\n/**\n * Use this backend service to help prevent race access to files on disk.\n */\nexport interface FileSystemLocking {\n    /**\n     * Get exclusive access to a file for reading and/or writing.\n     * @param lockPath The path to request exclusive access to.\n     * @param transaction The job to do while having exclusive access.\n     * @param thisArg `this` argument used when calling `transaction`.\n     */\n    lockPath<T>(lockPath: string, transaction: (lockPath: string) => T | Promise<T>, thisArg?: unknown): Promise<T>;\n}\n\n@injectable()\nexport class FileSystemLockingImpl implements FileSystemLocking {\n\n    lockPath<T>(lockPath: string, transaction: (lockPath: string) => T | Promise<T>, thisArg?: unknown): Promise<T> {\n        const resolvedLockPath = this.resolveLockPath(lockPath);\n        return this.getLock(resolvedLockPath).runExclusive(async () => transaction.call(thisArg, resolvedLockPath));\n    }\n\n    protected resolveLockPath(lockPath: string): string {\n        // try to normalize the path to avoid two paths pointing to the same file\n        return path.resolve(lockPath);\n    }\n\n    protected getLocks(): Map<string, Mutex> {\n        const kLocks = Symbol.for('FileSystemLockingImpl.Locks');\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (globalThis as any)[kLocks] ??= this.initializeLocks();\n    }\n\n    protected initializeLocks(): Map<string, Mutex> {\n        const locks = new Map();\n        const cleanup = setInterval(() => this.cleanupLocks(locks), 60_000);\n        process.once('beforeExit', () => clearInterval(cleanup));\n        return locks;\n    }\n\n    protected cleanupLocks(locks: Map<string, Mutex>): void {\n        locks.forEach((lock, lockPath) => {\n            if (!lock.isLocked()) {\n                locks.delete(lockPath);\n            }\n        });\n    }\n\n    protected getLock(lockPath: string): Mutex {\n        const locks = this.getLocks();\n        let lock = locks.get(lockPath);\n        if (!lock) {\n            locks.set(lockPath, lock = new Mutex());\n        }\n        return lock;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './backend-application';\nexport * from './debug';\nexport * from './file-uri';\nexport * from './messaging';\nexport * from './cli';\nexport { FileSystemLocking } from './filesystem-locking';\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './messaging-service';\nexport * from './ipc-connection-provider';\nexport * from './ipc-channel';\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as cp from 'child_process';\nimport { inject, injectable } from 'inversify';\nimport * as path from 'path';\nimport { createInterface } from 'readline';\nimport { Channel, ConnectionErrorHandler, Disposable, DisposableCollection, ILogger } from '../../common';\nimport { IPCChannel } from './ipc-channel';\nimport { createIpcEnv } from './ipc-protocol';\n\nexport interface ResolvedIPCConnectionOptions {\n    readonly serverName: string\n    readonly entryPoint: string\n    readonly logger: ILogger\n    readonly args: string[]\n    readonly errorHandler?: ConnectionErrorHandler\n    readonly env?: NodeJS.ProcessEnv\n}\nexport type IPCConnectionOptions = Partial<ResolvedIPCConnectionOptions> & {\n    readonly serverName: string\n    readonly entryPoint: string\n};\n\n@injectable()\nexport class IPCConnectionProvider {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    listen(options: IPCConnectionOptions, acceptor: (connection: Channel) => void): Disposable {\n        return this.doListen({\n            logger: this.logger,\n            args: [],\n            ...options\n        }, acceptor);\n    }\n\n    protected doListen(options: ResolvedIPCConnectionOptions, acceptor: (connection: Channel) => void): Disposable {\n        const childProcess = this.fork(options);\n        const channel = new IPCChannel(childProcess);\n        const toStop = new DisposableCollection();\n        const toCancelStop = toStop.push(Disposable.create(() => childProcess.kill()));\n        const errorHandler = options.errorHandler;\n        if (errorHandler) {\n            let errorCount = 0;\n            channel.onError((err: Error) => {\n                errorCount++;\n                if (errorHandler.shouldStop(err, errorCount)) {\n                    toStop.dispose();\n                }\n            });\n            channel.onClose(() => {\n                if (toStop.disposed) {\n                    return;\n                }\n                if (errorHandler.shouldRestart()) {\n                    toCancelStop.dispose();\n                    toStop.push(this.doListen(options, acceptor));\n                }\n            });\n        }\n        acceptor(channel);\n        return toStop;\n    }\n\n    protected fork(options: ResolvedIPCConnectionOptions): cp.ChildProcess {\n        const forkOptions: cp.ForkOptions = {\n            env: createIpcEnv(options),\n            execArgv: [],\n            // 5th element MUST be 'overlapped' for it to work properly on Windows.\n            // 'overlapped' works just like 'pipe' on non-Windows platforms.\n            // See: https://nodejs.org/docs/latest-v14.x/api/child_process.html#child_process_options_stdio\n            // Note: For some reason `@types/node` does not know about 'overlapped'.\n            stdio: ['pipe', 'pipe', 'pipe', 'ipc', 'overlapped' as 'pipe']\n        };\n        const inspectArgPrefix = `--${options.serverName}-inspect`;\n        const inspectArg = process.argv.find(v => v.startsWith(inspectArgPrefix));\n        if (inspectArg !== undefined) {\n            forkOptions.execArgv = ['--nolazy', `--inspect${inspectArg.substring(inspectArgPrefix.length)}`];\n        }\n\n        const childProcess = cp.fork(path.join(__dirname, 'ipc-bootstrap'), options.args, forkOptions);\n\n        createInterface(childProcess.stdout!).on('line', line => this.logger.info(`[${options.serverName}: ${childProcess.pid}] ${line}`));\n        createInterface(childProcess.stderr!).on('line', line => this.logger.error(`[${options.serverName}: ${childProcess.pid}] ${line}`));\n\n        this.logger.debug(`[${options.serverName}: ${childProcess.pid}] IPC started`);\n        childProcess.once('exit', () => this.logger.debug(`[${options.serverName}: ${childProcess.pid}] IPC exited`));\n\n        return childProcess;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Socket } from 'socket.io';\nimport { Channel } from '../../common/message-rpc/channel';\n\nexport interface MessagingService {\n    /**\n     * Accept a web socket channel on the given path.\n     * A path supports the route syntax: https://github.com/rcs/route-parser#what-can-i-use-in-my-routes.\n     */\n    wsChannel(path: string, callback: (params: MessagingService.PathParams, channel: Channel) => void): void;\n    /**\n     * Accept a web socket connection on the given path.\n     * A path supports the route syntax: https://github.com/rcs/route-parser#what-can-i-use-in-my-routes.\n     *\n     * #### Important\n     * Prefer using web socket channels over establishing new web socket connection. Clients can handle only limited amount of web sockets\n     * and excessive amount can cause performance degradation. All web socket channels share a single web socket connection.\n     */\n    ws(path: string, callback: (params: MessagingService.PathParams, socket: Socket) => void): void;\n}\nexport namespace MessagingService {\n    /** Inversify container identifier for the `MessagingService` component. */\n    export const Identifier = Symbol('MessagingService');\n    export interface PathParams {\n        [name: string]: string\n    }\n    export const Contribution = Symbol('MessagingService.Contribution');\n    export interface Contribution {\n        configure(service: MessagingService): void;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as cp from 'child_process';\nimport { injectable } from 'inversify';\n\n/**\n * `@theia/core` service with some process-related utilities.\n */\n@injectable()\nexport class ProcessUtils {\n\n    terminateProcessTree(ppid: number): void {\n        if (process.platform === 'win32') {\n            this.winTerminateProcessTree(ppid);\n        } else {\n            this.unixTerminateProcessTree(ppid);\n        }\n    }\n\n    protected winTerminateProcessTree(ppid: number): void {\n        this.spawnSync('taskkill.exe', ['/f', '/t', '/pid', ppid.toString(10)]);\n    }\n\n    protected unixTerminateProcessTree(ppid: number): void {\n        for (const pid of this.unixGetChildrenRecursive(ppid)) {\n            // Prevent killing the current process:\n            if (pid !== process.pid) {\n                // Don't stop if a process fails to be killed (keep on killing the others):\n                try {\n                    process.kill(pid);\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        if (ppid === this.unixGetPGID(ppid)) {\n            // When a process pgid === pid this means the the process is a group leader.\n            // We can then kill every process part of its group by doing `kill(-pgid)`.\n            // This can catch leaked processes under `init` that are still part of the group.\n            process.kill(-ppid);\n        }\n        process.kill(ppid);\n    }\n\n    protected unixGetPGID(pid: number): number {\n        const { stdout } = this.spawnSync('ps', ['-p', pid.toString(10), '-o', 'pgid=']);\n        return Number.parseInt(stdout, 10);\n    }\n\n    protected unixGetChildrenRecursive(ppid: number): Set<number> {\n        const { stdout } = this.spawnSync('ps', ['ax', '-o', 'ppid=,pid=']);\n        const pids = new Set<number>([ppid]);\n        const matcher = /(\\d+)\\s+(\\d+)/;\n        const psList = stdout\n            .trim()\n            .split('\\n')\n            .map(line => {\n                const match = line.match(matcher)!;\n                return {\n                    ppid: Number.parseInt(match[1], 10),\n                    pid: Number.parseInt(match[2], 10),\n                };\n            });\n        // Keep looking for parent/child relationships while we keep finding new parents:\n        let size; do {\n            size = pids.size;\n            for (const child of psList) {\n                if (pids.has(child.ppid)) {\n                    pids.add(child.pid);\n                }\n            }\n        } while (size !== pids.size);\n        // Exclude the requested parent id:\n        pids.delete(ppid);\n        return pids;\n    }\n\n    protected spawnSync(file: string, argv: string[], options?: cp.SpawnSyncOptions): cp.SpawnSyncReturns<string> {\n        const result = cp.spawnSync(file, argv, { ...options, encoding: 'utf8' });\n        if (result.error) {\n            throw result.error;\n        }\n        if (result.status !== 0) {\n            throw new Error(`${JSON.stringify(file)} exited with ${result.status ?? result.signal}. Output:\\n${JSON.stringify(result.output)}`);\n        }\n        return result;\n    }\n}\n","module.exports = require('fs-extra');\n","module.exports = require('vscode-languageserver-protocol');\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Some entities copied and modified from https://github.com/Microsoft/vscode-debugadapter-node/blob/master/adapter/src/protocol.ts\n\nimport {\n    DebugAdapter,\n    DebugAdapterSession\n} from './debug-model';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { DebugChannel } from './debug-service';\n\n/**\n * [DebugAdapterSession](#DebugAdapterSession) implementation.\n */\nexport class DebugAdapterSessionImpl implements DebugAdapterSession {\n\n    private channel: DebugChannel | undefined;\n    private isClosed: boolean = false;\n\n    constructor(\n        readonly id: string,\n        protected readonly debugAdapter: DebugAdapter\n    ) {\n        this.debugAdapter.onMessageReceived((message: string) => this.send(message));\n        this.debugAdapter.onClose(() => this.onDebugAdapterExit());\n        this.debugAdapter.onError(error => this.onDebugAdapterError(error));\n\n    }\n\n    async start(channel: DebugChannel): Promise<void> {\n\n        console.debug(`starting debug adapter session '${this.id}'`);\n        if (this.channel) {\n            throw new Error('The session has already been started, id: ' + this.id);\n        }\n        this.channel = channel;\n        this.channel.onMessage((message: string) => this.write(message));\n        this.channel.onClose(() => this.channel = undefined);\n\n    }\n\n    protected onDebugAdapterExit(): void {\n        this.isClosed = true;\n        console.debug(`onDebugAdapterExit session: '${this.id}'`);\n        if (this.channel) {\n            this.channel.close();\n            this.channel = undefined;\n        }\n    }\n\n    protected onDebugAdapterError(error: Error): void {\n        console.debug(`error in debug adapter session: '${this.id}': ${JSON.stringify(error)}`);\n        const event: DebugProtocol.Event = {\n            type: 'event',\n            event: 'error',\n            seq: -1,\n            body: error\n        };\n        this.send(JSON.stringify(event));\n    }\n\n    protected send(message: string): void {\n        if (this.channel) {\n            this.channel.send(message);\n        }\n    }\n\n    protected write(message: string): void {\n        if (!this.isClosed) {\n            this.debugAdapter.send(message);\n        }\n    }\n\n    async stop(): Promise<void> {\n        console.debug(`stopping debug adapter session: '${this.id}'`);\n\n        if (!this.isClosed) {\n            await this.debugAdapter.stop();\n        }\n        this.channel?.close();\n        this.channel = undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { ChildProcess } from 'child_process';\nimport * as stream from 'stream';\nimport * as net from 'net';\nimport { DebugAdapter } from '../common/debug-model';\n\nabstract class StreamDebugAdapter extends DisposableCollection {\n    private messageReceivedEmitter = new Emitter<string>();\n    onMessageReceived: Event<string> = this.messageReceivedEmitter.event;\n    private errorEmitter = new Emitter<Error>();\n    onError: Event<Error> = this.errorEmitter.event;\n    private closeEmitter = new Emitter<void>();\n    onClose: Event<void> = this.closeEmitter.event;\n\n    // these constants are for the message header, see: https://microsoft.github.io/debug-adapter-protocol/overview#header-part\n    private static TWO_CRLF = '\\r\\n\\r\\n';\n    private static CONTENT_LENGTH = 'Content-Length';\n    private contentLength: number = -1;\n    private buffer: Buffer = Buffer.alloc(0);\n\n    constructor(private fromAdapter: stream.Readable, private toAdapter: stream.Writable) {\n        super();\n\n        this.fromAdapter.on('data', (data: Buffer) => this.handleData(data));\n        this.fromAdapter.on('close', () => this.handleClosed()); // FIXME pass a proper exit code\n        this.fromAdapter.on('error', error => this.errorEmitter.fire(error));\n        this.toAdapter.on('error', error => this.errorEmitter.fire(error));\n    }\n\n    handleClosed(): void {\n        this.closeEmitter.fire();\n    }\n\n    send(message: string): void {\n        const msg = `${StreamDebugAdapter.CONTENT_LENGTH}: ${Buffer.byteLength(message, 'utf8')}${StreamDebugAdapter.TWO_CRLF}${message}`;\n\n        this.toAdapter.write(msg, 'utf8');\n    }\n\n    protected handleData(data: Buffer): void {\n        this.buffer = Buffer.concat([this.buffer, data]);\n\n        while (true) {\n            if (this.contentLength >= 0) {\n                if (this.buffer.length >= this.contentLength) {\n                    const message = this.buffer.toString('utf8', 0, this.contentLength);\n                    this.buffer = this.buffer.slice(this.contentLength);\n                    this.contentLength = -1;\n\n                    if (message.length > 0) {\n                        this.messageReceivedEmitter.fire(message);\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            } else {\n                let idx = this.buffer.indexOf(StreamDebugAdapter.CONTENT_LENGTH);\n                if (idx > 0) {\n                    // log unrecognized output\n                    const output = this.buffer.slice(0, idx);\n                    console.log(output.toString('utf-8'));\n\n                    this.buffer = this.buffer.slice(idx);\n                }\n\n                idx = this.buffer.indexOf(StreamDebugAdapter.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this.buffer.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] === StreamDebugAdapter.CONTENT_LENGTH) {\n                            this.contentLength = +pair[1];\n                        }\n                    }\n                    this.buffer = this.buffer.slice(idx + StreamDebugAdapter.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\n\nexport class ProcessDebugAdapter extends StreamDebugAdapter implements DebugAdapter {\n    protected readonly process: ChildProcess;\n    constructor(process: ChildProcess) {\n        super(process.stdout!, process.stdin!);\n        this.process = process;\n    }\n\n    async stop(): Promise<void> {\n        this.process.kill();\n        this.process.stdin?.end();\n    }\n}\n\nexport class SocketDebugAdapter extends StreamDebugAdapter implements DebugAdapter {\n    private readonly socket: net.Socket;\n    constructor(socket: net.Socket) {\n        super(socket, socket);\n        this.socket = socket;\n    }\n\n    stop(): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.socket.end(() => resolve());\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/arrays.ts\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n    return <T[]>array.filter(e => !!e);\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n    return Array.isArray(obj) && obj.length > 0;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n    return (<T[]>[]).concat(...arr);\n}\n\nexport interface Splice<T> {\n    readonly start: number;\n    readonly deleteCount: number;\n    readonly toInsert: T[];\n}\n\n/**\n * @returns 'true' if the 'arg' is a 'ReadonlyArray'.\n */\nexport function isReadonlyArray(arg: unknown): arg is readonly unknown[] {\n    // Since Typescript does not properly narrow down typings for 'ReadonlyArray' we need to help it.\n    return Array.isArray(arg);\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// Custom message protocol between `HostedPluginProcess` and its `PluginHost` child process.\n\n/**\n * Sent to initiate termination of the counterpart process.\n */\nexport interface ProcessTerminateMessage {\n    type: typeof ProcessTerminateMessage.TYPE,\n    stopTimeout?: number\n}\n\nexport namespace ProcessTerminateMessage {\n    export const TYPE = 0;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(object: any): object is ProcessTerminateMessage {\n        return typeof object === 'object' && object.type === TYPE;\n    }\n}\n\n/**\n * Sent to inform the counter part process that the process termination has been completed.\n */\nexport interface ProcessTerminatedMessage {\n    type: typeof ProcessTerminateMessage.TYPE,\n}\n\nexport namespace ProcessTerminatedMessage {\n    export const TYPE = 1;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(object: any): object is ProcessTerminateMessage {\n        return typeof object === 'object' && object.type === TYPE;\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { flatten } from '../../common/arrays';\nimport { isStringArray, isObject } from '@theia/core/lib/common/types';\nimport {\n    PluginPackage,\n    PluginPackageAuthenticationProvider,\n    PluginPackageCommand,\n    PluginPackageCustomEditor,\n    PluginPackageLanguageContribution,\n    PluginPackageNotebook,\n    PluginPackageView\n} from '../../common/plugin-protocol';\n\n/**\n * Most activation events can be automatically deduced from the package manifest.\n * This function will update the manifest based on the plugin contributions.\n */\nexport function updateActivationEvents(manifest: PluginPackage): void {\n    if (!isObject(manifest) || !isObject(manifest.contributes) || !manifest.contributes) {\n        return;\n    }\n\n    const activationEvents = new Set(isStringArray(manifest.activationEvents) ? manifest.activationEvents : []);\n\n    if (manifest.contributes.commands) {\n        const value = manifest.contributes.commands;\n        const commands = Array.isArray(value) ? value : [value];\n        updateCommandsContributions(commands, activationEvents);\n    }\n    if (Array.isArray(manifest.contributes.views)) {\n        const views = flatten(Object.values(manifest.contributes.views)) as PluginPackageView[];\n        updateViewsContribution(views, activationEvents);\n    }\n    if (Array.isArray(manifest.contributes.customEditors)) {\n        updateCustomEditorsContribution(manifest.contributes.customEditors, activationEvents);\n    }\n    if (Array.isArray(manifest.contributes.authentication)) {\n        updateAuthenticationProviderContributions(manifest.contributes.authentication, activationEvents);\n    }\n    if (Array.isArray(manifest.contributes.languages)) {\n        updateLanguageContributions(manifest.contributes.languages, activationEvents);\n    }\n    if (Array.isArray(manifest.contributes.notebooks)) {\n        updateNotebookContributions(manifest.contributes.notebooks, activationEvents);\n    }\n\n    manifest.activationEvents = Array.from(activationEvents);\n}\n\nfunction updateViewsContribution(views: PluginPackageView[], activationEvents: Set<string>): void {\n    for (const view of views) {\n        if (isObject(view) && typeof view.id === 'string') {\n            activationEvents.add(`onView:${view.id}`);\n        }\n    }\n}\n\nfunction updateCustomEditorsContribution(customEditors: PluginPackageCustomEditor[], activationEvents: Set<string>): void {\n    for (const customEditor of customEditors) {\n        if (isObject(customEditor) && typeof customEditor.viewType === 'string') {\n            activationEvents.add(`onCustomEditor:${customEditor.viewType}`);\n        }\n    }\n}\n\nfunction updateCommandsContributions(commands: PluginPackageCommand[], activationEvents: Set<string>): void {\n    for (const command of commands) {\n        if (isObject(command) && typeof command.command === 'string') {\n            activationEvents.add(`onCommand:${command.command}`);\n        }\n    }\n}\n\nfunction updateAuthenticationProviderContributions(authProviders: PluginPackageAuthenticationProvider[], activationEvents: Set<string>): void {\n    for (const authProvider of authProviders) {\n        if (isObject(authProvider) && typeof authProvider.id === 'string') {\n            activationEvents.add(`onAuthenticationRequest:${authProvider.id}`);\n        }\n    }\n}\n\nfunction updateLanguageContributions(languages: PluginPackageLanguageContribution[], activationEvents: Set<string>): void {\n    for (const language of languages) {\n        if (isObject(language) && typeof language.id === 'string') {\n            activationEvents.add(`onLanguage:${language.id}`);\n        }\n    }\n}\n\nfunction updateNotebookContributions(notebooks: PluginPackageNotebook[], activationEvents: Set<string>): void {\n    for (const notebook of notebooks) {\n        if (isObject(notebook) && typeof notebook.type === 'string') {\n            activationEvents.add(`onNotebookSerializer:${notebook.type}`);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport * as fs from '@theia/core/shared/fs-extra';\nimport { PluginIdentifiers, PluginPackage } from '../../common';\nimport { updateActivationEvents } from './plugin-activation-events';\n\nexport async function loadManifest(pluginPath: string): Promise<PluginPackage> {\n    const manifest = await fs.readJson(path.join(pluginPath, 'package.json'));\n    // translate vscode builtins, as they are published with a prefix. See https://github.com/theia-ide/vscode-builtin-extensions/blob/master/src/republish.js#L50\n    const built_prefix = '@theia/vscode-builtin-';\n    if (manifest && manifest.name && manifest.name.startsWith(built_prefix)) {\n        manifest.name = manifest.name.substring(built_prefix.length);\n    }\n    manifest.publisher ??= PluginIdentifiers.UNPUBLISHED;\n    updateActivationEvents(manifest);\n    return manifest;\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/yargs/build/lib sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/yargs/node_modules/yargs-parser sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/yargs sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}